/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@ethersproject/abi/lib.esm/_version.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/_version.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "abi/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/abi-coder.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/abi-coder.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbiCoder": () => (/* binding */ AbiCoder),
/* harmony export */   "defaultAbiCoder": () => (/* binding */ defaultAbiCoder)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/abi/lib.esm/_version.js");
/* harmony import */ var _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./coders/abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");
/* harmony import */ var _coders_address__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./coders/address */ "./node_modules/@ethersproject/abi/lib.esm/coders/address.js");
/* harmony import */ var _coders_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./coders/array */ "./node_modules/@ethersproject/abi/lib.esm/coders/array.js");
/* harmony import */ var _coders_boolean__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./coders/boolean */ "./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js");
/* harmony import */ var _coders_bytes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./coders/bytes */ "./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js");
/* harmony import */ var _coders_fixed_bytes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./coders/fixed-bytes */ "./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js");
/* harmony import */ var _coders_null__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./coders/null */ "./node_modules/@ethersproject/abi/lib.esm/coders/null.js");
/* harmony import */ var _coders_number__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./coders/number */ "./node_modules/@ethersproject/abi/lib.esm/coders/number.js");
/* harmony import */ var _coders_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./coders/string */ "./node_modules/@ethersproject/abi/lib.esm/coders/string.js");
/* harmony import */ var _coders_tuple__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./coders/tuple */ "./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js");
/* harmony import */ var _fragments__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./fragments */ "./node_modules/@ethersproject/abi/lib.esm/fragments.js");

// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI




const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);











const paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);
const paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);
class AbiCoder {
    constructor(coerceFunc) {
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "coerceFunc", coerceFunc || null);
    }
    _getCoder(param) {
        switch (param.baseType) {
            case "address":
                return new _coders_address__WEBPACK_IMPORTED_MODULE_3__.AddressCoder(param.name);
            case "bool":
                return new _coders_boolean__WEBPACK_IMPORTED_MODULE_4__.BooleanCoder(param.name);
            case "string":
                return new _coders_string__WEBPACK_IMPORTED_MODULE_5__.StringCoder(param.name);
            case "bytes":
                return new _coders_bytes__WEBPACK_IMPORTED_MODULE_6__.BytesCoder(param.name);
            case "array":
                return new _coders_array__WEBPACK_IMPORTED_MODULE_7__.ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);
            case "tuple":
                return new _coders_tuple__WEBPACK_IMPORTED_MODULE_8__.TupleCoder((param.components || []).map((component) => {
                    return this._getCoder(component);
                }), param.name);
            case "":
                return new _coders_null__WEBPACK_IMPORTED_MODULE_9__.NullCoder(param.name);
        }
        // u?int[0-9]*
        let match = param.type.match(paramTypeNumber);
        if (match) {
            let size = parseInt(match[2] || "256");
            if (size === 0 || size > 256 || (size % 8) !== 0) {
                logger.throwArgumentError("invalid " + match[1] + " bit length", "param", param);
            }
            return new _coders_number__WEBPACK_IMPORTED_MODULE_10__.NumberCoder(size / 8, (match[1] === "int"), param.name);
        }
        // bytes[0-9]+
        match = param.type.match(paramTypeBytes);
        if (match) {
            let size = parseInt(match[1]);
            if (size === 0 || size > 32) {
                logger.throwArgumentError("invalid bytes length", "param", param);
            }
            return new _coders_fixed_bytes__WEBPACK_IMPORTED_MODULE_11__.FixedBytesCoder(size, param.name);
        }
        return logger.throwArgumentError("invalid type", "type", param.type);
    }
    _getWordSize() { return 32; }
    _getReader(data, allowLoose) {
        return new _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_12__.Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);
    }
    _getWriter() {
        return new _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_12__.Writer(this._getWordSize());
    }
    getDefaultValue(types) {
        const coders = types.map((type) => this._getCoder(_fragments__WEBPACK_IMPORTED_MODULE_13__.ParamType.from(type)));
        const coder = new _coders_tuple__WEBPACK_IMPORTED_MODULE_8__.TupleCoder(coders, "_");
        return coder.defaultValue();
    }
    encode(types, values) {
        if (types.length !== values.length) {
            logger.throwError("types/values length mismatch", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, {
                count: { types: types.length, values: values.length },
                value: { types: types, values: values }
            });
        }
        const coders = types.map((type) => this._getCoder(_fragments__WEBPACK_IMPORTED_MODULE_13__.ParamType.from(type)));
        const coder = (new _coders_tuple__WEBPACK_IMPORTED_MODULE_8__.TupleCoder(coders, "_"));
        const writer = this._getWriter();
        coder.encode(writer, values);
        return writer.data;
    }
    decode(types, data, loose) {
        const coders = types.map((type) => this._getCoder(_fragments__WEBPACK_IMPORTED_MODULE_13__.ParamType.from(type)));
        const coder = new _coders_tuple__WEBPACK_IMPORTED_MODULE_8__.TupleCoder(coders, "_");
        return coder.decode(this._getReader((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_14__.arrayify)(data), loose));
    }
}
const defaultAbiCoder = new AbiCoder();
//# sourceMappingURL=abi-coder.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Coder": () => (/* binding */ Coder),
/* harmony export */   "Reader": () => (/* binding */ Reader),
/* harmony export */   "Writer": () => (/* binding */ Writer),
/* harmony export */   "checkResultErrors": () => (/* binding */ checkResultErrors)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_version */ "./node_modules/@ethersproject/abi/lib.esm/_version.js");






const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
function checkResultErrors(result) {
    // Find the first error (if any)
    const errors = [];
    const checkErrors = function (path, object) {
        if (!Array.isArray(object)) {
            return;
        }
        for (let key in object) {
            const childPath = path.slice();
            childPath.push(key);
            try {
                checkErrors(childPath, object[key]);
            }
            catch (error) {
                errors.push({ path: childPath, error: error });
            }
        }
    };
    checkErrors([], result);
    return errors;
}
class Coder {
    constructor(name, type, localName, dynamic) {
        // @TODO: defineReadOnly these
        this.name = name;
        this.type = type;
        this.localName = localName;
        this.dynamic = dynamic;
    }
    _throwError(message, value) {
        logger.throwArgumentError(message, this.localName, value);
    }
}
class Writer {
    constructor(wordSize) {
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "wordSize", wordSize || 32);
        this._data = [];
        this._dataLength = 0;
        this._padding = new Uint8Array(wordSize);
    }
    get data() {
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)(this._data);
    }
    get length() { return this._dataLength; }
    _writeData(data) {
        this._data.push(data);
        this._dataLength += data.length;
        return data.length;
    }
    appendWriter(writer) {
        return this._writeData((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)(writer._data));
    }
    // Arrayish items; padded on the right to wordSize
    writeBytes(value) {
        let bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value);
        const paddingOffset = bytes.length % this.wordSize;
        if (paddingOffset) {
            bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([bytes, this._padding.slice(paddingOffset)]);
        }
        return this._writeData(bytes);
    }
    _getValue(value) {
        let bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(value));
        if (bytes.length > this.wordSize) {
            logger.throwError("value out-of-bounds", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {
                length: this.wordSize,
                offset: bytes.length
            });
        }
        if (bytes.length % this.wordSize) {
            bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([this._padding.slice(bytes.length % this.wordSize), bytes]);
        }
        return bytes;
    }
    // BigNumberish items; padded on the left to wordSize
    writeValue(value) {
        return this._writeData(this._getValue(value));
    }
    writeUpdatableValue() {
        const offset = this._data.length;
        this._data.push(this._padding);
        this._dataLength += this.wordSize;
        return (value) => {
            this._data[offset] = this._getValue(value);
        };
    }
}
class Reader {
    constructor(data, wordSize, coerceFunc, allowLoose) {
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "_data", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "wordSize", wordSize || 32);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "_coerceFunc", coerceFunc);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "allowLoose", allowLoose);
        this._offset = 0;
    }
    get data() { return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(this._data); }
    get consumed() { return this._offset; }
    // The default Coerce function
    static coerce(name, value) {
        let match = name.match("^u?int([0-9]+)$");
        if (match && parseInt(match[1]) <= 48) {
            value = value.toNumber();
        }
        return value;
    }
    coerce(name, value) {
        if (this._coerceFunc) {
            return this._coerceFunc(name, value);
        }
        return Reader.coerce(name, value);
    }
    _peekBytes(offset, length, loose) {
        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;
        if (this._offset + alignedLength > this._data.length) {
            if (this.allowLoose && loose && this._offset + length <= this._data.length) {
                alignedLength = length;
            }
            else {
                logger.throwError("data out-of-bounds", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {
                    length: this._data.length,
                    offset: this._offset + alignedLength
                });
            }
        }
        return this._data.slice(this._offset, this._offset + alignedLength);
    }
    subReader(offset) {
        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);
    }
    readBytes(length, loose) {
        let bytes = this._peekBytes(0, length, !!loose);
        this._offset += bytes.length;
        // @TODO: Make sure the length..end bytes are all 0?
        return bytes.slice(0, length);
    }
    readValue() {
        return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(this.readBytes(this.wordSize));
    }
}
//# sourceMappingURL=abstract-coder.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/address.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/address.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddressCoder": () => (/* binding */ AddressCoder)
/* harmony export */ });
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");




class AddressCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {
    constructor(localName) {
        super("address", "address", localName, false);
    }
    defaultValue() {
        return "0x0000000000000000000000000000000000000000";
    }
    encode(writer, value) {
        try {
            value = (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_1__.getAddress)(value);
        }
        catch (error) {
            this._throwError(error.message, value);
        }
        return writer.writeValue(value);
    }
    decode(reader) {
        return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_1__.getAddress)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexZeroPad)(reader.readValue().toHexString(), 20));
    }
}
//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnonymousCoder": () => (/* binding */ AnonymousCoder)
/* harmony export */ });
/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");


// Clones the functionality of an existing Coder, but without a localName
class AnonymousCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {
    constructor(coder) {
        super(coder.name, coder.type, undefined, coder.dynamic);
        this.coder = coder;
    }
    defaultValue() {
        return this.coder.defaultValue();
    }
    encode(writer, value) {
        return this.coder.encode(writer, value);
    }
    decode(reader) {
        return this.coder.decode(reader);
    }
}
//# sourceMappingURL=anonymous.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/array.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/array.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ArrayCoder": () => (/* binding */ ArrayCoder),
/* harmony export */   "pack": () => (/* binding */ pack),
/* harmony export */   "unpack": () => (/* binding */ unpack)
/* harmony export */ });
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_version */ "./node_modules/@ethersproject/abi/lib.esm/_version.js");
/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");
/* harmony import */ var _anonymous__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./anonymous */ "./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js");



const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);


function pack(writer, coders, values) {
    let arrayValues = null;
    if (Array.isArray(values)) {
        arrayValues = values;
    }
    else if (values && typeof (values) === "object") {
        let unique = {};
        arrayValues = coders.map((coder) => {
            const name = coder.localName;
            if (!name) {
                logger.throwError("cannot encode object for signature with missing names", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, {
                    argument: "values",
                    coder: coder,
                    value: values
                });
            }
            if (unique[name]) {
                logger.throwError("cannot encode object for signature with duplicate names", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, {
                    argument: "values",
                    coder: coder,
                    value: values
                });
            }
            unique[name] = true;
            return values[name];
        });
    }
    else {
        logger.throwArgumentError("invalid tuple value", "tuple", values);
    }
    if (coders.length !== arrayValues.length) {
        logger.throwArgumentError("types/value length mismatch", "tuple", values);
    }
    let staticWriter = new _abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Writer(writer.wordSize);
    let dynamicWriter = new _abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Writer(writer.wordSize);
    let updateFuncs = [];
    coders.forEach((coder, index) => {
        let value = arrayValues[index];
        if (coder.dynamic) {
            // Get current dynamic offset (for the future pointer)
            let dynamicOffset = dynamicWriter.length;
            // Encode the dynamic value into the dynamicWriter
            coder.encode(dynamicWriter, value);
            // Prepare to populate the correct offset once we are done
            let updateFunc = staticWriter.writeUpdatableValue();
            updateFuncs.push((baseOffset) => {
                updateFunc(baseOffset + dynamicOffset);
            });
        }
        else {
            coder.encode(staticWriter, value);
        }
    });
    // Backfill all the dynamic offsets, now that we know the static length
    updateFuncs.forEach((func) => { func(staticWriter.length); });
    let length = writer.appendWriter(staticWriter);
    length += writer.appendWriter(dynamicWriter);
    return length;
}
function unpack(reader, coders) {
    let values = [];
    // A reader anchored to this base
    let baseReader = reader.subReader(0);
    coders.forEach((coder) => {
        let value = null;
        if (coder.dynamic) {
            let offset = reader.readValue();
            let offsetReader = baseReader.subReader(offset.toNumber());
            try {
                value = coder.decode(offsetReader);
            }
            catch (error) {
                // Cannot recover from this
                if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN) {
                    throw error;
                }
                value = error;
                value.baseType = coder.name;
                value.name = coder.localName;
                value.type = coder.type;
            }
        }
        else {
            try {
                value = coder.decode(reader);
            }
            catch (error) {
                // Cannot recover from this
                if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN) {
                    throw error;
                }
                value = error;
                value.baseType = coder.name;
                value.name = coder.localName;
                value.type = coder.type;
            }
        }
        if (value != undefined) {
            values.push(value);
        }
    });
    // We only output named properties for uniquely named coders
    const uniqueNames = coders.reduce((accum, coder) => {
        const name = coder.localName;
        if (name) {
            if (!accum[name]) {
                accum[name] = 0;
            }
            accum[name]++;
        }
        return accum;
    }, {});
    // Add any named parameters (i.e. tuples)
    coders.forEach((coder, index) => {
        let name = coder.localName;
        if (!name || uniqueNames[name] !== 1) {
            return;
        }
        if (name === "length") {
            name = "_length";
        }
        if (values[name] != null) {
            return;
        }
        const value = values[index];
        if (value instanceof Error) {
            Object.defineProperty(values, name, {
                enumerable: true,
                get: () => { throw value; }
            });
        }
        else {
            values[name] = value;
        }
    });
    for (let i = 0; i < values.length; i++) {
        const value = values[i];
        if (value instanceof Error) {
            Object.defineProperty(values, i, {
                enumerable: true,
                get: () => { throw value; }
            });
        }
    }
    return Object.freeze(values);
}
class ArrayCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Coder {
    constructor(coder, length, localName) {
        const type = (coder.type + "[" + (length >= 0 ? length : "") + "]");
        const dynamic = (length === -1 || coder.dynamic);
        super("array", type, localName, dynamic);
        this.coder = coder;
        this.length = length;
    }
    defaultValue() {
        // Verifies the child coder is valid (even if the array is dynamic or 0-length)
        const defaultChild = this.coder.defaultValue();
        const result = [];
        for (let i = 0; i < this.length; i++) {
            result.push(defaultChild);
        }
        return result;
    }
    encode(writer, value) {
        if (!Array.isArray(value)) {
            this._throwError("expected array value", value);
        }
        let count = this.length;
        if (count === -1) {
            count = value.length;
            writer.writeValue(value.length);
        }
        logger.checkArgumentCount(value.length, count, "coder array" + (this.localName ? (" " + this.localName) : ""));
        let coders = [];
        for (let i = 0; i < value.length; i++) {
            coders.push(this.coder);
        }
        return pack(writer, coders, value);
    }
    decode(reader) {
        let count = this.length;
        if (count === -1) {
            count = reader.readValue().toNumber();
            // Check that there is *roughly* enough data to ensure
            // stray random data is not being read as a length. Each
            // slot requires at least 32 bytes for their value (or 32
            // bytes as a link to the data). This could use a much
            // tighter bound, but we are erroring on the side of safety.
            if (count * 32 > reader._data.length) {
                logger.throwError("insufficient data length", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {
                    length: reader._data.length,
                    count: count
                });
            }
        }
        let coders = [];
        for (let i = 0; i < count; i++) {
            coders.push(new _anonymous__WEBPACK_IMPORTED_MODULE_3__.AnonymousCoder(this.coder));
        }
        return reader.coerce(this.name, unpack(reader, coders));
    }
}
//# sourceMappingURL=array.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BooleanCoder": () => (/* binding */ BooleanCoder)
/* harmony export */ });
/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");


class BooleanCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {
    constructor(localName) {
        super("bool", "bool", localName, false);
    }
    defaultValue() {
        return false;
    }
    encode(writer, value) {
        return writer.writeValue(value ? 1 : 0);
    }
    decode(reader) {
        return reader.coerce(this.type, !reader.readValue().isZero());
    }
}
//# sourceMappingURL=boolean.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BytesCoder": () => (/* binding */ BytesCoder),
/* harmony export */   "DynamicBytesCoder": () => (/* binding */ DynamicBytesCoder)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");



class DynamicBytesCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {
    constructor(type, localName) {
        super(type, type, localName, true);
    }
    defaultValue() {
        return "0x";
    }
    encode(writer, value) {
        value = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(value);
        let length = writer.writeValue(value.length);
        length += writer.writeBytes(value);
        return length;
    }
    decode(reader) {
        return reader.readBytes(reader.readValue().toNumber(), true);
    }
}
class BytesCoder extends DynamicBytesCoder {
    constructor(localName) {
        super("bytes", localName);
    }
    decode(reader) {
        return reader.coerce(this.name, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.hexlify)(super.decode(reader)));
    }
}
//# sourceMappingURL=bytes.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FixedBytesCoder": () => (/* binding */ FixedBytesCoder)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");



// @TODO: Merge this with bytes
class FixedBytesCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {
    constructor(size, localName) {
        let name = "bytes" + String(size);
        super(name, name, localName, false);
        this.size = size;
    }
    defaultValue() {
        return ("0x0000000000000000000000000000000000000000000000000000000000000000").substring(0, 2 + this.size * 2);
    }
    encode(writer, value) {
        let data = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(value);
        if (data.length !== this.size) {
            this._throwError("incorrect data length", value);
        }
        return writer.writeBytes(data);
    }
    decode(reader) {
        return reader.coerce(this.name, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.hexlify)(reader.readBytes(this.size)));
    }
}
//# sourceMappingURL=fixed-bytes.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/null.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/null.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NullCoder": () => (/* binding */ NullCoder)
/* harmony export */ });
/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");


class NullCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {
    constructor(localName) {
        super("null", "", localName, false);
    }
    defaultValue() {
        return null;
    }
    encode(writer, value) {
        if (value != null) {
            this._throwError("not null", value);
        }
        return writer.writeBytes([]);
    }
    decode(reader) {
        reader.readBytes(0);
        return reader.coerce(this.name, null);
    }
}
//# sourceMappingURL=null.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/number.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/number.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NumberCoder": () => (/* binding */ NumberCoder)
/* harmony export */ });
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/constants */ "./node_modules/@ethersproject/constants/lib.esm/bignumbers.js");
/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");




class NumberCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {
    constructor(size, signed, localName) {
        const name = ((signed ? "int" : "uint") + (size * 8));
        super(name, name, localName, false);
        this.size = size;
        this.signed = signed;
    }
    defaultValue() {
        return 0;
    }
    encode(writer, value) {
        let v = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_1__.BigNumber.from(value);
        // Check bounds are safe for encoding
        let maxUintValue = _ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.MaxUint256.mask(writer.wordSize * 8);
        if (this.signed) {
            let bounds = maxUintValue.mask(this.size * 8 - 1);
            if (v.gt(bounds) || v.lt(bounds.add(_ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.One).mul(_ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.NegativeOne))) {
                this._throwError("value out-of-bounds", value);
            }
        }
        else if (v.lt(_ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.Zero) || v.gt(maxUintValue.mask(this.size * 8))) {
            this._throwError("value out-of-bounds", value);
        }
        v = v.toTwos(this.size * 8).mask(this.size * 8);
        if (this.signed) {
            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);
        }
        return writer.writeValue(v);
    }
    decode(reader) {
        let value = reader.readValue().mask(this.size * 8);
        if (this.signed) {
            value = value.fromTwos(this.size * 8);
        }
        return reader.coerce(this.name, value);
    }
}
//# sourceMappingURL=number.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/string.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/string.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StringCoder": () => (/* binding */ StringCoder)
/* harmony export */ });
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");
/* harmony import */ var _bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes */ "./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js");



class StringCoder extends _bytes__WEBPACK_IMPORTED_MODULE_0__.DynamicBytesCoder {
    constructor(localName) {
        super("string", localName);
    }
    defaultValue() {
        return "";
    }
    encode(writer, value) {
        return super.encode(writer, (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.toUtf8Bytes)(value));
    }
    decode(reader) {
        return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.toUtf8String)(super.decode(reader));
    }
}
//# sourceMappingURL=string.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TupleCoder": () => (/* binding */ TupleCoder)
/* harmony export */ });
/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/@ethersproject/abi/lib.esm/coders/array.js");



class TupleCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {
    constructor(coders, localName) {
        let dynamic = false;
        const types = [];
        coders.forEach((coder) => {
            if (coder.dynamic) {
                dynamic = true;
            }
            types.push(coder.type);
        });
        const type = ("tuple(" + types.join(",") + ")");
        super("tuple", type, localName, dynamic);
        this.coders = coders;
    }
    defaultValue() {
        const values = [];
        this.coders.forEach((coder) => {
            values.push(coder.defaultValue());
        });
        // We only output named properties for uniquely named coders
        const uniqueNames = this.coders.reduce((accum, coder) => {
            const name = coder.localName;
            if (name) {
                if (!accum[name]) {
                    accum[name] = 0;
                }
                accum[name]++;
            }
            return accum;
        }, {});
        // Add named values
        this.coders.forEach((coder, index) => {
            let name = coder.localName;
            if (!name || uniqueNames[name] !== 1) {
                return;
            }
            if (name === "length") {
                name = "_length";
            }
            if (values[name] != null) {
                return;
            }
            values[name] = values[index];
        });
        return Object.freeze(values);
    }
    encode(writer, value) {
        return (0,_array__WEBPACK_IMPORTED_MODULE_1__.pack)(writer, this.coders, value);
    }
    decode(reader) {
        return reader.coerce(this.name, (0,_array__WEBPACK_IMPORTED_MODULE_1__.unpack)(reader, this.coders));
    }
}
//# sourceMappingURL=tuple.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/fragments.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/fragments.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConstructorFragment": () => (/* binding */ ConstructorFragment),
/* harmony export */   "ErrorFragment": () => (/* binding */ ErrorFragment),
/* harmony export */   "EventFragment": () => (/* binding */ EventFragment),
/* harmony export */   "FormatTypes": () => (/* binding */ FormatTypes),
/* harmony export */   "Fragment": () => (/* binding */ Fragment),
/* harmony export */   "FunctionFragment": () => (/* binding */ FunctionFragment),
/* harmony export */   "ParamType": () => (/* binding */ ParamType)
/* harmony export */ });
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/abi/lib.esm/_version.js");





const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
;
const _constructorGuard = {};
let ModifiersBytes = { calldata: true, memory: true, storage: true };
let ModifiersNest = { calldata: true, memory: true };
function checkModifier(type, name) {
    if (type === "bytes" || type === "string") {
        if (ModifiersBytes[name]) {
            return true;
        }
    }
    else if (type === "address") {
        if (name === "payable") {
            return true;
        }
    }
    else if (type.indexOf("[") >= 0 || type === "tuple") {
        if (ModifiersNest[name]) {
            return true;
        }
    }
    if (ModifiersBytes[name] || name === "payable") {
        logger.throwArgumentError("invalid modifier", "name", name);
    }
    return false;
}
// @TODO: Make sure that children of an indexed tuple are marked with a null indexed
function parseParamType(param, allowIndexed) {
    let originalParam = param;
    function throwError(i) {
        logger.throwArgumentError(`unexpected character at position ${i}`, "param", param);
    }
    param = param.replace(/\s/g, " ");
    function newNode(parent) {
        let node = { type: "", name: "", parent: parent, state: { allowType: true } };
        if (allowIndexed) {
            node.indexed = false;
        }
        return node;
    }
    let parent = { type: "", name: "", state: { allowType: true } };
    let node = parent;
    for (let i = 0; i < param.length; i++) {
        let c = param[i];
        switch (c) {
            case "(":
                if (node.state.allowType && node.type === "") {
                    node.type = "tuple";
                }
                else if (!node.state.allowParams) {
                    throwError(i);
                }
                node.state.allowType = false;
                node.type = verifyType(node.type);
                node.components = [newNode(node)];
                node = node.components[0];
                break;
            case ")":
                delete node.state;
                if (node.name === "indexed") {
                    if (!allowIndexed) {
                        throwError(i);
                    }
                    node.indexed = true;
                    node.name = "";
                }
                if (checkModifier(node.type, node.name)) {
                    node.name = "";
                }
                node.type = verifyType(node.type);
                let child = node;
                node = node.parent;
                if (!node) {
                    throwError(i);
                }
                delete child.parent;
                node.state.allowParams = false;
                node.state.allowName = true;
                node.state.allowArray = true;
                break;
            case ",":
                delete node.state;
                if (node.name === "indexed") {
                    if (!allowIndexed) {
                        throwError(i);
                    }
                    node.indexed = true;
                    node.name = "";
                }
                if (checkModifier(node.type, node.name)) {
                    node.name = "";
                }
                node.type = verifyType(node.type);
                let sibling = newNode(node.parent);
                //{ type: "", name: "", parent: node.parent, state: { allowType: true } };
                node.parent.components.push(sibling);
                delete node.parent;
                node = sibling;
                break;
            // Hit a space...
            case " ":
                // If reading type, the type is done and may read a param or name
                if (node.state.allowType) {
                    if (node.type !== "") {
                        node.type = verifyType(node.type);
                        delete node.state.allowType;
                        node.state.allowName = true;
                        node.state.allowParams = true;
                    }
                }
                // If reading name, the name is done
                if (node.state.allowName) {
                    if (node.name !== "") {
                        if (node.name === "indexed") {
                            if (!allowIndexed) {
                                throwError(i);
                            }
                            if (node.indexed) {
                                throwError(i);
                            }
                            node.indexed = true;
                            node.name = "";
                        }
                        else if (checkModifier(node.type, node.name)) {
                            node.name = "";
                        }
                        else {
                            node.state.allowName = false;
                        }
                    }
                }
                break;
            case "[":
                if (!node.state.allowArray) {
                    throwError(i);
                }
                node.type += c;
                node.state.allowArray = false;
                node.state.allowName = false;
                node.state.readArray = true;
                break;
            case "]":
                if (!node.state.readArray) {
                    throwError(i);
                }
                node.type += c;
                node.state.readArray = false;
                node.state.allowArray = true;
                node.state.allowName = true;
                break;
            default:
                if (node.state.allowType) {
                    node.type += c;
                    node.state.allowParams = true;
                    node.state.allowArray = true;
                }
                else if (node.state.allowName) {
                    node.name += c;
                    delete node.state.allowArray;
                }
                else if (node.state.readArray) {
                    node.type += c;
                }
                else {
                    throwError(i);
                }
        }
    }
    if (node.parent) {
        logger.throwArgumentError("unexpected eof", "param", param);
    }
    delete parent.state;
    if (node.name === "indexed") {
        if (!allowIndexed) {
            throwError(originalParam.length - 7);
        }
        if (node.indexed) {
            throwError(originalParam.length - 7);
        }
        node.indexed = true;
        node.name = "";
    }
    else if (checkModifier(node.type, node.name)) {
        node.name = "";
    }
    parent.type = verifyType(parent.type);
    return parent;
}
function populate(object, params) {
    for (let key in params) {
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(object, key, params[key]);
    }
}
const FormatTypes = Object.freeze({
    // Bare formatting, as is needed for computing a sighash of an event or function
    sighash: "sighash",
    // Human-Readable with Minimal spacing and without names (compact human-readable)
    minimal: "minimal",
    // Human-Readable with nice spacing, including all names
    full: "full",
    // JSON-format a la Solidity
    json: "json"
});
const paramTypeArray = new RegExp(/^(.*)\[([0-9]*)\]$/);
class ParamType {
    constructor(constructorGuard, params) {
        if (constructorGuard !== _constructorGuard) {
            logger.throwError("use fromString", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "new ParamType()"
            });
        }
        populate(this, params);
        let match = this.type.match(paramTypeArray);
        if (match) {
            populate(this, {
                arrayLength: parseInt(match[2] || "-1"),
                arrayChildren: ParamType.fromObject({
                    type: match[1],
                    components: this.components
                }),
                baseType: "array"
            });
        }
        else {
            populate(this, {
                arrayLength: null,
                arrayChildren: null,
                baseType: ((this.components != null) ? "tuple" : this.type)
            });
        }
        this._isParamType = true;
        Object.freeze(this);
    }
    // Format the parameter fragment
    //   - sighash: "(uint256,address)"
    //   - minimal: "tuple(uint256,address) indexed"
    //   - full:    "tuple(uint256 foo, address bar) indexed baz"
    format(format) {
        if (!format) {
            format = FormatTypes.sighash;
        }
        if (!FormatTypes[format]) {
            logger.throwArgumentError("invalid format type", "format", format);
        }
        if (format === FormatTypes.json) {
            let result = {
                type: ((this.baseType === "tuple") ? "tuple" : this.type),
                name: (this.name || undefined)
            };
            if (typeof (this.indexed) === "boolean") {
                result.indexed = this.indexed;
            }
            if (this.components) {
                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));
            }
            return JSON.stringify(result);
        }
        let result = "";
        // Array
        if (this.baseType === "array") {
            result += this.arrayChildren.format(format);
            result += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]";
        }
        else {
            if (this.baseType === "tuple") {
                if (format !== FormatTypes.sighash) {
                    result += this.type;
                }
                result += "(" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? ", " : ",") + ")";
            }
            else {
                result += this.type;
            }
        }
        if (format !== FormatTypes.sighash) {
            if (this.indexed === true) {
                result += " indexed";
            }
            if (format === FormatTypes.full && this.name) {
                result += " " + this.name;
            }
        }
        return result;
    }
    static from(value, allowIndexed) {
        if (typeof (value) === "string") {
            return ParamType.fromString(value, allowIndexed);
        }
        return ParamType.fromObject(value);
    }
    static fromObject(value) {
        if (ParamType.isParamType(value)) {
            return value;
        }
        return new ParamType(_constructorGuard, {
            name: (value.name || null),
            type: verifyType(value.type),
            indexed: ((value.indexed == null) ? null : !!value.indexed),
            components: (value.components ? value.components.map(ParamType.fromObject) : null)
        });
    }
    static fromString(value, allowIndexed) {
        function ParamTypify(node) {
            return ParamType.fromObject({
                name: node.name,
                type: node.type,
                indexed: node.indexed,
                components: node.components
            });
        }
        return ParamTypify(parseParamType(value, !!allowIndexed));
    }
    static isParamType(value) {
        return !!(value != null && value._isParamType);
    }
}
;
function parseParams(value, allowIndex) {
    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));
}
class Fragment {
    constructor(constructorGuard, params) {
        if (constructorGuard !== _constructorGuard) {
            logger.throwError("use a static from method", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "new Fragment()"
            });
        }
        populate(this, params);
        this._isFragment = true;
        Object.freeze(this);
    }
    static from(value) {
        if (Fragment.isFragment(value)) {
            return value;
        }
        if (typeof (value) === "string") {
            return Fragment.fromString(value);
        }
        return Fragment.fromObject(value);
    }
    static fromObject(value) {
        if (Fragment.isFragment(value)) {
            return value;
        }
        switch (value.type) {
            case "function":
                return FunctionFragment.fromObject(value);
            case "event":
                return EventFragment.fromObject(value);
            case "constructor":
                return ConstructorFragment.fromObject(value);
            case "error":
                return ErrorFragment.fromObject(value);
            case "fallback":
            case "receive":
                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?
                return null;
        }
        return logger.throwArgumentError("invalid fragment object", "value", value);
    }
    static fromString(value) {
        // Make sure the "returns" is surrounded by a space and all whitespace is exactly one space
        value = value.replace(/\s/g, " ");
        value = value.replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ");
        value = value.trim();
        if (value.split(" ")[0] === "event") {
            return EventFragment.fromString(value.substring(5).trim());
        }
        else if (value.split(" ")[0] === "function") {
            return FunctionFragment.fromString(value.substring(8).trim());
        }
        else if (value.split("(")[0].trim() === "constructor") {
            return ConstructorFragment.fromString(value.trim());
        }
        else if (value.split(" ")[0] === "error") {
            return ErrorFragment.fromString(value.substring(5).trim());
        }
        return logger.throwArgumentError("unsupported fragment", "value", value);
    }
    static isFragment(value) {
        return !!(value && value._isFragment);
    }
}
class EventFragment extends Fragment {
    format(format) {
        if (!format) {
            format = FormatTypes.sighash;
        }
        if (!FormatTypes[format]) {
            logger.throwArgumentError("invalid format type", "format", format);
        }
        if (format === FormatTypes.json) {
            return JSON.stringify({
                type: "event",
                anonymous: this.anonymous,
                name: this.name,
                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))
            });
        }
        let result = "";
        if (format !== FormatTypes.sighash) {
            result += "event ";
        }
        result += this.name + "(" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? ", " : ",") + ") ";
        if (format !== FormatTypes.sighash) {
            if (this.anonymous) {
                result += "anonymous ";
            }
        }
        return result.trim();
    }
    static from(value) {
        if (typeof (value) === "string") {
            return EventFragment.fromString(value);
        }
        return EventFragment.fromObject(value);
    }
    static fromObject(value) {
        if (EventFragment.isEventFragment(value)) {
            return value;
        }
        if (value.type !== "event") {
            logger.throwArgumentError("invalid event object", "value", value);
        }
        const params = {
            name: verifyIdentifier(value.name),
            anonymous: value.anonymous,
            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),
            type: "event"
        };
        return new EventFragment(_constructorGuard, params);
    }
    static fromString(value) {
        let match = value.match(regexParen);
        if (!match) {
            logger.throwArgumentError("invalid event string", "value", value);
        }
        let anonymous = false;
        match[3].split(" ").forEach((modifier) => {
            switch (modifier.trim()) {
                case "anonymous":
                    anonymous = true;
                    break;
                case "":
                    break;
                default:
                    logger.warn("unknown modifier: " + modifier);
            }
        });
        return EventFragment.fromObject({
            name: match[1].trim(),
            anonymous: anonymous,
            inputs: parseParams(match[2], true),
            type: "event"
        });
    }
    static isEventFragment(value) {
        return (value && value._isFragment && value.type === "event");
    }
}
function parseGas(value, params) {
    params.gas = null;
    let comps = value.split("@");
    if (comps.length !== 1) {
        if (comps.length > 2) {
            logger.throwArgumentError("invalid human-readable ABI signature", "value", value);
        }
        if (!comps[1].match(/^[0-9]+$/)) {
            logger.throwArgumentError("invalid human-readable ABI signature gas", "value", value);
        }
        params.gas = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(comps[1]);
        return comps[0];
    }
    return value;
}
function parseModifiers(value, params) {
    params.constant = false;
    params.payable = false;
    params.stateMutability = "nonpayable";
    value.split(" ").forEach((modifier) => {
        switch (modifier.trim()) {
            case "constant":
                params.constant = true;
                break;
            case "payable":
                params.payable = true;
                params.stateMutability = "payable";
                break;
            case "nonpayable":
                params.payable = false;
                params.stateMutability = "nonpayable";
                break;
            case "pure":
                params.constant = true;
                params.stateMutability = "pure";
                break;
            case "view":
                params.constant = true;
                params.stateMutability = "view";
                break;
            case "external":
            case "public":
            case "":
                break;
            default:
                console.log("unknown modifier: " + modifier);
        }
    });
}
function verifyState(value) {
    let result = {
        constant: false,
        payable: true,
        stateMutability: "payable"
    };
    if (value.stateMutability != null) {
        result.stateMutability = value.stateMutability;
        // Set (and check things are consistent) the constant property
        result.constant = (result.stateMutability === "view" || result.stateMutability === "pure");
        if (value.constant != null) {
            if ((!!value.constant) !== result.constant) {
                logger.throwArgumentError("cannot have constant function with mutability " + result.stateMutability, "value", value);
            }
        }
        // Set (and check things are consistent) the payable property
        result.payable = (result.stateMutability === "payable");
        if (value.payable != null) {
            if ((!!value.payable) !== result.payable) {
                logger.throwArgumentError("cannot have payable function with mutability " + result.stateMutability, "value", value);
            }
        }
    }
    else if (value.payable != null) {
        result.payable = !!value.payable;
        // If payable we can assume non-constant; otherwise we can't assume
        if (value.constant == null && !result.payable && value.type !== "constructor") {
            logger.throwArgumentError("unable to determine stateMutability", "value", value);
        }
        result.constant = !!value.constant;
        if (result.constant) {
            result.stateMutability = "view";
        }
        else {
            result.stateMutability = (result.payable ? "payable" : "nonpayable");
        }
        if (result.payable && result.constant) {
            logger.throwArgumentError("cannot have constant payable function", "value", value);
        }
    }
    else if (value.constant != null) {
        result.constant = !!value.constant;
        result.payable = !result.constant;
        result.stateMutability = (result.constant ? "view" : "payable");
    }
    else if (value.type !== "constructor") {
        logger.throwArgumentError("unable to determine stateMutability", "value", value);
    }
    return result;
}
class ConstructorFragment extends Fragment {
    format(format) {
        if (!format) {
            format = FormatTypes.sighash;
        }
        if (!FormatTypes[format]) {
            logger.throwArgumentError("invalid format type", "format", format);
        }
        if (format === FormatTypes.json) {
            return JSON.stringify({
                type: "constructor",
                stateMutability: ((this.stateMutability !== "nonpayable") ? this.stateMutability : undefined),
                payable: this.payable,
                gas: (this.gas ? this.gas.toNumber() : undefined),
                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))
            });
        }
        if (format === FormatTypes.sighash) {
            logger.throwError("cannot format a constructor for sighash", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "format(sighash)"
            });
        }
        let result = "constructor(" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? ", " : ",") + ") ";
        if (this.stateMutability && this.stateMutability !== "nonpayable") {
            result += this.stateMutability + " ";
        }
        return result.trim();
    }
    static from(value) {
        if (typeof (value) === "string") {
            return ConstructorFragment.fromString(value);
        }
        return ConstructorFragment.fromObject(value);
    }
    static fromObject(value) {
        if (ConstructorFragment.isConstructorFragment(value)) {
            return value;
        }
        if (value.type !== "constructor") {
            logger.throwArgumentError("invalid constructor object", "value", value);
        }
        let state = verifyState(value);
        if (state.constant) {
            logger.throwArgumentError("constructor cannot be constant", "value", value);
        }
        const params = {
            name: null,
            type: value.type,
            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),
            payable: state.payable,
            stateMutability: state.stateMutability,
            gas: (value.gas ? _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(value.gas) : null)
        };
        return new ConstructorFragment(_constructorGuard, params);
    }
    static fromString(value) {
        let params = { type: "constructor" };
        value = parseGas(value, params);
        let parens = value.match(regexParen);
        if (!parens || parens[1].trim() !== "constructor") {
            logger.throwArgumentError("invalid constructor string", "value", value);
        }
        params.inputs = parseParams(parens[2].trim(), false);
        parseModifiers(parens[3].trim(), params);
        return ConstructorFragment.fromObject(params);
    }
    static isConstructorFragment(value) {
        return (value && value._isFragment && value.type === "constructor");
    }
}
class FunctionFragment extends ConstructorFragment {
    format(format) {
        if (!format) {
            format = FormatTypes.sighash;
        }
        if (!FormatTypes[format]) {
            logger.throwArgumentError("invalid format type", "format", format);
        }
        if (format === FormatTypes.json) {
            return JSON.stringify({
                type: "function",
                name: this.name,
                constant: this.constant,
                stateMutability: ((this.stateMutability !== "nonpayable") ? this.stateMutability : undefined),
                payable: this.payable,
                gas: (this.gas ? this.gas.toNumber() : undefined),
                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),
                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),
            });
        }
        let result = "";
        if (format !== FormatTypes.sighash) {
            result += "function ";
        }
        result += this.name + "(" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? ", " : ",") + ") ";
        if (format !== FormatTypes.sighash) {
            if (this.stateMutability) {
                if (this.stateMutability !== "nonpayable") {
                    result += (this.stateMutability + " ");
                }
            }
            else if (this.constant) {
                result += "view ";
            }
            if (this.outputs && this.outputs.length) {
                result += "returns (" + this.outputs.map((output) => output.format(format)).join(", ") + ") ";
            }
            if (this.gas != null) {
                result += "@" + this.gas.toString() + " ";
            }
        }
        return result.trim();
    }
    static from(value) {
        if (typeof (value) === "string") {
            return FunctionFragment.fromString(value);
        }
        return FunctionFragment.fromObject(value);
    }
    static fromObject(value) {
        if (FunctionFragment.isFunctionFragment(value)) {
            return value;
        }
        if (value.type !== "function") {
            logger.throwArgumentError("invalid function object", "value", value);
        }
        let state = verifyState(value);
        const params = {
            type: value.type,
            name: verifyIdentifier(value.name),
            constant: state.constant,
            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),
            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),
            payable: state.payable,
            stateMutability: state.stateMutability,
            gas: (value.gas ? _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(value.gas) : null)
        };
        return new FunctionFragment(_constructorGuard, params);
    }
    static fromString(value) {
        let params = { type: "function" };
        value = parseGas(value, params);
        let comps = value.split(" returns ");
        if (comps.length > 2) {
            logger.throwArgumentError("invalid function string", "value", value);
        }
        let parens = comps[0].match(regexParen);
        if (!parens) {
            logger.throwArgumentError("invalid function signature", "value", value);
        }
        params.name = parens[1].trim();
        if (params.name) {
            verifyIdentifier(params.name);
        }
        params.inputs = parseParams(parens[2], false);
        parseModifiers(parens[3].trim(), params);
        // We have outputs
        if (comps.length > 1) {
            let returns = comps[1].match(regexParen);
            if (returns[1].trim() != "" || returns[3].trim() != "") {
                logger.throwArgumentError("unexpected tokens", "value", value);
            }
            params.outputs = parseParams(returns[2], false);
        }
        else {
            params.outputs = [];
        }
        return FunctionFragment.fromObject(params);
    }
    static isFunctionFragment(value) {
        return (value && value._isFragment && value.type === "function");
    }
}
//export class StructFragment extends Fragment {
//}
function checkForbidden(fragment) {
    const sig = fragment.format();
    if (sig === "Error(string)" || sig === "Panic(uint256)") {
        logger.throwArgumentError(`cannot specify user defined ${sig} error`, "fragment", fragment);
    }
    return fragment;
}
class ErrorFragment extends Fragment {
    format(format) {
        if (!format) {
            format = FormatTypes.sighash;
        }
        if (!FormatTypes[format]) {
            logger.throwArgumentError("invalid format type", "format", format);
        }
        if (format === FormatTypes.json) {
            return JSON.stringify({
                type: "error",
                name: this.name,
                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),
            });
        }
        let result = "";
        if (format !== FormatTypes.sighash) {
            result += "error ";
        }
        result += this.name + "(" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? ", " : ",") + ") ";
        return result.trim();
    }
    static from(value) {
        if (typeof (value) === "string") {
            return ErrorFragment.fromString(value);
        }
        return ErrorFragment.fromObject(value);
    }
    static fromObject(value) {
        if (ErrorFragment.isErrorFragment(value)) {
            return value;
        }
        if (value.type !== "error") {
            logger.throwArgumentError("invalid error object", "value", value);
        }
        const params = {
            type: value.type,
            name: verifyIdentifier(value.name),
            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])
        };
        return checkForbidden(new ErrorFragment(_constructorGuard, params));
    }
    static fromString(value) {
        let params = { type: "error" };
        let parens = value.match(regexParen);
        if (!parens) {
            logger.throwArgumentError("invalid error signature", "value", value);
        }
        params.name = parens[1].trim();
        if (params.name) {
            verifyIdentifier(params.name);
        }
        params.inputs = parseParams(parens[2], false);
        return checkForbidden(ErrorFragment.fromObject(params));
    }
    static isErrorFragment(value) {
        return (value && value._isFragment && value.type === "error");
    }
}
function verifyType(type) {
    // These need to be transformed to their full description
    if (type.match(/^uint($|[^1-9])/)) {
        type = "uint256" + type.substring(4);
    }
    else if (type.match(/^int($|[^1-9])/)) {
        type = "int256" + type.substring(3);
    }
    // @TODO: more verification
    return type;
}
// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234
const regexIdentifier = new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");
function verifyIdentifier(value) {
    if (!value || !value.match(regexIdentifier)) {
        logger.throwArgumentError(`invalid identifier "${value}"`, "value", value);
    }
    return value;
}
const regexParen = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
function splitNesting(value) {
    value = value.trim();
    let result = [];
    let accum = "";
    let depth = 0;
    for (let offset = 0; offset < value.length; offset++) {
        let c = value[offset];
        if (c === "," && depth === 0) {
            result.push(accum);
            accum = "";
        }
        else {
            accum += c;
            if (c === "(") {
                depth++;
            }
            else if (c === ")") {
                depth--;
                if (depth === -1) {
                    logger.throwArgumentError("unbalanced parenthesis", "value", value);
                }
            }
        }
    }
    if (accum) {
        result.push(accum);
    }
    return result;
}
//# sourceMappingURL=fragments.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/interface.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/interface.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ErrorDescription": () => (/* binding */ ErrorDescription),
/* harmony export */   "Indexed": () => (/* binding */ Indexed),
/* harmony export */   "Interface": () => (/* binding */ Interface),
/* harmony export */   "LogDescription": () => (/* binding */ LogDescription),
/* harmony export */   "TransactionDescription": () => (/* binding */ TransactionDescription),
/* harmony export */   "checkResultErrors": () => (/* reexport safe */ _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_2__.checkResultErrors)
/* harmony export */ });
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/hash */ "./node_modules/@ethersproject/hash/lib.esm/id.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _abi_coder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./abi-coder */ "./node_modules/@ethersproject/abi/lib.esm/abi-coder.js");
/* harmony import */ var _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coders/abstract-coder */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");
/* harmony import */ var _fragments__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fragments */ "./node_modules/@ethersproject/abi/lib.esm/fragments.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/abi/lib.esm/_version.js");












const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

class LogDescription extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.Description {
}
class TransactionDescription extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.Description {
}
class ErrorDescription extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.Description {
}
class Indexed extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.Description {
    static isIndexed(value) {
        return !!(value && value._isIndexed);
    }
}
const BuiltinErrors = {
    "0x08c379a0": { signature: "Error(string)", name: "Error", inputs: ["string"], reason: true },
    "0x4e487b71": { signature: "Panic(uint256)", name: "Panic", inputs: ["uint256"] }
};
function wrapAccessError(property, error) {
    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);
    wrap.error = error;
    return wrap;
}
/*
function checkNames(fragment: Fragment, type: "input" | "output", params: Array<ParamType>): void {
    params.reduce((accum, param) => {
        if (param.name) {
            if (accum[param.name]) {
                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format("full") }`, "fragment", fragment);
            }
            accum[param.name] = true;
        }
        return accum;
    }, <{ [ name: string ]: boolean }>{ });
}
*/
class Interface {
    constructor(fragments) {
        let abi = [];
        if (typeof (fragments) === "string") {
            abi = JSON.parse(fragments);
        }
        else {
            abi = fragments;
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "fragments", abi.map((fragment) => {
            return _fragments__WEBPACK_IMPORTED_MODULE_4__.Fragment.from(fragment);
        }).filter((fragment) => (fragment != null)));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_abiCoder", (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(new.target, "getAbiCoder")());
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "functions", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "errors", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "events", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "structs", {});
        // Add all fragments by their signature
        this.fragments.forEach((fragment) => {
            let bucket = null;
            switch (fragment.type) {
                case "constructor":
                    if (this.deploy) {
                        logger.warn("duplicate definition - constructor");
                        return;
                    }
                    //checkNames(fragment, "input", fragment.inputs);
                    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "deploy", fragment);
                    return;
                case "function":
                    //checkNames(fragment, "input", fragment.inputs);
                    //checkNames(fragment, "output", (<FunctionFragment>fragment).outputs);
                    bucket = this.functions;
                    break;
                case "event":
                    //checkNames(fragment, "input", fragment.inputs);
                    bucket = this.events;
                    break;
                case "error":
                    bucket = this.errors;
                    break;
                default:
                    return;
            }
            let signature = fragment.format();
            if (bucket[signature]) {
                logger.warn("duplicate definition - " + signature);
                return;
            }
            bucket[signature] = fragment;
        });
        // If we do not have a constructor add a default
        if (!this.deploy) {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "deploy", _fragments__WEBPACK_IMPORTED_MODULE_4__.ConstructorFragment.from({
                payable: false,
                type: "constructor"
            }));
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_isInterface", true);
    }
    format(format) {
        if (!format) {
            format = _fragments__WEBPACK_IMPORTED_MODULE_4__.FormatTypes.full;
        }
        if (format === _fragments__WEBPACK_IMPORTED_MODULE_4__.FormatTypes.sighash) {
            logger.throwArgumentError("interface does not support formatting sighash", "format", format);
        }
        const abi = this.fragments.map((fragment) => fragment.format(format));
        // We need to re-bundle the JSON fragments a bit
        if (format === _fragments__WEBPACK_IMPORTED_MODULE_4__.FormatTypes.json) {
            return JSON.stringify(abi.map((j) => JSON.parse(j)));
        }
        return abi;
    }
    // Sub-classes can override these to handle other blockchains
    static getAbiCoder() {
        return _abi_coder__WEBPACK_IMPORTED_MODULE_5__.defaultAbiCoder;
    }
    static getAddress(address) {
        return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_6__.getAddress)(address);
    }
    static getSighash(fragment) {
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexDataSlice)((0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(fragment.format()), 0, 4);
    }
    static getEventTopic(eventFragment) {
        return (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(eventFragment.format());
    }
    // Find a function definition by any means necessary (unless it is ambiguous)
    getFunction(nameOrSignatureOrSighash) {
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(nameOrSignatureOrSighash)) {
            for (const name in this.functions) {
                if (nameOrSignatureOrSighash === this.getSighash(name)) {
                    return this.functions[name];
                }
            }
            logger.throwArgumentError("no matching function", "sighash", nameOrSignatureOrSighash);
        }
        // It is a bare name, look up the function (will return null if ambiguous)
        if (nameOrSignatureOrSighash.indexOf("(") === -1) {
            const name = nameOrSignatureOrSighash.trim();
            const matching = Object.keys(this.functions).filter((f) => (f.split("(" /* fix:) */)[0] === name));
            if (matching.length === 0) {
                logger.throwArgumentError("no matching function", "name", name);
            }
            else if (matching.length > 1) {
                logger.throwArgumentError("multiple matching functions", "name", name);
            }
            return this.functions[matching[0]];
        }
        // Normalize the signature and lookup the function
        const result = this.functions[_fragments__WEBPACK_IMPORTED_MODULE_4__.FunctionFragment.fromString(nameOrSignatureOrSighash).format()];
        if (!result) {
            logger.throwArgumentError("no matching function", "signature", nameOrSignatureOrSighash);
        }
        return result;
    }
    // Find an event definition by any means necessary (unless it is ambiguous)
    getEvent(nameOrSignatureOrTopic) {
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(nameOrSignatureOrTopic)) {
            const topichash = nameOrSignatureOrTopic.toLowerCase();
            for (const name in this.events) {
                if (topichash === this.getEventTopic(name)) {
                    return this.events[name];
                }
            }
            logger.throwArgumentError("no matching event", "topichash", topichash);
        }
        // It is a bare name, look up the function (will return null if ambiguous)
        if (nameOrSignatureOrTopic.indexOf("(") === -1) {
            const name = nameOrSignatureOrTopic.trim();
            const matching = Object.keys(this.events).filter((f) => (f.split("(" /* fix:) */)[0] === name));
            if (matching.length === 0) {
                logger.throwArgumentError("no matching event", "name", name);
            }
            else if (matching.length > 1) {
                logger.throwArgumentError("multiple matching events", "name", name);
            }
            return this.events[matching[0]];
        }
        // Normalize the signature and lookup the function
        const result = this.events[_fragments__WEBPACK_IMPORTED_MODULE_4__.EventFragment.fromString(nameOrSignatureOrTopic).format()];
        if (!result) {
            logger.throwArgumentError("no matching event", "signature", nameOrSignatureOrTopic);
        }
        return result;
    }
    // Find a function definition by any means necessary (unless it is ambiguous)
    getError(nameOrSignatureOrSighash) {
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(nameOrSignatureOrSighash)) {
            const getSighash = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(this.constructor, "getSighash");
            for (const name in this.errors) {
                const error = this.errors[name];
                if (nameOrSignatureOrSighash === getSighash(error)) {
                    return this.errors[name];
                }
            }
            logger.throwArgumentError("no matching error", "sighash", nameOrSignatureOrSighash);
        }
        // It is a bare name, look up the function (will return null if ambiguous)
        if (nameOrSignatureOrSighash.indexOf("(") === -1) {
            const name = nameOrSignatureOrSighash.trim();
            const matching = Object.keys(this.errors).filter((f) => (f.split("(" /* fix:) */)[0] === name));
            if (matching.length === 0) {
                logger.throwArgumentError("no matching error", "name", name);
            }
            else if (matching.length > 1) {
                logger.throwArgumentError("multiple matching errors", "name", name);
            }
            return this.errors[matching[0]];
        }
        // Normalize the signature and lookup the function
        const result = this.errors[_fragments__WEBPACK_IMPORTED_MODULE_4__.FunctionFragment.fromString(nameOrSignatureOrSighash).format()];
        if (!result) {
            logger.throwArgumentError("no matching error", "signature", nameOrSignatureOrSighash);
        }
        return result;
    }
    // Get the sighash (the bytes4 selector) used by Solidity to identify a function
    getSighash(fragment) {
        if (typeof (fragment) === "string") {
            try {
                fragment = this.getFunction(fragment);
            }
            catch (error) {
                try {
                    fragment = this.getError(fragment);
                }
                catch (_) {
                    throw error;
                }
            }
        }
        return (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(this.constructor, "getSighash")(fragment);
    }
    // Get the topic (the bytes32 hash) used by Solidity to identify an event
    getEventTopic(eventFragment) {
        if (typeof (eventFragment) === "string") {
            eventFragment = this.getEvent(eventFragment);
        }
        return (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(this.constructor, "getEventTopic")(eventFragment);
    }
    _decodeParams(params, data) {
        return this._abiCoder.decode(params, data);
    }
    _encodeParams(params, values) {
        return this._abiCoder.encode(params, values);
    }
    encodeDeploy(values) {
        return this._encodeParams(this.deploy.inputs, values || []);
    }
    decodeErrorResult(fragment, data) {
        if (typeof (fragment) === "string") {
            fragment = this.getError(fragment);
        }
        const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.arrayify)(data);
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes.slice(0, 4)) !== this.getSighash(fragment)) {
            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, "data", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes));
        }
        return this._decodeParams(fragment.inputs, bytes.slice(4));
    }
    encodeErrorResult(fragment, values) {
        if (typeof (fragment) === "string") {
            fragment = this.getError(fragment);
        }
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.concat)([
            this.getSighash(fragment),
            this._encodeParams(fragment.inputs, values || [])
        ]));
    }
    // Decode the data for a function call (e.g. tx.data)
    decodeFunctionData(functionFragment, data) {
        if (typeof (functionFragment) === "string") {
            functionFragment = this.getFunction(functionFragment);
        }
        const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.arrayify)(data);
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {
            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, "data", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes));
        }
        return this._decodeParams(functionFragment.inputs, bytes.slice(4));
    }
    // Encode the data for a function call (e.g. tx.data)
    encodeFunctionData(functionFragment, values) {
        if (typeof (functionFragment) === "string") {
            functionFragment = this.getFunction(functionFragment);
        }
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.concat)([
            this.getSighash(functionFragment),
            this._encodeParams(functionFragment.inputs, values || [])
        ]));
    }
    // Decode the result from a function call (e.g. from eth_call)
    decodeFunctionResult(functionFragment, data) {
        if (typeof (functionFragment) === "string") {
            functionFragment = this.getFunction(functionFragment);
        }
        let bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.arrayify)(data);
        let reason = null;
        let message = "";
        let errorArgs = null;
        let errorName = null;
        let errorSignature = null;
        switch (bytes.length % this._abiCoder._getWordSize()) {
            case 0:
                try {
                    return this._abiCoder.decode(functionFragment.outputs, bytes);
                }
                catch (error) { }
                break;
            case 4: {
                const selector = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes.slice(0, 4));
                const builtin = BuiltinErrors[selector];
                if (builtin) {
                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));
                    errorName = builtin.name;
                    errorSignature = builtin.signature;
                    if (builtin.reason) {
                        reason = errorArgs[0];
                    }
                    if (errorName === "Error") {
                        message = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(errorArgs[0])}`;
                    }
                    else if (errorName === "Panic") {
                        message = `; VM Exception while processing transaction: reverted with panic code ${errorArgs[0]}`;
                    }
                }
                else {
                    try {
                        const error = this.getError(selector);
                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));
                        errorName = error.name;
                        errorSignature = error.format();
                    }
                    catch (error) { }
                }
                break;
            }
        }
        return logger.throwError("call revert exception" + message, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.CALL_EXCEPTION, {
            method: functionFragment.format(),
            data: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(data), errorArgs, errorName, errorSignature, reason
        });
    }
    // Encode the result for a function call (e.g. for eth_call)
    encodeFunctionResult(functionFragment, values) {
        if (typeof (functionFragment) === "string") {
            functionFragment = this.getFunction(functionFragment);
        }
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(this._abiCoder.encode(functionFragment.outputs, values || []));
    }
    // Create the filter for the event with search criteria (e.g. for eth_filterLog)
    encodeFilterTopics(eventFragment, values) {
        if (typeof (eventFragment) === "string") {
            eventFragment = this.getEvent(eventFragment);
        }
        if (values.length > eventFragment.inputs.length) {
            logger.throwError("too many arguments for " + eventFragment.format(), _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNEXPECTED_ARGUMENT, {
                argument: "values",
                value: values
            });
        }
        let topics = [];
        if (!eventFragment.anonymous) {
            topics.push(this.getEventTopic(eventFragment));
        }
        const encodeTopic = (param, value) => {
            if (param.type === "string") {
                return (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(value);
            }
            else if (param.type === "bytes") {
                return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(value));
            }
            if (param.type === "bool" && typeof (value) === "boolean") {
                value = (value ? "0x01" : "0x00");
            }
            if (param.type.match(/^u?int/)) {
                value = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_10__.BigNumber.from(value).toHexString();
            }
            // Check addresses are valid
            if (param.type === "address") {
                this._abiCoder.encode(["address"], [value]);
            }
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexZeroPad)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(value), 32);
        };
        values.forEach((value, index) => {
            let param = eventFragment.inputs[index];
            if (!param.indexed) {
                if (value != null) {
                    logger.throwArgumentError("cannot filter non-indexed parameters; must be null", ("contract." + param.name), value);
                }
                return;
            }
            if (value == null) {
                topics.push(null);
            }
            else if (param.baseType === "array" || param.baseType === "tuple") {
                logger.throwArgumentError("filtering with tuples or arrays not supported", ("contract." + param.name), value);
            }
            else if (Array.isArray(value)) {
                topics.push(value.map((value) => encodeTopic(param, value)));
            }
            else {
                topics.push(encodeTopic(param, value));
            }
        });
        // Trim off trailing nulls
        while (topics.length && topics[topics.length - 1] === null) {
            topics.pop();
        }
        return topics;
    }
    encodeEventLog(eventFragment, values) {
        if (typeof (eventFragment) === "string") {
            eventFragment = this.getEvent(eventFragment);
        }
        const topics = [];
        const dataTypes = [];
        const dataValues = [];
        if (!eventFragment.anonymous) {
            topics.push(this.getEventTopic(eventFragment));
        }
        if (values.length !== eventFragment.inputs.length) {
            logger.throwArgumentError("event arguments/values mismatch", "values", values);
        }
        eventFragment.inputs.forEach((param, index) => {
            const value = values[index];
            if (param.indexed) {
                if (param.type === "string") {
                    topics.push((0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(value));
                }
                else if (param.type === "bytes") {
                    topics.push((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__.keccak256)(value));
                }
                else if (param.baseType === "tuple" || param.baseType === "array") {
                    // @TODO
                    throw new Error("not implemented");
                }
                else {
                    topics.push(this._abiCoder.encode([param.type], [value]));
                }
            }
            else {
                dataTypes.push(param);
                dataValues.push(value);
            }
        });
        return {
            data: this._abiCoder.encode(dataTypes, dataValues),
            topics: topics
        };
    }
    // Decode a filter for the event and the search criteria
    decodeEventLog(eventFragment, data, topics) {
        if (typeof (eventFragment) === "string") {
            eventFragment = this.getEvent(eventFragment);
        }
        if (topics != null && !eventFragment.anonymous) {
            let topicHash = this.getEventTopic(eventFragment);
            if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {
                logger.throwError("fragment/topic mismatch", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, { argument: "topics[0]", expected: topicHash, value: topics[0] });
            }
            topics = topics.slice(1);
        }
        let indexed = [];
        let nonIndexed = [];
        let dynamic = [];
        eventFragment.inputs.forEach((param, index) => {
            if (param.indexed) {
                if (param.type === "string" || param.type === "bytes" || param.baseType === "tuple" || param.baseType === "array") {
                    indexed.push(_fragments__WEBPACK_IMPORTED_MODULE_4__.ParamType.fromObject({ type: "bytes32", name: param.name }));
                    dynamic.push(true);
                }
                else {
                    indexed.push(param);
                    dynamic.push(false);
                }
            }
            else {
                nonIndexed.push(param);
                dynamic.push(false);
            }
        });
        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.concat)(topics)) : null;
        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);
        let result = [];
        let nonIndexedIndex = 0, indexedIndex = 0;
        eventFragment.inputs.forEach((param, index) => {
            if (param.indexed) {
                if (resultIndexed == null) {
                    result[index] = new Indexed({ _isIndexed: true, hash: null });
                }
                else if (dynamic[index]) {
                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });
                }
                else {
                    try {
                        result[index] = resultIndexed[indexedIndex++];
                    }
                    catch (error) {
                        result[index] = error;
                    }
                }
            }
            else {
                try {
                    result[index] = resultNonIndexed[nonIndexedIndex++];
                }
                catch (error) {
                    result[index] = error;
                }
            }
            // Add the keyword argument if named and safe
            if (param.name && result[param.name] == null) {
                const value = result[index];
                // Make error named values throw on access
                if (value instanceof Error) {
                    Object.defineProperty(result, param.name, {
                        enumerable: true,
                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }
                    });
                }
                else {
                    result[param.name] = value;
                }
            }
        });
        // Make all error indexed values throw on access
        for (let i = 0; i < result.length; i++) {
            const value = result[i];
            if (value instanceof Error) {
                Object.defineProperty(result, i, {
                    enumerable: true,
                    get: () => { throw wrapAccessError(`index ${i}`, value); }
                });
            }
        }
        return Object.freeze(result);
    }
    // Given a transaction, find the matching function fragment (if any) and
    // determine all its properties and call parameters
    parseTransaction(tx) {
        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());
        if (!fragment) {
            return null;
        }
        return new TransactionDescription({
            args: this._abiCoder.decode(fragment.inputs, "0x" + tx.data.substring(10)),
            functionFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            sighash: this.getSighash(fragment),
            value: _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_10__.BigNumber.from(tx.value || "0"),
        });
    }
    // @TODO
    //parseCallResult(data: BytesLike): ??
    // Given an event log, find the matching event fragment (if any) and
    // determine all its properties and values
    parseLog(log) {
        let fragment = this.getEvent(log.topics[0]);
        if (!fragment || fragment.anonymous) {
            return null;
        }
        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?
        //        Probably not, because just because it is the only event in the ABI does
        //        not mean we have the full ABI; maybe just a fragment?
        return new LogDescription({
            eventFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            topic: this.getEventTopic(fragment),
            args: this.decodeEventLog(fragment, log.data, log.topics)
        });
    }
    parseError(data) {
        const hexData = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(data);
        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());
        if (!fragment) {
            return null;
        }
        return new ErrorDescription({
            args: this._abiCoder.decode(fragment.inputs, "0x" + hexData.substring(10)),
            errorFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            sighash: this.getSighash(fragment),
        });
    }
    /*
    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {
        if (Interface.isInterface(value)) {
            return value;
        }
        if (typeof(value) === "string") {
            return new Interface(JSON.parse(value));
        }
        return new Interface(value);
    }
    */
    static isInterface(value) {
        return !!(value && value._isInterface);
    }
}
//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abstract-provider/lib.esm/_version.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ethersproject/abstract-provider/lib.esm/_version.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "abstract-provider/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abstract-provider/lib.esm/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ethersproject/abstract-provider/lib.esm/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BlockForkEvent": () => (/* binding */ BlockForkEvent),
/* harmony export */   "ForkEvent": () => (/* binding */ ForkEvent),
/* harmony export */   "Provider": () => (/* binding */ Provider),
/* harmony export */   "TransactionForkEvent": () => (/* binding */ TransactionForkEvent),
/* harmony export */   "TransactionOrderForkEvent": () => (/* binding */ TransactionOrderForkEvent)
/* harmony export */ });
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/abstract-provider/lib.esm/_version.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
;
;
//export type CallTransactionable = {
//    call(transaction: TransactionRequest): Promise<TransactionResponse>;
//};
class ForkEvent extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.Description {
    static isForkEvent(value) {
        return !!(value && value._isForkEvent);
    }
}
class BlockForkEvent extends ForkEvent {
    constructor(blockHash, expiry) {
        if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(blockHash, 32)) {
            logger.throwArgumentError("invalid blockHash", "blockHash", blockHash);
        }
        super({
            _isForkEvent: true,
            _isBlockForkEvent: true,
            expiry: (expiry || 0),
            blockHash: blockHash
        });
    }
}
class TransactionForkEvent extends ForkEvent {
    constructor(hash, expiry) {
        if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(hash, 32)) {
            logger.throwArgumentError("invalid transaction hash", "hash", hash);
        }
        super({
            _isForkEvent: true,
            _isTransactionForkEvent: true,
            expiry: (expiry || 0),
            hash: hash
        });
    }
}
class TransactionOrderForkEvent extends ForkEvent {
    constructor(beforeHash, afterHash, expiry) {
        if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(beforeHash, 32)) {
            logger.throwArgumentError("invalid transaction hash", "beforeHash", beforeHash);
        }
        if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(afterHash, 32)) {
            logger.throwArgumentError("invalid transaction hash", "afterHash", afterHash);
        }
        super({
            _isForkEvent: true,
            _isTransactionOrderForkEvent: true,
            expiry: (expiry || 0),
            beforeHash: beforeHash,
            afterHash: afterHash
        });
    }
}
///////////////////////////////
// Exported Abstracts
class Provider {
    constructor() {
        logger.checkAbstract(new.target, Provider);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "_isProvider", true);
    }
    getFeeData() {
        return __awaiter(this, void 0, void 0, function* () {
            const { block, gasPrice } = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.resolveProperties)({
                block: this.getBlock("latest"),
                gasPrice: this.getGasPrice().catch((error) => {
                    // @TODO: Why is this now failing on Calaveras?
                    //console.log(error);
                    return null;
                })
            });
            let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;
            if (block && block.baseFeePerGas) {
                // We may want to compute this more accurately in the future,
                // using the formula "check if the base fee is correct".
                // See: https://eips.ethereum.org/EIPS/eip-1559
                lastBaseFeePerGas = block.baseFeePerGas;
                maxPriorityFeePerGas = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from("1500000000");
                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);
            }
            return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };
        });
    }
    // Alias for "on"
    addListener(eventName, listener) {
        return this.on(eventName, listener);
    }
    // Alias for "off"
    removeListener(eventName, listener) {
        return this.off(eventName, listener);
    }
    static isProvider(value) {
        return !!(value && value._isProvider);
    }
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abstract-signer/lib.esm/_version.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ethersproject/abstract-signer/lib.esm/_version.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "abstract-signer/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/abstract-signer/lib.esm/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ethersproject/abstract-signer/lib.esm/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Signer": () => (/* binding */ Signer),
/* harmony export */   "VoidSigner": () => (/* binding */ VoidSigner)
/* harmony export */ });
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/abstract-signer/lib.esm/_version.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
const allowedTransactionKeys = [
    "accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"
];
const forwardErrors = [
    _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INSUFFICIENT_FUNDS,
    _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.NONCE_EXPIRED,
    _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.REPLACEMENT_UNDERPRICED,
];
;
;
class Signer {
    ///////////////////
    // Sub-classes MUST call super
    constructor() {
        logger.checkAbstract(new.target, Signer);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "_isSigner", true);
    }
    ///////////////////
    // Sub-classes MAY override these
    getBalance(blockTag) {
        return __awaiter(this, void 0, void 0, function* () {
            this._checkProvider("getBalance");
            return yield this.provider.getBalance(this.getAddress(), blockTag);
        });
    }
    getTransactionCount(blockTag) {
        return __awaiter(this, void 0, void 0, function* () {
            this._checkProvider("getTransactionCount");
            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);
        });
    }
    // Populates "from" if unspecified, and estimates the gas for the transaction
    estimateGas(transaction) {
        return __awaiter(this, void 0, void 0, function* () {
            this._checkProvider("estimateGas");
            const tx = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.resolveProperties)(this.checkTransaction(transaction));
            return yield this.provider.estimateGas(tx);
        });
    }
    // Populates "from" if unspecified, and calls with the transaction
    call(transaction, blockTag) {
        return __awaiter(this, void 0, void 0, function* () {
            this._checkProvider("call");
            const tx = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.resolveProperties)(this.checkTransaction(transaction));
            return yield this.provider.call(tx, blockTag);
        });
    }
    // Populates all fields in a transaction, signs it and sends it to the network
    sendTransaction(transaction) {
        return __awaiter(this, void 0, void 0, function* () {
            this._checkProvider("sendTransaction");
            const tx = yield this.populateTransaction(transaction);
            const signedTx = yield this.signTransaction(tx);
            return yield this.provider.sendTransaction(signedTx);
        });
    }
    getChainId() {
        return __awaiter(this, void 0, void 0, function* () {
            this._checkProvider("getChainId");
            const network = yield this.provider.getNetwork();
            return network.chainId;
        });
    }
    getGasPrice() {
        return __awaiter(this, void 0, void 0, function* () {
            this._checkProvider("getGasPrice");
            return yield this.provider.getGasPrice();
        });
    }
    getFeeData() {
        return __awaiter(this, void 0, void 0, function* () {
            this._checkProvider("getFeeData");
            return yield this.provider.getFeeData();
        });
    }
    resolveName(name) {
        return __awaiter(this, void 0, void 0, function* () {
            this._checkProvider("resolveName");
            return yield this.provider.resolveName(name);
        });
    }
    // Checks a transaction does not contain invalid keys and if
    // no "from" is provided, populates it.
    // - does NOT require a provider
    // - adds "from" is not present
    // - returns a COPY (safe to mutate the result)
    // By default called from: (overriding these prevents it)
    //   - call
    //   - estimateGas
    //   - populateTransaction (and therefor sendTransaction)
    checkTransaction(transaction) {
        for (const key in transaction) {
            if (allowedTransactionKeys.indexOf(key) === -1) {
                logger.throwArgumentError("invalid transaction key: " + key, "transaction", transaction);
            }
        }
        const tx = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.shallowCopy)(transaction);
        if (tx.from == null) {
            tx.from = this.getAddress();
        }
        else {
            // Make sure any provided address matches this signer
            tx.from = Promise.all([
                Promise.resolve(tx.from),
                this.getAddress()
            ]).then((result) => {
                if (result[0].toLowerCase() !== result[1].toLowerCase()) {
                    logger.throwArgumentError("from address mismatch", "transaction", transaction);
                }
                return result[0];
            });
        }
        return tx;
    }
    // Populates ALL keys for a transaction and checks that "from" matches
    // this Signer. Should be used by sendTransaction but NOT by signTransaction.
    // By default called from: (overriding these prevents it)
    //   - sendTransaction
    //
    // Notes:
    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas
    populateTransaction(transaction) {
        return __awaiter(this, void 0, void 0, function* () {
            const tx = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.resolveProperties)(this.checkTransaction(transaction));
            if (tx.to != null) {
                tx.to = Promise.resolve(tx.to).then((to) => __awaiter(this, void 0, void 0, function* () {
                    if (to == null) {
                        return null;
                    }
                    const address = yield this.resolveName(to);
                    if (address == null) {
                        logger.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                    }
                    return address;
                }));
                // Prevent this error from causing an UnhandledPromiseException
                tx.to.catch((error) => { });
            }
            // Do not allow mixing pre-eip-1559 and eip-1559 properties
            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);
            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {
                logger.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction);
            }
            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {
                logger.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction);
            }
            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {
                // Fully-formed EIP-1559 transaction (skip getFeeData)
                tx.type = 2;
            }
            else if (tx.type === 0 || tx.type === 1) {
                // Explicit Legacy or EIP-2930 transaction
                // Populate missing gasPrice
                if (tx.gasPrice == null) {
                    tx.gasPrice = this.getGasPrice();
                }
            }
            else {
                // We need to get fee data to determine things
                const feeData = yield this.getFeeData();
                if (tx.type == null) {
                    // We need to auto-detect the intended type of this transaction...
                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {
                        // The network supports EIP-1559!
                        // Upgrade transaction from null to eip-1559
                        tx.type = 2;
                        if (tx.gasPrice != null) {
                            // Using legacy gasPrice property on an eip-1559 network,
                            // so use gasPrice as both fee properties
                            const gasPrice = tx.gasPrice;
                            delete tx.gasPrice;
                            tx.maxFeePerGas = gasPrice;
                            tx.maxPriorityFeePerGas = gasPrice;
                        }
                        else {
                            // Populate missing fee data
                            if (tx.maxFeePerGas == null) {
                                tx.maxFeePerGas = feeData.maxFeePerGas;
                            }
                            if (tx.maxPriorityFeePerGas == null) {
                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                            }
                        }
                    }
                    else if (feeData.gasPrice != null) {
                        // Network doesn't support EIP-1559...
                        // ...but they are trying to use EIP-1559 properties
                        if (hasEip1559) {
                            logger.throwError("network does not support EIP-1559", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "populateTransaction"
                            });
                        }
                        // Populate missing fee data
                        if (tx.gasPrice == null) {
                            tx.gasPrice = feeData.gasPrice;
                        }
                        // Explicitly set untyped transaction to legacy
                        tx.type = 0;
                    }
                    else {
                        // getFeeData has failed us.
                        logger.throwError("failed to get consistent fee data", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "signer.getFeeData"
                        });
                    }
                }
                else if (tx.type === 2) {
                    // Explicitly using EIP-1559
                    // Populate missing fee data
                    if (tx.maxFeePerGas == null) {
                        tx.maxFeePerGas = feeData.maxFeePerGas;
                    }
                    if (tx.maxPriorityFeePerGas == null) {
                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                    }
                }
            }
            if (tx.nonce == null) {
                tx.nonce = this.getTransactionCount("pending");
            }
            if (tx.gasLimit == null) {
                tx.gasLimit = this.estimateGas(tx).catch((error) => {
                    if (forwardErrors.indexOf(error.code) >= 0) {
                        throw error;
                    }
                    return logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                        error: error,
                        tx: tx
                    });
                });
            }
            if (tx.chainId == null) {
                tx.chainId = this.getChainId();
            }
            else {
                tx.chainId = Promise.all([
                    Promise.resolve(tx.chainId),
                    this.getChainId()
                ]).then((results) => {
                    if (results[1] !== 0 && results[0] !== results[1]) {
                        logger.throwArgumentError("chainId address mismatch", "transaction", transaction);
                    }
                    return results[0];
                });
            }
            return yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.resolveProperties)(tx);
        });
    }
    ///////////////////
    // Sub-classes SHOULD leave these alone
    _checkProvider(operation) {
        if (!this.provider) {
            logger.throwError("missing provider", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: (operation || "_checkProvider")
            });
        }
    }
    static isSigner(value) {
        return !!(value && value._isSigner);
    }
}
class VoidSigner extends Signer {
    constructor(address, provider) {
        super();
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "address", address);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "provider", provider || null);
    }
    getAddress() {
        return Promise.resolve(this.address);
    }
    _fail(message, operation) {
        return Promise.resolve().then(() => {
            logger.throwError(message, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });
        });
    }
    signMessage(message) {
        return this._fail("VoidSigner cannot sign messages", "signMessage");
    }
    signTransaction(transaction) {
        return this._fail("VoidSigner cannot sign transactions", "signTransaction");
    }
    _signTypedData(domain, types, value) {
        return this._fail("VoidSigner cannot sign typed data", "signTypedData");
    }
    connect(provider) {
        return new VoidSigner(this.address, provider);
    }
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/address/lib.esm/_version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/address/lib.esm/_version.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "address/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/address/lib.esm/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/address/lib.esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getAddress": () => (/* binding */ getAddress),
/* harmony export */   "getContractAddress": () => (/* binding */ getContractAddress),
/* harmony export */   "getCreate2Address": () => (/* binding */ getCreate2Address),
/* harmony export */   "getIcapAddress": () => (/* binding */ getIcapAddress),
/* harmony export */   "isAddress": () => (/* binding */ isAddress)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/rlp */ "./node_modules/@ethersproject/rlp/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/address/lib.esm/_version.js");







const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
function getChecksumAddress(address) {
    if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isHexString)(address, 20)) {
        logger.throwArgumentError("invalid address", "address", address);
    }
    address = address.toLowerCase();
    const chars = address.substring(2).split("");
    const expanded = new Uint8Array(40);
    for (let i = 0; i < 40; i++) {
        expanded[i] = chars[i].charCodeAt(0);
    }
    const hashed = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__.keccak256)(expanded));
    for (let i = 0; i < 40; i += 2) {
        if ((hashed[i >> 1] >> 4) >= 8) {
            chars[i] = chars[i].toUpperCase();
        }
        if ((hashed[i >> 1] & 0x0f) >= 8) {
            chars[i + 1] = chars[i + 1].toUpperCase();
        }
    }
    return "0x" + chars.join("");
}
// Shims for environments that are missing some required constants and functions
const MAX_SAFE_INTEGER = 0x1fffffffffffff;
function log10(x) {
    if (Math.log10) {
        return Math.log10(x);
    }
    return Math.log(x) / Math.LN10;
}
// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number
// Create lookup table
const ibanLookup = {};
for (let i = 0; i < 10; i++) {
    ibanLookup[String(i)] = String(i);
}
for (let i = 0; i < 26; i++) {
    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);
}
// How many decimal digits can we process? (for 64-bit float, this is 15)
const safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));
function ibanChecksum(address) {
    address = address.toUpperCase();
    address = address.substring(4) + address.substring(0, 2) + "00";
    let expanded = address.split("").map((c) => { return ibanLookup[c]; }).join("");
    // Javascript can handle integers safely up to 15 (decimal) digits
    while (expanded.length >= safeDigits) {
        let block = expanded.substring(0, safeDigits);
        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
    }
    let checksum = String(98 - (parseInt(expanded, 10) % 97));
    while (checksum.length < 2) {
        checksum = "0" + checksum;
    }
    return checksum;
}
;
function getAddress(address) {
    let result = null;
    if (typeof (address) !== "string") {
        logger.throwArgumentError("invalid address", "address", address);
    }
    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
        // Missing the 0x prefix
        if (address.substring(0, 2) !== "0x") {
            address = "0x" + address;
        }
        result = getChecksumAddress(address);
        // It is a checksummed address with a bad checksum
        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
            logger.throwArgumentError("bad address checksum", "address", address);
        }
        // Maybe ICAP? (we only support direct mode)
    }
    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
        // It is an ICAP address with a bad checksum
        if (address.substring(2, 4) !== ibanChecksum(address)) {
            logger.throwArgumentError("bad icap checksum", "address", address);
        }
        result = (0,_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__._base36To16)(address.substring(4));
        while (result.length < 40) {
            result = "0" + result;
        }
        result = getChecksumAddress("0x" + result);
    }
    else {
        logger.throwArgumentError("invalid address", "address", address);
    }
    return result;
}
function isAddress(address) {
    try {
        getAddress(address);
        return true;
    }
    catch (error) { }
    return false;
}
function getIcapAddress(address) {
    let base36 = (0,_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__._base16To36)(getAddress(address).substring(2)).toUpperCase();
    while (base36.length < 30) {
        base36 = "0" + base36;
    }
    return "XE" + ibanChecksum("XE00" + base36) + base36;
}
// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed
function getContractAddress(transaction) {
    let from = null;
    try {
        from = getAddress(transaction.from);
    }
    catch (error) {
        logger.throwArgumentError("missing from address", "transaction", transaction);
    }
    const nonce = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.stripZeros)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(transaction.nonce).toHexString()));
    return getAddress((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataSlice)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_ethersproject_rlp__WEBPACK_IMPORTED_MODULE_5__.encode)([from, nonce])), 12));
}
function getCreate2Address(from, salt, initCodeHash) {
    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataLength)(salt) !== 32) {
        logger.throwArgumentError("salt must be 32 bytes", "salt", salt);
    }
    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataLength)(initCodeHash) !== 32) {
        logger.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", initCodeHash);
    }
    return getAddress((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataSlice)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.concat)(["0xff", getAddress(from), salt, initCodeHash])), 12));
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/base64/lib.esm/base64.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/base64/lib.esm/base64.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decode": () => (/* binding */ decode),
/* harmony export */   "encode": () => (/* binding */ encode)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");


function decode(textData) {
    textData = atob(textData);
    const data = [];
    for (let i = 0; i < textData.length; i++) {
        data.push(textData.charCodeAt(i));
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)(data);
}
function encode(data) {
    data = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)(data);
    let textData = "";
    for (let i = 0; i < data.length; i++) {
        textData += String.fromCharCode(data[i]);
    }
    return btoa(textData);
}
//# sourceMappingURL=base64.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/base64/lib.esm/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/base64/lib.esm/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decode": () => (/* reexport safe */ _base64__WEBPACK_IMPORTED_MODULE_0__.decode),
/* harmony export */   "encode": () => (/* reexport safe */ _base64__WEBPACK_IMPORTED_MODULE_0__.encode)
/* harmony export */ });
/* harmony import */ var _base64__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64 */ "./node_modules/@ethersproject/base64/lib.esm/base64.js");


//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/basex/lib.esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@ethersproject/basex/lib.esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Base32": () => (/* binding */ Base32),
/* harmony export */   "Base58": () => (/* binding */ Base58),
/* harmony export */   "BaseX": () => (/* binding */ BaseX)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/**
 * var basex = require("base-x");
 *
 * This implementation is heavily based on base-x. The main reason to
 * deviate was to prevent the dependency of Buffer.
 *
 * Contributors:
 *
 * base-x encoding
 * Forked from https://github.com/cryptocoinjs/bs58
 * Originally written by Mike Hearn for BitcoinJ
 * Copyright (c) 2011 Google Inc
 * Ported to JavaScript by Stefan Thomas
 * Merged Buffer refactorings from base58-native by Stephen Pair
 * Copyright (c) 2013 BitPay Inc
 *
 * The MIT License (MIT)
 *
 * Copyright base-x contributors (c) 2016
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 */


class BaseX {
    constructor(alphabet) {
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_0__.defineReadOnly)(this, "alphabet", alphabet);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_0__.defineReadOnly)(this, "base", alphabet.length);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_0__.defineReadOnly)(this, "_alphabetMap", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_0__.defineReadOnly)(this, "_leader", alphabet.charAt(0));
        // pre-compute lookup table
        for (let i = 0; i < alphabet.length; i++) {
            this._alphabetMap[alphabet.charAt(i)] = i;
        }
    }
    encode(value) {
        let source = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(value);
        if (source.length === 0) {
            return "";
        }
        let digits = [0];
        for (let i = 0; i < source.length; ++i) {
            let carry = source[i];
            for (let j = 0; j < digits.length; ++j) {
                carry += digits[j] << 8;
                digits[j] = carry % this.base;
                carry = (carry / this.base) | 0;
            }
            while (carry > 0) {
                digits.push(carry % this.base);
                carry = (carry / this.base) | 0;
            }
        }
        let string = "";
        // deal with leading zeros
        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {
            string += this._leader;
        }
        // convert digits to a string
        for (let q = digits.length - 1; q >= 0; --q) {
            string += this.alphabet[digits[q]];
        }
        return string;
    }
    decode(value) {
        if (typeof (value) !== "string") {
            throw new TypeError("Expected String");
        }
        let bytes = [];
        if (value.length === 0) {
            return new Uint8Array(bytes);
        }
        bytes.push(0);
        for (let i = 0; i < value.length; i++) {
            let byte = this._alphabetMap[value[i]];
            if (byte === undefined) {
                throw new Error("Non-base" + this.base + " character");
            }
            let carry = byte;
            for (let j = 0; j < bytes.length; ++j) {
                carry += bytes[j] * this.base;
                bytes[j] = carry & 0xff;
                carry >>= 8;
            }
            while (carry > 0) {
                bytes.push(carry & 0xff);
                carry >>= 8;
            }
        }
        // deal with leading zeros
        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {
            bytes.push(0);
        }
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(new Uint8Array(bytes.reverse()));
    }
}
const Base32 = new BaseX("abcdefghijklmnopqrstuvwxyz234567");
const Base58 = new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");

//console.log(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj"))
//console.log(Base58.encode(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj")))
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/bignumber/lib.esm/_version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/bignumber/lib.esm/_version.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "bignumber/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BigNumber": () => (/* binding */ BigNumber),
/* harmony export */   "_base16To36": () => (/* binding */ _base16To36),
/* harmony export */   "_base36To16": () => (/* binding */ _base36To16),
/* harmony export */   "isBigNumberish": () => (/* binding */ isBigNumberish)
/* harmony export */ });
/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/bignumber/lib.esm/_version.js");

/**
 *  BigNumber
 *
 *  A wrapper around the BN.js object. We use the BN.js library
 *  because it is used by elliptic, so it is required regardless.
 *
 */

var BN = (bn_js__WEBPACK_IMPORTED_MODULE_0___default().BN);



const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_2__.version);
const _constructorGuard = {};
const MAX_SAFE = 0x1fffffffffffff;
function isBigNumberish(value) {
    return (value != null) && (BigNumber.isBigNumber(value) ||
        (typeof (value) === "number" && (value % 1) === 0) ||
        (typeof (value) === "string" && !!value.match(/^-?[0-9]+$/)) ||
        (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(value) ||
        (typeof (value) === "bigint") ||
        (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isBytes)(value));
}
// Only warn about passing 10 into radix once
let _warnedToStringRadix = false;
class BigNumber {
    constructor(constructorGuard, hex) {
        if (constructorGuard !== _constructorGuard) {
            logger.throwError("cannot call constructor directly; use BigNumber.from", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "new (BigNumber)"
            });
        }
        this._hex = hex;
        this._isBigNumber = true;
        Object.freeze(this);
    }
    fromTwos(value) {
        return toBigNumber(toBN(this).fromTwos(value));
    }
    toTwos(value) {
        return toBigNumber(toBN(this).toTwos(value));
    }
    abs() {
        if (this._hex[0] === "-") {
            return BigNumber.from(this._hex.substring(1));
        }
        return this;
    }
    add(other) {
        return toBigNumber(toBN(this).add(toBN(other)));
    }
    sub(other) {
        return toBigNumber(toBN(this).sub(toBN(other)));
    }
    div(other) {
        const o = BigNumber.from(other);
        if (o.isZero()) {
            throwFault("division-by-zero", "div");
        }
        return toBigNumber(toBN(this).div(toBN(other)));
    }
    mul(other) {
        return toBigNumber(toBN(this).mul(toBN(other)));
    }
    mod(other) {
        const value = toBN(other);
        if (value.isNeg()) {
            throwFault("division-by-zero", "mod");
        }
        return toBigNumber(toBN(this).umod(value));
    }
    pow(other) {
        const value = toBN(other);
        if (value.isNeg()) {
            throwFault("negative-power", "pow");
        }
        return toBigNumber(toBN(this).pow(value));
    }
    and(other) {
        const value = toBN(other);
        if (this.isNegative() || value.isNeg()) {
            throwFault("unbound-bitwise-result", "and");
        }
        return toBigNumber(toBN(this).and(value));
    }
    or(other) {
        const value = toBN(other);
        if (this.isNegative() || value.isNeg()) {
            throwFault("unbound-bitwise-result", "or");
        }
        return toBigNumber(toBN(this).or(value));
    }
    xor(other) {
        const value = toBN(other);
        if (this.isNegative() || value.isNeg()) {
            throwFault("unbound-bitwise-result", "xor");
        }
        return toBigNumber(toBN(this).xor(value));
    }
    mask(value) {
        if (this.isNegative() || value < 0) {
            throwFault("negative-width", "mask");
        }
        return toBigNumber(toBN(this).maskn(value));
    }
    shl(value) {
        if (this.isNegative() || value < 0) {
            throwFault("negative-width", "shl");
        }
        return toBigNumber(toBN(this).shln(value));
    }
    shr(value) {
        if (this.isNegative() || value < 0) {
            throwFault("negative-width", "shr");
        }
        return toBigNumber(toBN(this).shrn(value));
    }
    eq(other) {
        return toBN(this).eq(toBN(other));
    }
    lt(other) {
        return toBN(this).lt(toBN(other));
    }
    lte(other) {
        return toBN(this).lte(toBN(other));
    }
    gt(other) {
        return toBN(this).gt(toBN(other));
    }
    gte(other) {
        return toBN(this).gte(toBN(other));
    }
    isNegative() {
        return (this._hex[0] === "-");
    }
    isZero() {
        return toBN(this).isZero();
    }
    toNumber() {
        try {
            return toBN(this).toNumber();
        }
        catch (error) {
            throwFault("overflow", "toNumber", this.toString());
        }
        return null;
    }
    toBigInt() {
        try {
            return BigInt(this.toString());
        }
        catch (e) { }
        return logger.throwError("this platform does not support BigInt", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {
            value: this.toString()
        });
    }
    toString() {
        // Lots of people expect this, which we do not support, so check (See: #889)
        if (arguments.length > 0) {
            if (arguments[0] === 10) {
                if (!_warnedToStringRadix) {
                    _warnedToStringRadix = true;
                    logger.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
                }
            }
            else if (arguments[0] === 16) {
                logger.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNEXPECTED_ARGUMENT, {});
            }
            else {
                logger.throwError("BigNumber.toString does not accept parameters", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNEXPECTED_ARGUMENT, {});
            }
        }
        return toBN(this).toString(10);
    }
    toHexString() {
        return this._hex;
    }
    toJSON(key) {
        return { type: "BigNumber", hex: this.toHexString() };
    }
    static from(value) {
        if (value instanceof BigNumber) {
            return value;
        }
        if (typeof (value) === "string") {
            if (value.match(/^-?0x[0-9a-f]+$/i)) {
                return new BigNumber(_constructorGuard, toHex(value));
            }
            if (value.match(/^-?[0-9]+$/)) {
                return new BigNumber(_constructorGuard, toHex(new BN(value)));
            }
            return logger.throwArgumentError("invalid BigNumber string", "value", value);
        }
        if (typeof (value) === "number") {
            if (value % 1) {
                throwFault("underflow", "BigNumber.from", value);
            }
            if (value >= MAX_SAFE || value <= -MAX_SAFE) {
                throwFault("overflow", "BigNumber.from", value);
            }
            return BigNumber.from(String(value));
        }
        const anyValue = value;
        if (typeof (anyValue) === "bigint") {
            return BigNumber.from(anyValue.toString());
        }
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isBytes)(anyValue)) {
            return BigNumber.from((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(anyValue));
        }
        if (anyValue) {
            // Hexable interface (takes priority)
            if (anyValue.toHexString) {
                const hex = anyValue.toHexString();
                if (typeof (hex) === "string") {
                    return BigNumber.from(hex);
                }
            }
            else {
                // For now, handle legacy JSON-ified values (goes away in v6)
                let hex = anyValue._hex;
                // New-form JSON
                if (hex == null && anyValue.type === "BigNumber") {
                    hex = anyValue.hex;
                }
                if (typeof (hex) === "string") {
                    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(hex) || (hex[0] === "-" && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(hex.substring(1)))) {
                        return BigNumber.from(hex);
                    }
                }
            }
        }
        return logger.throwArgumentError("invalid BigNumber value", "value", value);
    }
    static isBigNumber(value) {
        return !!(value && value._isBigNumber);
    }
}
// Normalize the hex string
function toHex(value) {
    // For BN, call on the hex string
    if (typeof (value) !== "string") {
        return toHex(value.toString(16));
    }
    // If negative, prepend the negative sign to the normalized positive value
    if (value[0] === "-") {
        // Strip off the negative sign
        value = value.substring(1);
        // Cannot have multiple negative signs (e.g. "--0x04")
        if (value[0] === "-") {
            logger.throwArgumentError("invalid hex", "value", value);
        }
        // Call toHex on the positive component
        value = toHex(value);
        // Do not allow "-0x00"
        if (value === "0x00") {
            return value;
        }
        // Negate the value
        return "-" + value;
    }
    // Add a "0x" prefix if missing
    if (value.substring(0, 2) !== "0x") {
        value = "0x" + value;
    }
    // Normalize zero
    if (value === "0x") {
        return "0x00";
    }
    // Make the string even length
    if (value.length % 2) {
        value = "0x0" + value.substring(2);
    }
    // Trim to smallest even-length string
    while (value.length > 4 && value.substring(0, 4) === "0x00") {
        value = "0x" + value.substring(4);
    }
    return value;
}
function toBigNumber(value) {
    return BigNumber.from(toHex(value));
}
function toBN(value) {
    const hex = BigNumber.from(value).toHexString();
    if (hex[0] === "-") {
        return (new BN("-" + hex.substring(3), 16));
    }
    return new BN(hex.substring(2), 16);
}
function throwFault(fault, operation, value) {
    const params = { fault: fault, operation: operation };
    if (value != null) {
        params.value = value;
    }
    return logger.throwError(fault, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.NUMERIC_FAULT, params);
}
// value should have no prefix
function _base36To16(value) {
    return (new BN(value, 36)).toString(16);
}
// value should have no prefix
function _base16To36(value) {
    return (new BN(value, 16)).toString(36);
}
//# sourceMappingURL=bignumber.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FixedFormat": () => (/* binding */ FixedFormat),
/* harmony export */   "FixedNumber": () => (/* binding */ FixedNumber),
/* harmony export */   "formatFixed": () => (/* binding */ formatFixed),
/* harmony export */   "parseFixed": () => (/* binding */ parseFixed)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/bignumber/lib.esm/_version.js");
/* harmony import */ var _bignumber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");




const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

const _constructorGuard = {};
const Zero = _bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(0);
const NegativeOne = _bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(-1);
function throwFault(message, fault, operation, value) {
    const params = { fault: fault, operation: operation };
    if (value !== undefined) {
        params.value = value;
    }
    return logger.throwError(message, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.NUMERIC_FAULT, params);
}
// Constant to pull zeros from for multipliers
let zeros = "0";
while (zeros.length < 256) {
    zeros += zeros;
}
// Returns a string "1" followed by decimal "0"s
function getMultiplier(decimals) {
    if (typeof (decimals) !== "number") {
        try {
            decimals = _bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(decimals).toNumber();
        }
        catch (e) { }
    }
    if (typeof (decimals) === "number" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {
        return ("1" + zeros.substring(0, decimals));
    }
    return logger.throwArgumentError("invalid decimal size", "decimals", decimals);
}
function formatFixed(value, decimals) {
    if (decimals == null) {
        decimals = 0;
    }
    const multiplier = getMultiplier(decimals);
    // Make sure wei is a big number (convert as necessary)
    value = _bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(value);
    const negative = value.lt(Zero);
    if (negative) {
        value = value.mul(NegativeOne);
    }
    let fraction = value.mod(multiplier).toString();
    while (fraction.length < multiplier.length - 1) {
        fraction = "0" + fraction;
    }
    // Strip training 0
    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
    const whole = value.div(multiplier).toString();
    if (multiplier.length === 1) {
        value = whole;
    }
    else {
        value = whole + "." + fraction;
    }
    if (negative) {
        value = "-" + value;
    }
    return value;
}
function parseFixed(value, decimals) {
    if (decimals == null) {
        decimals = 0;
    }
    const multiplier = getMultiplier(decimals);
    if (typeof (value) !== "string" || !value.match(/^-?[0-9.]+$/)) {
        logger.throwArgumentError("invalid decimal value", "value", value);
    }
    // Is it negative?
    const negative = (value.substring(0, 1) === "-");
    if (negative) {
        value = value.substring(1);
    }
    if (value === ".") {
        logger.throwArgumentError("missing value", "value", value);
    }
    // Split it into a whole and fractional part
    const comps = value.split(".");
    if (comps.length > 2) {
        logger.throwArgumentError("too many decimal points", "value", value);
    }
    let whole = comps[0], fraction = comps[1];
    if (!whole) {
        whole = "0";
    }
    if (!fraction) {
        fraction = "0";
    }
    // Trim trailing zeros
    while (fraction[fraction.length - 1] === "0") {
        fraction = fraction.substring(0, fraction.length - 1);
    }
    // Check the fraction doesn't exceed our decimals size
    if (fraction.length > multiplier.length - 1) {
        throwFault("fractional component exceeds decimals", "underflow", "parseFixed");
    }
    // If decimals is 0, we have an empty string for fraction
    if (fraction === "") {
        fraction = "0";
    }
    // Fully pad the string with zeros to get to wei
    while (fraction.length < multiplier.length - 1) {
        fraction += "0";
    }
    const wholeValue = _bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(whole);
    const fractionValue = _bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(fraction);
    let wei = (wholeValue.mul(multiplier)).add(fractionValue);
    if (negative) {
        wei = wei.mul(NegativeOne);
    }
    return wei;
}
class FixedFormat {
    constructor(constructorGuard, signed, width, decimals) {
        if (constructorGuard !== _constructorGuard) {
            logger.throwError("cannot use FixedFormat constructor; use FixedFormat.from", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "new FixedFormat"
            });
        }
        this.signed = signed;
        this.width = width;
        this.decimals = decimals;
        this.name = (signed ? "" : "u") + "fixed" + String(width) + "x" + String(decimals);
        this._multiplier = getMultiplier(decimals);
        Object.freeze(this);
    }
    static from(value) {
        if (value instanceof FixedFormat) {
            return value;
        }
        if (typeof (value) === "number") {
            value = `fixed128x${value}`;
        }
        let signed = true;
        let width = 128;
        let decimals = 18;
        if (typeof (value) === "string") {
            if (value === "fixed") {
                // defaults...
            }
            else if (value === "ufixed") {
                signed = false;
            }
            else {
                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                if (!match) {
                    logger.throwArgumentError("invalid fixed format", "format", value);
                }
                signed = (match[1] !== "u");
                width = parseInt(match[2]);
                decimals = parseInt(match[3]);
            }
        }
        else if (value) {
            const check = (key, type, defaultValue) => {
                if (value[key] == null) {
                    return defaultValue;
                }
                if (typeof (value[key]) !== type) {
                    logger.throwArgumentError("invalid fixed format (" + key + " not " + type + ")", "format." + key, value[key]);
                }
                return value[key];
            };
            signed = check("signed", "boolean", signed);
            width = check("width", "number", width);
            decimals = check("decimals", "number", decimals);
        }
        if (width % 8) {
            logger.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", width);
        }
        if (decimals > 80) {
            logger.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", decimals);
        }
        return new FixedFormat(_constructorGuard, signed, width, decimals);
    }
}
class FixedNumber {
    constructor(constructorGuard, hex, value, format) {
        if (constructorGuard !== _constructorGuard) {
            logger.throwError("cannot use FixedNumber constructor; use FixedNumber.from", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "new FixedFormat"
            });
        }
        this.format = format;
        this._hex = hex;
        this._value = value;
        this._isFixedNumber = true;
        Object.freeze(this);
    }
    _checkFormat(other) {
        if (this.format.name !== other.format.name) {
            logger.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", other);
        }
    }
    addUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);
    }
    subUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);
    }
    mulUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);
    }
    divUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);
    }
    floor() {
        const comps = this.toString().split(".");
        if (comps.length === 1) {
            comps.push("0");
        }
        let result = FixedNumber.from(comps[0], this.format);
        const hasFraction = !comps[1].match(/^(0*)$/);
        if (this.isNegative() && hasFraction) {
            result = result.subUnsafe(ONE.toFormat(result.format));
        }
        return result;
    }
    ceiling() {
        const comps = this.toString().split(".");
        if (comps.length === 1) {
            comps.push("0");
        }
        let result = FixedNumber.from(comps[0], this.format);
        const hasFraction = !comps[1].match(/^(0*)$/);
        if (!this.isNegative() && hasFraction) {
            result = result.addUnsafe(ONE.toFormat(result.format));
        }
        return result;
    }
    // @TODO: Support other rounding algorithms
    round(decimals) {
        if (decimals == null) {
            decimals = 0;
        }
        // If we are already in range, we're done
        const comps = this.toString().split(".");
        if (comps.length === 1) {
            comps.push("0");
        }
        if (decimals < 0 || decimals > 80 || (decimals % 1)) {
            logger.throwArgumentError("invalid decimal count", "decimals", decimals);
        }
        if (comps[1].length <= decimals) {
            return this;
        }
        const factor = FixedNumber.from("1" + zeros.substring(0, decimals), this.format);
        const bump = BUMP.toFormat(this.format);
        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);
    }
    isZero() {
        return (this._value === "0.0" || this._value === "0");
    }
    isNegative() {
        return (this._value[0] === "-");
    }
    toString() { return this._value; }
    toHexString(width) {
        if (width == null) {
            return this._hex;
        }
        if (width % 8) {
            logger.throwArgumentError("invalid byte width", "width", width);
        }
        const hex = _bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexZeroPad)(hex, width / 8);
    }
    toUnsafeFloat() { return parseFloat(this.toString()); }
    toFormat(format) {
        return FixedNumber.fromString(this._value, format);
    }
    static fromValue(value, decimals, format) {
        // If decimals looks more like a format, and there is no format, shift the parameters
        if (format == null && decimals != null && !(0,_bignumber__WEBPACK_IMPORTED_MODULE_2__.isBigNumberish)(decimals)) {
            format = decimals;
            decimals = null;
        }
        if (decimals == null) {
            decimals = 0;
        }
        if (format == null) {
            format = "fixed";
        }
        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));
    }
    static fromString(value, format) {
        if (format == null) {
            format = "fixed";
        }
        const fixedFormat = FixedFormat.from(format);
        const numeric = parseFixed(value, fixedFormat.decimals);
        if (!fixedFormat.signed && numeric.lt(Zero)) {
            throwFault("unsigned value cannot be negative", "overflow", "value", value);
        }
        let hex = null;
        if (fixedFormat.signed) {
            hex = numeric.toTwos(fixedFormat.width).toHexString();
        }
        else {
            hex = numeric.toHexString();
            hex = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexZeroPad)(hex, fixedFormat.width / 8);
        }
        const decimal = formatFixed(numeric, fixedFormat.decimals);
        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);
    }
    static fromBytes(value, format) {
        if (format == null) {
            format = "fixed";
        }
        const fixedFormat = FixedFormat.from(format);
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value).length > fixedFormat.width / 8) {
            throw new Error("overflow");
        }
        let numeric = _bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(value);
        if (fixedFormat.signed) {
            numeric = numeric.fromTwos(fixedFormat.width);
        }
        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();
        const decimal = formatFixed(numeric, fixedFormat.decimals);
        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);
    }
    static from(value, format) {
        if (typeof (value) === "string") {
            return FixedNumber.fromString(value, format);
        }
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isBytes)(value)) {
            return FixedNumber.fromBytes(value, format);
        }
        try {
            return FixedNumber.fromValue(value, 0, format);
        }
        catch (error) {
            // Allow NUMERIC_FAULT to bubble up
            if (error.code !== _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT) {
                throw error;
            }
        }
        return logger.throwArgumentError("invalid FixedNumber value", "value", value);
    }
    static isFixedNumber(value) {
        return !!(value && value._isFixedNumber);
    }
}
const ONE = FixedNumber.from(1);
const BUMP = FixedNumber.from("0.5");
//# sourceMappingURL=fixednumber.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/bytes/lib.esm/_version.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ethersproject/bytes/lib.esm/_version.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "bytes/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/bytes/lib.esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@ethersproject/bytes/lib.esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "arrayify": () => (/* binding */ arrayify),
/* harmony export */   "concat": () => (/* binding */ concat),
/* harmony export */   "hexConcat": () => (/* binding */ hexConcat),
/* harmony export */   "hexDataLength": () => (/* binding */ hexDataLength),
/* harmony export */   "hexDataSlice": () => (/* binding */ hexDataSlice),
/* harmony export */   "hexStripZeros": () => (/* binding */ hexStripZeros),
/* harmony export */   "hexValue": () => (/* binding */ hexValue),
/* harmony export */   "hexZeroPad": () => (/* binding */ hexZeroPad),
/* harmony export */   "hexlify": () => (/* binding */ hexlify),
/* harmony export */   "isBytes": () => (/* binding */ isBytes),
/* harmony export */   "isBytesLike": () => (/* binding */ isBytesLike),
/* harmony export */   "isHexString": () => (/* binding */ isHexString),
/* harmony export */   "joinSignature": () => (/* binding */ joinSignature),
/* harmony export */   "splitSignature": () => (/* binding */ splitSignature),
/* harmony export */   "stripZeros": () => (/* binding */ stripZeros),
/* harmony export */   "zeroPad": () => (/* binding */ zeroPad)
/* harmony export */ });
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/bytes/lib.esm/_version.js");



const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
///////////////////////////////
function isHexable(value) {
    return !!(value.toHexString);
}
function addSlice(array) {
    if (array.slice) {
        return array;
    }
    array.slice = function () {
        const args = Array.prototype.slice.call(arguments);
        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
    };
    return array;
}
function isBytesLike(value) {
    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));
}
function isInteger(value) {
    return (typeof (value) === "number" && value == value && (value % 1) === 0);
}
function isBytes(value) {
    if (value == null) {
        return false;
    }
    if (value.constructor === Uint8Array) {
        return true;
    }
    if (typeof (value) === "string") {
        return false;
    }
    if (!isInteger(value.length) || value.length < 0) {
        return false;
    }
    for (let i = 0; i < value.length; i++) {
        const v = value[i];
        if (!isInteger(v) || v < 0 || v >= 256) {
            return false;
        }
    }
    return true;
}
function arrayify(value, options) {
    if (!options) {
        options = {};
    }
    if (typeof (value) === "number") {
        logger.checkSafeUint53(value, "invalid arrayify value");
        const result = [];
        while (value) {
            result.unshift(value & 0xff);
            value = parseInt(String(value / 256));
        }
        if (result.length === 0) {
            result.push(0);
        }
        return addSlice(new Uint8Array(result));
    }
    if (options.allowMissingPrefix && typeof (value) === "string" && value.substring(0, 2) !== "0x") {
        value = "0x" + value;
    }
    if (isHexable(value)) {
        value = value.toHexString();
    }
    if (isHexString(value)) {
        let hex = value.substring(2);
        if (hex.length % 2) {
            if (options.hexPad === "left") {
                hex = "0" + hex;
            }
            else if (options.hexPad === "right") {
                hex += "0";
            }
            else {
                logger.throwArgumentError("hex data is odd-length", "value", value);
            }
        }
        const result = [];
        for (let i = 0; i < hex.length; i += 2) {
            result.push(parseInt(hex.substring(i, i + 2), 16));
        }
        return addSlice(new Uint8Array(result));
    }
    if (isBytes(value)) {
        return addSlice(new Uint8Array(value));
    }
    return logger.throwArgumentError("invalid arrayify value", "value", value);
}
function concat(items) {
    const objects = items.map(item => arrayify(item));
    const length = objects.reduce((accum, item) => (accum + item.length), 0);
    const result = new Uint8Array(length);
    objects.reduce((offset, object) => {
        result.set(object, offset);
        return offset + object.length;
    }, 0);
    return addSlice(result);
}
function stripZeros(value) {
    let result = arrayify(value);
    if (result.length === 0) {
        return result;
    }
    // Find the first non-zero entry
    let start = 0;
    while (start < result.length && result[start] === 0) {
        start++;
    }
    // If we started with zeros, strip them
    if (start) {
        result = result.slice(start);
    }
    return result;
}
function zeroPad(value, length) {
    value = arrayify(value);
    if (value.length > length) {
        logger.throwArgumentError("value out of range", "value", arguments[0]);
    }
    const result = new Uint8Array(length);
    result.set(value, length - value.length);
    return addSlice(result);
}
function isHexString(value, length) {
    if (typeof (value) !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
        return false;
    }
    if (length && value.length !== 2 + 2 * length) {
        return false;
    }
    return true;
}
const HexCharacters = "0123456789abcdef";
function hexlify(value, options) {
    if (!options) {
        options = {};
    }
    if (typeof (value) === "number") {
        logger.checkSafeUint53(value, "invalid hexlify value");
        let hex = "";
        while (value) {
            hex = HexCharacters[value & 0xf] + hex;
            value = Math.floor(value / 16);
        }
        if (hex.length) {
            if (hex.length % 2) {
                hex = "0" + hex;
            }
            return "0x" + hex;
        }
        return "0x00";
    }
    if (typeof (value) === "bigint") {
        value = value.toString(16);
        if (value.length % 2) {
            return ("0x0" + value);
        }
        return "0x" + value;
    }
    if (options.allowMissingPrefix && typeof (value) === "string" && value.substring(0, 2) !== "0x") {
        value = "0x" + value;
    }
    if (isHexable(value)) {
        return value.toHexString();
    }
    if (isHexString(value)) {
        if (value.length % 2) {
            if (options.hexPad === "left") {
                value = "0x0" + value.substring(2);
            }
            else if (options.hexPad === "right") {
                value += "0";
            }
            else {
                logger.throwArgumentError("hex data is odd-length", "value", value);
            }
        }
        return value.toLowerCase();
    }
    if (isBytes(value)) {
        let result = "0x";
        for (let i = 0; i < value.length; i++) {
            let v = value[i];
            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];
        }
        return result;
    }
    return logger.throwArgumentError("invalid hexlify value", "value", value);
}
/*
function unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {
    if (typeof(value) === "string" && value.length % 2 && value.substring(0, 2) === "0x") {
        return "0x0" + value.substring(2);
    }
    return value;
}
*/
function hexDataLength(data) {
    if (typeof (data) !== "string") {
        data = hexlify(data);
    }
    else if (!isHexString(data) || (data.length % 2)) {
        return null;
    }
    return (data.length - 2) / 2;
}
function hexDataSlice(data, offset, endOffset) {
    if (typeof (data) !== "string") {
        data = hexlify(data);
    }
    else if (!isHexString(data) || (data.length % 2)) {
        logger.throwArgumentError("invalid hexData", "value", data);
    }
    offset = 2 + 2 * offset;
    if (endOffset != null) {
        return "0x" + data.substring(offset, 2 + 2 * endOffset);
    }
    return "0x" + data.substring(offset);
}
function hexConcat(items) {
    let result = "0x";
    items.forEach((item) => {
        result += hexlify(item).substring(2);
    });
    return result;
}
function hexValue(value) {
    const trimmed = hexStripZeros(hexlify(value, { hexPad: "left" }));
    if (trimmed === "0x") {
        return "0x0";
    }
    return trimmed;
}
function hexStripZeros(value) {
    if (typeof (value) !== "string") {
        value = hexlify(value);
    }
    if (!isHexString(value)) {
        logger.throwArgumentError("invalid hex string", "value", value);
    }
    value = value.substring(2);
    let offset = 0;
    while (offset < value.length && value[offset] === "0") {
        offset++;
    }
    return "0x" + value.substring(offset);
}
function hexZeroPad(value, length) {
    if (typeof (value) !== "string") {
        value = hexlify(value);
    }
    else if (!isHexString(value)) {
        logger.throwArgumentError("invalid hex string", "value", value);
    }
    if (value.length > 2 * length + 2) {
        logger.throwArgumentError("value out of range", "value", arguments[1]);
    }
    while (value.length < 2 * length + 2) {
        value = "0x0" + value.substring(2);
    }
    return value;
}
function splitSignature(signature) {
    const result = {
        r: "0x",
        s: "0x",
        _vs: "0x",
        recoveryParam: 0,
        v: 0,
        yParityAndS: "0x",
        compact: "0x"
    };
    if (isBytesLike(signature)) {
        let bytes = arrayify(signature);
        // Get the r, s and v
        if (bytes.length === 64) {
            // EIP-2098; pull the v from the top bit of s and clear it
            result.v = 27 + (bytes[32] >> 7);
            bytes[32] &= 0x7f;
            result.r = hexlify(bytes.slice(0, 32));
            result.s = hexlify(bytes.slice(32, 64));
        }
        else if (bytes.length === 65) {
            result.r = hexlify(bytes.slice(0, 32));
            result.s = hexlify(bytes.slice(32, 64));
            result.v = bytes[64];
        }
        else {
            logger.throwArgumentError("invalid signature string", "signature", signature);
        }
        // Allow a recid to be used as the v
        if (result.v < 27) {
            if (result.v === 0 || result.v === 1) {
                result.v += 27;
            }
            else {
                logger.throwArgumentError("signature invalid v byte", "signature", signature);
            }
        }
        // Compute recoveryParam from v
        result.recoveryParam = 1 - (result.v % 2);
        // Compute _vs from recoveryParam and s
        if (result.recoveryParam) {
            bytes[32] |= 0x80;
        }
        result._vs = hexlify(bytes.slice(32, 64));
    }
    else {
        result.r = signature.r;
        result.s = signature.s;
        result.v = signature.v;
        result.recoveryParam = signature.recoveryParam;
        result._vs = signature._vs;
        // If the _vs is available, use it to populate missing s, v and recoveryParam
        // and verify non-missing s, v and recoveryParam
        if (result._vs != null) {
            const vs = zeroPad(arrayify(result._vs), 32);
            result._vs = hexlify(vs);
            // Set or check the recid
            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);
            if (result.recoveryParam == null) {
                result.recoveryParam = recoveryParam;
            }
            else if (result.recoveryParam !== recoveryParam) {
                logger.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature);
            }
            // Set or check the s
            vs[0] &= 0x7f;
            const s = hexlify(vs);
            if (result.s == null) {
                result.s = s;
            }
            else if (result.s !== s) {
                logger.throwArgumentError("signature v mismatch _vs", "signature", signature);
            }
        }
        // Use recid and v to populate each other
        if (result.recoveryParam == null) {
            if (result.v == null) {
                logger.throwArgumentError("signature missing v and recoveryParam", "signature", signature);
            }
            else if (result.v === 0 || result.v === 1) {
                result.recoveryParam = result.v;
            }
            else {
                result.recoveryParam = 1 - (result.v % 2);
            }
        }
        else {
            if (result.v == null) {
                result.v = 27 + result.recoveryParam;
            }
            else {
                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));
                if (result.recoveryParam !== recId) {
                    logger.throwArgumentError("signature recoveryParam mismatch v", "signature", signature);
                }
            }
        }
        if (result.r == null || !isHexString(result.r)) {
            logger.throwArgumentError("signature missing or invalid r", "signature", signature);
        }
        else {
            result.r = hexZeroPad(result.r, 32);
        }
        if (result.s == null || !isHexString(result.s)) {
            logger.throwArgumentError("signature missing or invalid s", "signature", signature);
        }
        else {
            result.s = hexZeroPad(result.s, 32);
        }
        const vs = arrayify(result.s);
        if (vs[0] >= 128) {
            logger.throwArgumentError("signature s out of range", "signature", signature);
        }
        if (result.recoveryParam) {
            vs[0] |= 0x80;
        }
        const _vs = hexlify(vs);
        if (result._vs) {
            if (!isHexString(result._vs)) {
                logger.throwArgumentError("signature invalid _vs", "signature", signature);
            }
            result._vs = hexZeroPad(result._vs, 32);
        }
        // Set or check the _vs
        if (result._vs == null) {
            result._vs = _vs;
        }
        else if (result._vs !== _vs) {
            logger.throwArgumentError("signature _vs mismatch v and s", "signature", signature);
        }
    }
    result.yParityAndS = result._vs;
    result.compact = result.r + result.yParityAndS.substring(2);
    return result;
}
function joinSignature(signature) {
    signature = splitSignature(signature);
    return hexlify(concat([
        signature.r,
        signature.s,
        (signature.recoveryParam ? "0x1c" : "0x1b")
    ]));
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/constants/lib.esm/addresses.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ethersproject/constants/lib.esm/addresses.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddressZero": () => (/* binding */ AddressZero)
/* harmony export */ });
const AddressZero = "0x0000000000000000000000000000000000000000";
//# sourceMappingURL=addresses.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/constants/lib.esm/bignumbers.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethersproject/constants/lib.esm/bignumbers.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MaxInt256": () => (/* binding */ MaxInt256),
/* harmony export */   "MaxUint256": () => (/* binding */ MaxUint256),
/* harmony export */   "MinInt256": () => (/* binding */ MinInt256),
/* harmony export */   "NegativeOne": () => (/* binding */ NegativeOne),
/* harmony export */   "One": () => (/* binding */ One),
/* harmony export */   "Two": () => (/* binding */ Two),
/* harmony export */   "WeiPerEther": () => (/* binding */ WeiPerEther),
/* harmony export */   "Zero": () => (/* binding */ Zero)
/* harmony export */ });
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");

const NegativeOne = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(-1));
const Zero = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(0));
const One = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(1));
const Two = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(2));
const WeiPerEther = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from("1000000000000000000"));
const MaxUint256 = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"));
const MinInt256 = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from("-0x8000000000000000000000000000000000000000000000000000000000000000"));
const MaxInt256 = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"));

//# sourceMappingURL=bignumbers.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/constants/lib.esm/hashes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/constants/lib.esm/hashes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HashZero": () => (/* binding */ HashZero)
/* harmony export */ });
const HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000";
//# sourceMappingURL=hashes.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/constants/lib.esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/constants/lib.esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddressZero": () => (/* reexport safe */ _addresses__WEBPACK_IMPORTED_MODULE_0__.AddressZero),
/* harmony export */   "EtherSymbol": () => (/* reexport safe */ _strings__WEBPACK_IMPORTED_MODULE_3__.EtherSymbol),
/* harmony export */   "HashZero": () => (/* reexport safe */ _hashes__WEBPACK_IMPORTED_MODULE_2__.HashZero),
/* harmony export */   "MaxInt256": () => (/* reexport safe */ _bignumbers__WEBPACK_IMPORTED_MODULE_1__.MaxInt256),
/* harmony export */   "MaxUint256": () => (/* reexport safe */ _bignumbers__WEBPACK_IMPORTED_MODULE_1__.MaxUint256),
/* harmony export */   "MinInt256": () => (/* reexport safe */ _bignumbers__WEBPACK_IMPORTED_MODULE_1__.MinInt256),
/* harmony export */   "NegativeOne": () => (/* reexport safe */ _bignumbers__WEBPACK_IMPORTED_MODULE_1__.NegativeOne),
/* harmony export */   "One": () => (/* reexport safe */ _bignumbers__WEBPACK_IMPORTED_MODULE_1__.One),
/* harmony export */   "Two": () => (/* reexport safe */ _bignumbers__WEBPACK_IMPORTED_MODULE_1__.Two),
/* harmony export */   "WeiPerEther": () => (/* reexport safe */ _bignumbers__WEBPACK_IMPORTED_MODULE_1__.WeiPerEther),
/* harmony export */   "Zero": () => (/* reexport safe */ _bignumbers__WEBPACK_IMPORTED_MODULE_1__.Zero)
/* harmony export */ });
/* harmony import */ var _addresses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./addresses */ "./node_modules/@ethersproject/constants/lib.esm/addresses.js");
/* harmony import */ var _bignumbers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bignumbers */ "./node_modules/@ethersproject/constants/lib.esm/bignumbers.js");
/* harmony import */ var _hashes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes */ "./node_modules/@ethersproject/constants/lib.esm/hashes.js");
/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./strings */ "./node_modules/@ethersproject/constants/lib.esm/strings.js");





//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/constants/lib.esm/strings.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/constants/lib.esm/strings.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EtherSymbol": () => (/* binding */ EtherSymbol)
/* harmony export */ });
// NFKC (composed)             // (decomposed)
const EtherSymbol = "\u039e"; // "\uD835\uDF63";
//# sourceMappingURL=strings.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/contracts/lib.esm/_version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/contracts/lib.esm/_version.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "contracts/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/contracts/lib.esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/contracts/lib.esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseContract": () => (/* binding */ BaseContract),
/* harmony export */   "Contract": () => (/* binding */ Contract),
/* harmony export */   "ContractFactory": () => (/* binding */ ContractFactory)
/* harmony export */ });
/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/abi */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");
/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/abi */ "./node_modules/@ethersproject/abi/lib.esm/interface.js");
/* harmony import */ var _ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/abstract-provider */ "./node_modules/@ethersproject/abstract-provider/lib.esm/index.js");
/* harmony import */ var _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/abstract-signer */ "./node_modules/@ethersproject/abstract-signer/lib.esm/index.js");
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/transactions */ "./node_modules/@ethersproject/transactions/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/contracts/lib.esm/_version.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
;
;
///////////////////////////////
const allowedTransactionKeys = {
    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,
    type: true, accessList: true,
    maxFeePerGas: true, maxPriorityFeePerGas: true,
    customData: true,
    ccipReadEnabled: true
};
function resolveName(resolver, nameOrPromise) {
    return __awaiter(this, void 0, void 0, function* () {
        const name = yield nameOrPromise;
        if (typeof (name) !== "string") {
            logger.throwArgumentError("invalid address or ENS name", "name", name);
        }
        // If it is already an address, just use it (after adding checksum)
        try {
            return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_2__.getAddress)(name);
        }
        catch (error) { }
        if (!resolver) {
            logger.throwError("a provider or signer is needed to resolve ENS names", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "resolveName"
            });
        }
        const address = yield resolver.resolveName(name);
        if (address == null) {
            logger.throwArgumentError("resolver or addr is not configured for ENS name", "name", name);
        }
        return address;
    });
}
// Recursively replaces ENS names with promises to resolve the name and resolves all properties
function resolveAddresses(resolver, value, paramType) {
    return __awaiter(this, void 0, void 0, function* () {
        if (Array.isArray(paramType)) {
            return yield Promise.all(paramType.map((paramType, index) => {
                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);
            }));
        }
        if (paramType.type === "address") {
            return yield resolveName(resolver, value);
        }
        if (paramType.type === "tuple") {
            return yield resolveAddresses(resolver, value, paramType.components);
        }
        if (paramType.baseType === "array") {
            if (!Array.isArray(value)) {
                return Promise.reject(logger.makeError("invalid value for array", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, {
                    argument: "value",
                    value
                }));
            }
            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));
        }
        return value;
    });
}
function populateTransaction(contract, fragment, args) {
    return __awaiter(this, void 0, void 0, function* () {
        // If an extra argument is given, it is overrides
        let overrides = {};
        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === "object") {
            overrides = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy)(args.pop());
        }
        // Make sure the parameter count matches
        logger.checkArgumentCount(args.length, fragment.inputs.length, "passed to contract");
        // Populate "from" override (allow promises)
        if (contract.signer) {
            if (overrides.from) {
                // Contracts with a Signer are from the Signer's frame-of-reference;
                // but we allow overriding "from" if it matches the signer
                overrides.from = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.resolveProperties)({
                    override: resolveName(contract.signer, overrides.from),
                    signer: contract.signer.getAddress()
                }).then((check) => __awaiter(this, void 0, void 0, function* () {
                    if ((0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_2__.getAddress)(check.signer) !== check.override) {
                        logger.throwError("Contract with a Signer cannot override from", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "overrides.from"
                        });
                    }
                    return check.override;
                }));
            }
            else {
                overrides.from = contract.signer.getAddress();
            }
        }
        else if (overrides.from) {
            overrides.from = resolveName(contract.provider, overrides.from);
            //} else {
            // Contracts without a signer can override "from", and if
            // unspecified the zero address is used
            //overrides.from = AddressZero;
        }
        // Wait for all dependencies to be resolved (prefer the signer over the provider)
        const resolved = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.resolveProperties)({
            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),
            address: contract.resolvedAddress,
            overrides: ((0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.resolveProperties)(overrides) || {})
        });
        // The ABI coded transaction
        const data = contract.interface.encodeFunctionData(fragment, resolved.args);
        const tx = {
            data: data,
            to: resolved.address
        };
        // Resolved Overrides
        const ro = resolved.overrides;
        // Populate simple overrides
        if (ro.nonce != null) {
            tx.nonce = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(ro.nonce).toNumber();
        }
        if (ro.gasLimit != null) {
            tx.gasLimit = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(ro.gasLimit);
        }
        if (ro.gasPrice != null) {
            tx.gasPrice = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(ro.gasPrice);
        }
        if (ro.maxFeePerGas != null) {
            tx.maxFeePerGas = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(ro.maxFeePerGas);
        }
        if (ro.maxPriorityFeePerGas != null) {
            tx.maxPriorityFeePerGas = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(ro.maxPriorityFeePerGas);
        }
        if (ro.from != null) {
            tx.from = ro.from;
        }
        if (ro.type != null) {
            tx.type = ro.type;
        }
        if (ro.accessList != null) {
            tx.accessList = (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_5__.accessListify)(ro.accessList);
        }
        // If there was no "gasLimit" override, but the ABI specifies a default, use it
        if (tx.gasLimit == null && fragment.gas != null) {
            // Compute the intrinsic gas cost for this transaction
            // @TODO: This is based on the yellow paper as of Petersburg; this is something
            // we may wish to parameterize in v6 as part of the Network object. Since this
            // is always a non-nil to address, we can ignore G_create, but may wish to add
            // similar logic to the ContractFactory.
            let intrinsic = 21000;
            const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(data);
            for (let i = 0; i < bytes.length; i++) {
                intrinsic += 4;
                if (bytes[i]) {
                    intrinsic += 64;
                }
            }
            tx.gasLimit = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(fragment.gas).add(intrinsic);
        }
        // Populate "value" override
        if (ro.value) {
            const roValue = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(ro.value);
            if (!roValue.isZero() && !fragment.payable) {
                logger.throwError("non-payable method cannot override value", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "overrides.value",
                    value: overrides.value
                });
            }
            tx.value = roValue;
        }
        if (ro.customData) {
            tx.customData = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy)(ro.customData);
        }
        if (ro.ccipReadEnabled) {
            tx.ccipReadEnabled = !!ro.ccipReadEnabled;
        }
        // Remove the overrides
        delete overrides.nonce;
        delete overrides.gasLimit;
        delete overrides.gasPrice;
        delete overrides.from;
        delete overrides.value;
        delete overrides.type;
        delete overrides.accessList;
        delete overrides.maxFeePerGas;
        delete overrides.maxPriorityFeePerGas;
        delete overrides.customData;
        delete overrides.ccipReadEnabled;
        // Make sure there are no stray overrides, which may indicate a
        // typo or using an unsupported key.
        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));
        if (leftovers.length) {
            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(",")}`, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "overrides",
                overrides: leftovers
            });
        }
        return tx;
    });
}
function buildPopulate(contract, fragment) {
    return function (...args) {
        return populateTransaction(contract, fragment, args);
    };
}
function buildEstimate(contract, fragment) {
    const signerOrProvider = (contract.signer || contract.provider);
    return function (...args) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!signerOrProvider) {
                logger.throwError("estimate require a provider or signer", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "estimateGas"
                });
            }
            const tx = yield populateTransaction(contract, fragment, args);
            return yield signerOrProvider.estimateGas(tx);
        });
    };
}
function addContractWait(contract, tx) {
    const wait = tx.wait.bind(tx);
    tx.wait = (confirmations) => {
        return wait(confirmations).then((receipt) => {
            receipt.events = receipt.logs.map((log) => {
                let event = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.deepCopy)(log);
                let parsed = null;
                try {
                    parsed = contract.interface.parseLog(log);
                }
                catch (e) { }
                // Successfully parsed the event log; include it
                if (parsed) {
                    event.args = parsed.args;
                    event.decode = (data, topics) => {
                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);
                    };
                    event.event = parsed.name;
                    event.eventSignature = parsed.signature;
                }
                // Useful operations
                event.removeListener = () => { return contract.provider; };
                event.getBlock = () => {
                    return contract.provider.getBlock(receipt.blockHash);
                };
                event.getTransaction = () => {
                    return contract.provider.getTransaction(receipt.transactionHash);
                };
                event.getTransactionReceipt = () => {
                    return Promise.resolve(receipt);
                };
                return event;
            });
            return receipt;
        });
    };
}
function buildCall(contract, fragment, collapseSimple) {
    const signerOrProvider = (contract.signer || contract.provider);
    return function (...args) {
        return __awaiter(this, void 0, void 0, function* () {
            // Extract the "blockTag" override if present
            let blockTag = undefined;
            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === "object") {
                const overrides = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy)(args.pop());
                if (overrides.blockTag != null) {
                    blockTag = yield overrides.blockTag;
                }
                delete overrides.blockTag;
                args.push(overrides);
            }
            // If the contract was just deployed, wait until it is mined
            if (contract.deployTransaction != null) {
                yield contract._deployed(blockTag);
            }
            // Call a node and get the result
            const tx = yield populateTransaction(contract, fragment, args);
            const result = yield signerOrProvider.call(tx, blockTag);
            try {
                let value = contract.interface.decodeFunctionResult(fragment, result);
                if (collapseSimple && fragment.outputs.length === 1) {
                    value = value[0];
                }
                return value;
            }
            catch (error) {
                if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.CALL_EXCEPTION) {
                    error.address = contract.address;
                    error.args = args;
                    error.transaction = tx;
                }
                throw error;
            }
        });
    };
}
function buildSend(contract, fragment) {
    return function (...args) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!contract.signer) {
                logger.throwError("sending a transaction requires a signer", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "sendTransaction"
                });
            }
            // If the contract was just deployed, wait until it is mined
            if (contract.deployTransaction != null) {
                yield contract._deployed();
            }
            const txRequest = yield populateTransaction(contract, fragment, args);
            const tx = yield contract.signer.sendTransaction(txRequest);
            // Tweak the tx.wait so the receipt has extra properties
            addContractWait(contract, tx);
            return tx;
        });
    };
}
function buildDefault(contract, fragment, collapseSimple) {
    if (fragment.constant) {
        return buildCall(contract, fragment, collapseSimple);
    }
    return buildSend(contract, fragment);
}
function getEventTag(filter) {
    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {
        return "*";
    }
    return (filter.address || "*") + "@" + (filter.topics ? filter.topics.map((topic) => {
        if (Array.isArray(topic)) {
            return topic.join("|");
        }
        return topic;
    }).join(":") : "");
}
class RunningEvent {
    constructor(tag, filter) {
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "tag", tag);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "filter", filter);
        this._listeners = [];
    }
    addListener(listener, once) {
        this._listeners.push({ listener: listener, once: once });
    }
    removeListener(listener) {
        let done = false;
        this._listeners = this._listeners.filter((item) => {
            if (done || item.listener !== listener) {
                return true;
            }
            done = true;
            return false;
        });
    }
    removeAllListeners() {
        this._listeners = [];
    }
    listeners() {
        return this._listeners.map((i) => i.listener);
    }
    listenerCount() {
        return this._listeners.length;
    }
    run(args) {
        const listenerCount = this.listenerCount();
        this._listeners = this._listeners.filter((item) => {
            const argsCopy = args.slice();
            // Call the callback in the next event loop
            setTimeout(() => {
                item.listener.apply(this, argsCopy);
            }, 0);
            // Reschedule it if it not "once"
            return !(item.once);
        });
        return listenerCount;
    }
    prepareEvent(event) {
    }
    // Returns the array that will be applied to an emit
    getEmit(event) {
        return [event];
    }
}
class ErrorRunningEvent extends RunningEvent {
    constructor() {
        super("error", null);
    }
}
// @TODO Fragment should inherit Wildcard? and just override getEmit?
//       or have a common abstract super class, with enough constructor
//       options to configure both.
// A Fragment Event will populate all the properties that Wildcard
// will, and additionally dereference the arguments when emitting
class FragmentRunningEvent extends RunningEvent {
    constructor(address, contractInterface, fragment, topics) {
        const filter = {
            address: address
        };
        let topic = contractInterface.getEventTopic(fragment);
        if (topics) {
            if (topic !== topics[0]) {
                logger.throwArgumentError("topic mismatch", "topics", topics);
            }
            filter.topics = topics.slice();
        }
        else {
            filter.topics = [topic];
        }
        super(getEventTag(filter), filter);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "address", address);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "interface", contractInterface);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "fragment", fragment);
    }
    prepareEvent(event) {
        super.prepareEvent(event);
        event.event = this.fragment.name;
        event.eventSignature = this.fragment.format();
        event.decode = (data, topics) => {
            return this.interface.decodeEventLog(this.fragment, data, topics);
        };
        try {
            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);
        }
        catch (error) {
            event.args = null;
            event.decodeError = error;
        }
    }
    getEmit(event) {
        const errors = (0,_ethersproject_abi__WEBPACK_IMPORTED_MODULE_7__.checkResultErrors)(event.args);
        if (errors.length) {
            throw errors[0].error;
        }
        const args = (event.args || []).slice();
        args.push(event);
        return args;
    }
}
// A Wildcard Event will attempt to populate:
//  - event            The name of the event name
//  - eventSignature   The full signature of the event
//  - decode           A function to decode data and topics
//  - args             The decoded data and topics
class WildcardRunningEvent extends RunningEvent {
    constructor(address, contractInterface) {
        super("*", { address: address });
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "address", address);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "interface", contractInterface);
    }
    prepareEvent(event) {
        super.prepareEvent(event);
        try {
            const parsed = this.interface.parseLog(event);
            event.event = parsed.name;
            event.eventSignature = parsed.signature;
            event.decode = (data, topics) => {
                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);
            };
            event.args = parsed.args;
        }
        catch (error) {
            // No matching event
        }
    }
}
class BaseContract {
    constructor(addressOrName, contractInterface, signerOrProvider) {
        // @TODO: Maybe still check the addressOrName looks like a valid address or name?
        //address = getAddress(address);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "interface", (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(new.target, "getInterface")(contractInterface));
        if (signerOrProvider == null) {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "provider", null);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "signer", null);
        }
        else if (_ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_8__.Signer.isSigner(signerOrProvider)) {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "provider", signerOrProvider.provider || null);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "signer", signerOrProvider);
        }
        else if (_ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_9__.Provider.isProvider(signerOrProvider)) {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "provider", signerOrProvider);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "signer", null);
        }
        else {
            logger.throwArgumentError("invalid signer or provider", "signerOrProvider", signerOrProvider);
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "callStatic", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "estimateGas", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "functions", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "populateTransaction", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "filters", {});
        {
            const uniqueFilters = {};
            Object.keys(this.interface.events).forEach((eventSignature) => {
                const event = this.interface.events[eventSignature];
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this.filters, eventSignature, (...args) => {
                    return {
                        address: this.address,
                        topics: this.interface.encodeFilterTopics(event, args)
                    };
                });
                if (!uniqueFilters[event.name]) {
                    uniqueFilters[event.name] = [];
                }
                uniqueFilters[event.name].push(eventSignature);
            });
            Object.keys(uniqueFilters).forEach((name) => {
                const filters = uniqueFilters[name];
                if (filters.length === 1) {
                    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this.filters, name, this.filters[filters[0]]);
                }
                else {
                    logger.warn(`Duplicate definition of ${name} (${filters.join(", ")})`);
                }
            });
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_runningEvents", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_wrappedEmits", {});
        if (addressOrName == null) {
            logger.throwArgumentError("invalid contract address or ENS name", "addressOrName", addressOrName);
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "address", addressOrName);
        if (this.provider) {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "resolvedAddress", resolveName(this.provider, addressOrName));
        }
        else {
            try {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "resolvedAddress", Promise.resolve((0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_2__.getAddress)(addressOrName)));
            }
            catch (error) {
                // Without a provider, we cannot use ENS names
                logger.throwError("provider is required to use ENS name as contract address", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new Contract"
                });
            }
        }
        // Swallow bad ENS names to prevent Unhandled Exceptions
        this.resolvedAddress.catch((e) => { });
        const uniqueNames = {};
        const uniqueSignatures = {};
        Object.keys(this.interface.functions).forEach((signature) => {
            const fragment = this.interface.functions[signature];
            // Check that the signature is unique; if not the ABI generation has
            // not been cleaned or may be incorrectly generated
            if (uniqueSignatures[signature]) {
                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);
                return;
            }
            uniqueSignatures[signature] = true;
            // Track unique names; we only expose bare named functions if they
            // are ambiguous
            {
                const name = fragment.name;
                if (!uniqueNames[`%${name}`]) {
                    uniqueNames[`%${name}`] = [];
                }
                uniqueNames[`%${name}`].push(signature);
            }
            if (this[signature] == null) {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, signature, buildDefault(this, fragment, true));
            }
            // We do not collapse simple calls on this bucket, which allows
            // frameworks to safely use this without introspection as well as
            // allows decoding error recovery.
            if (this.functions[signature] == null) {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this.functions, signature, buildDefault(this, fragment, false));
            }
            if (this.callStatic[signature] == null) {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this.callStatic, signature, buildCall(this, fragment, true));
            }
            if (this.populateTransaction[signature] == null) {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this.populateTransaction, signature, buildPopulate(this, fragment));
            }
            if (this.estimateGas[signature] == null) {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this.estimateGas, signature, buildEstimate(this, fragment));
            }
        });
        Object.keys(uniqueNames).forEach((name) => {
            // Ambiguous names to not get attached as bare names
            const signatures = uniqueNames[name];
            if (signatures.length > 1) {
                return;
            }
            // Strip off the leading "%" used for prototype protection
            name = name.substring(1);
            const signature = signatures[0];
            // If overwriting a member property that is null, swallow the error
            try {
                if (this[name] == null) {
                    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, name, this[signature]);
                }
            }
            catch (e) { }
            if (this.functions[name] == null) {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this.functions, name, this.functions[signature]);
            }
            if (this.callStatic[name] == null) {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this.callStatic, name, this.callStatic[signature]);
            }
            if (this.populateTransaction[name] == null) {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this.populateTransaction, name, this.populateTransaction[signature]);
            }
            if (this.estimateGas[name] == null) {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this.estimateGas, name, this.estimateGas[signature]);
            }
        });
    }
    static getContractAddress(transaction) {
        return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_2__.getContractAddress)(transaction);
    }
    static getInterface(contractInterface) {
        if (_ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__.Interface.isInterface(contractInterface)) {
            return contractInterface;
        }
        return new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__.Interface(contractInterface);
    }
    // @TODO: Allow timeout?
    deployed() {
        return this._deployed();
    }
    _deployed(blockTag) {
        if (!this._deployedPromise) {
            // If we were just deployed, we know the transaction we should occur in
            if (this.deployTransaction) {
                this._deployedPromise = this.deployTransaction.wait().then(() => {
                    return this;
                });
            }
            else {
                // @TODO: Once we allow a timeout to be passed in, we will wait
                // up to that many blocks for getCode
                // Otherwise, poll for our code to be deployed
                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {
                    if (code === "0x") {
                        logger.throwError("contract not deployed", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                            contractAddress: this.address,
                            operation: "getDeployed"
                        });
                    }
                    return this;
                });
            }
        }
        return this._deployedPromise;
    }
    // @TODO:
    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>
    // @TODO:
    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>
    fallback(overrides) {
        if (!this.signer) {
            logger.throwError("sending a transactions require a signer", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction(fallback)" });
        }
        const tx = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy)(overrides || {});
        ["from", "to"].forEach(function (key) {
            if (tx[key] == null) {
                return;
            }
            logger.throwError("cannot override " + key, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, { operation: key });
        });
        tx.to = this.resolvedAddress;
        return this.deployed().then(() => {
            return this.signer.sendTransaction(tx);
        });
    }
    // Reconnect to a different signer or provider
    connect(signerOrProvider) {
        if (typeof (signerOrProvider) === "string") {
            signerOrProvider = new _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_8__.VoidSigner(signerOrProvider, this.provider);
        }
        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);
        if (this.deployTransaction) {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(contract, "deployTransaction", this.deployTransaction);
        }
        return contract;
    }
    // Re-attach to a different on-chain instance of this contract
    attach(addressOrName) {
        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);
    }
    static isIndexed(value) {
        return _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__.Indexed.isIndexed(value);
    }
    _normalizeRunningEvent(runningEvent) {
        // Already have an instance of this event running; we can re-use it
        if (this._runningEvents[runningEvent.tag]) {
            return this._runningEvents[runningEvent.tag];
        }
        return runningEvent;
    }
    _getRunningEvent(eventName) {
        if (typeof (eventName) === "string") {
            // Listen for "error" events (if your contract has an error event, include
            // the full signature to bypass this special event keyword)
            if (eventName === "error") {
                return this._normalizeRunningEvent(new ErrorRunningEvent());
            }
            // Listen for any event that is registered
            if (eventName === "event") {
                return this._normalizeRunningEvent(new RunningEvent("event", null));
            }
            // Listen for any event
            if (eventName === "*") {
                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
            }
            // Get the event Fragment (throws if ambiguous/unknown event)
            const fragment = this.interface.getEvent(eventName);
            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));
        }
        // We have topics to filter by...
        if (eventName.topics && eventName.topics.length > 0) {
            // Is it a known topichash? (throws if no matching topichash)
            try {
                const topic = eventName.topics[0];
                if (typeof (topic) !== "string") {
                    throw new Error("invalid topic"); // @TODO: May happen for anonymous events
                }
                const fragment = this.interface.getEvent(topic);
                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));
            }
            catch (error) { }
            // Filter by the unknown topichash
            const filter = {
                address: this.address,
                topics: eventName.topics
            };
            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));
        }
        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
    }
    _checkRunningEvents(runningEvent) {
        if (runningEvent.listenerCount() === 0) {
            delete this._runningEvents[runningEvent.tag];
            // If we have a poller for this, remove it
            const emit = this._wrappedEmits[runningEvent.tag];
            if (emit && runningEvent.filter) {
                this.provider.off(runningEvent.filter, emit);
                delete this._wrappedEmits[runningEvent.tag];
            }
        }
    }
    // Subclasses can override this to gracefully recover
    // from parse errors if they wish
    _wrapEvent(runningEvent, log, listener) {
        const event = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.deepCopy)(log);
        event.removeListener = () => {
            if (!listener) {
                return;
            }
            runningEvent.removeListener(listener);
            this._checkRunningEvents(runningEvent);
        };
        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };
        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };
        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };
        // This may throw if the topics and data mismatch the signature
        runningEvent.prepareEvent(event);
        return event;
    }
    _addEventListener(runningEvent, listener, once) {
        if (!this.provider) {
            logger.throwError("events require a provider or a signer with a provider", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, { operation: "once" });
        }
        runningEvent.addListener(listener, once);
        // Track this running event and its listeners (may already be there; but no hard in updating)
        this._runningEvents[runningEvent.tag] = runningEvent;
        // If we are not polling the provider, start polling
        if (!this._wrappedEmits[runningEvent.tag]) {
            const wrappedEmit = (log) => {
                let event = this._wrapEvent(runningEvent, log, listener);
                // Try to emit the result for the parameterized event...
                if (event.decodeError == null) {
                    try {
                        const args = runningEvent.getEmit(event);
                        this.emit(runningEvent.filter, ...args);
                    }
                    catch (error) {
                        event.decodeError = error.error;
                    }
                }
                // Always emit "event" for fragment-base events
                if (runningEvent.filter != null) {
                    this.emit("event", event);
                }
                // Emit "error" if there was an error
                if (event.decodeError != null) {
                    this.emit("error", event.decodeError, event);
                }
            };
            this._wrappedEmits[runningEvent.tag] = wrappedEmit;
            // Special events, like "error" do not have a filter
            if (runningEvent.filter != null) {
                this.provider.on(runningEvent.filter, wrappedEmit);
            }
        }
    }
    queryFilter(event, fromBlockOrBlockhash, toBlock) {
        const runningEvent = this._getRunningEvent(event);
        const filter = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy)(runningEvent.filter);
        if (typeof (fromBlockOrBlockhash) === "string" && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.isHexString)(fromBlockOrBlockhash, 32)) {
            if (toBlock != null) {
                logger.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", toBlock);
            }
            filter.blockHash = fromBlockOrBlockhash;
        }
        else {
            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);
            filter.toBlock = ((toBlock != null) ? toBlock : "latest");
        }
        return this.provider.getLogs(filter).then((logs) => {
            return logs.map((log) => this._wrapEvent(runningEvent, log, null));
        });
    }
    on(event, listener) {
        this._addEventListener(this._getRunningEvent(event), listener, false);
        return this;
    }
    once(event, listener) {
        this._addEventListener(this._getRunningEvent(event), listener, true);
        return this;
    }
    emit(eventName, ...args) {
        if (!this.provider) {
            return false;
        }
        const runningEvent = this._getRunningEvent(eventName);
        const result = (runningEvent.run(args) > 0);
        // May have drained all the "once" events; check for living events
        this._checkRunningEvents(runningEvent);
        return result;
    }
    listenerCount(eventName) {
        if (!this.provider) {
            return 0;
        }
        if (eventName == null) {
            return Object.keys(this._runningEvents).reduce((accum, key) => {
                return accum + this._runningEvents[key].listenerCount();
            }, 0);
        }
        return this._getRunningEvent(eventName).listenerCount();
    }
    listeners(eventName) {
        if (!this.provider) {
            return [];
        }
        if (eventName == null) {
            const result = [];
            for (let tag in this._runningEvents) {
                this._runningEvents[tag].listeners().forEach((listener) => {
                    result.push(listener);
                });
            }
            return result;
        }
        return this._getRunningEvent(eventName).listeners();
    }
    removeAllListeners(eventName) {
        if (!this.provider) {
            return this;
        }
        if (eventName == null) {
            for (const tag in this._runningEvents) {
                const runningEvent = this._runningEvents[tag];
                runningEvent.removeAllListeners();
                this._checkRunningEvents(runningEvent);
            }
            return this;
        }
        // Delete any listeners
        const runningEvent = this._getRunningEvent(eventName);
        runningEvent.removeAllListeners();
        this._checkRunningEvents(runningEvent);
        return this;
    }
    off(eventName, listener) {
        if (!this.provider) {
            return this;
        }
        const runningEvent = this._getRunningEvent(eventName);
        runningEvent.removeListener(listener);
        this._checkRunningEvents(runningEvent);
        return this;
    }
    removeListener(eventName, listener) {
        return this.off(eventName, listener);
    }
}
class Contract extends BaseContract {
}
class ContractFactory {
    constructor(contractInterface, bytecode, signer) {
        let bytecodeHex = null;
        if (typeof (bytecode) === "string") {
            bytecodeHex = bytecode;
        }
        else if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.isBytes)(bytecode)) {
            bytecodeHex = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(bytecode);
        }
        else if (bytecode && typeof (bytecode.object) === "string") {
            // Allow the bytecode object from the Solidity compiler
            bytecodeHex = bytecode.object;
        }
        else {
            // Crash in the next verification step
            bytecodeHex = "!";
        }
        // Make sure it is 0x prefixed
        if (bytecodeHex.substring(0, 2) !== "0x") {
            bytecodeHex = "0x" + bytecodeHex;
        }
        // Make sure the final result is valid bytecode
        if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.isHexString)(bytecodeHex) || (bytecodeHex.length % 2)) {
            logger.throwArgumentError("invalid bytecode", "bytecode", bytecode);
        }
        // If we have a signer, make sure it is valid
        if (signer && !_ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_8__.Signer.isSigner(signer)) {
            logger.throwArgumentError("invalid signer", "signer", signer);
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "bytecode", bytecodeHex);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "interface", (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(new.target, "getInterface")(contractInterface));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "signer", signer || null);
    }
    // @TODO: Future; rename to populateTransaction?
    getDeployTransaction(...args) {
        let tx = {};
        // If we have 1 additional argument, we allow transaction overrides
        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === "object") {
            tx = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy)(args.pop());
            for (const key in tx) {
                if (!allowedTransactionKeys[key]) {
                    throw new Error("unknown transaction override " + key);
                }
            }
        }
        // Do not allow these to be overridden in a deployment transaction
        ["data", "from", "to"].forEach((key) => {
            if (tx[key] == null) {
                return;
            }
            logger.throwError("cannot override " + key, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, { operation: key });
        });
        if (tx.value) {
            const value = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(tx.value);
            if (!value.isZero() && !this.interface.deploy.payable) {
                logger.throwError("non-payable constructor cannot override value", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "overrides.value",
                    value: tx.value
                });
            }
        }
        // Make sure the call matches the constructor signature
        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, " in Contract constructor");
        // Set the data to the bytecode + the encoded constructor arguments
        tx.data = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.concat)([
            this.bytecode,
            this.interface.encodeDeploy(args)
        ]));
        return tx;
    }
    deploy(...args) {
        return __awaiter(this, void 0, void 0, function* () {
            let overrides = {};
            // If 1 extra parameter was passed in, it contains overrides
            if (args.length === this.interface.deploy.inputs.length + 1) {
                overrides = args.pop();
            }
            // Make sure the call matches the constructor signature
            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, " in Contract constructor");
            // Resolve ENS names and promises in the arguments
            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);
            params.push(overrides);
            // Get the deployment transaction (with optional overrides)
            const unsignedTx = this.getDeployTransaction(...params);
            // Send the deployment transaction
            const tx = yield this.signer.sendTransaction(unsignedTx);
            const address = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(this.constructor, "getContractAddress")(tx);
            const contract = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(this.constructor, "getContract")(address, this.interface, this.signer);
            // Add the modified wait that wraps events
            addContractWait(contract, tx);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(contract, "deployTransaction", tx);
            return contract;
        });
    }
    attach(address) {
        return (this.constructor).getContract(address, this.interface, this.signer);
    }
    connect(signer) {
        return new (this.constructor)(this.interface, this.bytecode, signer);
    }
    static fromSolidity(compilerOutput, signer) {
        if (compilerOutput == null) {
            logger.throwError("missing compiler output", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.MISSING_ARGUMENT, { argument: "compilerOutput" });
        }
        if (typeof (compilerOutput) === "string") {
            compilerOutput = JSON.parse(compilerOutput);
        }
        const abi = compilerOutput.abi;
        let bytecode = null;
        if (compilerOutput.bytecode) {
            bytecode = compilerOutput.bytecode;
        }
        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {
            bytecode = compilerOutput.evm.bytecode;
        }
        return new this(abi, bytecode, signer);
    }
    static getInterface(contractInterface) {
        return Contract.getInterface(contractInterface);
    }
    static getContractAddress(tx) {
        return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_2__.getContractAddress)(tx);
    }
    static getContract(address, contractInterface, signer) {
        return new Contract(address, contractInterface, signer);
    }
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/hash/lib.esm/_version.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/hash/lib.esm/_version.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "hash/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/hash/lib.esm/ens-normalize/decoder.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ethersproject/hash/lib.esm/ens-normalize/decoder.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decode_arithmetic": () => (/* binding */ decode_arithmetic),
/* harmony export */   "read_compressed_payload": () => (/* binding */ read_compressed_payload),
/* harmony export */   "read_emoji_trie": () => (/* binding */ read_emoji_trie),
/* harmony export */   "read_mapped_map": () => (/* binding */ read_mapped_map),
/* harmony export */   "read_member_array": () => (/* binding */ read_member_array),
/* harmony export */   "read_payload": () => (/* binding */ read_payload),
/* harmony export */   "read_zero_terminated_array": () => (/* binding */ read_zero_terminated_array),
/* harmony export */   "signed": () => (/* binding */ signed)
/* harmony export */ });
/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */
// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js
function flat(array, depth) {
    if (depth == null) {
        depth = 1;
    }
    const result = [];
    const forEach = result.forEach;
    const flatDeep = function (arr, depth) {
        forEach.call(arr, function (val) {
            if (depth > 0 && Array.isArray(val)) {
                flatDeep(val, depth - 1);
            }
            else {
                result.push(val);
            }
        });
    };
    flatDeep(array, depth);
    return result;
}
function fromEntries(array) {
    const result = {};
    for (let i = 0; i < array.length; i++) {
        const value = array[i];
        result[value[0]] = value[1];
    }
    return result;
}
function decode_arithmetic(bytes) {
    let pos = 0;
    function u16() { return (bytes[pos++] << 8) | bytes[pos++]; }
    // decode the frequency table
    let symbol_count = u16();
    let total = 1;
    let acc = [0, 1]; // first symbol has frequency 1
    for (let i = 1; i < symbol_count; i++) {
        acc.push(total += u16());
    }
    // skip the sized-payload that the last 3 symbols index into
    let skip = u16();
    let pos_payload = pos;
    pos += skip;
    let read_width = 0;
    let read_buffer = 0;
    function read_bit() {
        if (read_width == 0) {
            // this will read beyond end of buffer
            // but (undefined|0) => zero pad
            read_buffer = (read_buffer << 8) | bytes[pos++];
            read_width = 8;
        }
        return (read_buffer >> --read_width) & 1;
    }
    const N = 31;
    const FULL = Math.pow(2, N);
    const HALF = FULL >>> 1;
    const QRTR = HALF >> 1;
    const MASK = FULL - 1;
    // fill register
    let register = 0;
    for (let i = 0; i < N; i++)
        register = (register << 1) | read_bit();
    let symbols = [];
    let low = 0;
    let range = FULL; // treat like a float
    while (true) {
        let value = Math.floor((((register - low + 1) * total) - 1) / range);
        let start = 0;
        let end = symbol_count;
        while (end - start > 1) { // binary search
            let mid = (start + end) >>> 1;
            if (value < acc[mid]) {
                end = mid;
            }
            else {
                start = mid;
            }
        }
        if (start == 0)
            break; // first symbol is end mark
        symbols.push(start);
        let a = low + Math.floor(range * acc[start] / total);
        let b = low + Math.floor(range * acc[start + 1] / total) - 1;
        while (((a ^ b) & HALF) == 0) {
            register = (register << 1) & MASK | read_bit();
            a = (a << 1) & MASK;
            b = (b << 1) & MASK | 1;
        }
        while (a & ~b & QRTR) {
            register = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();
            a = (a << 1) ^ HALF;
            b = ((b ^ HALF) << 1) | HALF | 1;
        }
        low = a;
        range = 1 + b - a;
    }
    let offset = symbol_count - 4;
    return symbols.map(x => {
        switch (x - offset) {
            case 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);
            case 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);
            case 1: return offset + bytes[pos_payload++];
            default: return x - 1;
        }
    });
}
// returns an iterator which returns the next symbol
function read_payload(v) {
    let pos = 0;
    return () => v[pos++];
}
function read_compressed_payload(bytes) {
    return read_payload(decode_arithmetic(bytes));
}
// eg. [0,1,2,3...] => [0,-1,1,-2,...]
function signed(i) {
    return (i & 1) ? (~i >> 1) : (i >> 1);
}
function read_counts(n, next) {
    let v = Array(n);
    for (let i = 0; i < n; i++)
        v[i] = 1 + next();
    return v;
}
function read_ascending(n, next) {
    let v = Array(n);
    for (let i = 0, x = -1; i < n; i++)
        v[i] = x += 1 + next();
    return v;
}
function read_deltas(n, next) {
    let v = Array(n);
    for (let i = 0, x = 0; i < n; i++)
        v[i] = x += signed(next());
    return v;
}
function read_member_array(next, lookup) {
    let v = read_ascending(next(), next);
    let n = next();
    let vX = read_ascending(n, next);
    let vN = read_counts(n, next);
    for (let i = 0; i < n; i++) {
        for (let j = 0; j < vN[i]; j++) {
            v.push(vX[i] + j);
        }
    }
    return lookup ? v.map(x => lookup[x]) : v;
}
// returns array of 
// [x, ys] => single replacement rule
// [x, ys, n, dx, dx] => linear map
function read_mapped_map(next) {
    let ret = [];
    while (true) {
        let w = next();
        if (w == 0)
            break;
        ret.push(read_linear_table(w, next));
    }
    while (true) {
        let w = next() - 1;
        if (w < 0)
            break;
        ret.push(read_replacement_table(w, next));
    }
    return fromEntries(flat(ret));
}
function read_zero_terminated_array(next) {
    let v = [];
    while (true) {
        let i = next();
        if (i == 0)
            break;
        v.push(i);
    }
    return v;
}
function read_transposed(n, w, next) {
    let m = Array(n).fill(undefined).map(() => []);
    for (let i = 0; i < w; i++) {
        read_deltas(n, next).forEach((x, j) => m[j].push(x));
    }
    return m;
}
function read_linear_table(w, next) {
    let dx = 1 + next();
    let dy = next();
    let vN = read_zero_terminated_array(next);
    let m = read_transposed(vN.length, 1 + w, next);
    return flat(m.map((v, i) => {
        const x = v[0], ys = v.slice(1);
        //let [x, ...ys] = v;
        //return Array(vN[i]).fill().map((_, j) => {
        return Array(vN[i]).fill(undefined).map((_, j) => {
            let j_dy = j * dy;
            return [x + j * dx, ys.map(y => y + j_dy)];
        });
    }));
}
function read_replacement_table(w, next) {
    let n = 1 + next();
    let m = read_transposed(n, 1 + w, next);
    return m.map(v => [v[0], v.slice(1)]);
}
function read_emoji_trie(next) {
    let sorted = read_member_array(next).sort((a, b) => a - b);
    return read();
    function read() {
        let branches = [];
        while (true) {
            let keys = read_member_array(next, sorted);
            if (keys.length == 0)
                break;
            branches.push({ set: new Set(keys), node: read() });
        }
        branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood
        let temp = next();
        let valid = temp % 3;
        temp = (temp / 3) | 0;
        let fe0f = !!(temp & 1);
        temp >>= 1;
        let save = temp == 1;
        let check = temp == 2;
        return { branches, valid, fe0f, save, check };
    }
}
//# sourceMappingURL=decoder.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/hash/lib.esm/ens-normalize/include.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ethersproject/hash/lib.esm/ens-normalize/include.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getData": () => (/* binding */ getData)
/* harmony export */ });
/* harmony import */ var _ethersproject_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/base64 */ "./node_modules/@ethersproject/base64/lib.esm/base64.js");
/* harmony import */ var _decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decoder.js */ "./node_modules/@ethersproject/hash/lib.esm/ens-normalize/decoder.js");
/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */


function getData() {
    return (0,_decoder_js__WEBPACK_IMPORTED_MODULE_0__.read_compressed_payload)((0,_ethersproject_base64__WEBPACK_IMPORTED_MODULE_1__.decode)(''));
}
//# sourceMappingURL=include.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/hash/lib.esm/ens-normalize/lib.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ethersproject/hash/lib.esm/ens-normalize/lib.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ens_normalize": () => (/* binding */ ens_normalize),
/* harmony export */   "ens_normalize_post_check": () => (/* binding */ ens_normalize_post_check)
/* harmony export */ });
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");
/* harmony import */ var _include_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./include.js */ "./node_modules/@ethersproject/hash/lib.esm/ens-normalize/include.js");
/* harmony import */ var _decoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decoder.js */ "./node_modules/@ethersproject/hash/lib.esm/ens-normalize/decoder.js");
/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */


const r = (0,_include_js__WEBPACK_IMPORTED_MODULE_0__.getData)();

// @TODO: This should be lazily loaded
const VALID = new Set((0,_decoder_js__WEBPACK_IMPORTED_MODULE_1__.read_member_array)(r));
const IGNORED = new Set((0,_decoder_js__WEBPACK_IMPORTED_MODULE_1__.read_member_array)(r));
const MAPPED = (0,_decoder_js__WEBPACK_IMPORTED_MODULE_1__.read_mapped_map)(r);
const EMOJI_ROOT = (0,_decoder_js__WEBPACK_IMPORTED_MODULE_1__.read_emoji_trie)(r);
//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));
//const STOP = 0x2E;
const HYPHEN = 0x2D;
const UNDERSCORE = 0x5F;
function explode_cp(name) {
    return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_2__.toUtf8CodePoints)(name);
}
function filter_fe0f(cps) {
    return cps.filter(cp => cp != 0xFE0F);
}
function ens_normalize_post_check(name) {
    for (let label of name.split('.')) {
        let cps = explode_cp(label);
        try {
            for (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {
                if (cps[i] !== UNDERSCORE) {
                    throw new Error(`underscore only allowed at start`);
                }
            }
            if (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {
                throw new Error(`invalid label extension`);
            }
        }
        catch (err) {
            throw new Error(`Invalid label "${label}": ${err.message}`);
        }
    }
    return name;
}
function ens_normalize(name) {
    return ens_normalize_post_check(normalize(name, filter_fe0f));
}
function normalize(name, emoji_filter) {
    let input = explode_cp(name).reverse(); // flip for pop
    let output = [];
    while (input.length) {
        let emoji = consume_emoji_reversed(input);
        if (emoji) {
            output.push(...emoji_filter(emoji));
            continue;
        }
        let cp = input.pop();
        if (VALID.has(cp)) {
            output.push(cp);
            continue;
        }
        if (IGNORED.has(cp)) {
            continue;
        }
        let cps = MAPPED[cp];
        if (cps) {
            output.push(...cps);
            continue;
        }
        throw new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);
    }
    return ens_normalize_post_check(nfc(String.fromCodePoint(...output)));
}
function nfc(s) {
    return s.normalize('NFC');
}
function consume_emoji_reversed(cps, eaten) {
    var _a;
    let node = EMOJI_ROOT;
    let emoji;
    let saved;
    let stack = [];
    let pos = cps.length;
    if (eaten)
        eaten.length = 0; // clear input buffer (if needed)
    while (pos) {
        let cp = cps[--pos];
        node = (_a = node.branches.find(x => x.set.has(cp))) === null || _a === void 0 ? void 0 : _a.node;
        if (!node)
            break;
        if (node.save) { // remember
            saved = cp;
        }
        else if (node.check) { // check exclusion
            if (cp === saved)
                break;
        }
        stack.push(cp);
        if (node.fe0f) {
            stack.push(0xFE0F);
            if (pos > 0 && cps[pos - 1] == 0xFE0F)
                pos--; // consume optional FE0F
        }
        if (node.valid) { // this is a valid emoji (so far)
            emoji = stack.slice(); // copy stack
            if (node.valid == 2)
                emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)
            if (eaten)
                eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)
            cps.length = pos; // truncate
        }
    }
    return emoji;
}
//# sourceMappingURL=lib.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/hash/lib.esm/id.js":
/*!********************************************************!*\
  !*** ./node_modules/@ethersproject/hash/lib.esm/id.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "id": () => (/* binding */ id)
/* harmony export */ });
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");


function id(text) {
    return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_0__.keccak256)((0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.toUtf8Bytes)(text));
}
//# sourceMappingURL=id.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/hash/lib.esm/message.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/hash/lib.esm/message.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hashMessage": () => (/* binding */ hashMessage),
/* harmony export */   "messagePrefix": () => (/* binding */ messagePrefix)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");



const messagePrefix = "\x19Ethereum Signed Message:\n";
function hashMessage(message) {
    if (typeof (message) === "string") {
        message = (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_0__.toUtf8Bytes)(message);
    }
    return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.concat)([
        (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_0__.toUtf8Bytes)(messagePrefix),
        (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_0__.toUtf8Bytes)(String(message.length)),
        message
    ]));
}
//# sourceMappingURL=message.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/hash/lib.esm/namehash.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/hash/lib.esm/namehash.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dnsEncode": () => (/* binding */ dnsEncode),
/* harmony export */   "ensNormalize": () => (/* binding */ ensNormalize),
/* harmony export */   "isValidName": () => (/* binding */ isValidName),
/* harmony export */   "namehash": () => (/* binding */ namehash)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/hash/lib.esm/_version.js");
/* harmony import */ var _ens_normalize_lib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ens-normalize/lib */ "./node_modules/@ethersproject/hash/lib.esm/ens-normalize/lib.js");





const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

const Zeros = new Uint8Array(32);
Zeros.fill(0);
function checkComponent(comp) {
    if (comp.length === 0) {
        throw new Error("invalid ENS name; empty component");
    }
    return comp;
}
function ensNameSplit(name) {
    const bytes = (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_2__.toUtf8Bytes)((0,_ens_normalize_lib__WEBPACK_IMPORTED_MODULE_3__.ens_normalize)(name));
    const comps = [];
    if (name.length === 0) {
        return comps;
    }
    let last = 0;
    for (let i = 0; i < bytes.length; i++) {
        const d = bytes[i];
        // A separator (i.e. "."); copy this component
        if (d === 0x2e) {
            comps.push(checkComponent(bytes.slice(last, i)));
            last = i + 1;
        }
    }
    // There was a stray separator at the end of the name
    if (last >= bytes.length) {
        throw new Error("invalid ENS name; empty component");
    }
    comps.push(checkComponent(bytes.slice(last)));
    return comps;
}
function ensNormalize(name) {
    return ensNameSplit(name).map((comp) => (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_2__.toUtf8String)(comp)).join(".");
}
function isValidName(name) {
    try {
        return (ensNameSplit(name).length !== 0);
    }
    catch (error) { }
    return false;
}
function namehash(name) {
    /* istanbul ignore if */
    if (typeof (name) !== "string") {
        logger.throwArgumentError("invalid ENS name; not a string", "name", name);
    }
    let result = Zeros;
    const comps = ensNameSplit(name);
    while (comps.length) {
        result = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_4__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.concat)([result, (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_4__.keccak256)(comps.pop())]));
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.hexlify)(result);
}
function dnsEncode(name) {
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.concat)(ensNameSplit(name).map((comp) => {
        // DNS does not allow components over 63 bytes in length
        if (comp.length > 63) {
            throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
        }
        const bytes = new Uint8Array(comp.length + 1);
        bytes.set(comp, 1);
        bytes[0] = bytes.length - 1;
        return bytes;
    }))) + "00";
}
//# sourceMappingURL=namehash.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/hash/lib.esm/typed-data.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/hash/lib.esm/typed-data.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TypedDataEncoder": () => (/* binding */ TypedDataEncoder)
/* harmony export */ });
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/hash/lib.esm/_version.js");
/* harmony import */ var _id__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./id */ "./node_modules/@ethersproject/hash/lib.esm/id.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

const padding = new Uint8Array(32);
padding.fill(0);
const NegativeOne = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(-1);
const Zero = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(0);
const One = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(1);
const MaxUint256 = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
function hexPadRight(value) {
    const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value);
    const padOffset = bytes.length % 32;
    if (padOffset) {
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)([bytes, padding.slice(padOffset)]);
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(bytes);
}
const hexTrue = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexZeroPad)(One.toHexString(), 32);
const hexFalse = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexZeroPad)(Zero.toHexString(), 32);
const domainFieldTypes = {
    name: "string",
    version: "string",
    chainId: "uint256",
    verifyingContract: "address",
    salt: "bytes32"
};
const domainFieldNames = [
    "name", "version", "chainId", "verifyingContract", "salt"
];
function checkString(key) {
    return function (value) {
        if (typeof (value) !== "string") {
            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);
        }
        return value;
    };
}
const domainChecks = {
    name: checkString("name"),
    version: checkString("version"),
    chainId: function (value) {
        try {
            return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(value).toString();
        }
        catch (error) { }
        return logger.throwArgumentError(`invalid domain value for "chainId"`, "domain.chainId", value);
    },
    verifyingContract: function (value) {
        try {
            return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_4__.getAddress)(value).toLowerCase();
        }
        catch (error) { }
        return logger.throwArgumentError(`invalid domain value "verifyingContract"`, "domain.verifyingContract", value);
    },
    salt: function (value) {
        try {
            const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value);
            if (bytes.length !== 32) {
                throw new Error("bad length");
            }
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(bytes);
        }
        catch (error) { }
        return logger.throwArgumentError(`invalid domain value "salt"`, "domain.salt", value);
    }
};
function getBaseEncoder(type) {
    // intXX and uintXX
    {
        const match = type.match(/^(u?)int(\d*)$/);
        if (match) {
            const signed = (match[1] === "");
            const width = parseInt(match[2] || "256");
            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {
                logger.throwArgumentError("invalid numeric width", "type", type);
            }
            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);
            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;
            return function (value) {
                const v = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(value);
                if (v.lt(boundsLower) || v.gt(boundsUpper)) {
                    logger.throwArgumentError(`value out-of-bounds for ${type}`, "value", value);
                }
                return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexZeroPad)(v.toTwos(256).toHexString(), 32);
            };
        }
    }
    // bytesXX
    {
        const match = type.match(/^bytes(\d+)$/);
        if (match) {
            const width = parseInt(match[1]);
            if (width === 0 || width > 32 || match[1] !== String(width)) {
                logger.throwArgumentError("invalid bytes width", "type", type);
            }
            return function (value) {
                const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value);
                if (bytes.length !== width) {
                    logger.throwArgumentError(`invalid length for ${type}`, "value", value);
                }
                return hexPadRight(value);
            };
        }
    }
    switch (type) {
        case "address": return function (value) {
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexZeroPad)((0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_4__.getAddress)(value), 32);
        };
        case "bool": return function (value) {
            return ((!value) ? hexFalse : hexTrue);
        };
        case "bytes": return function (value) {
            return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__.keccak256)(value);
        };
        case "string": return function (value) {
            return (0,_id__WEBPACK_IMPORTED_MODULE_6__.id)(value);
        };
    }
    return null;
}
function encodeType(name, fields) {
    return `${name}(${fields.map(({ name, type }) => (type + " " + name)).join(",")})`;
}
class TypedDataEncoder {
    constructor(types) {
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_7__.defineReadOnly)(this, "types", Object.freeze((0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_7__.deepCopy)(types)));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_7__.defineReadOnly)(this, "_encoderCache", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_7__.defineReadOnly)(this, "_types", {});
        // Link struct types to their direct child structs
        const links = {};
        // Link structs to structs which contain them as a child
        const parents = {};
        // Link all subtypes within a given struct
        const subtypes = {};
        Object.keys(types).forEach((type) => {
            links[type] = {};
            parents[type] = [];
            subtypes[type] = {};
        });
        for (const name in types) {
            const uniqueNames = {};
            types[name].forEach((field) => {
                // Check each field has a unique name
                if (uniqueNames[field.name]) {
                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, "types", types);
                }
                uniqueNames[field.name] = true;
                // Get the base type (drop any array specifiers)
                const baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                if (baseType === name) {
                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, "types", types);
                }
                // Is this a base encoding type?
                const encoder = getBaseEncoder(baseType);
                if (encoder) {
                    return;
                }
                if (!parents[baseType]) {
                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, "types", types);
                }
                // Add linkage
                parents[baseType].push(name);
                links[name][baseType] = true;
            });
        }
        // Deduce the primary type
        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));
        if (primaryTypes.length === 0) {
            logger.throwArgumentError("missing primary type", "types", types);
        }
        else if (primaryTypes.length > 1) {
            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(", ")}`, "types", types);
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_7__.defineReadOnly)(this, "primaryType", primaryTypes[0]);
        // Check for circular type references
        function checkCircular(type, found) {
            if (found[type]) {
                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, "types", types);
            }
            found[type] = true;
            Object.keys(links[type]).forEach((child) => {
                if (!parents[child]) {
                    return;
                }
                // Recursively check children
                checkCircular(child, found);
                // Mark all ancestors as having this decendant
                Object.keys(found).forEach((subtype) => {
                    subtypes[subtype][child] = true;
                });
            });
            delete found[type];
        }
        checkCircular(this.primaryType, {});
        // Compute each fully describe type
        for (const name in subtypes) {
            const st = Object.keys(subtypes[name]);
            st.sort();
            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join("");
        }
    }
    getEncoder(type) {
        let encoder = this._encoderCache[type];
        if (!encoder) {
            encoder = this._encoderCache[type] = this._getEncoder(type);
        }
        return encoder;
    }
    _getEncoder(type) {
        // Basic encoder type (address, bool, uint256, etc)
        {
            const encoder = getBaseEncoder(type);
            if (encoder) {
                return encoder;
            }
        }
        // Array
        const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
        if (match) {
            const subtype = match[1];
            const subEncoder = this.getEncoder(subtype);
            const length = parseInt(match[3]);
            return (value) => {
                if (length >= 0 && value.length !== length) {
                    logger.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
                }
                let result = value.map(subEncoder);
                if (this._types[subtype]) {
                    result = result.map(_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__.keccak256);
                }
                return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)(result));
            };
        }
        // Struct
        const fields = this.types[type];
        if (fields) {
            const encodedType = (0,_id__WEBPACK_IMPORTED_MODULE_6__.id)(this._types[type]);
            return (value) => {
                const values = fields.map(({ name, type }) => {
                    const result = this.getEncoder(type)(value[name]);
                    if (this._types[type]) {
                        return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__.keccak256)(result);
                    }
                    return result;
                });
                values.unshift(encodedType);
                return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)(values);
            };
        }
        return logger.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    encodeType(name) {
        const result = this._types[name];
        if (!result) {
            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, "name", name);
        }
        return result;
    }
    encodeData(type, value) {
        return this.getEncoder(type)(value);
    }
    hashStruct(name, value) {
        return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__.keccak256)(this.encodeData(name, value));
    }
    encode(value) {
        return this.encodeData(this.primaryType, value);
    }
    hash(value) {
        return this.hashStruct(this.primaryType, value);
    }
    _visit(type, value, callback) {
        // Basic encoder type (address, bool, uint256, etc)
        {
            const encoder = getBaseEncoder(type);
            if (encoder) {
                return callback(type, value);
            }
        }
        // Array
        const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
        if (match) {
            const subtype = match[1];
            const length = parseInt(match[3]);
            if (length >= 0 && value.length !== length) {
                logger.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
            }
            return value.map((v) => this._visit(subtype, v, callback));
        }
        // Struct
        const fields = this.types[type];
        if (fields) {
            return fields.reduce((accum, { name, type }) => {
                accum[name] = this._visit(type, value[name], callback);
                return accum;
            }, {});
        }
        return logger.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    visit(value, callback) {
        return this._visit(this.primaryType, value, callback);
    }
    static from(types) {
        return new TypedDataEncoder(types);
    }
    static getPrimaryType(types) {
        return TypedDataEncoder.from(types).primaryType;
    }
    static hashStruct(name, types, value) {
        return TypedDataEncoder.from(types).hashStruct(name, value);
    }
    static hashDomain(domain) {
        const domainFields = [];
        for (const name in domain) {
            const type = domainFieldTypes[name];
            if (!type) {
                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, "domain", domain);
            }
            domainFields.push({ name, type });
        }
        domainFields.sort((a, b) => {
            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);
        });
        return TypedDataEncoder.hashStruct("EIP712Domain", { EIP712Domain: domainFields }, domain);
    }
    static encode(domain, types, value) {
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)([
            "0x1901",
            TypedDataEncoder.hashDomain(domain),
            TypedDataEncoder.from(types).hash(value)
        ]);
    }
    static hash(domain, types, value) {
        return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__.keccak256)(TypedDataEncoder.encode(domain, types, value));
    }
    // Replaces all address types with ENS names with their looked up address
    static resolveNames(domain, types, value, resolveName) {
        return __awaiter(this, void 0, void 0, function* () {
            // Make a copy to isolate it from the object passed in
            domain = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_7__.shallowCopy)(domain);
            // Look up all ENS names
            const ensCache = {};
            // Do we need to look up the domain's verifyingContract?
            if (domain.verifyingContract && !(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(domain.verifyingContract, 20)) {
                ensCache[domain.verifyingContract] = "0x";
            }
            // We are going to use the encoder to visit all the base values
            const encoder = TypedDataEncoder.from(types);
            // Get a list of all the addresses
            encoder.visit(value, (type, value) => {
                if (type === "address" && !(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(value, 20)) {
                    ensCache[value] = "0x";
                }
                return value;
            });
            // Lookup each name
            for (const name in ensCache) {
                ensCache[name] = yield resolveName(name);
            }
            // Replace the domain verifyingContract if needed
            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {
                domain.verifyingContract = ensCache[domain.verifyingContract];
            }
            // Replace all ENS names with their address
            value = encoder.visit(value, (type, value) => {
                if (type === "address" && ensCache[value]) {
                    return ensCache[value];
                }
                return value;
            });
            return { domain, value };
        });
    }
    static getPayload(domain, types, value) {
        // Validate the domain fields
        TypedDataEncoder.hashDomain(domain);
        // Derive the EIP712Domain Struct reference type
        const domainValues = {};
        const domainTypes = [];
        domainFieldNames.forEach((name) => {
            const value = domain[name];
            if (value == null) {
                return;
            }
            domainValues[name] = domainChecks[name](value);
            domainTypes.push({ name, type: domainFieldTypes[name] });
        });
        const encoder = TypedDataEncoder.from(types);
        const typesWithDomain = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_7__.shallowCopy)(types);
        if (typesWithDomain.EIP712Domain) {
            logger.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
        }
        else {
            typesWithDomain.EIP712Domain = domainTypes;
        }
        // Validate the data structures and types
        encoder.encode(value);
        return {
            types: typesWithDomain,
            domain: domainValues,
            primaryType: encoder.primaryType,
            message: encoder.visit(value, (type, value) => {
                // bytes
                if (type.match(/^bytes(\d*)/)) {
                    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value));
                }
                // uint or int
                if (type.match(/^u?int/)) {
                    return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(value).toString();
                }
                switch (type) {
                    case "address":
                        return value.toLowerCase();
                    case "bool":
                        return !!value;
                    case "string":
                        if (typeof (value) !== "string") {
                            logger.throwArgumentError(`invalid string`, "value", value);
                        }
                        return value;
                }
                return logger.throwArgumentError("unsupported type", "type", type);
            })
        };
    }
}
//# sourceMappingURL=typed-data.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/hdnode/lib.esm/_version.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/hdnode/lib.esm/_version.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "hdnode/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/hdnode/lib.esm/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/hdnode/lib.esm/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HDNode": () => (/* binding */ HDNode),
/* harmony export */   "defaultPath": () => (/* binding */ defaultPath),
/* harmony export */   "entropyToMnemonic": () => (/* binding */ entropyToMnemonic),
/* harmony export */   "getAccountPath": () => (/* binding */ getAccountPath),
/* harmony export */   "isValidMnemonic": () => (/* binding */ isValidMnemonic),
/* harmony export */   "mnemonicToEntropy": () => (/* binding */ mnemonicToEntropy),
/* harmony export */   "mnemonicToSeed": () => (/* binding */ mnemonicToSeed)
/* harmony export */ });
/* harmony import */ var _ethersproject_basex__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/basex */ "./node_modules/@ethersproject/basex/lib.esm/index.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");
/* harmony import */ var _ethersproject_pbkdf2__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ethersproject/pbkdf2 */ "./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/signing-key */ "./node_modules/@ethersproject/signing-key/lib.esm/index.js");
/* harmony import */ var _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/sha2 */ "./node_modules/@ethersproject/sha2/lib.esm/sha2.js");
/* harmony import */ var _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/sha2 */ "./node_modules/@ethersproject/sha2/lib.esm/types.js");
/* harmony import */ var _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/transactions */ "./node_modules/@ethersproject/transactions/lib.esm/index.js");
/* harmony import */ var _ethersproject_wordlists__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/wordlists */ "./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/hdnode/lib.esm/_version.js");













const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
const N = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");
// "Bitcoin seed"
const MasterSecret = (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes)("Bitcoin seed");
const HardenedBit = 0x80000000;
// Returns a byte with the MSB bits set
function getUpperMask(bits) {
    return ((1 << bits) - 1) << (8 - bits);
}
// Returns a byte with the LSB bits set
function getLowerMask(bits) {
    return (1 << bits) - 1;
}
function bytes32(value) {
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexZeroPad)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(value), 32);
}
function base58check(data) {
    return _ethersproject_basex__WEBPACK_IMPORTED_MODULE_5__.Base58.encode((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.concat)([data, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexDataSlice)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__.sha256)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__.sha256)(data)), 0, 4)]));
}
function getWordlist(wordlist) {
    if (wordlist == null) {
        return _ethersproject_wordlists__WEBPACK_IMPORTED_MODULE_7__.wordlists.en;
    }
    if (typeof (wordlist) === "string") {
        const words = _ethersproject_wordlists__WEBPACK_IMPORTED_MODULE_7__.wordlists[wordlist];
        if (words == null) {
            logger.throwArgumentError("unknown locale", "wordlist", wordlist);
        }
        return words;
    }
    return wordlist;
}
const _constructorGuard = {};
const defaultPath = "m/44'/60'/0'/0/0";
;
class HDNode {
    /**
     *  This constructor should not be called directly.
     *
     *  Please use:
     *   - fromMnemonic
     *   - fromSeed
     */
    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {
        /* istanbul ignore if */
        if (constructorGuard !== _constructorGuard) {
            throw new Error("HDNode constructor cannot be called directly");
        }
        if (privateKey) {
            const signingKey = new _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_8__.SigningKey(privateKey);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "privateKey", signingKey.privateKey);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "publicKey", signingKey.compressedPublicKey);
        }
        else {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "privateKey", null);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "publicKey", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(publicKey));
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "parentFingerprint", parentFingerprint);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "fingerprint", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexDataSlice)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__.ripemd160)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__.sha256)(this.publicKey)), 0, 4));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "address", (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_10__.computeAddress)(this.publicKey));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "chainCode", chainCode);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "index", index);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "depth", depth);
        if (mnemonicOrPath == null) {
            // From a source that does not preserve the path (e.g. extended keys)
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "mnemonic", null);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "path", null);
        }
        else if (typeof (mnemonicOrPath) === "string") {
            // From a source that does not preserve the mnemonic (e.g. neutered)
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "mnemonic", null);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "path", mnemonicOrPath);
        }
        else {
            // From a fully qualified source
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "mnemonic", mnemonicOrPath);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly)(this, "path", mnemonicOrPath.path);
        }
    }
    get extendedKey() {
        // We only support the mainnet values for now, but if anyone needs
        // testnet values, let me know. I believe current sentiment is that
        // we should always use mainnet, and use BIP-44 to derive the network
        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4
        //   - Testnet: public=0x043587CF, private=0x04358394
        if (this.depth >= 256) {
            throw new Error("Depth too large!");
        }
        return base58check((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.concat)([
            ((this.privateKey != null) ? "0x0488ADE4" : "0x0488B21E"),
            (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(this.depth),
            this.parentFingerprint,
            (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexZeroPad)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(this.index), 4),
            this.chainCode,
            ((this.privateKey != null) ? (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.concat)(["0x00", this.privateKey]) : this.publicKey),
        ]));
    }
    neuter() {
        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);
    }
    _derive(index) {
        if (index > 0xffffffff) {
            throw new Error("invalid index - " + String(index));
        }
        // Base path
        let path = this.path;
        if (path) {
            path += "/" + (index & ~HardenedBit);
        }
        const data = new Uint8Array(37);
        if (index & HardenedBit) {
            if (!this.privateKey) {
                throw new Error("cannot derive child of neutered node");
            }
            // Data = 0x00 || ser_256(k_par)
            data.set((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(this.privateKey), 1);
            // Hardened path
            if (path) {
                path += "'";
            }
        }
        else {
            // Data = ser_p(point(k_par))
            data.set((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(this.publicKey));
        }
        // Data += ser_32(i)
        for (let i = 24; i >= 0; i -= 8) {
            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);
        }
        const I = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__.computeHmac)(_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_11__.SupportedAlgorithm.sha512, this.chainCode, data));
        const IL = I.slice(0, 32);
        const IR = I.slice(32);
        // The private key
        let ki = null;
        // The public key
        let Ki = null;
        if (this.privateKey) {
            ki = bytes32(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.from(IL).add(this.privateKey).mod(N));
        }
        else {
            const ek = new _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_8__.SigningKey((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(IL));
            Ki = ek._addPoint(this.publicKey);
        }
        let mnemonicOrPath = path;
        const srcMnemonic = this.mnemonic;
        if (srcMnemonic) {
            mnemonicOrPath = Object.freeze({
                phrase: srcMnemonic.phrase,
                path: path,
                locale: (srcMnemonic.locale || "en")
            });
        }
        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);
    }
    derivePath(path) {
        const components = path.split("/");
        if (components.length === 0 || (components[0] === "m" && this.depth !== 0)) {
            throw new Error("invalid path - " + path);
        }
        if (components[0] === "m") {
            components.shift();
        }
        let result = this;
        for (let i = 0; i < components.length; i++) {
            const component = components[i];
            if (component.match(/^[0-9]+'$/)) {
                const index = parseInt(component.substring(0, component.length - 1));
                if (index >= HardenedBit) {
                    throw new Error("invalid path index - " + component);
                }
                result = result._derive(HardenedBit + index);
            }
            else if (component.match(/^[0-9]+$/)) {
                const index = parseInt(component);
                if (index >= HardenedBit) {
                    throw new Error("invalid path index - " + component);
                }
                result = result._derive(index);
            }
            else {
                throw new Error("invalid path component - " + component);
            }
        }
        return result;
    }
    static _fromSeed(seed, mnemonic) {
        const seedArray = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(seed);
        if (seedArray.length < 16 || seedArray.length > 64) {
            throw new Error("invalid seed");
        }
        const I = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__.computeHmac)(_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_11__.SupportedAlgorithm.sha512, MasterSecret, seedArray));
        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, "0x00000000", bytes32(I.slice(32)), 0, 0, mnemonic);
    }
    static fromMnemonic(mnemonic, password, wordlist) {
        // If a locale name was passed in, find the associated wordlist
        wordlist = getWordlist(wordlist);
        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)
        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);
        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {
            phrase: mnemonic,
            path: "m",
            locale: wordlist.locale
        });
    }
    static fromSeed(seed) {
        return HDNode._fromSeed(seed, null);
    }
    static fromExtendedKey(extendedKey) {
        const bytes = _ethersproject_basex__WEBPACK_IMPORTED_MODULE_5__.Base58.decode(extendedKey);
        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {
            logger.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
        }
        const depth = bytes[4];
        const parentFingerprint = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(bytes.slice(5, 9));
        const index = parseInt((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(bytes.slice(9, 13)).substring(2), 16);
        const chainCode = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(bytes.slice(13, 45));
        const key = bytes.slice(45, 78);
        switch ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(bytes.slice(0, 4))) {
            // Public Key
            case "0x0488b21e":
            case "0x043587cf":
                return new HDNode(_constructorGuard, null, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(key), parentFingerprint, chainCode, index, depth, null);
            // Private Key
            case "0x0488ade4":
            case "0x04358394 ":
                if (key[0] !== 0) {
                    break;
                }
                return new HDNode(_constructorGuard, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);
        }
        return logger.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
    }
}
function mnemonicToSeed(mnemonic, password) {
    if (!password) {
        password = "";
    }
    const salt = (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes)("mnemonic" + password, _ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.UnicodeNormalizationForm.NFKD);
    return (0,_ethersproject_pbkdf2__WEBPACK_IMPORTED_MODULE_12__.pbkdf2)((0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes)(mnemonic, _ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.UnicodeNormalizationForm.NFKD), salt, 2048, 64, "sha512");
}
function mnemonicToEntropy(mnemonic, wordlist) {
    wordlist = getWordlist(wordlist);
    logger.checkNormalize();
    const words = wordlist.split(mnemonic);
    if ((words.length % 3) !== 0) {
        throw new Error("invalid mnemonic");
    }
    const entropy = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(new Uint8Array(Math.ceil(11 * words.length / 8)));
    let offset = 0;
    for (let i = 0; i < words.length; i++) {
        let index = wordlist.getWordIndex(words[i].normalize("NFKD"));
        if (index === -1) {
            throw new Error("invalid mnemonic");
        }
        for (let bit = 0; bit < 11; bit++) {
            if (index & (1 << (10 - bit))) {
                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));
            }
            offset++;
        }
    }
    const entropyBits = 32 * words.length / 3;
    const checksumBits = words.length / 3;
    const checksumMask = getUpperMask(checksumBits);
    const checksum = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__.sha256)(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;
    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {
        throw new Error("invalid checksum");
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(entropy.slice(0, entropyBits / 8));
}
function entropyToMnemonic(entropy, wordlist) {
    wordlist = getWordlist(wordlist);
    entropy = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(entropy);
    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {
        throw new Error("invalid entropy");
    }
    const indices = [0];
    let remainingBits = 11;
    for (let i = 0; i < entropy.length; i++) {
        // Consume the whole byte (with still more to go)
        if (remainingBits > 8) {
            indices[indices.length - 1] <<= 8;
            indices[indices.length - 1] |= entropy[i];
            remainingBits -= 8;
            // This byte will complete an 11-bit index
        }
        else {
            indices[indices.length - 1] <<= remainingBits;
            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);
            // Start the next word
            indices.push(entropy[i] & getLowerMask(8 - remainingBits));
            remainingBits += 3;
        }
    }
    // Compute the checksum bits
    const checksumBits = entropy.length / 4;
    const checksum = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__.sha256)(entropy))[0] & getUpperMask(checksumBits);
    // Shift the checksum into the word indices
    indices[indices.length - 1] <<= checksumBits;
    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));
    return wordlist.join(indices.map((index) => wordlist.getWord(index)));
}
function isValidMnemonic(mnemonic, wordlist) {
    try {
        mnemonicToEntropy(mnemonic, wordlist);
        return true;
    }
    catch (error) { }
    return false;
}
function getAccountPath(index) {
    if (typeof (index) !== "number" || index < 0 || index >= HardenedBit || index % 1) {
        logger.throwArgumentError("invalid account index", "index", index);
    }
    return `m/44'/60'/${index}'/0/0`;
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/json-wallets/lib.esm/_version.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ethersproject/json-wallets/lib.esm/_version.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "json-wallets/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CrowdsaleAccount": () => (/* binding */ CrowdsaleAccount),
/* harmony export */   "decrypt": () => (/* binding */ decrypt)
/* harmony export */ });
/* harmony import */ var aes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aes-js */ "./node_modules/aes-js/index.js");
/* harmony import */ var aes_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(aes_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_pbkdf2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/pbkdf2 */ "./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/json-wallets/lib.esm/_version.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ "./node_modules/@ethersproject/json-wallets/lib.esm/utils.js");










const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_2__.version);

class CrowdsaleAccount extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.Description {
    isCrowdsaleAccount(value) {
        return !!(value && value._isCrowdsaleAccount);
    }
}
// See: https://github.com/ethereum/pyethsaletool
function decrypt(json, password) {
    const data = JSON.parse(json);
    password = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getPassword)(password);
    // Ethereum Address
    const ethaddr = (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_5__.getAddress)((0,_utils__WEBPACK_IMPORTED_MODULE_4__.searchPath)(data, "ethaddr"));
    // Encrypted Seed
    const encseed = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.looseArrayify)((0,_utils__WEBPACK_IMPORTED_MODULE_4__.searchPath)(data, "encseed"));
    if (!encseed || (encseed.length % 16) !== 0) {
        logger.throwArgumentError("invalid encseed", "json", json);
    }
    const key = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)((0,_ethersproject_pbkdf2__WEBPACK_IMPORTED_MODULE_7__.pbkdf2)(password, password, 2000, 32, "sha256")).slice(0, 16);
    const iv = encseed.slice(0, 16);
    const encryptedSeed = encseed.slice(16);
    // Decrypt the seed
    const aesCbc = new (aes_js__WEBPACK_IMPORTED_MODULE_0___default().ModeOfOperation.cbc)(key, iv);
    const seed = aes_js__WEBPACK_IMPORTED_MODULE_0___default().padding.pkcs7.strip((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(aesCbc.decrypt(encryptedSeed)));
    // This wallet format is weird... Convert the binary encoded hex to a string.
    let seedHex = "";
    for (let i = 0; i < seed.length; i++) {
        seedHex += String.fromCharCode(seed[i]);
    }
    const seedHexBytes = (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_8__.toUtf8Bytes)(seedHex);
    const privateKey = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__.keccak256)(seedHexBytes);
    return new CrowdsaleAccount({
        _isCrowdsaleAccount: true,
        address: ethaddr,
        privateKey: privateKey
    });
}
//# sourceMappingURL=crowdsale.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/json-wallets/lib.esm/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/json-wallets/lib.esm/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decryptCrowdsale": () => (/* reexport safe */ _crowdsale__WEBPACK_IMPORTED_MODULE_1__.decrypt),
/* harmony export */   "decryptJsonWallet": () => (/* binding */ decryptJsonWallet),
/* harmony export */   "decryptJsonWalletSync": () => (/* binding */ decryptJsonWalletSync),
/* harmony export */   "decryptKeystore": () => (/* reexport safe */ _keystore__WEBPACK_IMPORTED_MODULE_2__.decrypt),
/* harmony export */   "decryptKeystoreSync": () => (/* reexport safe */ _keystore__WEBPACK_IMPORTED_MODULE_2__.decryptSync),
/* harmony export */   "encryptKeystore": () => (/* reexport safe */ _keystore__WEBPACK_IMPORTED_MODULE_2__.encrypt),
/* harmony export */   "getJsonWalletAddress": () => (/* reexport safe */ _inspect__WEBPACK_IMPORTED_MODULE_0__.getJsonWalletAddress),
/* harmony export */   "isCrowdsaleWallet": () => (/* reexport safe */ _inspect__WEBPACK_IMPORTED_MODULE_0__.isCrowdsaleWallet),
/* harmony export */   "isKeystoreWallet": () => (/* reexport safe */ _inspect__WEBPACK_IMPORTED_MODULE_0__.isKeystoreWallet)
/* harmony export */ });
/* harmony import */ var _crowdsale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crowdsale */ "./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js");
/* harmony import */ var _inspect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inspect */ "./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js");
/* harmony import */ var _keystore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./keystore */ "./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js");




function decryptJsonWallet(json, password, progressCallback) {
    if ((0,_inspect__WEBPACK_IMPORTED_MODULE_0__.isCrowdsaleWallet)(json)) {
        if (progressCallback) {
            progressCallback(0);
        }
        const account = (0,_crowdsale__WEBPACK_IMPORTED_MODULE_1__.decrypt)(json, password);
        if (progressCallback) {
            progressCallback(1);
        }
        return Promise.resolve(account);
    }
    if ((0,_inspect__WEBPACK_IMPORTED_MODULE_0__.isKeystoreWallet)(json)) {
        return (0,_keystore__WEBPACK_IMPORTED_MODULE_2__.decrypt)(json, password, progressCallback);
    }
    return Promise.reject(new Error("invalid JSON wallet"));
}
function decryptJsonWalletSync(json, password) {
    if ((0,_inspect__WEBPACK_IMPORTED_MODULE_0__.isCrowdsaleWallet)(json)) {
        return (0,_crowdsale__WEBPACK_IMPORTED_MODULE_1__.decrypt)(json, password);
    }
    if ((0,_inspect__WEBPACK_IMPORTED_MODULE_0__.isKeystoreWallet)(json)) {
        return (0,_keystore__WEBPACK_IMPORTED_MODULE_2__.decryptSync)(json, password);
    }
    throw new Error("invalid JSON wallet");
}

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getJsonWalletAddress": () => (/* binding */ getJsonWalletAddress),
/* harmony export */   "isCrowdsaleWallet": () => (/* binding */ isCrowdsaleWallet),
/* harmony export */   "isKeystoreWallet": () => (/* binding */ isKeystoreWallet)
/* harmony export */ });
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");


function isCrowdsaleWallet(json) {
    let data = null;
    try {
        data = JSON.parse(json);
    }
    catch (error) {
        return false;
    }
    return (data.encseed && data.ethaddr);
}
function isKeystoreWallet(json) {
    let data = null;
    try {
        data = JSON.parse(json);
    }
    catch (error) {
        return false;
    }
    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {
        return false;
    }
    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff
    return true;
}
//export function isJsonWallet(json: string): boolean {
//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));
//}
function getJsonWalletAddress(json) {
    if (isCrowdsaleWallet(json)) {
        try {
            return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_0__.getAddress)(JSON.parse(json).ethaddr);
        }
        catch (error) {
            return null;
        }
    }
    if (isKeystoreWallet(json)) {
        try {
            return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_0__.getAddress)(JSON.parse(json).address);
        }
        catch (error) {
            return null;
        }
    }
    return null;
}
//# sourceMappingURL=inspect.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KeystoreAccount": () => (/* binding */ KeystoreAccount),
/* harmony export */   "decrypt": () => (/* binding */ decrypt),
/* harmony export */   "decryptSync": () => (/* binding */ decryptSync),
/* harmony export */   "encrypt": () => (/* binding */ encrypt)
/* harmony export */ });
/* harmony import */ var aes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aes-js */ "./node_modules/aes-js/index.js");
/* harmony import */ var aes_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(aes_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var scrypt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scrypt-js */ "./node_modules/scrypt-js/scrypt.js");
/* harmony import */ var scrypt_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(scrypt_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/hdnode */ "./node_modules/@ethersproject/hdnode/lib.esm/index.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_pbkdf2__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/pbkdf2 */ "./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js");
/* harmony import */ var _ethersproject_random__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ethersproject/random */ "./node_modules/@ethersproject/random/lib.esm/random.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/transactions */ "./node_modules/@ethersproject/transactions/lib.esm/index.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ "./node_modules/@ethersproject/json-wallets/lib.esm/utils.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/json-wallets/lib.esm/_version.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};













const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_2__.Logger(_version__WEBPACK_IMPORTED_MODULE_3__.version);
// Exported Types
function hasMnemonic(value) {
    return (value != null && value.mnemonic && value.mnemonic.phrase);
}
class KeystoreAccount extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.Description {
    isKeystoreAccount(value) {
        return !!(value && value._isKeystoreAccount);
    }
}
function _decrypt(data, key, ciphertext) {
    const cipher = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/cipher");
    if (cipher === "aes-128-ctr") {
        const iv = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.looseArrayify)((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/cipherparams/iv"));
        const counter = new (aes_js__WEBPACK_IMPORTED_MODULE_0___default().Counter)(iv);
        const aesCtr = new (aes_js__WEBPACK_IMPORTED_MODULE_0___default().ModeOfOperation.ctr)(key, counter);
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(aesCtr.decrypt(ciphertext));
    }
    return null;
}
function _getAccount(data, key) {
    const ciphertext = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.looseArrayify)((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/ciphertext"));
    const computedMAC = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.concat)([key.slice(16, 32), ciphertext]))).substring(2);
    if (computedMAC !== (0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/mac").toLowerCase()) {
        throw new Error("invalid password");
    }
    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);
    if (!privateKey) {
        logger.throwError("unsupported cipher", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_2__.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "decrypt"
        });
    }
    const mnemonicKey = key.slice(32, 64);
    const address = (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_8__.computeAddress)(privateKey);
    if (data.address) {
        let check = data.address.toLowerCase();
        if (check.substring(0, 2) !== "0x") {
            check = "0x" + check;
        }
        if ((0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_9__.getAddress)(check) !== address) {
            throw new Error("address mismatch");
        }
    }
    const account = {
        _isKeystoreAccount: true,
        address: address,
        privateKey: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(privateKey)
    };
    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase
    if ((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "x-ethers/version") === "0.1") {
        const mnemonicCiphertext = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.looseArrayify)((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "x-ethers/mnemonicCiphertext"));
        const mnemonicIv = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.looseArrayify)((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "x-ethers/mnemonicCounter"));
        const mnemonicCounter = new (aes_js__WEBPACK_IMPORTED_MODULE_0___default().Counter)(mnemonicIv);
        const mnemonicAesCtr = new (aes_js__WEBPACK_IMPORTED_MODULE_0___default().ModeOfOperation.ctr)(mnemonicKey, mnemonicCounter);
        const path = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "x-ethers/path") || _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_10__.defaultPath;
        const locale = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "x-ethers/locale") || "en";
        const entropy = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(mnemonicAesCtr.decrypt(mnemonicCiphertext));
        try {
            const mnemonic = (0,_ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_10__.entropyToMnemonic)(entropy, locale);
            const node = _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_10__.HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);
            if (node.privateKey != account.privateKey) {
                throw new Error("mnemonic mismatch");
            }
            account.mnemonic = node.mnemonic;
        }
        catch (error) {
            // If we don't have the locale wordlist installed to
            // read this mnemonic, just bail and don't set the
            // mnemonic
            if (error.code !== _ethersproject_logger__WEBPACK_IMPORTED_MODULE_2__.Logger.errors.INVALID_ARGUMENT || error.argument !== "wordlist") {
                throw error;
            }
        }
    }
    return new KeystoreAccount(account);
}
function pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)((0,_ethersproject_pbkdf2__WEBPACK_IMPORTED_MODULE_11__.pbkdf2)(passwordBytes, salt, count, dkLen, prfFunc));
}
function pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {
    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));
}
function _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {
    const passwordBytes = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.getPassword)(password);
    const kdf = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/kdf");
    if (kdf && typeof (kdf) === "string") {
        const throwError = function (name, value) {
            return logger.throwArgumentError("invalid key-derivation function parameters", name, value);
        };
        if (kdf.toLowerCase() === "scrypt") {
            const salt = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.looseArrayify)((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/kdfparams/salt"));
            const N = parseInt((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/kdfparams/n"));
            const r = parseInt((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/kdfparams/r"));
            const p = parseInt((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/kdfparams/p"));
            // Check for all required parameters
            if (!N || !r || !p) {
                throwError("kdf", kdf);
            }
            // Make sure N is a power of 2
            if ((N & (N - 1)) !== 0) {
                throwError("N", N);
            }
            const dkLen = parseInt((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/kdfparams/dklen"));
            if (dkLen !== 32) {
                throwError("dklen", dkLen);
            }
            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);
        }
        else if (kdf.toLowerCase() === "pbkdf2") {
            const salt = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.looseArrayify)((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/kdfparams/salt"));
            let prfFunc = null;
            const prf = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/kdfparams/prf");
            if (prf === "hmac-sha256") {
                prfFunc = "sha256";
            }
            else if (prf === "hmac-sha512") {
                prfFunc = "sha512";
            }
            else {
                throwError("prf", prf);
            }
            const count = parseInt((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/kdfparams/c"));
            const dkLen = parseInt((0,_utils__WEBPACK_IMPORTED_MODULE_5__.searchPath)(data, "crypto/kdfparams/dklen"));
            if (dkLen !== 32) {
                throwError("dklen", dkLen);
            }
            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);
        }
    }
    return logger.throwArgumentError("unsupported key-derivation function", "kdf", kdf);
}
function decryptSync(json, password) {
    const data = JSON.parse(json);
    const key = _computeKdfKey(data, password, pbkdf2Sync, (scrypt_js__WEBPACK_IMPORTED_MODULE_1___default().syncScrypt));
    return _getAccount(data, key);
}
function decrypt(json, password, progressCallback) {
    return __awaiter(this, void 0, void 0, function* () {
        const data = JSON.parse(json);
        const key = yield _computeKdfKey(data, password, pbkdf2, (scrypt_js__WEBPACK_IMPORTED_MODULE_1___default().scrypt), progressCallback);
        return _getAccount(data, key);
    });
}
function encrypt(account, password, options, progressCallback) {
    try {
        // Check the address matches the private key
        if ((0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_9__.getAddress)(account.address) !== (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_8__.computeAddress)(account.privateKey)) {
            throw new Error("address/privateKey mismatch");
        }
        // Check the mnemonic (if any) matches the private key
        if (hasMnemonic(account)) {
            const mnemonic = account.mnemonic;
            const node = _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_10__.HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_10__.defaultPath);
            if (node.privateKey != account.privateKey) {
                throw new Error("mnemonic mismatch");
            }
        }
    }
    catch (e) {
        return Promise.reject(e);
    }
    // The options are optional, so adjust the call as needed
    if (typeof (options) === "function" && !progressCallback) {
        progressCallback = options;
        options = {};
    }
    if (!options) {
        options = {};
    }
    const privateKey = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(account.privateKey);
    const passwordBytes = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.getPassword)(password);
    let entropy = null;
    let path = null;
    let locale = null;
    if (hasMnemonic(account)) {
        const srcMnemonic = account.mnemonic;
        entropy = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)((0,_ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_10__.mnemonicToEntropy)(srcMnemonic.phrase, srcMnemonic.locale || "en"));
        path = srcMnemonic.path || _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_10__.defaultPath;
        locale = srcMnemonic.locale || "en";
    }
    let client = options.client;
    if (!client) {
        client = "ethers.js";
    }
    // Check/generate the salt
    let salt = null;
    if (options.salt) {
        salt = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(options.salt);
    }
    else {
        salt = (0,_ethersproject_random__WEBPACK_IMPORTED_MODULE_12__.randomBytes)(32);
        ;
    }
    // Override initialization vector
    let iv = null;
    if (options.iv) {
        iv = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(options.iv);
        if (iv.length !== 16) {
            throw new Error("invalid iv");
        }
    }
    else {
        iv = (0,_ethersproject_random__WEBPACK_IMPORTED_MODULE_12__.randomBytes)(16);
    }
    // Override the uuid
    let uuidRandom = null;
    if (options.uuid) {
        uuidRandom = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(options.uuid);
        if (uuidRandom.length !== 16) {
            throw new Error("invalid uuid");
        }
    }
    else {
        uuidRandom = (0,_ethersproject_random__WEBPACK_IMPORTED_MODULE_12__.randomBytes)(16);
    }
    // Override the scrypt password-based key derivation function parameters
    let N = (1 << 17), r = 8, p = 1;
    if (options.scrypt) {
        if (options.scrypt.N) {
            N = options.scrypt.N;
        }
        if (options.scrypt.r) {
            r = options.scrypt.r;
        }
        if (options.scrypt.p) {
            p = options.scrypt.p;
        }
    }
    // We take 64 bytes:
    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)
    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)
    return scrypt_js__WEBPACK_IMPORTED_MODULE_1___default().scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {
        key = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(key);
        // This will be used to encrypt the wallet (as per Web3 secret storage)
        const derivedKey = key.slice(0, 16);
        const macPrefix = key.slice(16, 32);
        // This will be used to encrypt the mnemonic phrase (if any)
        const mnemonicKey = key.slice(32, 64);
        // Encrypt the private key
        const counter = new (aes_js__WEBPACK_IMPORTED_MODULE_0___default().Counter)(iv);
        const aesCtr = new (aes_js__WEBPACK_IMPORTED_MODULE_0___default().ModeOfOperation.ctr)(derivedKey, counter);
        const ciphertext = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(aesCtr.encrypt(privateKey));
        // Compute the message authentication code, used to check the password
        const mac = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.concat)([macPrefix, ciphertext]));
        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition
        const data = {
            address: account.address.substring(2).toLowerCase(),
            id: (0,_utils__WEBPACK_IMPORTED_MODULE_5__.uuidV4)(uuidRandom),
            version: 3,
            crypto: {
                cipher: "aes-128-ctr",
                cipherparams: {
                    iv: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(iv).substring(2),
                },
                ciphertext: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(ciphertext).substring(2),
                kdf: "scrypt",
                kdfparams: {
                    salt: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(salt).substring(2),
                    n: N,
                    dklen: 32,
                    p: p,
                    r: r
                },
                mac: mac.substring(2)
            }
        };
        // If we have a mnemonic, encrypt it into the JSON wallet
        if (entropy) {
            const mnemonicIv = (0,_ethersproject_random__WEBPACK_IMPORTED_MODULE_12__.randomBytes)(16);
            const mnemonicCounter = new (aes_js__WEBPACK_IMPORTED_MODULE_0___default().Counter)(mnemonicIv);
            const mnemonicAesCtr = new (aes_js__WEBPACK_IMPORTED_MODULE_0___default().ModeOfOperation.ctr)(mnemonicKey, mnemonicCounter);
            const mnemonicCiphertext = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(mnemonicAesCtr.encrypt(entropy));
            const now = new Date();
            const timestamp = (now.getUTCFullYear() + "-" +
                (0,_utils__WEBPACK_IMPORTED_MODULE_5__.zpad)(now.getUTCMonth() + 1, 2) + "-" +
                (0,_utils__WEBPACK_IMPORTED_MODULE_5__.zpad)(now.getUTCDate(), 2) + "T" +
                (0,_utils__WEBPACK_IMPORTED_MODULE_5__.zpad)(now.getUTCHours(), 2) + "-" +
                (0,_utils__WEBPACK_IMPORTED_MODULE_5__.zpad)(now.getUTCMinutes(), 2) + "-" +
                (0,_utils__WEBPACK_IMPORTED_MODULE_5__.zpad)(now.getUTCSeconds(), 2) + ".0Z");
            data["x-ethers"] = {
                client: client,
                gethFilename: ("UTC--" + timestamp + "--" + data.address),
                mnemonicCounter: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(mnemonicIv).substring(2),
                mnemonicCiphertext: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(mnemonicCiphertext).substring(2),
                path: path,
                locale: locale,
                version: "0.1"
            };
        }
        return JSON.stringify(data);
    });
}
//# sourceMappingURL=keystore.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/json-wallets/lib.esm/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/json-wallets/lib.esm/utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getPassword": () => (/* binding */ getPassword),
/* harmony export */   "looseArrayify": () => (/* binding */ looseArrayify),
/* harmony export */   "searchPath": () => (/* binding */ searchPath),
/* harmony export */   "uuidV4": () => (/* binding */ uuidV4),
/* harmony export */   "zpad": () => (/* binding */ zpad)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");



function looseArrayify(hexString) {
    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {
        hexString = '0x' + hexString;
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)(hexString);
}
function zpad(value, length) {
    value = String(value);
    while (value.length < length) {
        value = '0' + value;
    }
    return value;
}
function getPassword(password) {
    if (typeof (password) === 'string') {
        return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.toUtf8Bytes)(password, _ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.UnicodeNormalizationForm.NFKC);
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)(password);
}
function searchPath(object, path) {
    let currentChild = object;
    const comps = path.toLowerCase().split('/');
    for (let i = 0; i < comps.length; i++) {
        // Search for a child object with a case-insensitive matching key
        let matchingChild = null;
        for (const key in currentChild) {
            if (key.toLowerCase() === comps[i]) {
                matchingChild = currentChild[key];
                break;
            }
        }
        // Didn't find one. :'(
        if (matchingChild === null) {
            return null;
        }
        // Now check this child...
        currentChild = matchingChild;
    }
    return currentChild;
}
// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)
function uuidV4(randomBytes) {
    const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)(randomBytes);
    // Section: 4.1.3:
    // - time_hi_and_version[12:16] = 0b0100
    bytes[6] = (bytes[6] & 0x0f) | 0x40;
    // Section 4.4
    // - clock_seq_hi_and_reserved[6] = 0b0
    // - clock_seq_hi_and_reserved[7] = 0b1
    bytes[8] = (bytes[8] & 0x3f) | 0x80;
    const value = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.hexlify)(bytes);
    return [
        value.substring(2, 10),
        value.substring(10, 14),
        value.substring(14, 18),
        value.substring(18, 22),
        value.substring(22, 34),
    ].join("-");
}
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/keccak256/lib.esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/keccak256/lib.esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keccak256": () => (/* binding */ keccak256)
/* harmony export */ });
/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-sha3 */ "./node_modules/js-sha3/src/sha3.js");
/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_sha3__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");



function keccak256(data) {
    return '0x' + js_sha3__WEBPACK_IMPORTED_MODULE_0___default().keccak_256((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(data));
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/logger/lib.esm/_version.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/logger/lib.esm/_version.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "logger/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/logger/lib.esm/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/logger/lib.esm/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ErrorCode": () => (/* binding */ ErrorCode),
/* harmony export */   "LogLevel": () => (/* binding */ LogLevel),
/* harmony export */   "Logger": () => (/* binding */ Logger)
/* harmony export */ });
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/logger/lib.esm/_version.js");

let _permanentCensorErrors = false;
let _censorErrors = false;
const LogLevels = { debug: 1, "default": 2, info: 2, warning: 3, error: 4, off: 5 };
let _logLevel = LogLevels["default"];

let _globalLogger = null;
function _checkNormalize() {
    try {
        const missing = [];
        // Make sure all forms of normalization are supported
        ["NFD", "NFC", "NFKD", "NFKC"].forEach((form) => {
            try {
                if ("test".normalize(form) !== "test") {
                    throw new Error("bad normalize");
                }
                ;
            }
            catch (error) {
                missing.push(form);
            }
        });
        if (missing.length) {
            throw new Error("missing " + missing.join(", "));
        }
        if (String.fromCharCode(0xe9).normalize("NFD") !== String.fromCharCode(0x65, 0x0301)) {
            throw new Error("broken implementation");
        }
    }
    catch (error) {
        return error.message;
    }
    return null;
}
const _normalizeError = _checkNormalize();
var LogLevel;
(function (LogLevel) {
    LogLevel["DEBUG"] = "DEBUG";
    LogLevel["INFO"] = "INFO";
    LogLevel["WARNING"] = "WARNING";
    LogLevel["ERROR"] = "ERROR";
    LogLevel["OFF"] = "OFF";
})(LogLevel || (LogLevel = {}));
var ErrorCode;
(function (ErrorCode) {
    ///////////////////
    // Generic Errors
    // Unknown Error
    ErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
    // Not Implemented
    ErrorCode["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
    // Unsupported Operation
    //   - operation
    ErrorCode["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)
    //   - event ("noNetwork" is not re-thrown in provider.ready; otherwise thrown)
    ErrorCode["NETWORK_ERROR"] = "NETWORK_ERROR";
    // Some sort of bad response from the server
    ErrorCode["SERVER_ERROR"] = "SERVER_ERROR";
    // Timeout
    ErrorCode["TIMEOUT"] = "TIMEOUT";
    ///////////////////
    // Operational  Errors
    // Buffer Overrun
    ErrorCode["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
    // Numeric Fault
    //   - operation: the operation being executed
    //   - fault: the reason this faulted
    ErrorCode["NUMERIC_FAULT"] = "NUMERIC_FAULT";
    ///////////////////
    // Argument Errors
    // Missing new operator to an object
    //  - name: The name of the class
    ErrorCode["MISSING_NEW"] = "MISSING_NEW";
    // Invalid argument (e.g. value is incompatible with type) to a function:
    //   - argument: The argument name that was invalid
    //   - value: The value of the argument
    ErrorCode["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
    // Missing argument to a function:
    //   - count: The number of arguments received
    //   - expectedCount: The number of arguments expected
    ErrorCode["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
    // Too many arguments
    //   - count: The number of arguments received
    //   - expectedCount: The number of arguments expected
    ErrorCode["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
    ///////////////////
    // Blockchain Errors
    // Call exception
    //  - transaction: the transaction
    //  - address?: the contract address
    //  - args?: The arguments passed into the function
    //  - method?: The Solidity method signature
    //  - errorSignature?: The EIP848 error signature
    //  - errorArgs?: The EIP848 error parameters
    //  - reason: The reason (only for EIP848 "Error(string)")
    ErrorCode["CALL_EXCEPTION"] = "CALL_EXCEPTION";
    // Insufficient funds (< value + gasLimit * gasPrice)
    //   - transaction: the transaction attempted
    ErrorCode["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
    // Nonce has already been used
    //   - transaction: the transaction attempted
    ErrorCode["NONCE_EXPIRED"] = "NONCE_EXPIRED";
    // The replacement fee for the transaction is too low
    //   - transaction: the transaction attempted
    ErrorCode["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
    // The gas limit could not be estimated
    //   - transaction: the transaction passed to estimateGas
    ErrorCode["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
    // The transaction was replaced by one with a higher gas price
    //   - reason: "cancelled", "replaced" or "repriced"
    //   - cancelled: true if reason == "cancelled" or reason == "replaced")
    //   - hash: original transaction hash
    //   - replacement: the full TransactionsResponse for the replacement
    //   - receipt: the receipt of the replacement
    ErrorCode["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
    ///////////////////
    // Interaction Errors
    // The user rejected the action, such as signing a message or sending
    // a transaction
    ErrorCode["ACTION_REJECTED"] = "ACTION_REJECTED";
})(ErrorCode || (ErrorCode = {}));
;
const HEX = "0123456789abcdef";
class Logger {
    constructor(version) {
        Object.defineProperty(this, "version", {
            enumerable: true,
            value: version,
            writable: false
        });
    }
    _log(logLevel, args) {
        const level = logLevel.toLowerCase();
        if (LogLevels[level] == null) {
            this.throwArgumentError("invalid log level name", "logLevel", logLevel);
        }
        if (_logLevel > LogLevels[level]) {
            return;
        }
        console.log.apply(console, args);
    }
    debug(...args) {
        this._log(Logger.levels.DEBUG, args);
    }
    info(...args) {
        this._log(Logger.levels.INFO, args);
    }
    warn(...args) {
        this._log(Logger.levels.WARNING, args);
    }
    makeError(message, code, params) {
        // Errors are being censored
        if (_censorErrors) {
            return this.makeError("censored error", code, {});
        }
        if (!code) {
            code = Logger.errors.UNKNOWN_ERROR;
        }
        if (!params) {
            params = {};
        }
        const messageDetails = [];
        Object.keys(params).forEach((key) => {
            const value = params[key];
            try {
                if (value instanceof Uint8Array) {
                    let hex = "";
                    for (let i = 0; i < value.length; i++) {
                        hex += HEX[value[i] >> 4];
                        hex += HEX[value[i] & 0x0f];
                    }
                    messageDetails.push(key + "=Uint8Array(0x" + hex + ")");
                }
                else {
                    messageDetails.push(key + "=" + JSON.stringify(value));
                }
            }
            catch (error) {
                messageDetails.push(key + "=" + JSON.stringify(params[key].toString()));
            }
        });
        messageDetails.push(`code=${code}`);
        messageDetails.push(`version=${this.version}`);
        const reason = message;
        let url = "";
        switch (code) {
            case ErrorCode.NUMERIC_FAULT: {
                url = "NUMERIC_FAULT";
                const fault = message;
                switch (fault) {
                    case "overflow":
                    case "underflow":
                    case "division-by-zero":
                        url += "-" + fault;
                        break;
                    case "negative-power":
                    case "negative-width":
                        url += "-unsupported";
                        break;
                    case "unbound-bitwise-result":
                        url += "-unbound-result";
                        break;
                }
                break;
            }
            case ErrorCode.CALL_EXCEPTION:
            case ErrorCode.INSUFFICIENT_FUNDS:
            case ErrorCode.MISSING_NEW:
            case ErrorCode.NONCE_EXPIRED:
            case ErrorCode.REPLACEMENT_UNDERPRICED:
            case ErrorCode.TRANSACTION_REPLACED:
            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:
                url = code;
                break;
        }
        if (url) {
            message += " [ See: https:/\/links.ethers.org/v5-errors-" + url + " ]";
        }
        if (messageDetails.length) {
            message += " (" + messageDetails.join(", ") + ")";
        }
        // @TODO: Any??
        const error = new Error(message);
        error.reason = reason;
        error.code = code;
        Object.keys(params).forEach(function (key) {
            error[key] = params[key];
        });
        return error;
    }
    throwError(message, code, params) {
        throw this.makeError(message, code, params);
    }
    throwArgumentError(message, name, value) {
        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {
            argument: name,
            value: value
        });
    }
    assert(condition, message, code, params) {
        if (!!condition) {
            return;
        }
        this.throwError(message, code, params);
    }
    assertArgument(condition, message, name, value) {
        if (!!condition) {
            return;
        }
        this.throwArgumentError(message, name, value);
    }
    checkNormalize(message) {
        if (message == null) {
            message = "platform missing String.prototype.normalize";
        }
        if (_normalizeError) {
            this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "String.prototype.normalize", form: _normalizeError
            });
        }
    }
    checkSafeUint53(value, message) {
        if (typeof (value) !== "number") {
            return;
        }
        if (message == null) {
            message = "value not safe";
        }
        if (value < 0 || value >= 0x1fffffffffffff) {
            this.throwError(message, Logger.errors.NUMERIC_FAULT, {
                operation: "checkSafeInteger",
                fault: "out-of-safe-range",
                value: value
            });
        }
        if (value % 1) {
            this.throwError(message, Logger.errors.NUMERIC_FAULT, {
                operation: "checkSafeInteger",
                fault: "non-integer",
                value: value
            });
        }
    }
    checkArgumentCount(count, expectedCount, message) {
        if (message) {
            message = ": " + message;
        }
        else {
            message = "";
        }
        if (count < expectedCount) {
            this.throwError("missing argument" + message, Logger.errors.MISSING_ARGUMENT, {
                count: count,
                expectedCount: expectedCount
            });
        }
        if (count > expectedCount) {
            this.throwError("too many arguments" + message, Logger.errors.UNEXPECTED_ARGUMENT, {
                count: count,
                expectedCount: expectedCount
            });
        }
    }
    checkNew(target, kind) {
        if (target === Object || target == null) {
            this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
        }
    }
    checkAbstract(target, kind) {
        if (target === kind) {
            this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: "new" });
        }
        else if (target === Object || target == null) {
            this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
        }
    }
    static globalLogger() {
        if (!_globalLogger) {
            _globalLogger = new Logger(_version__WEBPACK_IMPORTED_MODULE_0__.version);
        }
        return _globalLogger;
    }
    static setCensorship(censorship, permanent) {
        if (!censorship && permanent) {
            this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "setCensorship"
            });
        }
        if (_permanentCensorErrors) {
            if (!censorship) {
                return;
            }
            this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "setCensorship"
            });
        }
        _censorErrors = !!censorship;
        _permanentCensorErrors = !!permanent;
    }
    static setLogLevel(logLevel) {
        const level = LogLevels[logLevel.toLowerCase()];
        if (level == null) {
            Logger.globalLogger().warn("invalid log level - " + logLevel);
            return;
        }
        _logLevel = level;
    }
    static from(version) {
        return new Logger(version);
    }
}
Logger.errors = ErrorCode;
Logger.levels = LogLevel;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/networks/lib.esm/_version.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/networks/lib.esm/_version.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "networks/5.7.1";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/networks/lib.esm/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ethersproject/networks/lib.esm/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getNetwork": () => (/* binding */ getNetwork)
/* harmony export */ });
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/networks/lib.esm/_version.js");



const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
;
function isRenetworkable(value) {
    return (value && typeof (value.renetwork) === "function");
}
function ethDefaultProvider(network) {
    const func = function (providers, options) {
        if (options == null) {
            options = {};
        }
        const providerList = [];
        if (providers.InfuraProvider && options.infura !== "-") {
            try {
                providerList.push(new providers.InfuraProvider(network, options.infura));
            }
            catch (error) { }
        }
        if (providers.EtherscanProvider && options.etherscan !== "-") {
            try {
                providerList.push(new providers.EtherscanProvider(network, options.etherscan));
            }
            catch (error) { }
        }
        if (providers.AlchemyProvider && options.alchemy !== "-") {
            try {
                providerList.push(new providers.AlchemyProvider(network, options.alchemy));
            }
            catch (error) { }
        }
        if (providers.PocketProvider && options.pocket !== "-") {
            // These networks are currently faulty on Pocket as their
            // network does not handle the Berlin hardfork, which is
            // live on these ones.
            // @TODO: This goes away once Pocket has upgraded their nodes
            const skip = ["goerli", "ropsten", "rinkeby", "sepolia"];
            try {
                const provider = new providers.PocketProvider(network, options.pocket);
                if (provider.network && skip.indexOf(provider.network.name) === -1) {
                    providerList.push(provider);
                }
            }
            catch (error) { }
        }
        if (providers.CloudflareProvider && options.cloudflare !== "-") {
            try {
                providerList.push(new providers.CloudflareProvider(network));
            }
            catch (error) { }
        }
        if (providers.AnkrProvider && options.ankr !== "-") {
            try {
                const skip = ["ropsten"];
                const provider = new providers.AnkrProvider(network, options.ankr);
                if (provider.network && skip.indexOf(provider.network.name) === -1) {
                    providerList.push(provider);
                }
            }
            catch (error) { }
        }
        if (providerList.length === 0) {
            return null;
        }
        if (providers.FallbackProvider) {
            let quorum = 1;
            if (options.quorum != null) {
                quorum = options.quorum;
            }
            else if (network === "homestead") {
                quorum = 2;
            }
            return new providers.FallbackProvider(providerList, quorum);
        }
        return providerList[0];
    };
    func.renetwork = function (network) {
        return ethDefaultProvider(network);
    };
    return func;
}
function etcDefaultProvider(url, network) {
    const func = function (providers, options) {
        if (providers.JsonRpcProvider) {
            return new providers.JsonRpcProvider(url, network);
        }
        return null;
    };
    func.renetwork = function (network) {
        return etcDefaultProvider(url, network);
    };
    return func;
}
const homestead = {
    chainId: 1,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "homestead",
    _defaultProvider: ethDefaultProvider("homestead")
};
const ropsten = {
    chainId: 3,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "ropsten",
    _defaultProvider: ethDefaultProvider("ropsten")
};
const classicMordor = {
    chainId: 63,
    name: "classicMordor",
    _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/mordor", "classicMordor")
};
// See: https://chainlist.org
const networks = {
    unspecified: { chainId: 0, name: "unspecified" },
    homestead: homestead,
    mainnet: homestead,
    morden: { chainId: 2, name: "morden" },
    ropsten: ropsten,
    testnet: ropsten,
    rinkeby: {
        chainId: 4,
        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        name: "rinkeby",
        _defaultProvider: ethDefaultProvider("rinkeby")
    },
    kovan: {
        chainId: 42,
        name: "kovan",
        _defaultProvider: ethDefaultProvider("kovan")
    },
    goerli: {
        chainId: 5,
        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        name: "goerli",
        _defaultProvider: ethDefaultProvider("goerli")
    },
    kintsugi: { chainId: 1337702, name: "kintsugi" },
    sepolia: {
        chainId: 11155111,
        name: "sepolia",
        _defaultProvider: ethDefaultProvider("sepolia")
    },
    // ETC (See: #351)
    classic: {
        chainId: 61,
        name: "classic",
        _defaultProvider: etcDefaultProvider("https:/\/www.ethercluster.com/etc", "classic")
    },
    classicMorden: { chainId: 62, name: "classicMorden" },
    classicMordor: classicMordor,
    classicTestnet: classicMordor,
    classicKotti: {
        chainId: 6,
        name: "classicKotti",
        _defaultProvider: etcDefaultProvider("https:/\/www.ethercluster.com/kotti", "classicKotti")
    },
    xdai: { chainId: 100, name: "xdai" },
    matic: {
        chainId: 137,
        name: "matic",
        _defaultProvider: ethDefaultProvider("matic")
    },
    maticmum: { chainId: 80001, name: "maticmum" },
    optimism: {
        chainId: 10,
        name: "optimism",
        _defaultProvider: ethDefaultProvider("optimism")
    },
    "optimism-kovan": { chainId: 69, name: "optimism-kovan" },
    "optimism-goerli": { chainId: 420, name: "optimism-goerli" },
    arbitrum: { chainId: 42161, name: "arbitrum" },
    "arbitrum-rinkeby": { chainId: 421611, name: "arbitrum-rinkeby" },
    "arbitrum-goerli": { chainId: 421613, name: "arbitrum-goerli" },
    bnb: { chainId: 56, name: "bnb" },
    bnbt: { chainId: 97, name: "bnbt" },
};
/**
 *  getNetwork
 *
 *  Converts a named common networks or chain ID (network ID) to a Network
 *  and verifies a network is a valid Network..
 */
function getNetwork(network) {
    // No network (null)
    if (network == null) {
        return null;
    }
    if (typeof (network) === "number") {
        for (const name in networks) {
            const standard = networks[name];
            if (standard.chainId === network) {
                return {
                    name: standard.name,
                    chainId: standard.chainId,
                    ensAddress: (standard.ensAddress || null),
                    _defaultProvider: (standard._defaultProvider || null)
                };
            }
        }
        return {
            chainId: network,
            name: "unknown"
        };
    }
    if (typeof (network) === "string") {
        const standard = networks[network];
        if (standard == null) {
            return null;
        }
        return {
            name: standard.name,
            chainId: standard.chainId,
            ensAddress: standard.ensAddress,
            _defaultProvider: (standard._defaultProvider || null)
        };
    }
    const standard = networks[network.name];
    // Not a standard network; check that it is a valid network in general
    if (!standard) {
        if (typeof (network.chainId) !== "number") {
            logger.throwArgumentError("invalid network chainId", "network", network);
        }
        return network;
    }
    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)
    if (network.chainId !== 0 && network.chainId !== standard.chainId) {
        logger.throwArgumentError("network chainId mismatch", "network", network);
    }
    // @TODO: In the next major version add an attach function to a defaultProvider
    // class and move the _defaultProvider internal to this file (extend Network)
    let defaultProvider = network._defaultProvider || null;
    if (defaultProvider == null && standard._defaultProvider) {
        if (isRenetworkable(standard._defaultProvider)) {
            defaultProvider = standard._defaultProvider.renetwork(network);
        }
        else {
            defaultProvider = standard._defaultProvider;
        }
    }
    // Standard Network (allow overriding the ENS address)
    return {
        name: network.name,
        chainId: standard.chainId,
        ensAddress: (network.ensAddress || standard.ensAddress || null),
        _defaultProvider: defaultProvider
    };
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pbkdf2": () => (/* binding */ pbkdf2)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/sha2 */ "./node_modules/@ethersproject/sha2/lib.esm/sha2.js");



function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {
    password = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)(password);
    salt = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)(salt);
    let hLen;
    let l = 1;
    const DK = new Uint8Array(keylen);
    const block1 = new Uint8Array(salt.length + 4);
    block1.set(salt);
    //salt.copy(block1, 0, 0, salt.length)
    let r;
    let T;
    for (let i = 1; i <= l; i++) {
        //block1.writeUInt32BE(i, salt.length)
        block1[salt.length] = (i >> 24) & 0xff;
        block1[salt.length + 1] = (i >> 16) & 0xff;
        block1[salt.length + 2] = (i >> 8) & 0xff;
        block1[salt.length + 3] = i & 0xff;
        //let U = createHmac(password).update(block1).digest();
        let U = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_1__.computeHmac)(hashAlgorithm, password, block1));
        if (!hLen) {
            hLen = U.length;
            T = new Uint8Array(hLen);
            l = Math.ceil(keylen / hLen);
            r = keylen - (l - 1) * hLen;
        }
        //U.copy(T, 0, 0, hLen)
        T.set(U);
        for (let j = 1; j < iterations; j++) {
            //U = createHmac(password).update(U).digest();
            U = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_1__.computeHmac)(hashAlgorithm, password, U));
            for (let k = 0; k < hLen; k++)
                T[k] ^= U[k];
        }
        const destPos = (i - 1) * hLen;
        const len = (i === l ? r : hLen);
        //T.copy(DK, destPos, 0, len)
        DK.set((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)(T).slice(0, len), destPos);
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.hexlify)(DK);
}
//# sourceMappingURL=pbkdf2.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/properties/lib.esm/_version.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ethersproject/properties/lib.esm/_version.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "properties/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/properties/lib.esm/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/properties/lib.esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Description": () => (/* binding */ Description),
/* harmony export */   "checkProperties": () => (/* binding */ checkProperties),
/* harmony export */   "deepCopy": () => (/* binding */ deepCopy),
/* harmony export */   "defineReadOnly": () => (/* binding */ defineReadOnly),
/* harmony export */   "getStatic": () => (/* binding */ getStatic),
/* harmony export */   "resolveProperties": () => (/* binding */ resolveProperties),
/* harmony export */   "shallowCopy": () => (/* binding */ shallowCopy)
/* harmony export */ });
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/properties/lib.esm/_version.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
function defineReadOnly(object, name, value) {
    Object.defineProperty(object, name, {
        enumerable: true,
        value: value,
        writable: false,
    });
}
// Crawl up the constructor chain to find a static method
function getStatic(ctor, key) {
    for (let i = 0; i < 32; i++) {
        if (ctor[key]) {
            return ctor[key];
        }
        if (!ctor.prototype || typeof (ctor.prototype) !== "object") {
            break;
        }
        ctor = Object.getPrototypeOf(ctor.prototype).constructor;
    }
    return null;
}
function resolveProperties(object) {
    return __awaiter(this, void 0, void 0, function* () {
        const promises = Object.keys(object).map((key) => {
            const value = object[key];
            return Promise.resolve(value).then((v) => ({ key: key, value: v }));
        });
        const results = yield Promise.all(promises);
        return results.reduce((accum, result) => {
            accum[(result.key)] = result.value;
            return accum;
        }, {});
    });
}
function checkProperties(object, properties) {
    if (!object || typeof (object) !== "object") {
        logger.throwArgumentError("invalid object", "object", object);
    }
    Object.keys(object).forEach((key) => {
        if (!properties[key]) {
            logger.throwArgumentError("invalid object key - " + key, "transaction:" + key, object);
        }
    });
}
function shallowCopy(object) {
    const result = {};
    for (const key in object) {
        result[key] = object[key];
    }
    return result;
}
const opaque = { bigint: true, boolean: true, "function": true, number: true, string: true };
function _isFrozen(object) {
    // Opaque objects are not mutable, so safe to copy by assignment
    if (object === undefined || object === null || opaque[typeof (object)]) {
        return true;
    }
    if (Array.isArray(object) || typeof (object) === "object") {
        if (!Object.isFrozen(object)) {
            return false;
        }
        const keys = Object.keys(object);
        for (let i = 0; i < keys.length; i++) {
            let value = null;
            try {
                value = object[keys[i]];
            }
            catch (error) {
                // If accessing a value triggers an error, it is a getter
                // designed to do so (e.g. Result) and is therefore "frozen"
                continue;
            }
            if (!_isFrozen(value)) {
                return false;
            }
        }
        return true;
    }
    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, "object", object);
}
// Returns a new copy of object, such that no properties may be replaced.
// New properties may be added only to objects.
function _deepCopy(object) {
    if (_isFrozen(object)) {
        return object;
    }
    // Arrays are mutable, so we need to create a copy
    if (Array.isArray(object)) {
        return Object.freeze(object.map((item) => deepCopy(item)));
    }
    if (typeof (object) === "object") {
        const result = {};
        for (const key in object) {
            const value = object[key];
            if (value === undefined) {
                continue;
            }
            defineReadOnly(result, key, deepCopy(value));
        }
        return result;
    }
    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, "object", object);
}
function deepCopy(object) {
    return _deepCopy(object);
}
class Description {
    constructor(info) {
        for (const key in info) {
            this[key] = deepCopy(info[key]);
        }
    }
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/_version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/_version.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "providers/5.7.2";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlchemyProvider": () => (/* binding */ AlchemyProvider),
/* harmony export */   "AlchemyWebSocketProvider": () => (/* binding */ AlchemyWebSocketProvider)
/* harmony export */ });
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formatter */ "./node_modules/@ethersproject/providers/lib.esm/formatter.js");
/* harmony import */ var _websocket_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./websocket-provider */ "./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");
/* harmony import */ var _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./url-json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js");






const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

// This key was provided to ethers.js by Alchemy to be used by the
// default provider, but it is recommended that for your own
// production environments, that you acquire your own API key at:
//   https://dashboard.alchemyapi.io
const defaultApiKey = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";
class AlchemyWebSocketProvider extends _websocket_provider__WEBPACK_IMPORTED_MODULE_2__.WebSocketProvider {
    constructor(network, apiKey) {
        const provider = new AlchemyProvider(network, apiKey);
        const url = provider.connection.url.replace(/^http/i, "ws")
            .replace(".alchemyapi.", ".ws.alchemyapi.");
        super(url, provider.network);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "apiKey", provider.apiKey);
    }
    isCommunityResource() {
        return (this.apiKey === defaultApiKey);
    }
}
class AlchemyProvider extends _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_4__.UrlJsonRpcProvider {
    static getWebSocketProvider(network, apiKey) {
        return new AlchemyWebSocketProvider(network, apiKey);
    }
    static getApiKey(apiKey) {
        if (apiKey == null) {
            return defaultApiKey;
        }
        if (apiKey && typeof (apiKey) !== "string") {
            logger.throwArgumentError("invalid apiKey", "apiKey", apiKey);
        }
        return apiKey;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch (network.name) {
            case "homestead":
                host = "eth-mainnet.alchemyapi.io/v2/";
                break;
            case "goerli":
                host = "eth-goerli.g.alchemy.com/v2/";
                break;
            case "matic":
                host = "polygon-mainnet.g.alchemy.com/v2/";
                break;
            case "maticmum":
                host = "polygon-mumbai.g.alchemy.com/v2/";
                break;
            case "arbitrum":
                host = "arb-mainnet.g.alchemy.com/v2/";
                break;
            case "arbitrum-goerli":
                host = "arb-goerli.g.alchemy.com/v2/";
                break;
            case "optimism":
                host = "opt-mainnet.g.alchemy.com/v2/";
                break;
            case "optimism-goerli":
                host = "opt-goerli.g.alchemy.com/v2/";
                break;
            default:
                logger.throwArgumentError("unsupported network", "network", arguments[0]);
        }
        return {
            allowGzip: true,
            url: ("https:/" + "/" + host + apiKey),
            throttleCallback: (attempt, url) => {
                if (apiKey === defaultApiKey) {
                    (0,_formatter__WEBPACK_IMPORTED_MODULE_5__.showThrottleMessage)();
                }
                return Promise.resolve(true);
            }
        };
    }
    isCommunityResource() {
        return (this.apiKey === defaultApiKey);
    }
}
//# sourceMappingURL=alchemy-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/ankr-provider.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/ankr-provider.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnkrProvider": () => (/* binding */ AnkrProvider)
/* harmony export */ });
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatter */ "./node_modules/@ethersproject/providers/lib.esm/formatter.js");
/* harmony import */ var _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./url-json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");




const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
const defaultApiKey = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";
function getHost(name) {
    switch (name) {
        case "homestead":
            return "rpc.ankr.com/eth/";
        case "ropsten":
            return "rpc.ankr.com/eth_ropsten/";
        case "rinkeby":
            return "rpc.ankr.com/eth_rinkeby/";
        case "goerli":
            return "rpc.ankr.com/eth_goerli/";
        case "matic":
            return "rpc.ankr.com/polygon/";
        case "arbitrum":
            return "rpc.ankr.com/arbitrum/";
    }
    return logger.throwArgumentError("unsupported network", "name", name);
}
class AnkrProvider extends _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__.UrlJsonRpcProvider {
    isCommunityResource() {
        return (this.apiKey === defaultApiKey);
    }
    static getApiKey(apiKey) {
        if (apiKey == null) {
            return defaultApiKey;
        }
        return apiKey;
    }
    static getUrl(network, apiKey) {
        if (apiKey == null) {
            apiKey = defaultApiKey;
        }
        const connection = {
            allowGzip: true,
            url: ("https:/\/" + getHost(network.name) + apiKey),
            throttleCallback: (attempt, url) => {
                if (apiKey.apiKey === defaultApiKey) {
                    (0,_formatter__WEBPACK_IMPORTED_MODULE_3__.showThrottleMessage)();
                }
                return Promise.resolve(true);
            }
        };
        if (apiKey.projectSecret != null) {
            connection.user = "";
            connection.password = apiKey.projectSecret;
        }
        return connection;
    }
}
//# sourceMappingURL=ankr-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/base-provider.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/base-provider.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseProvider": () => (/* binding */ BaseProvider),
/* harmony export */   "Event": () => (/* binding */ Event),
/* harmony export */   "Resolver": () => (/* binding */ Resolver)
/* harmony export */ });
/* harmony import */ var _ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/abstract-provider */ "./node_modules/@ethersproject/abstract-provider/lib.esm/index.js");
/* harmony import */ var _ethersproject_base64__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ethersproject/base64 */ "./node_modules/@ethersproject/base64/lib.esm/base64.js");
/* harmony import */ var _ethersproject_basex__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/basex */ "./node_modules/@ethersproject/basex/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_constants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/constants */ "./node_modules/@ethersproject/constants/lib.esm/hashes.js");
/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/hash */ "./node_modules/@ethersproject/hash/lib.esm/namehash.js");
/* harmony import */ var _ethersproject_networks__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ethersproject/networks */ "./node_modules/@ethersproject/networks/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/sha2 */ "./node_modules/@ethersproject/sha2/lib.esm/sha2.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");
/* harmony import */ var _ethersproject_web__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ethersproject/web */ "./node_modules/@ethersproject/web/lib.esm/index.js");
/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bech32 */ "./node_modules/bech32/index.js");
/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bech32__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./formatter */ "./node_modules/@ethersproject/providers/lib.esm/formatter.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};















const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_2__.version);

const MAX_CCIP_REDIRECTS = 10;
//////////////////////////////
// Event Serializeing
function checkTopic(topic) {
    if (topic == null) {
        return "null";
    }
    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataLength)(topic) !== 32) {
        logger.throwArgumentError("invalid topic", "topic", topic);
    }
    return topic.toLowerCase();
}
function serializeTopics(topics) {
    // Remove trailing null AND-topics; they are redundant
    topics = topics.slice();
    while (topics.length > 0 && topics[topics.length - 1] == null) {
        topics.pop();
    }
    return topics.map((topic) => {
        if (Array.isArray(topic)) {
            // Only track unique OR-topics
            const unique = {};
            topic.forEach((topic) => {
                unique[checkTopic(topic)] = true;
            });
            // The order of OR-topics does not matter
            const sorted = Object.keys(unique);
            sorted.sort();
            return sorted.join("|");
        }
        else {
            return checkTopic(topic);
        }
    }).join("&");
}
function deserializeTopics(data) {
    if (data === "") {
        return [];
    }
    return data.split(/&/g).map((topic) => {
        if (topic === "") {
            return [];
        }
        const comps = topic.split("|").map((topic) => {
            return ((topic === "null") ? null : topic);
        });
        return ((comps.length === 1) ? comps[0] : comps);
    });
}
function getEventTag(eventName) {
    if (typeof (eventName) === "string") {
        eventName = eventName.toLowerCase();
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataLength)(eventName) === 32) {
            return "tx:" + eventName;
        }
        if (eventName.indexOf(":") === -1) {
            return eventName;
        }
    }
    else if (Array.isArray(eventName)) {
        return "filter:*:" + serializeTopics(eventName);
    }
    else if (_ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_4__.ForkEvent.isForkEvent(eventName)) {
        logger.warn("not implemented");
        throw new Error("not implemented");
    }
    else if (eventName && typeof (eventName) === "object") {
        return "filter:" + (eventName.address || "*") + ":" + serializeTopics(eventName.topics || []);
    }
    throw new Error("invalid event - " + eventName);
}
//////////////////////////////
// Helper Object
function getTime() {
    return (new Date()).getTime();
}
function stall(duration) {
    return new Promise((resolve) => {
        setTimeout(resolve, duration);
    });
}
//////////////////////////////
// Provider Object
/**
 *  EventType
 *   - "block"
 *   - "poll"
 *   - "didPoll"
 *   - "pending"
 *   - "error"
 *   - "network"
 *   - filter
 *   - topics array
 *   - transaction hash
 */
const PollableEvents = ["block", "network", "pending", "poll"];
class Event {
    constructor(tag, listener, once) {
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "tag", tag);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "listener", listener);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "once", once);
        this._lastBlockNumber = -2;
        this._inflight = false;
    }
    get event() {
        switch (this.type) {
            case "tx":
                return this.hash;
            case "filter":
                return this.filter;
        }
        return this.tag;
    }
    get type() {
        return this.tag.split(":")[0];
    }
    get hash() {
        const comps = this.tag.split(":");
        if (comps[0] !== "tx") {
            return null;
        }
        return comps[1];
    }
    get filter() {
        const comps = this.tag.split(":");
        if (comps[0] !== "filter") {
            return null;
        }
        const address = comps[1];
        const topics = deserializeTopics(comps[2]);
        const filter = {};
        if (topics.length > 0) {
            filter.topics = topics;
        }
        if (address && address !== "*") {
            filter.address = address;
        }
        return filter;
    }
    pollable() {
        return (this.tag.indexOf(":") >= 0 || PollableEvents.indexOf(this.tag) >= 0);
    }
}
;
// https://github.com/satoshilabs/slips/blob/master/slip-0044.md
const coinInfos = {
    "0": { symbol: "btc", p2pkh: 0x00, p2sh: 0x05, prefix: "bc" },
    "2": { symbol: "ltc", p2pkh: 0x30, p2sh: 0x32, prefix: "ltc" },
    "3": { symbol: "doge", p2pkh: 0x1e, p2sh: 0x16 },
    "60": { symbol: "eth", ilk: "eth" },
    "61": { symbol: "etc", ilk: "eth" },
    "700": { symbol: "xdai", ilk: "eth" },
};
function bytes32ify(value) {
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexZeroPad)(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(value).toHexString(), 32);
}
// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)
function base58Encode(data) {
    return _ethersproject_basex__WEBPACK_IMPORTED_MODULE_7__.Base58.encode((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([data, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_8__.sha256)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_8__.sha256)(data)), 0, 4)]));
}
const matcherIpfs = new RegExp("^(ipfs):/\/(.*)$", "i");
const matchers = [
    new RegExp("^(https):/\/(.*)$", "i"),
    new RegExp("^(data):(.*)$", "i"),
    matcherIpfs,
    new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i"),
];
function _parseString(result, start) {
    try {
        return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_9__.toUtf8String)(_parseBytes(result, start));
    }
    catch (error) { }
    return null;
}
function _parseBytes(result, start) {
    if (result === "0x") {
        return null;
    }
    const offset = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)(result, start, start + 32)).toNumber();
    const length = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)(result, offset, offset + 32)).toNumber();
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)(result, offset + 32, offset + 32 + length);
}
// Trim off the ipfs:// prefix and return the default gateway URL
function getIpfsLink(link) {
    if (link.match(/^ipfs:\/\/ipfs\//i)) {
        link = link.substring(12);
    }
    else if (link.match(/^ipfs:\/\//i)) {
        link = link.substring(7);
    }
    else {
        logger.throwArgumentError("unsupported IPFS format", "link", link);
    }
    return `https:/\/gateway.ipfs.io/ipfs/${link}`;
}
function numPad(value) {
    const result = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value);
    if (result.length > 32) {
        throw new Error("internal; should not happen");
    }
    const padded = new Uint8Array(32);
    padded.set(result, 32 - result.length);
    return padded;
}
function bytesPad(value) {
    if ((value.length % 32) === 0) {
        return value;
    }
    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);
    result.set(value);
    return result;
}
// ABI Encodes a series of (bytes, bytes, ...)
function encodeBytes(datas) {
    const result = [];
    let byteCount = 0;
    // Add place-holders for pointers as we add items
    for (let i = 0; i < datas.length; i++) {
        result.push(null);
        byteCount += 32;
    }
    for (let i = 0; i < datas.length; i++) {
        const data = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(datas[i]);
        // Update the bytes offset
        result[i] = numPad(byteCount);
        // The length and padded value of data
        result.push(numPad(data.length));
        result.push(bytesPad(data));
        byteCount += 32 + Math.ceil(data.length / 32) * 32;
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)(result);
}
class Resolver {
    // The resolvedAddress is only for creating a ReverseLookup resolver
    constructor(provider, address, name, resolvedAddress) {
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "provider", provider);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "name", name);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "address", provider.formatter.address(address));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "_resolvedAddress", resolvedAddress);
    }
    supportsWildcard() {
        if (!this._supportsEip2544) {
            // supportsInterface(bytes4 = selector("resolve(bytes,bytes)"))
            this._supportsEip2544 = this.provider.call({
                to: this.address,
                data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
            }).then((result) => {
                return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(result).eq(1);
            }).catch((error) => {
                if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION) {
                    return false;
                }
                // Rethrow the error: link is down, etc. Let future attempts retry.
                this._supportsEip2544 = null;
                throw error;
            });
        }
        return this._supportsEip2544;
    }
    _fetch(selector, parameters) {
        return __awaiter(this, void 0, void 0, function* () {
            // e.g. keccak256("addr(bytes32,uint256)")
            const tx = {
                to: this.address,
                ccipReadEnabled: true,
                data: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)([selector, (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_10__.namehash)(this.name), (parameters || "0x")])
            };
            // Wildcard support; use EIP-2544 to resolve the request
            let parseBytes = false;
            if (yield this.supportsWildcard()) {
                parseBytes = true;
                // selector("resolve(bytes,bytes)")
                tx.data = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)(["0x9061b923", encodeBytes([(0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_10__.dnsEncode)(this.name), tx.data])]);
            }
            try {
                let result = yield this.provider.call(tx);
                if (((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(result).length % 32) === 4) {
                    logger.throwError("resolver threw error", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION, {
                        transaction: tx, data: result
                    });
                }
                if (parseBytes) {
                    result = _parseBytes(result, 0);
                }
                return result;
            }
            catch (error) {
                if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION) {
                    return null;
                }
                throw error;
            }
        });
    }
    _fetchBytes(selector, parameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const result = yield this._fetch(selector, parameters);
            if (result != null) {
                return _parseBytes(result, 0);
            }
            return null;
        });
    }
    _getAddress(coinType, hexBytes) {
        const coinInfo = coinInfos[String(coinType)];
        if (coinInfo == null) {
            logger.throwError(`unsupported coin type: ${coinType}`, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: `getAddress(${coinType})`
            });
        }
        if (coinInfo.ilk === "eth") {
            return this.provider.formatter.address(hexBytes);
        }
        const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(hexBytes);
        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG
        if (coinInfo.p2pkh != null) {
            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
            if (p2pkh) {
                const length = parseInt(p2pkh[1], 16);
                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {
                    return base58Encode((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([[coinInfo.p2pkh], ("0x" + p2pkh[2])]));
                }
            }
        }
        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL
        if (coinInfo.p2sh != null) {
            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
            if (p2sh) {
                const length = parseInt(p2sh[1], 16);
                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {
                    return base58Encode((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([[coinInfo.p2sh], ("0x" + p2sh[2])]));
                }
            }
        }
        // Bech32
        if (coinInfo.prefix != null) {
            const length = bytes[1];
            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program
            let version = bytes[0];
            if (version === 0x00) {
                if (length !== 20 && length !== 32) {
                    version = -1;
                }
            }
            else {
                version = -1;
            }
            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {
                const words = bech32__WEBPACK_IMPORTED_MODULE_0___default().toWords(bytes.slice(2));
                words.unshift(version);
                return bech32__WEBPACK_IMPORTED_MODULE_0___default().encode(coinInfo.prefix, words);
            }
        }
        return null;
    }
    getAddress(coinType) {
        return __awaiter(this, void 0, void 0, function* () {
            if (coinType == null) {
                coinType = 60;
            }
            // If Ethereum, use the standard `addr(bytes32)`
            if (coinType === 60) {
                try {
                    // keccak256("addr(bytes32)")
                    const result = yield this._fetch("0x3b3b57de");
                    // No address
                    if (result === "0x" || result === _ethersproject_constants__WEBPACK_IMPORTED_MODULE_11__.HashZero) {
                        return null;
                    }
                    return this.provider.formatter.callAddress(result);
                }
                catch (error) {
                    if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION) {
                        return null;
                    }
                    throw error;
                }
            }
            // keccak256("addr(bytes32,uint256")
            const hexBytes = yield this._fetchBytes("0xf1cb7e06", bytes32ify(coinType));
            // No address
            if (hexBytes == null || hexBytes === "0x") {
                return null;
            }
            // Compute the address
            const address = this._getAddress(coinType, hexBytes);
            if (address == null) {
                logger.throwError(`invalid or unsupported coin data`, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: `getAddress(${coinType})`,
                    coinType: coinType,
                    data: hexBytes
                });
            }
            return address;
        });
    }
    getAvatar() {
        return __awaiter(this, void 0, void 0, function* () {
            const linkage = [{ type: "name", content: this.name }];
            try {
                // test data for ricmoo.eth
                //const avatar = "eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233";
                const avatar = yield this.getText("avatar");
                if (avatar == null) {
                    return null;
                }
                for (let i = 0; i < matchers.length; i++) {
                    const match = avatar.match(matchers[i]);
                    if (match == null) {
                        continue;
                    }
                    const scheme = match[1].toLowerCase();
                    switch (scheme) {
                        case "https":
                            linkage.push({ type: "url", content: avatar });
                            return { linkage, url: avatar };
                        case "data":
                            linkage.push({ type: "data", content: avatar });
                            return { linkage, url: avatar };
                        case "ipfs":
                            linkage.push({ type: "ipfs", content: avatar });
                            return { linkage, url: getIpfsLink(avatar) };
                        case "erc721":
                        case "erc1155": {
                            // Depending on the ERC type, use tokenURI(uint256) or url(uint256)
                            const selector = (scheme === "erc721") ? "0xc87b56dd" : "0x0e89341c";
                            linkage.push({ type: scheme, content: avatar });
                            // The owner of this name
                            const owner = (this._resolvedAddress || (yield this.getAddress()));
                            const comps = (match[2] || "").split("/");
                            if (comps.length !== 2) {
                                return null;
                            }
                            const addr = yield this.provider.formatter.address(comps[0]);
                            const tokenId = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexZeroPad)(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(comps[1]).toHexString(), 32);
                            // Check that this account owns the token
                            if (scheme === "erc721") {
                                // ownerOf(uint256 tokenId)
                                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({
                                    to: addr, data: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)(["0x6352211e", tokenId])
                                }));
                                if (owner !== tokenOwner) {
                                    return null;
                                }
                                linkage.push({ type: "owner", content: tokenOwner });
                            }
                            else if (scheme === "erc1155") {
                                // balanceOf(address owner, uint256 tokenId)
                                const balance = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(yield this.provider.call({
                                    to: addr, data: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)(["0x00fdd58e", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexZeroPad)(owner, 32), tokenId])
                                }));
                                if (balance.isZero()) {
                                    return null;
                                }
                                linkage.push({ type: "balance", content: balance.toString() });
                            }
                            // Call the token contract for the metadata URL
                            const tx = {
                                to: this.provider.formatter.address(comps[0]),
                                data: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)([selector, tokenId])
                            };
                            let metadataUrl = _parseString(yield this.provider.call(tx), 0);
                            if (metadataUrl == null) {
                                return null;
                            }
                            linkage.push({ type: "metadata-url-base", content: metadataUrl });
                            // ERC-1155 allows a generic {id} in the URL
                            if (scheme === "erc1155") {
                                metadataUrl = metadataUrl.replace("{id}", tokenId.substring(2));
                                linkage.push({ type: "metadata-url-expanded", content: metadataUrl });
                            }
                            // Transform IPFS metadata links
                            if (metadataUrl.match(/^ipfs:/i)) {
                                metadataUrl = getIpfsLink(metadataUrl);
                            }
                            linkage.push({ type: "metadata-url", content: metadataUrl });
                            // Get the token metadata
                            const metadata = yield (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_12__.fetchJson)(metadataUrl);
                            if (!metadata) {
                                return null;
                            }
                            linkage.push({ type: "metadata", content: JSON.stringify(metadata) });
                            // Pull the image URL out
                            let imageUrl = metadata.image;
                            if (typeof (imageUrl) !== "string") {
                                return null;
                            }
                            if (imageUrl.match(/^(https:\/\/|data:)/i)) {
                                // Allow
                            }
                            else {
                                // Transform IPFS link to gateway
                                const ipfs = imageUrl.match(matcherIpfs);
                                if (ipfs == null) {
                                    return null;
                                }
                                linkage.push({ type: "url-ipfs", content: imageUrl });
                                imageUrl = getIpfsLink(imageUrl);
                            }
                            linkage.push({ type: "url", content: imageUrl });
                            return { linkage, url: imageUrl };
                        }
                    }
                }
            }
            catch (error) { }
            return null;
        });
    }
    getContentHash() {
        return __awaiter(this, void 0, void 0, function* () {
            // keccak256("contenthash()")
            const hexBytes = yield this._fetchBytes("0xbc1c58d1");
            // No contenthash
            if (hexBytes == null || hexBytes === "0x") {
                return null;
            }
            // IPFS (CID: 1, Type: DAG-PB)
            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
            if (ipfs) {
                const length = parseInt(ipfs[3], 16);
                if (ipfs[4].length === length * 2) {
                    return "ipfs:/\/" + _ethersproject_basex__WEBPACK_IMPORTED_MODULE_7__.Base58.encode("0x" + ipfs[1]);
                }
            }
            // IPNS (CID: 1, Type: libp2p-key)
            const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
            if (ipns) {
                const length = parseInt(ipns[3], 16);
                if (ipns[4].length === length * 2) {
                    return "ipns:/\/" + _ethersproject_basex__WEBPACK_IMPORTED_MODULE_7__.Base58.encode("0x" + ipns[1]);
                }
            }
            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)
            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);
            if (swarm) {
                if (swarm[1].length === (32 * 2)) {
                    return "bzz:/\/" + swarm[1];
                }
            }
            const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);
            if (skynet) {
                if (skynet[1].length === (34 * 2)) {
                    // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5
                    const urlSafe = { "=": "", "+": "-", "/": "_" };
                    const hash = (0,_ethersproject_base64__WEBPACK_IMPORTED_MODULE_13__.encode)("0x" + skynet[1]).replace(/[=+\/]/g, (a) => (urlSafe[a]));
                    return "sia:/\/" + hash;
                }
            }
            return logger.throwError(`invalid or unsupported content hash data`, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "getContentHash()",
                data: hexBytes
            });
        });
    }
    getText(key) {
        return __awaiter(this, void 0, void 0, function* () {
            // The key encoded as parameter to fetchBytes
            let keyBytes = (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_9__.toUtf8Bytes)(key);
            // The nodehash consumes the first slot, so the string pointer targets
            // offset 64, with the length at offset 64 and data starting at offset 96
            keyBytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);
            // Pad to word-size (32 bytes)
            if ((keyBytes.length % 32) !== 0) {
                keyBytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([keyBytes, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexZeroPad)("0x", 32 - (key.length % 32))]);
            }
            const hexBytes = yield this._fetchBytes("0x59d1d43c", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(keyBytes));
            if (hexBytes == null || hexBytes === "0x") {
                return null;
            }
            return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_9__.toUtf8String)(hexBytes);
        });
    }
}
let defaultFormatter = null;
let nextPollId = 1;
class BaseProvider extends _ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_4__.Provider {
    /**
     *  ready
     *
     *  A Promise<Network> that resolves only once the provider is ready.
     *
     *  Sub-classes that call the super with a network without a chainId
     *  MUST set this. Standard named networks have a known chainId.
     *
     */
    constructor(network) {
        super();
        // Events being listened to
        this._events = [];
        this._emitted = { block: -2 };
        this.disableCcipRead = false;
        this.formatter = new.target.getFormatter();
        // If network is any, this Provider allows the underlying
        // network to change dynamically, and we auto-detect the
        // current network
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "anyNetwork", (network === "any"));
        if (this.anyNetwork) {
            network = this.detectNetwork();
        }
        if (network instanceof Promise) {
            this._networkPromise = network;
            // Squash any "unhandled promise" errors; that do not need to be handled
            network.catch((error) => { });
            // Trigger initial network setting (async)
            this._ready().catch((error) => { });
        }
        else {
            const knownNetwork = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.getStatic)(new.target, "getNetwork")(network);
            if (knownNetwork) {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "_network", knownNetwork);
                this.emit("network", knownNetwork, null);
            }
            else {
                logger.throwArgumentError("invalid network", "network", network);
            }
        }
        this._maxInternalBlockNumber = -1024;
        this._lastBlockNumber = -2;
        this._maxFilterBlockRange = 10;
        this._pollingInterval = 4000;
        this._fastQueryDate = 0;
    }
    _ready() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._network == null) {
                let network = null;
                if (this._networkPromise) {
                    try {
                        network = yield this._networkPromise;
                    }
                    catch (error) { }
                }
                // Try the Provider's network detection (this MUST throw if it cannot)
                if (network == null) {
                    network = yield this.detectNetwork();
                }
                // This should never happen; every Provider sub-class should have
                // suggested a network by here (or have thrown).
                if (!network) {
                    logger.throwError("no network detected", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNKNOWN_ERROR, {});
                }
                // Possible this call stacked so do not call defineReadOnly again
                if (this._network == null) {
                    if (this.anyNetwork) {
                        this._network = network;
                    }
                    else {
                        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "_network", network);
                    }
                    this.emit("network", network, null);
                }
            }
            return this._network;
        });
    }
    // This will always return the most recently established network.
    // For "any", this can change (a "network" event is emitted before
    // any change is reflected); otherwise this cannot change
    get ready() {
        return (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_12__.poll)(() => {
            return this._ready().then((network) => {
                return network;
            }, (error) => {
                // If the network isn't running yet, we will wait
                if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.NETWORK_ERROR && error.event === "noNetwork") {
                    return undefined;
                }
                throw error;
            });
        });
    }
    // @TODO: Remove this and just create a singleton formatter
    static getFormatter() {
        if (defaultFormatter == null) {
            defaultFormatter = new _formatter__WEBPACK_IMPORTED_MODULE_14__.Formatter();
        }
        return defaultFormatter;
    }
    // @TODO: Remove this and just use getNetwork
    static getNetwork(network) {
        return (0,_ethersproject_networks__WEBPACK_IMPORTED_MODULE_15__.getNetwork)((network == null) ? "homestead" : network);
    }
    ccipReadFetch(tx, calldata, urls) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.disableCcipRead || urls.length === 0) {
                return null;
            }
            const sender = tx.to.toLowerCase();
            const data = calldata.toLowerCase();
            const errorMessages = [];
            for (let i = 0; i < urls.length; i++) {
                const url = urls[i];
                // URL expansion
                const href = url.replace("{sender}", sender).replace("{data}", data);
                // If no {data} is present, use POST; otherwise GET
                const json = (url.indexOf("{data}") >= 0) ? null : JSON.stringify({ data, sender });
                const result = yield (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_12__.fetchJson)({ url: href, errorPassThrough: true }, json, (value, response) => {
                    value.status = response.statusCode;
                    return value;
                });
                if (result.data) {
                    return result.data;
                }
                const errorMessage = (result.message || "unknown error");
                // 4xx indicates the result is not present; stop
                if (result.status >= 400 && result.status < 500) {
                    return logger.throwError(`response not found during CCIP fetch: ${errorMessage}`, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR, { url, errorMessage });
                }
                // 5xx indicates server issue; try the next url
                errorMessages.push(errorMessage);
            }
            return logger.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(", ")}`, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR, {
                urls, errorMessages
            });
        });
    }
    // Fetches the blockNumber, but will reuse any result that is less
    // than maxAge old or has been requested since the last request
    _getInternalBlockNumber(maxAge) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this._ready();
            // Allowing stale data up to maxAge old
            if (maxAge > 0) {
                // While there are pending internal block requests...
                while (this._internalBlockNumber) {
                    // ..."remember" which fetch we started with
                    const internalBlockNumber = this._internalBlockNumber;
                    try {
                        // Check the result is not too stale
                        const result = yield internalBlockNumber;
                        if ((getTime() - result.respTime) <= maxAge) {
                            return result.blockNumber;
                        }
                        // Too old; fetch a new value
                        break;
                    }
                    catch (error) {
                        // The fetch rejected; if we are the first to get the
                        // rejection, drop through so we replace it with a new
                        // fetch; all others blocked will then get that fetch
                        // which won't match the one they "remembered" and loop
                        if (this._internalBlockNumber === internalBlockNumber) {
                            break;
                        }
                    }
                }
            }
            const reqTime = getTime();
            const checkInternalBlockNumber = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)({
                blockNumber: this.perform("getBlockNumber", {}),
                networkError: this.getNetwork().then((network) => (null), (error) => (error))
            }).then(({ blockNumber, networkError }) => {
                if (networkError) {
                    // Unremember this bad internal block number
                    if (this._internalBlockNumber === checkInternalBlockNumber) {
                        this._internalBlockNumber = null;
                    }
                    throw networkError;
                }
                const respTime = getTime();
                blockNumber = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(blockNumber).toNumber();
                if (blockNumber < this._maxInternalBlockNumber) {
                    blockNumber = this._maxInternalBlockNumber;
                }
                this._maxInternalBlockNumber = blockNumber;
                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?
                return { blockNumber, reqTime, respTime };
            });
            this._internalBlockNumber = checkInternalBlockNumber;
            // Swallow unhandled exceptions; if needed they are handled else where
            checkInternalBlockNumber.catch((error) => {
                // Don't null the dead (rejected) fetch, if it has already been updated
                if (this._internalBlockNumber === checkInternalBlockNumber) {
                    this._internalBlockNumber = null;
                }
            });
            return (yield checkInternalBlockNumber).blockNumber;
        });
    }
    poll() {
        return __awaiter(this, void 0, void 0, function* () {
            const pollId = nextPollId++;
            // Track all running promises, so we can trigger a post-poll once they are complete
            const runners = [];
            let blockNumber = null;
            try {
                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);
            }
            catch (error) {
                this.emit("error", error);
                return;
            }
            this._setFastBlockNumber(blockNumber);
            // Emit a poll event after we have the latest (fast) block number
            this.emit("poll", pollId, blockNumber);
            // If the block has not changed, meh.
            if (blockNumber === this._lastBlockNumber) {
                this.emit("didPoll", pollId);
                return;
            }
            // First polling cycle, trigger a "block" events
            if (this._emitted.block === -2) {
                this._emitted.block = blockNumber - 1;
            }
            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {
                logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);
                this.emit("error", logger.makeError("network block skew detected", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.NETWORK_ERROR, {
                    blockNumber: blockNumber,
                    event: "blockSkew",
                    previousBlockNumber: this._emitted.block
                }));
                this.emit("block", blockNumber);
            }
            else {
                // Notify all listener for each block that has passed
                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {
                    this.emit("block", i);
                }
            }
            // The emitted block was updated, check for obsolete events
            if (this._emitted.block !== blockNumber) {
                this._emitted.block = blockNumber;
                Object.keys(this._emitted).forEach((key) => {
                    // The block event does not expire
                    if (key === "block") {
                        return;
                    }
                    // The block we were at when we emitted this event
                    const eventBlockNumber = this._emitted[key];
                    // We cannot garbage collect pending transactions or blocks here
                    // They should be garbage collected by the Provider when setting
                    // "pending" events
                    if (eventBlockNumber === "pending") {
                        return;
                    }
                    // Evict any transaction hashes or block hashes over 12 blocks
                    // old, since they should not return null anyways
                    if (blockNumber - eventBlockNumber > 12) {
                        delete this._emitted[key];
                    }
                });
            }
            // First polling cycle
            if (this._lastBlockNumber === -2) {
                this._lastBlockNumber = blockNumber - 1;
            }
            // Find all transaction hashes we are waiting on
            this._events.forEach((event) => {
                switch (event.type) {
                    case "tx": {
                        const hash = event.hash;
                        let runner = this.getTransactionReceipt(hash).then((receipt) => {
                            if (!receipt || receipt.blockNumber == null) {
                                return null;
                            }
                            this._emitted["t:" + hash] = receipt.blockNumber;
                            this.emit(hash, receipt);
                            return null;
                        }).catch((error) => { this.emit("error", error); });
                        runners.push(runner);
                        break;
                    }
                    case "filter": {
                        // We only allow a single getLogs to be in-flight at a time
                        if (!event._inflight) {
                            event._inflight = true;
                            // This is the first filter for this event, so we want to
                            // restrict events to events that happened no earlier than now
                            if (event._lastBlockNumber === -2) {
                                event._lastBlockNumber = blockNumber - 1;
                            }
                            // Filter from the last *known* event; due to load-balancing
                            // and some nodes returning updated block numbers before
                            // indexing events, a logs result with 0 entries cannot be
                            // trusted and we must retry a range which includes it again
                            const filter = event.filter;
                            filter.fromBlock = event._lastBlockNumber + 1;
                            filter.toBlock = blockNumber;
                            // Prevent fitler ranges from growing too wild, since it is quite
                            // likely there just haven't been any events to move the lastBlockNumber.
                            const minFromBlock = filter.toBlock - this._maxFilterBlockRange;
                            if (minFromBlock > filter.fromBlock) {
                                filter.fromBlock = minFromBlock;
                            }
                            if (filter.fromBlock < 0) {
                                filter.fromBlock = 0;
                            }
                            const runner = this.getLogs(filter).then((logs) => {
                                // Allow the next getLogs
                                event._inflight = false;
                                if (logs.length === 0) {
                                    return;
                                }
                                logs.forEach((log) => {
                                    // Only when we get an event for a given block number
                                    // can we trust the events are indexed
                                    if (log.blockNumber > event._lastBlockNumber) {
                                        event._lastBlockNumber = log.blockNumber;
                                    }
                                    // Make sure we stall requests to fetch blocks and txs
                                    this._emitted["b:" + log.blockHash] = log.blockNumber;
                                    this._emitted["t:" + log.transactionHash] = log.blockNumber;
                                    this.emit(filter, log);
                                });
                            }).catch((error) => {
                                this.emit("error", error);
                                // Allow another getLogs (the range was not updated)
                                event._inflight = false;
                            });
                            runners.push(runner);
                        }
                        break;
                    }
                }
            });
            this._lastBlockNumber = blockNumber;
            // Once all events for this loop have been processed, emit "didPoll"
            Promise.all(runners).then(() => {
                this.emit("didPoll", pollId);
            }).catch((error) => { this.emit("error", error); });
            return;
        });
    }
    // Deprecated; do not use this
    resetEventsBlock(blockNumber) {
        this._lastBlockNumber = blockNumber - 1;
        if (this.polling) {
            this.poll();
        }
    }
    get network() {
        return this._network;
    }
    // This method should query the network if the underlying network
    // can change, such as when connected to a JSON-RPC backend
    detectNetwork() {
        return __awaiter(this, void 0, void 0, function* () {
            return logger.throwError("provider does not support network detection", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "provider.detectNetwork"
            });
        });
    }
    getNetwork() {
        return __awaiter(this, void 0, void 0, function* () {
            const network = yield this._ready();
            // Make sure we are still connected to the same network; this is
            // only an external call for backends which can have the underlying
            // network change spontaneously
            const currentNetwork = yield this.detectNetwork();
            if (network.chainId !== currentNetwork.chainId) {
                // We are allowing network changes, things can get complex fast;
                // make sure you know what you are doing if you use "any"
                if (this.anyNetwork) {
                    this._network = currentNetwork;
                    // Reset all internal block number guards and caches
                    this._lastBlockNumber = -2;
                    this._fastBlockNumber = null;
                    this._fastBlockNumberPromise = null;
                    this._fastQueryDate = 0;
                    this._emitted.block = -2;
                    this._maxInternalBlockNumber = -1024;
                    this._internalBlockNumber = null;
                    // The "network" event MUST happen before this method resolves
                    // so any events have a chance to unregister, so we stall an
                    // additional event loop before returning from /this/ call
                    this.emit("network", currentNetwork, network);
                    yield stall(0);
                    return this._network;
                }
                const error = logger.makeError("underlying network changed", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.NETWORK_ERROR, {
                    event: "changed",
                    network: network,
                    detectedNetwork: currentNetwork
                });
                this.emit("error", error);
                throw error;
            }
            return network;
        });
    }
    get blockNumber() {
        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {
            this._setFastBlockNumber(blockNumber);
        }, (error) => { });
        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;
    }
    get polling() {
        return (this._poller != null);
    }
    set polling(value) {
        if (value && !this._poller) {
            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);
            if (!this._bootstrapPoll) {
                this._bootstrapPoll = setTimeout(() => {
                    this.poll();
                    // We block additional polls until the polling interval
                    // is done, to prevent overwhelming the poll function
                    this._bootstrapPoll = setTimeout(() => {
                        // If polling was disabled, something may require a poke
                        // since starting the bootstrap poll and it was disabled
                        if (!this._poller) {
                            this.poll();
                        }
                        // Clear out the bootstrap so we can do another
                        this._bootstrapPoll = null;
                    }, this.pollingInterval);
                }, 0);
            }
        }
        else if (!value && this._poller) {
            clearInterval(this._poller);
            this._poller = null;
        }
    }
    get pollingInterval() {
        return this._pollingInterval;
    }
    set pollingInterval(value) {
        if (typeof (value) !== "number" || value <= 0 || parseInt(String(value)) != value) {
            throw new Error("invalid polling interval");
        }
        this._pollingInterval = value;
        if (this._poller) {
            clearInterval(this._poller);
            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);
        }
    }
    _getFastBlockNumber() {
        const now = getTime();
        // Stale block number, request a newer value
        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {
            this._fastQueryDate = now;
            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {
                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
                    this._fastBlockNumber = blockNumber;
                }
                return this._fastBlockNumber;
            });
        }
        return this._fastBlockNumberPromise;
    }
    _setFastBlockNumber(blockNumber) {
        // Older block, maybe a stale request
        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {
            return;
        }
        // Update the time we updated the blocknumber
        this._fastQueryDate = getTime();
        // Newer block number, use  it
        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
            this._fastBlockNumber = blockNumber;
            this._fastBlockNumberPromise = Promise.resolve(blockNumber);
        }
    }
    waitForTransaction(transactionHash, confirmations, timeout) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);
        });
    }
    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {
        return __awaiter(this, void 0, void 0, function* () {
            const receipt = yield this.getTransactionReceipt(transactionHash);
            // Receipt is already good
            if ((receipt ? receipt.confirmations : 0) >= confirmations) {
                return receipt;
            }
            // Poll until the receipt is good...
            return new Promise((resolve, reject) => {
                const cancelFuncs = [];
                let done = false;
                const alreadyDone = function () {
                    if (done) {
                        return true;
                    }
                    done = true;
                    cancelFuncs.forEach((func) => { func(); });
                    return false;
                };
                const minedHandler = (receipt) => {
                    if (receipt.confirmations < confirmations) {
                        return;
                    }
                    if (alreadyDone()) {
                        return;
                    }
                    resolve(receipt);
                };
                this.on(transactionHash, minedHandler);
                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });
                if (replaceable) {
                    let lastBlockNumber = replaceable.startBlock;
                    let scannedBlock = null;
                    const replaceHandler = (blockNumber) => __awaiter(this, void 0, void 0, function* () {
                        if (done) {
                            return;
                        }
                        // Wait 1 second; this is only used in the case of a fault, so
                        // we will trade off a little bit of latency for more consistent
                        // results and fewer JSON-RPC calls
                        yield stall(1000);
                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter(this, void 0, void 0, function* () {
                            if (done) {
                                return;
                            }
                            if (nonce <= replaceable.nonce) {
                                lastBlockNumber = blockNumber;
                            }
                            else {
                                // First check if the transaction was mined
                                {
                                    const mined = yield this.getTransaction(transactionHash);
                                    if (mined && mined.blockNumber != null) {
                                        return;
                                    }
                                }
                                // First time scanning. We start a little earlier for some
                                // wiggle room here to handle the eventually consistent nature
                                // of blockchain (e.g. the getTransactionCount was for a
                                // different block)
                                if (scannedBlock == null) {
                                    scannedBlock = lastBlockNumber - 3;
                                    if (scannedBlock < replaceable.startBlock) {
                                        scannedBlock = replaceable.startBlock;
                                    }
                                }
                                while (scannedBlock <= blockNumber) {
                                    if (done) {
                                        return;
                                    }
                                    const block = yield this.getBlockWithTransactions(scannedBlock);
                                    for (let ti = 0; ti < block.transactions.length; ti++) {
                                        const tx = block.transactions[ti];
                                        // Successfully mined!
                                        if (tx.hash === transactionHash) {
                                            return;
                                        }
                                        // Matches our transaction from and nonce; its a replacement
                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {
                                            if (done) {
                                                return;
                                            }
                                            // Get the receipt of the replacement
                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);
                                            // Already resolved or rejected (prolly a timeout)
                                            if (alreadyDone()) {
                                                return;
                                            }
                                            // The reason we were replaced
                                            let reason = "replaced";
                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {
                                                reason = "repriced";
                                            }
                                            else if (tx.data === "0x" && tx.from === tx.to && tx.value.isZero()) {
                                                reason = "cancelled";
                                            }
                                            // Explain why we were replaced
                                            reject(logger.makeError("transaction was replaced", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.TRANSACTION_REPLACED, {
                                                cancelled: (reason === "replaced" || reason === "cancelled"),
                                                reason,
                                                replacement: this._wrapTransaction(tx),
                                                hash: transactionHash,
                                                receipt
                                            }));
                                            return;
                                        }
                                    }
                                    scannedBlock++;
                                }
                            }
                            if (done) {
                                return;
                            }
                            this.once("block", replaceHandler);
                        }), (error) => {
                            if (done) {
                                return;
                            }
                            this.once("block", replaceHandler);
                        });
                    });
                    if (done) {
                        return;
                    }
                    this.once("block", replaceHandler);
                    cancelFuncs.push(() => {
                        this.removeListener("block", replaceHandler);
                    });
                }
                if (typeof (timeout) === "number" && timeout > 0) {
                    const timer = setTimeout(() => {
                        if (alreadyDone()) {
                            return;
                        }
                        reject(logger.makeError("timeout exceeded", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.TIMEOUT, { timeout: timeout }));
                    }, timeout);
                    if (timer.unref) {
                        timer.unref();
                    }
                    cancelFuncs.push(() => { clearTimeout(timer); });
                }
            });
        });
    }
    getBlockNumber() {
        return __awaiter(this, void 0, void 0, function* () {
            return this._getInternalBlockNumber(0);
        });
    }
    getGasPrice() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const result = yield this.perform("getGasPrice", {});
            try {
                return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(result);
            }
            catch (error) {
                return logger.throwError("bad result from backend", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR, {
                    method: "getGasPrice",
                    result, error
                });
            }
        });
    }
    getBalance(addressOrName, blockTag) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getBalance", params);
            try {
                return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(result);
            }
            catch (error) {
                return logger.throwError("bad result from backend", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR, {
                    method: "getBalance",
                    params, result, error
                });
            }
        });
    }
    getTransactionCount(addressOrName, blockTag) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getTransactionCount", params);
            try {
                return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(result).toNumber();
            }
            catch (error) {
                return logger.throwError("bad result from backend", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR, {
                    method: "getTransactionCount",
                    params, result, error
                });
            }
        });
    }
    getCode(addressOrName, blockTag) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getCode", params);
            try {
                return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(result);
            }
            catch (error) {
                return logger.throwError("bad result from backend", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR, {
                    method: "getCode",
                    params, result, error
                });
            }
        });
    }
    getStorageAt(addressOrName, position, blockTag) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag),
                position: Promise.resolve(position).then((p) => (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexValue)(p))
            });
            const result = yield this.perform("getStorageAt", params);
            try {
                return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(result);
            }
            catch (error) {
                return logger.throwError("bad result from backend", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR, {
                    method: "getStorageAt",
                    params, result, error
                });
            }
        });
    }
    // This should be called by any subclass wrapping a TransactionResponse
    _wrapTransaction(tx, hash, startBlock) {
        if (hash != null && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataLength)(hash) !== 32) {
            throw new Error("invalid response - sendTransaction");
        }
        const result = tx;
        // Check the hash we expect is the same as the hash the server reported
        if (hash != null && tx.hash !== hash) {
            logger.throwError("Transaction hash mismatch from Provider.sendTransaction.", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });
        }
        result.wait = (confirms, timeout) => __awaiter(this, void 0, void 0, function* () {
            if (confirms == null) {
                confirms = 1;
            }
            if (timeout == null) {
                timeout = 0;
            }
            // Get the details to detect replacement
            let replacement = undefined;
            if (confirms !== 0 && startBlock != null) {
                replacement = {
                    data: tx.data,
                    from: tx.from,
                    nonce: tx.nonce,
                    to: tx.to,
                    value: tx.value,
                    startBlock
                };
            }
            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);
            if (receipt == null && confirms === 0) {
                return null;
            }
            // No longer pending, allow the polling loop to garbage collect this
            this._emitted["t:" + tx.hash] = receipt.blockNumber;
            if (receipt.status === 0) {
                logger.throwError("transaction failed", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION, {
                    transactionHash: tx.hash,
                    transaction: tx,
                    receipt: receipt
                });
            }
            return receipt;
        });
        return result;
    }
    sendTransaction(signedTransaction) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const hexTx = yield Promise.resolve(signedTransaction).then(t => (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(t));
            const tx = this.formatter.transaction(signedTransaction);
            if (tx.confirmations == null) {
                tx.confirmations = 0;
            }
            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
            try {
                const hash = yield this.perform("sendTransaction", { signedTransaction: hexTx });
                return this._wrapTransaction(tx, hash, blockNumber);
            }
            catch (error) {
                error.transaction = tx;
                error.transactionHash = tx.hash;
                throw error;
            }
        });
    }
    _getTransactionRequest(transaction) {
        return __awaiter(this, void 0, void 0, function* () {
            const values = yield transaction;
            const tx = {};
            ["from", "to"].forEach((key) => {
                if (values[key] == null) {
                    return;
                }
                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));
            });
            ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((key) => {
                if (values[key] == null) {
                    return;
                }
                tx[key] = Promise.resolve(values[key]).then((v) => (v ? _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(v) : null));
            });
            ["type"].forEach((key) => {
                if (values[key] == null) {
                    return;
                }
                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));
            });
            if (values.accessList) {
                tx.accessList = this.formatter.accessList(values.accessList);
            }
            ["data"].forEach((key) => {
                if (values[key] == null) {
                    return;
                }
                tx[key] = Promise.resolve(values[key]).then((v) => (v ? (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(v) : null));
            });
            return this.formatter.transactionRequest(yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)(tx));
        });
    }
    _getFilter(filter) {
        return __awaiter(this, void 0, void 0, function* () {
            filter = yield filter;
            const result = {};
            if (filter.address != null) {
                result.address = this._getAddress(filter.address);
            }
            ["blockHash", "topics"].forEach((key) => {
                if (filter[key] == null) {
                    return;
                }
                result[key] = filter[key];
            });
            ["fromBlock", "toBlock"].forEach((key) => {
                if (filter[key] == null) {
                    return;
                }
                result[key] = this._getBlockTag(filter[key]);
            });
            return this.formatter.filter(yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)(result));
        });
    }
    _call(transaction, blockTag, attempt) {
        return __awaiter(this, void 0, void 0, function* () {
            if (attempt >= MAX_CCIP_REDIRECTS) {
                logger.throwError("CCIP read exceeded maximum redirections", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR, {
                    redirects: attempt, transaction
                });
            }
            const txSender = transaction.to;
            const result = yield this.perform("call", { transaction, blockTag });
            // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)
            if (attempt >= 0 && blockTag === "latest" && txSender != null && result.substring(0, 10) === "0x556f1830" && ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataLength)(result) % 32 === 4)) {
                try {
                    const data = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)(result, 4);
                    // Check the sender of the OffchainLookup matches the transaction
                    const sender = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)(data, 0, 32);
                    if (!_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(sender).eq(txSender)) {
                        logger.throwError("CCIP Read sender did not match", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION, {
                            name: "OffchainLookup",
                            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                            transaction, data: result
                        });
                    }
                    // Read the URLs from the response
                    const urls = [];
                    const urlsOffset = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)(data, 32, 64)).toNumber();
                    const urlsLength = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)(data, urlsOffset, urlsOffset + 32)).toNumber();
                    const urlsData = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)(data, urlsOffset + 32);
                    for (let u = 0; u < urlsLength; u++) {
                        const url = _parseString(urlsData, u * 32);
                        if (url == null) {
                            logger.throwError("CCIP Read contained corrupt URL string", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction, data: result
                            });
                        }
                        urls.push(url);
                    }
                    // Get the CCIP calldata to forward
                    const calldata = _parseBytes(data, 64);
                    // Get the callbackSelector (bytes4)
                    if (!_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)(data, 100, 128)).isZero()) {
                        logger.throwError("CCIP Read callback selector included junk", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION, {
                            name: "OffchainLookup",
                            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                            transaction, data: result
                        });
                    }
                    const callbackSelector = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexDataSlice)(data, 96, 100);
                    // Get the extra data to send back to the contract as context
                    const extraData = _parseBytes(data, 128);
                    const ccipResult = yield this.ccipReadFetch(transaction, calldata, urls);
                    if (ccipResult == null) {
                        logger.throwError("CCIP Read disabled or provided no URLs", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION, {
                            name: "OffchainLookup",
                            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                            transaction, data: result
                        });
                    }
                    const tx = {
                        to: txSender,
                        data: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)([callbackSelector, encodeBytes([ccipResult, extraData])])
                    };
                    return this._call(tx, blockTag, attempt + 1);
                }
                catch (error) {
                    if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR) {
                        throw error;
                    }
                }
            }
            try {
                return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(result);
            }
            catch (error) {
                return logger.throwError("bad result from backend", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR, {
                    method: "call",
                    params: { transaction, blockTag }, result, error
                });
            }
        });
    }
    call(transaction, blockTag) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const resolved = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)({
                transaction: this._getTransactionRequest(transaction),
                blockTag: this._getBlockTag(blockTag),
                ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)
            });
            return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1);
        });
    }
    estimateGas(transaction) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)({
                transaction: this._getTransactionRequest(transaction)
            });
            const result = yield this.perform("estimateGas", params);
            try {
                return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(result);
            }
            catch (error) {
                return logger.throwError("bad result from backend", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.SERVER_ERROR, {
                    method: "estimateGas",
                    params, result, error
                });
            }
        });
    }
    _getAddress(addressOrName) {
        return __awaiter(this, void 0, void 0, function* () {
            addressOrName = yield addressOrName;
            if (typeof (addressOrName) !== "string") {
                logger.throwArgumentError("invalid address or ENS name", "name", addressOrName);
            }
            const address = yield this.resolveName(addressOrName);
            if (address == null) {
                logger.throwError("ENS name not configured", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: `resolveName(${JSON.stringify(addressOrName)})`
                });
            }
            return address;
        });
    }
    _getBlock(blockHashOrBlockTag, includeTransactions) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            blockHashOrBlockTag = yield blockHashOrBlockTag;
            // If blockTag is a number (not "latest", etc), this is the block number
            let blockNumber = -128;
            const params = {
                includeTransactions: !!includeTransactions
            };
            if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(blockHashOrBlockTag, 32)) {
                params.blockHash = blockHashOrBlockTag;
            }
            else {
                try {
                    params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);
                    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(params.blockTag)) {
                        blockNumber = parseInt(params.blockTag.substring(2), 16);
                    }
                }
                catch (error) {
                    logger.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", blockHashOrBlockTag);
                }
            }
            return (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_12__.poll)(() => __awaiter(this, void 0, void 0, function* () {
                const block = yield this.perform("getBlock", params);
                // Block was not found
                if (block == null) {
                    // For blockhashes, if we didn't say it existed, that blockhash may
                    // not exist. If we did see it though, perhaps from a log, we know
                    // it exists, and this node is just not caught up yet.
                    if (params.blockHash != null) {
                        if (this._emitted["b:" + params.blockHash] == null) {
                            return null;
                        }
                    }
                    // For block tags, if we are asking for a future block, we return null
                    if (params.blockTag != null) {
                        if (blockNumber > this._emitted.block) {
                            return null;
                        }
                    }
                    // Retry on the next block
                    return undefined;
                }
                // Add transactions
                if (includeTransactions) {
                    let blockNumber = null;
                    for (let i = 0; i < block.transactions.length; i++) {
                        const tx = block.transactions[i];
                        if (tx.blockNumber == null) {
                            tx.confirmations = 0;
                        }
                        else if (tx.confirmations == null) {
                            if (blockNumber == null) {
                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                            }
                            // Add the confirmations using the fast block number (pessimistic)
                            let confirmations = (blockNumber - tx.blockNumber) + 1;
                            if (confirmations <= 0) {
                                confirmations = 1;
                            }
                            tx.confirmations = confirmations;
                        }
                    }
                    const blockWithTxs = this.formatter.blockWithTransactions(block);
                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));
                    return blockWithTxs;
                }
                return this.formatter.block(block);
            }), { oncePoll: this });
        });
    }
    getBlock(blockHashOrBlockTag) {
        return (this._getBlock(blockHashOrBlockTag, false));
    }
    getBlockWithTransactions(blockHashOrBlockTag) {
        return (this._getBlock(blockHashOrBlockTag, true));
    }
    getTransaction(transactionHash) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            transactionHash = yield transactionHash;
            const params = { transactionHash: this.formatter.hash(transactionHash, true) };
            return (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_12__.poll)(() => __awaiter(this, void 0, void 0, function* () {
                const result = yield this.perform("getTransaction", params);
                if (result == null) {
                    if (this._emitted["t:" + transactionHash] == null) {
                        return null;
                    }
                    return undefined;
                }
                const tx = this.formatter.transactionResponse(result);
                if (tx.blockNumber == null) {
                    tx.confirmations = 0;
                }
                else if (tx.confirmations == null) {
                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                    // Add the confirmations using the fast block number (pessimistic)
                    let confirmations = (blockNumber - tx.blockNumber) + 1;
                    if (confirmations <= 0) {
                        confirmations = 1;
                    }
                    tx.confirmations = confirmations;
                }
                return this._wrapTransaction(tx);
            }), { oncePoll: this });
        });
    }
    getTransactionReceipt(transactionHash) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            transactionHash = yield transactionHash;
            const params = { transactionHash: this.formatter.hash(transactionHash, true) };
            return (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_12__.poll)(() => __awaiter(this, void 0, void 0, function* () {
                const result = yield this.perform("getTransactionReceipt", params);
                if (result == null) {
                    if (this._emitted["t:" + transactionHash] == null) {
                        return null;
                    }
                    return undefined;
                }
                // "geth-etc" returns receipts before they are ready
                if (result.blockHash == null) {
                    return undefined;
                }
                const receipt = this.formatter.receipt(result);
                if (receipt.blockNumber == null) {
                    receipt.confirmations = 0;
                }
                else if (receipt.confirmations == null) {
                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                    // Add the confirmations using the fast block number (pessimistic)
                    let confirmations = (blockNumber - receipt.blockNumber) + 1;
                    if (confirmations <= 0) {
                        confirmations = 1;
                    }
                    receipt.confirmations = confirmations;
                }
                return receipt;
            }), { oncePoll: this });
        });
    }
    getLogs(filter) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)({ filter: this._getFilter(filter) });
            const logs = yield this.perform("getLogs", params);
            logs.forEach((log) => {
                if (log.removed == null) {
                    log.removed = false;
                }
            });
            return _formatter__WEBPACK_IMPORTED_MODULE_14__.Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);
        });
    }
    getEtherPrice() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.getNetwork();
            return this.perform("getEtherPrice", {});
        });
    }
    _getBlockTag(blockTag) {
        return __awaiter(this, void 0, void 0, function* () {
            blockTag = yield blockTag;
            if (typeof (blockTag) === "number" && blockTag < 0) {
                if (blockTag % 1) {
                    logger.throwArgumentError("invalid BlockTag", "blockTag", blockTag);
                }
                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                blockNumber += blockTag;
                if (blockNumber < 0) {
                    blockNumber = 0;
                }
                return this.formatter.blockTag(blockNumber);
            }
            return this.formatter.blockTag(blockTag);
        });
    }
    getResolver(name) {
        return __awaiter(this, void 0, void 0, function* () {
            let currentName = name;
            while (true) {
                if (currentName === "" || currentName === ".") {
                    return null;
                }
                // Optimization since the eth node cannot change and does
                // not have a wildcard resolver
                if (name !== "eth" && currentName === "eth") {
                    return null;
                }
                // Check the current node for a resolver
                const addr = yield this._getResolver(currentName, "getResolver");
                // Found a resolver!
                if (addr != null) {
                    const resolver = new Resolver(this, addr, name);
                    // Legacy resolver found, using EIP-2544 so it isn't safe to use
                    if (currentName !== name && !(yield resolver.supportsWildcard())) {
                        return null;
                    }
                    return resolver;
                }
                // Get the parent node
                currentName = currentName.split(".").slice(1).join(".");
            }
        });
    }
    _getResolver(name, operation) {
        return __awaiter(this, void 0, void 0, function* () {
            if (operation == null) {
                operation = "ENS";
            }
            const network = yield this.getNetwork();
            // No ENS...
            if (!network.ensAddress) {
                logger.throwError("network does not support ENS", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, { operation, network: network.name });
            }
            try {
                // keccak256("resolver(bytes32)")
                const addrData = yield this.call({
                    to: network.ensAddress,
                    data: ("0x0178b8bf" + (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_10__.namehash)(name).substring(2))
                });
                return this.formatter.callAddress(addrData);
            }
            catch (error) {
                // ENS registry cannot throw errors on resolver(bytes32)
            }
            return null;
        });
    }
    resolveName(name) {
        return __awaiter(this, void 0, void 0, function* () {
            name = yield name;
            // If it is already an address, nothing to resolve
            try {
                return Promise.resolve(this.formatter.address(name));
            }
            catch (error) {
                // If is is a hexstring, the address is bad (See #694)
                if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(name)) {
                    throw error;
                }
            }
            if (typeof (name) !== "string") {
                logger.throwArgumentError("invalid ENS name", "name", name);
            }
            // Get the addr from the resolver
            const resolver = yield this.getResolver(name);
            if (!resolver) {
                return null;
            }
            return yield resolver.getAddress();
        });
    }
    lookupAddress(address) {
        return __awaiter(this, void 0, void 0, function* () {
            address = yield address;
            address = this.formatter.address(address);
            const node = address.substring(2).toLowerCase() + ".addr.reverse";
            const resolverAddr = yield this._getResolver(node, "lookupAddress");
            if (resolverAddr == null) {
                return null;
            }
            // keccak("name(bytes32)")
            const name = _parseString(yield this.call({
                to: resolverAddr,
                data: ("0x691f3431" + (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_10__.namehash)(node).substring(2))
            }), 0);
            const addr = yield this.resolveName(name);
            if (addr != address) {
                return null;
            }
            return name;
        });
    }
    getAvatar(nameOrAddress) {
        return __awaiter(this, void 0, void 0, function* () {
            let resolver = null;
            if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(nameOrAddress)) {
                // Address; reverse lookup
                const address = this.formatter.address(nameOrAddress);
                const node = address.substring(2).toLowerCase() + ".addr.reverse";
                const resolverAddress = yield this._getResolver(node, "getAvatar");
                if (!resolverAddress) {
                    return null;
                }
                // Try resolving the avatar against the addr.reverse resolver
                resolver = new Resolver(this, resolverAddress, node);
                try {
                    const avatar = yield resolver.getAvatar();
                    if (avatar) {
                        return avatar.url;
                    }
                }
                catch (error) {
                    if (error.code !== _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION) {
                        throw error;
                    }
                }
                // Try getting the name and performing forward lookup; allowing wildcards
                try {
                    // keccak("name(bytes32)")
                    const name = _parseString(yield this.call({
                        to: resolverAddress,
                        data: ("0x691f3431" + (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_10__.namehash)(node).substring(2))
                    }), 0);
                    resolver = yield this.getResolver(name);
                }
                catch (error) {
                    if (error.code !== _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.CALL_EXCEPTION) {
                        throw error;
                    }
                    return null;
                }
            }
            else {
                // ENS name; forward lookup with wildcard
                resolver = yield this.getResolver(nameOrAddress);
                if (!resolver) {
                    return null;
                }
            }
            const avatar = yield resolver.getAvatar();
            if (avatar == null) {
                return null;
            }
            return avatar.url;
        });
    }
    perform(method, params) {
        return logger.throwError(method + " not implemented", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.NOT_IMPLEMENTED, { operation: method });
    }
    _startEvent(event) {
        this.polling = (this._events.filter((e) => e.pollable()).length > 0);
    }
    _stopEvent(event) {
        this.polling = (this._events.filter((e) => e.pollable()).length > 0);
    }
    _addEventListener(eventName, listener, once) {
        const event = new Event(getEventTag(eventName), listener, once);
        this._events.push(event);
        this._startEvent(event);
        return this;
    }
    on(eventName, listener) {
        return this._addEventListener(eventName, listener, false);
    }
    once(eventName, listener) {
        return this._addEventListener(eventName, listener, true);
    }
    emit(eventName, ...args) {
        let result = false;
        let stopped = [];
        let eventTag = getEventTag(eventName);
        this._events = this._events.filter((event) => {
            if (event.tag !== eventTag) {
                return true;
            }
            setTimeout(() => {
                event.listener.apply(this, args);
            }, 0);
            result = true;
            if (event.once) {
                stopped.push(event);
                return false;
            }
            return true;
        });
        stopped.forEach((event) => { this._stopEvent(event); });
        return result;
    }
    listenerCount(eventName) {
        if (!eventName) {
            return this._events.length;
        }
        let eventTag = getEventTag(eventName);
        return this._events.filter((event) => {
            return (event.tag === eventTag);
        }).length;
    }
    listeners(eventName) {
        if (eventName == null) {
            return this._events.map((event) => event.listener);
        }
        let eventTag = getEventTag(eventName);
        return this._events
            .filter((event) => (event.tag === eventTag))
            .map((event) => event.listener);
    }
    off(eventName, listener) {
        if (listener == null) {
            return this.removeAllListeners(eventName);
        }
        const stopped = [];
        let found = false;
        let eventTag = getEventTag(eventName);
        this._events = this._events.filter((event) => {
            if (event.tag !== eventTag || event.listener != listener) {
                return true;
            }
            if (found) {
                return true;
            }
            found = true;
            stopped.push(event);
            return false;
        });
        stopped.forEach((event) => { this._stopEvent(event); });
        return this;
    }
    removeAllListeners(eventName) {
        let stopped = [];
        if (eventName == null) {
            stopped = this._events;
            this._events = [];
        }
        else {
            const eventTag = getEventTag(eventName);
            this._events = this._events.filter((event) => {
                if (event.tag !== eventTag) {
                    return true;
                }
                stopped.push(event);
                return false;
            });
        }
        stopped.forEach((event) => { this._stopEvent(event); });
        return this;
    }
}
//# sourceMappingURL=base-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CloudflareProvider": () => (/* binding */ CloudflareProvider)
/* harmony export */ });
/* harmony import */ var _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./url-json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
class CloudflareProvider extends _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__.UrlJsonRpcProvider {
    static getApiKey(apiKey) {
        if (apiKey != null) {
            logger.throwArgumentError("apiKey not supported for cloudflare", "apiKey", apiKey);
        }
        return null;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch (network.name) {
            case "homestead":
                host = "https://cloudflare-eth.com/";
                break;
            default:
                logger.throwArgumentError("unsupported network", "network", arguments[0]);
        }
        return host;
    }
    perform(method, params) {
        const _super = Object.create(null, {
            perform: { get: () => super.perform }
        });
        return __awaiter(this, void 0, void 0, function* () {
            // The Cloudflare provider does not support eth_blockNumber,
            // so we get the latest block and pull it from that
            if (method === "getBlockNumber") {
                const block = yield _super.perform.call(this, "getBlock", { blockTag: "latest" });
                return block.number;
            }
            return _super.perform.call(this, method, params);
        });
    }
}
//# sourceMappingURL=cloudflare-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EtherscanProvider": () => (/* binding */ EtherscanProvider)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/transactions */ "./node_modules/@ethersproject/transactions/lib.esm/index.js");
/* harmony import */ var _ethersproject_web__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/web */ "./node_modules/@ethersproject/web/lib.esm/index.js");
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./formatter */ "./node_modules/@ethersproject/providers/lib.esm/formatter.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");
/* harmony import */ var _base_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./base-provider */ "./node_modules/@ethersproject/providers/lib.esm/base-provider.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

// The transaction has already been sanitized by the calls in Provider
function getTransactionPostData(transaction) {
    const result = {};
    for (let key in transaction) {
        if (transaction[key] == null) {
            continue;
        }
        let value = transaction[key];
        if (key === "type" && value === 0) {
            continue;
        }
        // Quantity-types require no leading zero, unless 0
        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {
            value = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexValue)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(value));
        }
        else if (key === "accessList") {
            value = "[" + (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_3__.accessListify)(value).map((set) => {
                return `{address:"${set.address}",storageKeys:["${set.storageKeys.join('","')}"]}`;
            }).join(",") + "]";
        }
        else {
            value = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(value);
        }
        result[key] = value;
    }
    return result;
}
function getResult(result) {
    // getLogs, getHistory have weird success responses
    if (result.status == 0 && (result.message === "No records found" || result.message === "No transactions found")) {
        return result.result;
    }
    if (result.status != 1 || typeof (result.message) !== "string" || !result.message.match(/^OK/)) {
        const error = new Error("invalid response");
        error.result = JSON.stringify(result);
        if ((result.result || "").toLowerCase().indexOf("rate limit") >= 0) {
            error.throttleRetry = true;
        }
        throw error;
    }
    return result.result;
}
function getJsonResult(result) {
    // This response indicates we are being throttled
    if (result && result.status == 0 && result.message == "NOTOK" && (result.result || "").toLowerCase().indexOf("rate limit") >= 0) {
        const error = new Error("throttled response");
        error.result = JSON.stringify(result);
        error.throttleRetry = true;
        throw error;
    }
    if (result.jsonrpc != "2.0") {
        // @TODO: not any
        const error = new Error("invalid response");
        error.result = JSON.stringify(result);
        throw error;
    }
    if (result.error) {
        // @TODO: not any
        const error = new Error(result.error.message || "unknown error");
        if (result.error.code) {
            error.code = result.error.code;
        }
        if (result.error.data) {
            error.data = result.error.data;
        }
        throw error;
    }
    return result.result;
}
// The blockTag was normalized as a string by the Provider pre-perform operations
function checkLogTag(blockTag) {
    if (blockTag === "pending") {
        throw new Error("pending not supported");
    }
    if (blockTag === "latest") {
        return blockTag;
    }
    return parseInt(blockTag.substring(2), 16);
}
function checkError(method, error, transaction) {
    // Undo the "convenience" some nodes are attempting to prevent backwards
    // incompatibility; maybe for v6 consider forwarding reverts as errors
    if (method === "call" && error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.SERVER_ERROR) {
        const e = error.error;
        // Etherscan keeps changing their string
        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {
            // Etherscan prefixes the data like "Reverted 0x1234"
            let data = e.data;
            if (data) {
                data = "0x" + data.replace(/^.*0x/i, "");
            }
            if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isHexString)(data)) {
                return data;
            }
            logger.throwError("missing revert data in call exception", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.CALL_EXCEPTION, {
                error, data: "0x"
            });
        }
    }
    // Get the message from any nested error structure
    let message = error.message;
    if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.SERVER_ERROR) {
        if (error.error && typeof (error.error.message) === "string") {
            message = error.error.message;
        }
        else if (typeof (error.body) === "string") {
            message = error.body;
        }
        else if (typeof (error.responseText) === "string") {
            message = error.responseText;
        }
    }
    message = (message || "").toLowerCase();
    // "Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0"
    if (message.match(/insufficient funds/)) {
        logger.throwError("insufficient funds for intrinsic transaction cost", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INSUFFICIENT_FUNDS, {
            error, method, transaction
        });
    }
    // "Transaction with the same hash was already imported."
    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {
        logger.throwError("nonce has already been used", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.NONCE_EXPIRED, {
            error, method, transaction
        });
    }
    // "Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce."
    if (message.match(/another transaction with same nonce/)) {
        logger.throwError("replacement fee too low", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.REPLACEMENT_UNDERPRICED, {
            error, method, transaction
        });
    }
    if (message.match(/execution failed due to an exception|execution reverted/)) {
        logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
            error, method, transaction
        });
    }
    throw error;
}
class EtherscanProvider extends _base_provider__WEBPACK_IMPORTED_MODULE_4__.BaseProvider {
    constructor(network, apiKey) {
        super(network);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "baseUrl", this.getBaseUrl());
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "apiKey", apiKey || null);
    }
    getBaseUrl() {
        switch (this.network ? this.network.name : "invalid") {
            case "homestead":
                return "https:/\/api.etherscan.io";
            case "goerli":
                return "https:/\/api-goerli.etherscan.io";
            case "sepolia":
                return "https:/\/api-sepolia.etherscan.io";
            case "matic":
                return "https:/\/api.polygonscan.com";
            case "maticmum":
                return "https:/\/api-testnet.polygonscan.com";
            case "arbitrum":
                return "https:/\/api.arbiscan.io";
            case "arbitrum-goerli":
                return "https:/\/api-goerli.arbiscan.io";
            case "optimism":
                return "https:/\/api-optimistic.etherscan.io";
            case "optimism-goerli":
                return "https:/\/api-goerli-optimistic.etherscan.io";
            default:
        }
        return logger.throwArgumentError("unsupported network", "network", this.network.name);
    }
    getUrl(module, params) {
        const query = Object.keys(params).reduce((accum, key) => {
            const value = params[key];
            if (value != null) {
                accum += `&${key}=${value}`;
            }
            return accum;
        }, "");
        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : "");
        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;
    }
    getPostUrl() {
        return `${this.baseUrl}/api`;
    }
    getPostData(module, params) {
        params.module = module;
        params.apikey = this.apiKey;
        return params;
    }
    fetch(module, params, post) {
        return __awaiter(this, void 0, void 0, function* () {
            const url = (post ? this.getPostUrl() : this.getUrl(module, params));
            const payload = (post ? this.getPostData(module, params) : null);
            const procFunc = (module === "proxy") ? getJsonResult : getResult;
            this.emit("debug", {
                action: "request",
                request: url,
                provider: this
            });
            const connection = {
                url: url,
                throttleSlotInterval: 1000,
                throttleCallback: (attempt, url) => {
                    if (this.isCommunityResource()) {
                        (0,_formatter__WEBPACK_IMPORTED_MODULE_6__.showThrottleMessage)();
                    }
                    return Promise.resolve(true);
                }
            };
            let payloadStr = null;
            if (payload) {
                connection.headers = { "content-type": "application/x-www-form-urlencoded; charset=UTF-8" };
                payloadStr = Object.keys(payload).map((key) => {
                    return `${key}=${payload[key]}`;
                }).join("&");
            }
            const result = yield (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_7__.fetchJson)(connection, payloadStr, procFunc || getJsonResult);
            this.emit("debug", {
                action: "response",
                request: url,
                response: (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.deepCopy)(result),
                provider: this
            });
            return result;
        });
    }
    detectNetwork() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.network;
        });
    }
    perform(method, params) {
        const _super = Object.create(null, {
            perform: { get: () => super.perform }
        });
        return __awaiter(this, void 0, void 0, function* () {
            switch (method) {
                case "getBlockNumber":
                    return this.fetch("proxy", { action: "eth_blockNumber" });
                case "getGasPrice":
                    return this.fetch("proxy", { action: "eth_gasPrice" });
                case "getBalance":
                    // Returns base-10 result
                    return this.fetch("account", {
                        action: "balance",
                        address: params.address,
                        tag: params.blockTag
                    });
                case "getTransactionCount":
                    return this.fetch("proxy", {
                        action: "eth_getTransactionCount",
                        address: params.address,
                        tag: params.blockTag
                    });
                case "getCode":
                    return this.fetch("proxy", {
                        action: "eth_getCode",
                        address: params.address,
                        tag: params.blockTag
                    });
                case "getStorageAt":
                    return this.fetch("proxy", {
                        action: "eth_getStorageAt",
                        address: params.address,
                        position: params.position,
                        tag: params.blockTag
                    });
                case "sendTransaction":
                    return this.fetch("proxy", {
                        action: "eth_sendRawTransaction",
                        hex: params.signedTransaction
                    }, true).catch((error) => {
                        return checkError("sendTransaction", error, params.signedTransaction);
                    });
                case "getBlock":
                    if (params.blockTag) {
                        return this.fetch("proxy", {
                            action: "eth_getBlockByNumber",
                            tag: params.blockTag,
                            boolean: (params.includeTransactions ? "true" : "false")
                        });
                    }
                    throw new Error("getBlock by blockHash not implemented");
                case "getTransaction":
                    return this.fetch("proxy", {
                        action: "eth_getTransactionByHash",
                        txhash: params.transactionHash
                    });
                case "getTransactionReceipt":
                    return this.fetch("proxy", {
                        action: "eth_getTransactionReceipt",
                        txhash: params.transactionHash
                    });
                case "call": {
                    if (params.blockTag !== "latest") {
                        throw new Error("EtherscanProvider does not support blockTag for call");
                    }
                    const postData = getTransactionPostData(params.transaction);
                    postData.module = "proxy";
                    postData.action = "eth_call";
                    try {
                        return yield this.fetch("proxy", postData, true);
                    }
                    catch (error) {
                        return checkError("call", error, params.transaction);
                    }
                }
                case "estimateGas": {
                    const postData = getTransactionPostData(params.transaction);
                    postData.module = "proxy";
                    postData.action = "eth_estimateGas";
                    try {
                        return yield this.fetch("proxy", postData, true);
                    }
                    catch (error) {
                        return checkError("estimateGas", error, params.transaction);
                    }
                }
                case "getLogs": {
                    const args = { action: "getLogs" };
                    if (params.filter.fromBlock) {
                        args.fromBlock = checkLogTag(params.filter.fromBlock);
                    }
                    if (params.filter.toBlock) {
                        args.toBlock = checkLogTag(params.filter.toBlock);
                    }
                    if (params.filter.address) {
                        args.address = params.filter.address;
                    }
                    // @TODO: We can handle slightly more complicated logs using the logs API
                    if (params.filter.topics && params.filter.topics.length > 0) {
                        if (params.filter.topics.length > 1) {
                            logger.throwError("unsupported topic count", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });
                        }
                        if (params.filter.topics.length === 1) {
                            const topic0 = params.filter.topics[0];
                            if (typeof (topic0) !== "string" || topic0.length !== 66) {
                                logger.throwError("unsupported topic format", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });
                            }
                            args.topic0 = topic0;
                        }
                    }
                    const logs = yield this.fetch("logs", args);
                    // Cache txHash => blockHash
                    let blocks = {};
                    // Add any missing blockHash to the logs
                    for (let i = 0; i < logs.length; i++) {
                        const log = logs[i];
                        if (log.blockHash != null) {
                            continue;
                        }
                        if (blocks[log.blockNumber] == null) {
                            const block = yield this.getBlock(log.blockNumber);
                            if (block) {
                                blocks[log.blockNumber] = block.hash;
                            }
                        }
                        log.blockHash = blocks[log.blockNumber];
                    }
                    return logs;
                }
                case "getEtherPrice":
                    if (this.network.name !== "homestead") {
                        return 0.0;
                    }
                    return parseFloat((yield this.fetch("stats", { action: "ethprice" })).ethusd);
                default:
                    break;
            }
            return _super.perform.call(this, method, params);
        });
    }
    // Note: The `page` page parameter only allows pagination within the
    //       10,000 window available without a page and offset parameter
    //       Error: Result window is too large, PageNo x Offset size must
    //              be less than or equal to 10000
    getHistory(addressOrName, startBlock, endBlock) {
        return __awaiter(this, void 0, void 0, function* () {
            const params = {
                action: "txlist",
                address: (yield this.resolveName(addressOrName)),
                startblock: ((startBlock == null) ? 0 : startBlock),
                endblock: ((endBlock == null) ? 99999999 : endBlock),
                sort: "asc"
            };
            const result = yield this.fetch("account", params);
            return result.map((tx) => {
                ["contractAddress", "to"].forEach(function (key) {
                    if (tx[key] == "") {
                        delete tx[key];
                    }
                });
                if (tx.creates == null && tx.contractAddress != null) {
                    tx.creates = tx.contractAddress;
                }
                const item = this.formatter.transactionResponse(tx);
                if (tx.timeStamp) {
                    item.timestamp = parseInt(tx.timeStamp);
                }
                return item;
            });
        });
    }
    isCommunityResource() {
        return (this.apiKey == null);
    }
}
//# sourceMappingURL=etherscan-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/fallback-provider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/fallback-provider.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FallbackProvider": () => (/* binding */ FallbackProvider)
/* harmony export */ });
/* harmony import */ var _ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/abstract-provider */ "./node_modules/@ethersproject/abstract-provider/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_random__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/random */ "./node_modules/@ethersproject/random/lib.esm/shuffle.js");
/* harmony import */ var _ethersproject_web__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/web */ "./node_modules/@ethersproject/web/lib.esm/index.js");
/* harmony import */ var _base_provider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base-provider */ "./node_modules/@ethersproject/providers/lib.esm/base-provider.js");
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./formatter */ "./node_modules/@ethersproject/providers/lib.esm/formatter.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
function now() { return (new Date()).getTime(); }
// Returns to network as long as all agree, or null if any is null.
// Throws an error if any two networks do not match.
function checkNetworks(networks) {
    let result = null;
    for (let i = 0; i < networks.length; i++) {
        const network = networks[i];
        // Null! We do not know our network; bail.
        if (network == null) {
            return null;
        }
        if (result) {
            // Make sure the network matches the previous networks
            if (!(result.name === network.name && result.chainId === network.chainId &&
                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {
                logger.throwArgumentError("provider mismatch", "networks", networks);
            }
        }
        else {
            result = network;
        }
    }
    return result;
}
function median(values, maxDelta) {
    values = values.slice().sort();
    const middle = Math.floor(values.length / 2);
    // Odd length; take the middle
    if (values.length % 2) {
        return values[middle];
    }
    // Even length; take the average of the two middle
    const a = values[middle - 1], b = values[middle];
    if (maxDelta != null && Math.abs(a - b) > maxDelta) {
        return null;
    }
    return (a + b) / 2;
}
function serialize(value) {
    if (value === null) {
        return "null";
    }
    else if (typeof (value) === "number" || typeof (value) === "boolean") {
        return JSON.stringify(value);
    }
    else if (typeof (value) === "string") {
        return value;
    }
    else if (_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.BigNumber.isBigNumber(value)) {
        return value.toString();
    }
    else if (Array.isArray(value)) {
        return JSON.stringify(value.map((i) => serialize(i)));
    }
    else if (typeof (value) === "object") {
        const keys = Object.keys(value);
        keys.sort();
        return "{" + keys.map((key) => {
            let v = value[key];
            if (typeof (v) === "function") {
                v = "[function]";
            }
            else {
                v = serialize(v);
            }
            return JSON.stringify(key) + ":" + v;
        }).join(",") + "}";
    }
    throw new Error("unknown value type: " + typeof (value));
}
// Next request ID to use for emitting debug info
let nextRid = 1;
;
function stall(duration) {
    let cancel = null;
    let timer = null;
    let promise = (new Promise((resolve) => {
        cancel = function () {
            if (timer) {
                clearTimeout(timer);
                timer = null;
            }
            resolve();
        };
        timer = setTimeout(cancel, duration);
    }));
    const wait = (func) => {
        promise = promise.then(func);
        return promise;
    };
    function getPromise() {
        return promise;
    }
    return { cancel, getPromise, wait };
}
const ForwardErrors = [
    _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.CALL_EXCEPTION,
    _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INSUFFICIENT_FUNDS,
    _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.NONCE_EXPIRED,
    _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.REPLACEMENT_UNDERPRICED,
    _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNPREDICTABLE_GAS_LIMIT
];
const ForwardProperties = [
    "address",
    "args",
    "errorArgs",
    "errorSignature",
    "method",
    "transaction",
];
;
function exposeDebugConfig(config, now) {
    const result = {
        weight: config.weight
    };
    Object.defineProperty(result, "provider", { get: () => config.provider });
    if (config.start) {
        result.start = config.start;
    }
    if (now) {
        result.duration = (now - config.start);
    }
    if (config.done) {
        if (config.error) {
            result.error = config.error;
        }
        else {
            result.result = config.result || null;
        }
    }
    return result;
}
function normalizedTally(normalize, quorum) {
    return function (configs) {
        // Count the votes for each result
        const tally = {};
        configs.forEach((c) => {
            const value = normalize(c.result);
            if (!tally[value]) {
                tally[value] = { count: 0, result: c.result };
            }
            tally[value].count++;
        });
        // Check for a quorum on any given result
        const keys = Object.keys(tally);
        for (let i = 0; i < keys.length; i++) {
            const check = tally[keys[i]];
            if (check.count >= quorum) {
                return check.result;
            }
        }
        // No quroum
        return undefined;
    };
}
function getProcessFunc(provider, method, params) {
    let normalize = serialize;
    switch (method) {
        case "getBlockNumber":
            // Return the median value, unless there is (median + 1) is also
            // present, in which case that is probably true and the median
            // is going to be stale soon. In the event of a malicious node,
            // the lie will be true soon enough.
            return function (configs) {
                const values = configs.map((c) => c.result);
                // Get the median block number
                let blockNumber = median(configs.map((c) => c.result), 2);
                if (blockNumber == null) {
                    return undefined;
                }
                blockNumber = Math.ceil(blockNumber);
                // If the next block height is present, its prolly safe to use
                if (values.indexOf(blockNumber + 1) >= 0) {
                    blockNumber++;
                }
                // Don't ever roll back the blockNumber
                if (blockNumber >= provider._highestBlockNumber) {
                    provider._highestBlockNumber = blockNumber;
                }
                return provider._highestBlockNumber;
            };
        case "getGasPrice":
            // Return the middle (round index up) value, similar to median
            // but do not average even entries and choose the higher.
            // Malicious actors must compromise 50% of the nodes to lie.
            return function (configs) {
                const values = configs.map((c) => c.result);
                values.sort();
                return values[Math.floor(values.length / 2)];
            };
        case "getEtherPrice":
            // Returns the median price. Malicious actors must compromise at
            // least 50% of the nodes to lie (in a meaningful way).
            return function (configs) {
                return median(configs.map((c) => c.result));
            };
        // No additional normalizing required; serialize is enough
        case "getBalance":
        case "getTransactionCount":
        case "getCode":
        case "getStorageAt":
        case "call":
        case "estimateGas":
        case "getLogs":
            break;
        // We drop the confirmations from transactions as it is approximate
        case "getTransaction":
        case "getTransactionReceipt":
            normalize = function (tx) {
                if (tx == null) {
                    return null;
                }
                tx = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy)(tx);
                tx.confirmations = -1;
                return serialize(tx);
            };
            break;
        // We drop the confirmations from transactions as it is approximate
        case "getBlock":
            // We drop the confirmations from transactions as it is approximate
            if (params.includeTransactions) {
                normalize = function (block) {
                    if (block == null) {
                        return null;
                    }
                    block = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy)(block);
                    block.transactions = block.transactions.map((tx) => {
                        tx = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy)(tx);
                        tx.confirmations = -1;
                        return tx;
                    });
                    return serialize(block);
                };
            }
            else {
                normalize = function (block) {
                    if (block == null) {
                        return null;
                    }
                    return serialize(block);
                };
            }
            break;
        default:
            throw new Error("unknown method: " + method);
    }
    // Return the result if and only if the expected quorum is
    // satisfied and agreed upon for the final result.
    return normalizedTally(normalize, provider.quorum);
}
// If we are doing a blockTag query, we need to make sure the backend is
// caught up to the FallbackProvider, before sending a request to it.
function waitForSync(config, blockNumber) {
    return __awaiter(this, void 0, void 0, function* () {
        const provider = (config.provider);
        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {
            return provider;
        }
        return (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_4__.poll)(() => {
            return new Promise((resolve, reject) => {
                setTimeout(function () {
                    // We are synced
                    if (provider.blockNumber >= blockNumber) {
                        return resolve(provider);
                    }
                    // We're done; just quit
                    if (config.cancelled) {
                        return resolve(null);
                    }
                    // Try again, next block
                    return resolve(undefined);
                }, 0);
            });
        }, { oncePoll: provider });
    });
}
function getRunner(config, currentBlockNumber, method, params) {
    return __awaiter(this, void 0, void 0, function* () {
        let provider = config.provider;
        switch (method) {
            case "getBlockNumber":
            case "getGasPrice":
                return provider[method]();
            case "getEtherPrice":
                if (provider.getEtherPrice) {
                    return provider.getEtherPrice();
                }
                break;
            case "getBalance":
            case "getTransactionCount":
            case "getCode":
                if (params.blockTag && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(params.blockTag)) {
                    provider = yield waitForSync(config, currentBlockNumber);
                }
                return provider[method](params.address, params.blockTag || "latest");
            case "getStorageAt":
                if (params.blockTag && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(params.blockTag)) {
                    provider = yield waitForSync(config, currentBlockNumber);
                }
                return provider.getStorageAt(params.address, params.position, params.blockTag || "latest");
            case "getBlock":
                if (params.blockTag && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(params.blockTag)) {
                    provider = yield waitForSync(config, currentBlockNumber);
                }
                return provider[(params.includeTransactions ? "getBlockWithTransactions" : "getBlock")](params.blockTag || params.blockHash);
            case "call":
            case "estimateGas":
                if (params.blockTag && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(params.blockTag)) {
                    provider = yield waitForSync(config, currentBlockNumber);
                }
                if (method === "call" && params.blockTag) {
                    return provider[method](params.transaction, params.blockTag);
                }
                return provider[method](params.transaction);
            case "getTransaction":
            case "getTransactionReceipt":
                return provider[method](params.transactionHash);
            case "getLogs": {
                let filter = params.filter;
                if ((filter.fromBlock && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(filter.fromBlock)) || (filter.toBlock && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(filter.toBlock))) {
                    provider = yield waitForSync(config, currentBlockNumber);
                }
                return provider.getLogs(filter);
            }
        }
        return logger.throwError("unknown method error", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNKNOWN_ERROR, {
            method: method,
            params: params
        });
    });
}
class FallbackProvider extends _base_provider__WEBPACK_IMPORTED_MODULE_6__.BaseProvider {
    constructor(providers, quorum) {
        if (providers.length === 0) {
            logger.throwArgumentError("missing providers", "providers", providers);
        }
        const providerConfigs = providers.map((configOrProvider, index) => {
            if (_ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_7__.Provider.isProvider(configOrProvider)) {
                const stallTimeout = (0,_formatter__WEBPACK_IMPORTED_MODULE_8__.isCommunityResource)(configOrProvider) ? 2000 : 750;
                const priority = 1;
                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });
            }
            const config = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy)(configOrProvider);
            if (config.priority == null) {
                config.priority = 1;
            }
            if (config.stallTimeout == null) {
                config.stallTimeout = (0,_formatter__WEBPACK_IMPORTED_MODULE_8__.isCommunityResource)(configOrProvider) ? 2000 : 750;
            }
            if (config.weight == null) {
                config.weight = 1;
            }
            const weight = config.weight;
            if (weight % 1 || weight > 512 || weight < 1) {
                logger.throwArgumentError("invalid weight; must be integer in [1, 512]", `providers[${index}].weight`, weight);
            }
            return Object.freeze(config);
        });
        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);
        if (quorum == null) {
            quorum = total / 2;
        }
        else if (quorum > total) {
            logger.throwArgumentError("quorum will always fail; larger than total weight", "quorum", quorum);
        }
        // Are all providers' networks are known
        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));
        // Not all networks are known; we must stall
        if (networkOrReady == null) {
            networkOrReady = new Promise((resolve, reject) => {
                setTimeout(() => {
                    this.detectNetwork().then(resolve, reject);
                }, 0);
            });
        }
        super(networkOrReady);
        // Preserve a copy, so we do not get mutated
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "providerConfigs", Object.freeze(providerConfigs));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "quorum", quorum);
        this._highestBlockNumber = -1;
    }
    detectNetwork() {
        return __awaiter(this, void 0, void 0, function* () {
            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));
            return checkNetworks(networks);
        });
    }
    perform(method, params) {
        return __awaiter(this, void 0, void 0, function* () {
            // Sending transactions is special; always broadcast it to all backends
            if (method === "sendTransaction") {
                const results = yield Promise.all(this.providerConfigs.map((c) => {
                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {
                        return result.hash;
                    }, (error) => {
                        return error;
                    });
                }));
                // Any success is good enough (other errors are likely "already seen" errors
                for (let i = 0; i < results.length; i++) {
                    const result = results[i];
                    if (typeof (result) === "string") {
                        return result;
                    }
                }
                // They were all an error; pick the first error
                throw results[0];
            }
            // We need to make sure we are in sync with our backends, so we need
            // to know this before we can make a lot of calls
            if (this._highestBlockNumber === -1 && method !== "getBlockNumber") {
                yield this.getBlockNumber();
            }
            const processFunc = getProcessFunc(this, method, params);
            // Shuffle the providers and then sort them by their priority; we
            // shallowCopy them since we will store the result in them too
            const configs = (0,_ethersproject_random__WEBPACK_IMPORTED_MODULE_9__.shuffled)(this.providerConfigs.map(_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.shallowCopy));
            configs.sort((a, b) => (a.priority - b.priority));
            const currentBlockNumber = this._highestBlockNumber;
            let i = 0;
            let first = true;
            while (true) {
                const t0 = now();
                // Compute the inflight weight (exclude anything past)
                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))
                    .reduce((accum, c) => (accum + c.weight), 0);
                // Start running enough to meet quorum
                while (inflightWeight < this.quorum && i < configs.length) {
                    const config = configs[i++];
                    const rid = nextRid++;
                    config.start = now();
                    config.staller = stall(config.stallTimeout);
                    config.staller.wait(() => { config.staller = null; });
                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {
                        config.done = true;
                        config.result = result;
                        if (this.listenerCount("debug")) {
                            this.emit("debug", {
                                action: "request",
                                rid: rid,
                                backend: exposeDebugConfig(config, now()),
                                request: { method: method, params: (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.deepCopy)(params) },
                                provider: this
                            });
                        }
                    }, (error) => {
                        config.done = true;
                        config.error = error;
                        if (this.listenerCount("debug")) {
                            this.emit("debug", {
                                action: "request",
                                rid: rid,
                                backend: exposeDebugConfig(config, now()),
                                request: { method: method, params: (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.deepCopy)(params) },
                                provider: this
                            });
                        }
                    });
                    if (this.listenerCount("debug")) {
                        this.emit("debug", {
                            action: "request",
                            rid: rid,
                            backend: exposeDebugConfig(config, null),
                            request: { method: method, params: (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.deepCopy)(params) },
                            provider: this
                        });
                    }
                    inflightWeight += config.weight;
                }
                // Wait for anything meaningful to finish or stall out
                const waiting = [];
                configs.forEach((c) => {
                    if (c.done || !c.runner) {
                        return;
                    }
                    waiting.push(c.runner);
                    if (c.staller) {
                        waiting.push(c.staller.getPromise());
                    }
                });
                if (waiting.length) {
                    yield Promise.race(waiting);
                }
                // Check the quorum and process the results; the process function
                // may additionally decide the quorum is not met
                const results = configs.filter((c) => (c.done && c.error == null));
                if (results.length >= this.quorum) {
                    const result = processFunc(results);
                    if (result !== undefined) {
                        // Shut down any stallers
                        configs.forEach(c => {
                            if (c.staller) {
                                c.staller.cancel();
                            }
                            c.cancelled = true;
                        });
                        return result;
                    }
                    if (!first) {
                        yield stall(100).getPromise();
                    }
                    first = false;
                }
                // No result, check for errors that should be forwarded
                const errors = configs.reduce((accum, c) => {
                    if (!c.done || c.error == null) {
                        return accum;
                    }
                    const code = (c.error).code;
                    if (ForwardErrors.indexOf(code) >= 0) {
                        if (!accum[code]) {
                            accum[code] = { error: c.error, weight: 0 };
                        }
                        accum[code].weight += c.weight;
                    }
                    return accum;
                }, ({}));
                Object.keys(errors).forEach((errorCode) => {
                    const tally = errors[errorCode];
                    if (tally.weight < this.quorum) {
                        return;
                    }
                    // Shut down any stallers
                    configs.forEach(c => {
                        if (c.staller) {
                            c.staller.cancel();
                        }
                        c.cancelled = true;
                    });
                    const e = (tally.error);
                    const props = {};
                    ForwardProperties.forEach((name) => {
                        if (e[name] == null) {
                            return;
                        }
                        props[name] = e[name];
                    });
                    logger.throwError(e.reason || e.message, errorCode, props);
                });
                // All configs have run to completion; we will never get more data
                if (configs.filter((c) => !c.done).length === 0) {
                    break;
                }
            }
            // Shut down any stallers; shouldn't be any
            configs.forEach(c => {
                if (c.staller) {
                    c.staller.cancel();
                }
                c.cancelled = true;
            });
            return logger.throwError("failed to meet quorum", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.SERVER_ERROR, {
                method: method,
                params: params,
                //results: configs.map((c) => c.result),
                //errors: configs.map((c) => c.error),
                results: configs.map((c) => exposeDebugConfig(c)),
                provider: this
            });
        });
    }
}
//# sourceMappingURL=fallback-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/formatter.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/formatter.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Formatter": () => (/* binding */ Formatter),
/* harmony export */   "isCommunityResourcable": () => (/* binding */ isCommunityResourcable),
/* harmony export */   "isCommunityResource": () => (/* binding */ isCommunityResource),
/* harmony export */   "showThrottleMessage": () => (/* binding */ showThrottleMessage)
/* harmony export */ });
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/constants */ "./node_modules/@ethersproject/constants/lib.esm/addresses.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/transactions */ "./node_modules/@ethersproject/transactions/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");









const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
class Formatter {
    constructor() {
        this.formats = this.getDefaultFormats();
    }
    getDefaultFormats() {
        const formats = ({});
        const address = this.address.bind(this);
        const bigNumber = this.bigNumber.bind(this);
        const blockTag = this.blockTag.bind(this);
        const data = this.data.bind(this);
        const hash = this.hash.bind(this);
        const hex = this.hex.bind(this);
        const number = this.number.bind(this);
        const type = this.type.bind(this);
        const strictData = (v) => { return this.data(v, true); };
        formats.transaction = {
            hash: hash,
            type: type,
            accessList: Formatter.allowNull(this.accessList.bind(this), null),
            blockHash: Formatter.allowNull(hash, null),
            blockNumber: Formatter.allowNull(number, null),
            transactionIndex: Formatter.allowNull(number, null),
            confirmations: Formatter.allowNull(number, null),
            from: address,
            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)
            // must be set
            gasPrice: Formatter.allowNull(bigNumber),
            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
            maxFeePerGas: Formatter.allowNull(bigNumber),
            gasLimit: bigNumber,
            to: Formatter.allowNull(address, null),
            value: bigNumber,
            nonce: number,
            data: data,
            r: Formatter.allowNull(this.uint256),
            s: Formatter.allowNull(this.uint256),
            v: Formatter.allowNull(number),
            creates: Formatter.allowNull(address, null),
            raw: Formatter.allowNull(data),
        };
        formats.transactionRequest = {
            from: Formatter.allowNull(address),
            nonce: Formatter.allowNull(number),
            gasLimit: Formatter.allowNull(bigNumber),
            gasPrice: Formatter.allowNull(bigNumber),
            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
            maxFeePerGas: Formatter.allowNull(bigNumber),
            to: Formatter.allowNull(address),
            value: Formatter.allowNull(bigNumber),
            data: Formatter.allowNull(strictData),
            type: Formatter.allowNull(number),
            accessList: Formatter.allowNull(this.accessList.bind(this), null),
        };
        formats.receiptLog = {
            transactionIndex: number,
            blockNumber: number,
            transactionHash: hash,
            address: address,
            topics: Formatter.arrayOf(hash),
            data: data,
            logIndex: number,
            blockHash: hash,
        };
        formats.receipt = {
            to: Formatter.allowNull(this.address, null),
            from: Formatter.allowNull(this.address, null),
            contractAddress: Formatter.allowNull(address, null),
            transactionIndex: number,
            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt
            root: Formatter.allowNull(hex),
            gasUsed: bigNumber,
            logsBloom: Formatter.allowNull(data),
            blockHash: hash,
            transactionHash: hash,
            logs: Formatter.arrayOf(this.receiptLog.bind(this)),
            blockNumber: number,
            confirmations: Formatter.allowNull(number, null),
            cumulativeGasUsed: bigNumber,
            effectiveGasPrice: Formatter.allowNull(bigNumber),
            status: Formatter.allowNull(number),
            type: type
        };
        formats.block = {
            hash: Formatter.allowNull(hash),
            parentHash: hash,
            number: number,
            timestamp: number,
            nonce: Formatter.allowNull(hex),
            difficulty: this.difficulty.bind(this),
            gasLimit: bigNumber,
            gasUsed: bigNumber,
            miner: Formatter.allowNull(address),
            extraData: data,
            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),
            baseFeePerGas: Formatter.allowNull(bigNumber)
        };
        formats.blockWithTransactions = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.shallowCopy)(formats.block);
        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));
        formats.filter = {
            fromBlock: Formatter.allowNull(blockTag, undefined),
            toBlock: Formatter.allowNull(blockTag, undefined),
            blockHash: Formatter.allowNull(hash, undefined),
            address: Formatter.allowNull(address, undefined),
            topics: Formatter.allowNull(this.topics.bind(this), undefined),
        };
        formats.filterLog = {
            blockNumber: Formatter.allowNull(number),
            blockHash: Formatter.allowNull(hash),
            transactionIndex: number,
            removed: Formatter.allowNull(this.boolean.bind(this)),
            address: address,
            data: Formatter.allowFalsish(data, "0x"),
            topics: Formatter.arrayOf(hash),
            transactionHash: hash,
            logIndex: number,
        };
        return formats;
    }
    accessList(accessList) {
        return (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_3__.accessListify)(accessList || []);
    }
    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number
    // Strict! Used on input.
    number(number) {
        if (number === "0x") {
            return 0;
        }
        return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(number).toNumber();
    }
    type(number) {
        if (number === "0x" || number == null) {
            return 0;
        }
        return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(number).toNumber();
    }
    // Strict! Used on input.
    bigNumber(value) {
        return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(value);
    }
    // Requires a boolean, "true" or  "false"; returns a boolean
    boolean(value) {
        if (typeof (value) === "boolean") {
            return value;
        }
        if (typeof (value) === "string") {
            value = value.toLowerCase();
            if (value === "true") {
                return true;
            }
            if (value === "false") {
                return false;
            }
        }
        throw new Error("invalid boolean - " + value);
    }
    hex(value, strict) {
        if (typeof (value) === "string") {
            if (!strict && value.substring(0, 2) !== "0x") {
                value = "0x" + value;
            }
            if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(value)) {
                return value.toLowerCase();
            }
        }
        return logger.throwArgumentError("invalid hash", "value", value);
    }
    data(value, strict) {
        const result = this.hex(value, strict);
        if ((result.length % 2) !== 0) {
            throw new Error("invalid data; odd-length - " + value);
        }
        return result;
    }
    // Requires an address
    // Strict! Used on input.
    address(value) {
        return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_6__.getAddress)(value);
    }
    callAddress(value) {
        if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(value, 32)) {
            return null;
        }
        const address = (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_6__.getAddress)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.hexDataSlice)(value, 12));
        return (address === _ethersproject_constants__WEBPACK_IMPORTED_MODULE_7__.AddressZero) ? null : address;
    }
    contractAddress(value) {
        return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_6__.getContractAddress)(value);
    }
    // Strict! Used on input.
    blockTag(blockTag) {
        if (blockTag == null) {
            return "latest";
        }
        if (blockTag === "earliest") {
            return "0x0";
        }
        switch (blockTag) {
            case "earliest": return "0x0";
            case "latest":
            case "pending":
            case "safe":
            case "finalized":
                return blockTag;
        }
        if (typeof (blockTag) === "number" || (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(blockTag)) {
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.hexValue)(blockTag);
        }
        throw new Error("invalid blockTag");
    }
    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.
    hash(value, strict) {
        const result = this.hex(value, strict);
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.hexDataLength)(result) !== 32) {
            return logger.throwArgumentError("invalid hash", "value", value);
        }
        return result;
    }
    // Returns the difficulty as a number, or if too large (i.e. PoA network) null
    difficulty(value) {
        if (value == null) {
            return null;
        }
        const v = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(value);
        try {
            return v.toNumber();
        }
        catch (error) { }
        return null;
    }
    uint256(value) {
        if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(value)) {
            throw new Error("invalid uint256");
        }
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.hexZeroPad)(value, 32);
    }
    _block(value, format) {
        if (value.author != null && value.miner == null) {
            value.miner = value.author;
        }
        // The difficulty may need to come from _difficulty in recursed blocks
        const difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;
        const result = Formatter.check(format, value);
        result._difficulty = ((difficulty == null) ? null : _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(difficulty));
        return result;
    }
    block(value) {
        return this._block(value, this.formats.block);
    }
    blockWithTransactions(value) {
        return this._block(value, this.formats.blockWithTransactions);
    }
    // Strict! Used on input.
    transactionRequest(value) {
        return Formatter.check(this.formats.transactionRequest, value);
    }
    transactionResponse(transaction) {
        // Rename gas to gasLimit
        if (transaction.gas != null && transaction.gasLimit == null) {
            transaction.gasLimit = transaction.gas;
        }
        // Some clients (TestRPC) do strange things like return 0x0 for the
        // 0 address; correct this to be a real address
        if (transaction.to && _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(transaction.to).isZero()) {
            transaction.to = "0x0000000000000000000000000000000000000000";
        }
        // Rename input to data
        if (transaction.input != null && transaction.data == null) {
            transaction.data = transaction.input;
        }
        // If to and creates are empty, populate the creates from the transaction
        if (transaction.to == null && transaction.creates == null) {
            transaction.creates = this.contractAddress(transaction);
        }
        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {
            transaction.accessList = [];
        }
        const result = Formatter.check(this.formats.transaction, transaction);
        if (transaction.chainId != null) {
            let chainId = transaction.chainId;
            if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(chainId)) {
                chainId = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(chainId).toNumber();
            }
            result.chainId = chainId;
        }
        else {
            let chainId = transaction.networkId;
            // geth-etc returns chainId
            if (chainId == null && result.v == null) {
                chainId = transaction.chainId;
            }
            if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_5__.isHexString)(chainId)) {
                chainId = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(chainId).toNumber();
            }
            if (typeof (chainId) !== "number" && result.v != null) {
                chainId = (result.v - 35) / 2;
                if (chainId < 0) {
                    chainId = 0;
                }
                chainId = parseInt(chainId);
            }
            if (typeof (chainId) !== "number") {
                chainId = 0;
            }
            result.chainId = chainId;
        }
        // 0x0000... should actually be null
        if (result.blockHash && result.blockHash.replace(/0/g, "") === "x") {
            result.blockHash = null;
        }
        return result;
    }
    transaction(value) {
        return (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_3__.parse)(value);
    }
    receiptLog(value) {
        return Formatter.check(this.formats.receiptLog, value);
    }
    receipt(value) {
        const result = Formatter.check(this.formats.receipt, value);
        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it
        if (result.root != null) {
            if (result.root.length <= 4) {
                // Could be 0x00, 0x0, 0x01 or 0x1
                const value = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(result.root).toNumber();
                if (value === 0 || value === 1) {
                    // Make sure if both are specified, they match
                    if (result.status != null && (result.status !== value)) {
                        logger.throwArgumentError("alt-root-status/status mismatch", "value", { root: result.root, status: result.status });
                    }
                    result.status = value;
                    delete result.root;
                }
                else {
                    logger.throwArgumentError("invalid alt-root-status", "value.root", result.root);
                }
            }
            else if (result.root.length !== 66) {
                // Must be a valid bytes32
                logger.throwArgumentError("invalid root hash", "value.root", result.root);
            }
        }
        if (result.status != null) {
            result.byzantium = true;
        }
        return result;
    }
    topics(value) {
        if (Array.isArray(value)) {
            return value.map((v) => this.topics(v));
        }
        else if (value != null) {
            return this.hash(value, true);
        }
        return null;
    }
    filter(value) {
        return Formatter.check(this.formats.filter, value);
    }
    filterLog(value) {
        return Formatter.check(this.formats.filterLog, value);
    }
    static check(format, object) {
        const result = {};
        for (const key in format) {
            try {
                const value = format[key](object[key]);
                if (value !== undefined) {
                    result[key] = value;
                }
            }
            catch (error) {
                error.checkKey = key;
                error.checkValue = object[key];
                throw error;
            }
        }
        return result;
    }
    // if value is null-ish, nullValue is returned
    static allowNull(format, nullValue) {
        return (function (value) {
            if (value == null) {
                return nullValue;
            }
            return format(value);
        });
    }
    // If value is false-ish, replaceValue is returned
    static allowFalsish(format, replaceValue) {
        return (function (value) {
            if (!value) {
                return replaceValue;
            }
            return format(value);
        });
    }
    // Requires an Array satisfying check
    static arrayOf(format) {
        return (function (array) {
            if (!Array.isArray(array)) {
                throw new Error("not an array");
            }
            const result = [];
            array.forEach(function (value) {
                result.push(format(value));
            });
            return result;
        });
    }
}
function isCommunityResourcable(value) {
    return (value && typeof (value.isCommunityResource) === "function");
}
function isCommunityResource(value) {
    return (isCommunityResourcable(value) && value.isCommunityResource());
}
// Show the throttle message only once
let throttleMessage = false;
function showThrottleMessage() {
    if (throttleMessage) {
        return;
    }
    throttleMessage = true;
    console.log("========= NOTICE =========");
    console.log("Request-Rate Exceeded  (this message will not be repeated)");
    console.log("");
    console.log("The default API keys for each service are provided as a highly-throttled,");
    console.log("community resource for low-traffic projects and early prototyping.");
    console.log("");
    console.log("While your application will continue to function, we highly recommended");
    console.log("signing up for your own API keys to improve performance, increase your");
    console.log("request rate/limit and enable other perks, such as metrics and advanced APIs.");
    console.log("");
    console.log("For more details: https:/\/docs.ethers.io/api-keys/");
    console.log("==========================");
}
//# sourceMappingURL=formatter.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlchemyProvider": () => (/* reexport safe */ _alchemy_provider__WEBPACK_IMPORTED_MODULE_6__.AlchemyProvider),
/* harmony export */   "AlchemyWebSocketProvider": () => (/* reexport safe */ _alchemy_provider__WEBPACK_IMPORTED_MODULE_6__.AlchemyWebSocketProvider),
/* harmony export */   "AnkrProvider": () => (/* reexport safe */ _ankr_provider__WEBPACK_IMPORTED_MODULE_7__.AnkrProvider),
/* harmony export */   "BaseProvider": () => (/* reexport safe */ _base_provider__WEBPACK_IMPORTED_MODULE_16__.BaseProvider),
/* harmony export */   "CloudflareProvider": () => (/* reexport safe */ _cloudflare_provider__WEBPACK_IMPORTED_MODULE_8__.CloudflareProvider),
/* harmony export */   "EtherscanProvider": () => (/* reexport safe */ _etherscan_provider__WEBPACK_IMPORTED_MODULE_9__.EtherscanProvider),
/* harmony export */   "FallbackProvider": () => (/* reexport safe */ _fallback_provider__WEBPACK_IMPORTED_MODULE_5__.FallbackProvider),
/* harmony export */   "Formatter": () => (/* reexport safe */ _formatter__WEBPACK_IMPORTED_MODULE_19__.Formatter),
/* harmony export */   "InfuraProvider": () => (/* reexport safe */ _infura_provider__WEBPACK_IMPORTED_MODULE_10__.InfuraProvider),
/* harmony export */   "InfuraWebSocketProvider": () => (/* reexport safe */ _infura_provider__WEBPACK_IMPORTED_MODULE_10__.InfuraWebSocketProvider),
/* harmony export */   "IpcProvider": () => (/* reexport safe */ _ipc_provider__WEBPACK_IMPORTED_MODULE_14__.IpcProvider),
/* harmony export */   "JsonRpcBatchProvider": () => (/* reexport safe */ _json_rpc_batch_provider__WEBPACK_IMPORTED_MODULE_18__.JsonRpcBatchProvider),
/* harmony export */   "JsonRpcProvider": () => (/* reexport safe */ _json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider),
/* harmony export */   "JsonRpcSigner": () => (/* reexport safe */ _json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcSigner),
/* harmony export */   "NodesmithProvider": () => (/* reexport safe */ _nodesmith_provider__WEBPACK_IMPORTED_MODULE_11__.NodesmithProvider),
/* harmony export */   "PocketProvider": () => (/* reexport safe */ _pocket_provider__WEBPACK_IMPORTED_MODULE_12__.PocketProvider),
/* harmony export */   "Provider": () => (/* reexport safe */ _ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_15__.Provider),
/* harmony export */   "Resolver": () => (/* reexport safe */ _base_provider__WEBPACK_IMPORTED_MODULE_16__.Resolver),
/* harmony export */   "StaticJsonRpcProvider": () => (/* reexport safe */ _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_17__.StaticJsonRpcProvider),
/* harmony export */   "UrlJsonRpcProvider": () => (/* reexport safe */ _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_17__.UrlJsonRpcProvider),
/* harmony export */   "Web3Provider": () => (/* reexport safe */ _web3_provider__WEBPACK_IMPORTED_MODULE_13__.Web3Provider),
/* harmony export */   "WebSocketProvider": () => (/* reexport safe */ _websocket_provider__WEBPACK_IMPORTED_MODULE_3__.WebSocketProvider),
/* harmony export */   "getDefaultProvider": () => (/* binding */ getDefaultProvider),
/* harmony export */   "getNetwork": () => (/* reexport safe */ _ethersproject_networks__WEBPACK_IMPORTED_MODULE_4__.getNetwork),
/* harmony export */   "isCommunityResourcable": () => (/* reexport safe */ _formatter__WEBPACK_IMPORTED_MODULE_19__.isCommunityResourcable),
/* harmony export */   "isCommunityResource": () => (/* reexport safe */ _formatter__WEBPACK_IMPORTED_MODULE_19__.isCommunityResource),
/* harmony export */   "showThrottleMessage": () => (/* reexport safe */ _formatter__WEBPACK_IMPORTED_MODULE_19__.showThrottleMessage)
/* harmony export */ });
/* harmony import */ var _ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ethersproject/abstract-provider */ "./node_modules/@ethersproject/abstract-provider/lib.esm/index.js");
/* harmony import */ var _ethersproject_networks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/networks */ "./node_modules/@ethersproject/networks/lib.esm/index.js");
/* harmony import */ var _base_provider__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./base-provider */ "./node_modules/@ethersproject/providers/lib.esm/base-provider.js");
/* harmony import */ var _alchemy_provider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./alchemy-provider */ "./node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js");
/* harmony import */ var _ankr_provider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ankr-provider */ "./node_modules/@ethersproject/providers/lib.esm/ankr-provider.js");
/* harmony import */ var _cloudflare_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./cloudflare-provider */ "./node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js");
/* harmony import */ var _etherscan_provider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./etherscan-provider */ "./node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js");
/* harmony import */ var _fallback_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fallback-provider */ "./node_modules/@ethersproject/providers/lib.esm/fallback-provider.js");
/* harmony import */ var _ipc_provider__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ipc-provider */ "./node_modules/@ethersproject/providers/lib.esm/ipc-provider.js");
/* harmony import */ var _infura_provider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./infura-provider */ "./node_modules/@ethersproject/providers/lib.esm/infura-provider.js");
/* harmony import */ var _json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js");
/* harmony import */ var _json_rpc_batch_provider__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./json-rpc-batch-provider */ "./node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js");
/* harmony import */ var _nodesmith_provider__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./nodesmith-provider */ "./node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js");
/* harmony import */ var _pocket_provider__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pocket-provider */ "./node_modules/@ethersproject/providers/lib.esm/pocket-provider.js");
/* harmony import */ var _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./url-json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js");
/* harmony import */ var _web3_provider__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./web3-provider */ "./node_modules/@ethersproject/providers/lib.esm/web3-provider.js");
/* harmony import */ var _websocket_provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./websocket-provider */ "./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js");
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./formatter */ "./node_modules/@ethersproject/providers/lib.esm/formatter.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");





















const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
////////////////////////
// Helper Functions
function getDefaultProvider(network, options) {
    if (network == null) {
        network = "homestead";
    }
    // If passed a URL, figure out the right type of provider based on the scheme
    if (typeof (network) === "string") {
        // @TODO: Add support for IpcProvider; maybe if it ends in ".ipc"?
        // Handle http and ws (and their secure variants)
        const match = network.match(/^(ws|http)s?:/i);
        if (match) {
            switch (match[1].toLowerCase()) {
                case "http":
                case "https":
                    return new _json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(network);
                case "ws":
                case "wss":
                    return new _websocket_provider__WEBPACK_IMPORTED_MODULE_3__.WebSocketProvider(network);
                default:
                    logger.throwArgumentError("unsupported URL scheme", "network", network);
            }
        }
    }
    const n = (0,_ethersproject_networks__WEBPACK_IMPORTED_MODULE_4__.getNetwork)(network);
    if (!n || !n._defaultProvider) {
        logger.throwError("unsupported getDefaultProvider network", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.NETWORK_ERROR, {
            operation: "getDefaultProvider",
            network: network
        });
    }
    return n._defaultProvider({
        FallbackProvider: _fallback_provider__WEBPACK_IMPORTED_MODULE_5__.FallbackProvider,
        AlchemyProvider: _alchemy_provider__WEBPACK_IMPORTED_MODULE_6__.AlchemyProvider,
        AnkrProvider: _ankr_provider__WEBPACK_IMPORTED_MODULE_7__.AnkrProvider,
        CloudflareProvider: _cloudflare_provider__WEBPACK_IMPORTED_MODULE_8__.CloudflareProvider,
        EtherscanProvider: _etherscan_provider__WEBPACK_IMPORTED_MODULE_9__.EtherscanProvider,
        InfuraProvider: _infura_provider__WEBPACK_IMPORTED_MODULE_10__.InfuraProvider,
        JsonRpcProvider: _json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider,
        NodesmithProvider: _nodesmith_provider__WEBPACK_IMPORTED_MODULE_11__.NodesmithProvider,
        PocketProvider: _pocket_provider__WEBPACK_IMPORTED_MODULE_12__.PocketProvider,
        Web3Provider: _web3_provider__WEBPACK_IMPORTED_MODULE_13__.Web3Provider,
        IpcProvider: _ipc_provider__WEBPACK_IMPORTED_MODULE_14__.IpcProvider,
    }, options);
}
////////////////////////
// Exports

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/infura-provider.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/infura-provider.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InfuraProvider": () => (/* binding */ InfuraProvider),
/* harmony export */   "InfuraWebSocketProvider": () => (/* binding */ InfuraWebSocketProvider)
/* harmony export */ });
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _websocket_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./websocket-provider */ "./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js");
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formatter */ "./node_modules/@ethersproject/providers/lib.esm/formatter.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");
/* harmony import */ var _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./url-json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js");






const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

const defaultProjectId = "84842078b09946638c03157f83405213";
class InfuraWebSocketProvider extends _websocket_provider__WEBPACK_IMPORTED_MODULE_2__.WebSocketProvider {
    constructor(network, apiKey) {
        const provider = new InfuraProvider(network, apiKey);
        const connection = provider.connection;
        if (connection.password) {
            logger.throwError("INFURA WebSocket project secrets unsupported", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "InfuraProvider.getWebSocketProvider()"
            });
        }
        const url = connection.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
        super(url, network);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "apiKey", provider.projectId);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "projectId", provider.projectId);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "projectSecret", provider.projectSecret);
    }
    isCommunityResource() {
        return (this.projectId === defaultProjectId);
    }
}
class InfuraProvider extends _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_4__.UrlJsonRpcProvider {
    static getWebSocketProvider(network, apiKey) {
        return new InfuraWebSocketProvider(network, apiKey);
    }
    static getApiKey(apiKey) {
        const apiKeyObj = {
            apiKey: defaultProjectId,
            projectId: defaultProjectId,
            projectSecret: null
        };
        if (apiKey == null) {
            return apiKeyObj;
        }
        if (typeof (apiKey) === "string") {
            apiKeyObj.projectId = apiKey;
        }
        else if (apiKey.projectSecret != null) {
            logger.assertArgument((typeof (apiKey.projectId) === "string"), "projectSecret requires a projectId", "projectId", apiKey.projectId);
            logger.assertArgument((typeof (apiKey.projectSecret) === "string"), "invalid projectSecret", "projectSecret", "[REDACTED]");
            apiKeyObj.projectId = apiKey.projectId;
            apiKeyObj.projectSecret = apiKey.projectSecret;
        }
        else if (apiKey.projectId) {
            apiKeyObj.projectId = apiKey.projectId;
        }
        apiKeyObj.apiKey = apiKeyObj.projectId;
        return apiKeyObj;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch (network ? network.name : "unknown") {
            case "homestead":
                host = "mainnet.infura.io";
                break;
            case "goerli":
                host = "goerli.infura.io";
                break;
            case "sepolia":
                host = "sepolia.infura.io";
                break;
            case "matic":
                host = "polygon-mainnet.infura.io";
                break;
            case "maticmum":
                host = "polygon-mumbai.infura.io";
                break;
            case "optimism":
                host = "optimism-mainnet.infura.io";
                break;
            case "optimism-goerli":
                host = "optimism-goerli.infura.io";
                break;
            case "arbitrum":
                host = "arbitrum-mainnet.infura.io";
                break;
            case "arbitrum-goerli":
                host = "arbitrum-goerli.infura.io";
                break;
            default:
                logger.throwError("unsupported network", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, {
                    argument: "network",
                    value: network
                });
        }
        const connection = {
            allowGzip: true,
            url: ("https:/" + "/" + host + "/v3/" + apiKey.projectId),
            throttleCallback: (attempt, url) => {
                if (apiKey.projectId === defaultProjectId) {
                    (0,_formatter__WEBPACK_IMPORTED_MODULE_5__.showThrottleMessage)();
                }
                return Promise.resolve(true);
            }
        };
        if (apiKey.projectSecret != null) {
            connection.user = "";
            connection.password = apiKey.projectSecret;
        }
        return connection;
    }
    isCommunityResource() {
        return (this.projectId === defaultProjectId);
    }
}
//# sourceMappingURL=infura-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/ipc-provider.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/ipc-provider.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IpcProvider": () => (/* binding */ IpcProvider)
/* harmony export */ });

const IpcProvider = null;

//# sourceMappingURL=ipc-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JsonRpcBatchProvider": () => (/* binding */ JsonRpcBatchProvider)
/* harmony export */ });
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_web__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/web */ "./node_modules/@ethersproject/web/lib.esm/index.js");
/* harmony import */ var _json_rpc_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js");



// Experimental
class JsonRpcBatchProvider extends _json_rpc_provider__WEBPACK_IMPORTED_MODULE_0__.JsonRpcProvider {
    send(method, params) {
        const request = {
            method: method,
            params: params,
            id: (this._nextId++),
            jsonrpc: "2.0"
        };
        if (this._pendingBatch == null) {
            this._pendingBatch = [];
        }
        const inflightRequest = { request, resolve: null, reject: null };
        const promise = new Promise((resolve, reject) => {
            inflightRequest.resolve = resolve;
            inflightRequest.reject = reject;
        });
        this._pendingBatch.push(inflightRequest);
        if (!this._pendingBatchAggregator) {
            // Schedule batch for next event loop + short duration
            this._pendingBatchAggregator = setTimeout(() => {
                // Get teh current batch and clear it, so new requests
                // go into the next batch
                const batch = this._pendingBatch;
                this._pendingBatch = null;
                this._pendingBatchAggregator = null;
                // Get the request as an array of requests
                const request = batch.map((inflight) => inflight.request);
                this.emit("debug", {
                    action: "requestBatch",
                    request: (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_1__.deepCopy)(request),
                    provider: this
                });
                return (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_2__.fetchJson)(this.connection, JSON.stringify(request)).then((result) => {
                    this.emit("debug", {
                        action: "response",
                        request: request,
                        response: result,
                        provider: this
                    });
                    // For each result, feed it to the correct Promise, depending
                    // on whether it was a success or error
                    batch.forEach((inflightRequest, index) => {
                        const payload = result[index];
                        if (payload.error) {
                            const error = new Error(payload.error.message);
                            error.code = payload.error.code;
                            error.data = payload.error.data;
                            inflightRequest.reject(error);
                        }
                        else {
                            inflightRequest.resolve(payload.result);
                        }
                    });
                }, (error) => {
                    this.emit("debug", {
                        action: "response",
                        error: error,
                        request: request,
                        provider: this
                    });
                    batch.forEach((inflightRequest) => {
                        inflightRequest.reject(error);
                    });
                });
            }, 10);
        }
        return promise;
    }
}
//# sourceMappingURL=json-rpc-batch-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JsonRpcProvider": () => (/* binding */ JsonRpcProvider),
/* harmony export */   "JsonRpcSigner": () => (/* binding */ JsonRpcSigner)
/* harmony export */ });
/* harmony import */ var _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/abstract-signer */ "./node_modules/@ethersproject/abstract-signer/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/hash */ "./node_modules/@ethersproject/hash/lib.esm/typed-data.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");
/* harmony import */ var _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/transactions */ "./node_modules/@ethersproject/transactions/lib.esm/index.js");
/* harmony import */ var _ethersproject_web__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/web */ "./node_modules/@ethersproject/web/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");
/* harmony import */ var _base_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./base-provider */ "./node_modules/@ethersproject/providers/lib.esm/base-provider.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

const errorGas = ["call", "estimateGas"];
function spelunk(value, requireData) {
    if (value == null) {
        return null;
    }
    // These *are* the droids we're looking for.
    if (typeof (value.message) === "string" && value.message.match("reverted")) {
        const data = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isHexString)(value.data) ? value.data : null;
        if (!requireData || data) {
            return { message: value.message, data };
        }
    }
    // Spelunk further...
    if (typeof (value) === "object") {
        for (const key in value) {
            const result = spelunk(value[key], requireData);
            if (result) {
                return result;
            }
        }
        return null;
    }
    // Might be a JSON string we can further descend...
    if (typeof (value) === "string") {
        try {
            return spelunk(JSON.parse(value), requireData);
        }
        catch (error) { }
    }
    return null;
}
function checkError(method, error, params) {
    const transaction = params.transaction || params.signedTransaction;
    // Undo the "convenience" some nodes are attempting to prevent backwards
    // incompatibility; maybe for v6 consider forwarding reverts as errors
    if (method === "call") {
        const result = spelunk(error, true);
        if (result) {
            return result.data;
        }
        // Nothing descriptive..
        logger.throwError("missing revert data in call exception; Transaction reverted without a reason string", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.CALL_EXCEPTION, {
            data: "0x", transaction, error
        });
    }
    if (method === "estimateGas") {
        // Try to find something, with a preference on SERVER_ERROR body
        let result = spelunk(error.body, false);
        if (result == null) {
            result = spelunk(error, false);
        }
        // Found "reverted", this is a CALL_EXCEPTION
        if (result) {
            logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                reason: result.message, method, transaction, error
            });
        }
    }
    // @TODO: Should we spelunk for message too?
    let message = error.message;
    if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === "string") {
        message = error.error.message;
    }
    else if (typeof (error.body) === "string") {
        message = error.body;
    }
    else if (typeof (error.responseText) === "string") {
        message = error.responseText;
    }
    message = (message || "").toLowerCase();
    // "insufficient funds for gas * price + value + cost(data)"
    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {
        logger.throwError("insufficient funds for intrinsic transaction cost", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INSUFFICIENT_FUNDS, {
            error, method, transaction
        });
    }
    // "nonce too low"
    if (message.match(/nonce (is )?too low/i)) {
        logger.throwError("nonce has already been used", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.NONCE_EXPIRED, {
            error, method, transaction
        });
    }
    // "replacement transaction underpriced"
    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {
        logger.throwError("replacement fee too low", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.REPLACEMENT_UNDERPRICED, {
            error, method, transaction
        });
    }
    // "replacement transaction underpriced"
    if (message.match(/only replay-protected/i)) {
        logger.throwError("legacy pre-eip-155 transactions not supported", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
            error, method, transaction
        });
    }
    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {
        logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
            error, method, transaction
        });
    }
    throw error;
}
function timer(timeout) {
    return new Promise(function (resolve) {
        setTimeout(resolve, timeout);
    });
}
function getResult(payload) {
    if (payload.error) {
        // @TODO: not any
        const error = new Error(payload.error.message);
        error.code = payload.error.code;
        error.data = payload.error.data;
        throw error;
    }
    return payload.result;
}
function getLowerCase(value) {
    if (value) {
        return value.toLowerCase();
    }
    return value;
}
const _constructorGuard = {};
class JsonRpcSigner extends _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_3__.Signer {
    constructor(constructorGuard, provider, addressOrIndex) {
        super();
        if (constructorGuard !== _constructorGuard) {
            throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.defineReadOnly)(this, "provider", provider);
        if (addressOrIndex == null) {
            addressOrIndex = 0;
        }
        if (typeof (addressOrIndex) === "string") {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.defineReadOnly)(this, "_address", this.provider.formatter.address(addressOrIndex));
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.defineReadOnly)(this, "_index", null);
        }
        else if (typeof (addressOrIndex) === "number") {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.defineReadOnly)(this, "_index", addressOrIndex);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.defineReadOnly)(this, "_address", null);
        }
        else {
            logger.throwArgumentError("invalid address or index", "addressOrIndex", addressOrIndex);
        }
    }
    connect(provider) {
        return logger.throwError("cannot alter JSON-RPC Signer connection", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "connect"
        });
    }
    connectUnchecked() {
        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);
    }
    getAddress() {
        if (this._address) {
            return Promise.resolve(this._address);
        }
        return this.provider.send("eth_accounts", []).then((accounts) => {
            if (accounts.length <= this._index) {
                logger.throwError("unknown account #" + this._index, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "getAddress"
                });
            }
            return this.provider.formatter.address(accounts[this._index]);
        });
    }
    sendUncheckedTransaction(transaction) {
        transaction = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.shallowCopy)(transaction);
        const fromAddress = this.getAddress().then((address) => {
            if (address) {
                address = address.toLowerCase();
            }
            return address;
        });
        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user
        // wishes to use this, it is easy to specify explicitly, otherwise
        // we look it up for them.
        if (transaction.gasLimit == null) {
            const estimate = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.shallowCopy)(transaction);
            estimate.from = fromAddress;
            transaction.gasLimit = this.provider.estimateGas(estimate);
        }
        if (transaction.to != null) {
            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {
                if (to == null) {
                    return null;
                }
                const address = yield this.provider.resolveName(to);
                if (address == null) {
                    logger.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                }
                return address;
            }));
        }
        return (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.resolveProperties)({
            tx: (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.resolveProperties)(transaction),
            sender: fromAddress
        }).then(({ tx, sender }) => {
            if (tx.from != null) {
                if (tx.from.toLowerCase() !== sender) {
                    logger.throwArgumentError("from address mismatch", "transaction", transaction);
                }
            }
            else {
                tx.from = sender;
            }
            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });
            return this.provider.send("eth_sendTransaction", [hexTx]).then((hash) => {
                return hash;
            }, (error) => {
                if (typeof (error.message) === "string" && error.message.match(/user denied/i)) {
                    logger.throwError("user rejected transaction", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.ACTION_REJECTED, {
                        action: "sendTransaction",
                        transaction: tx
                    });
                }
                return checkError("sendTransaction", error, hexTx);
            });
        });
    }
    signTransaction(transaction) {
        return logger.throwError("signing transactions is unsupported", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "signTransaction"
        });
    }
    sendTransaction(transaction) {
        return __awaiter(this, void 0, void 0, function* () {
            // This cannot be mined any earlier than any recent block
            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);
            // Send the transaction
            const hash = yield this.sendUncheckedTransaction(transaction);
            try {
                // Unfortunately, JSON-RPC only provides and opaque transaction hash
                // for a response, and we need the actual transaction, so we poll
                // for it; it should show up very quickly
                return yield (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_5__.poll)(() => __awaiter(this, void 0, void 0, function* () {
                    const tx = yield this.provider.getTransaction(hash);
                    if (tx === null) {
                        return undefined;
                    }
                    return this.provider._wrapTransaction(tx, hash, blockNumber);
                }), { oncePoll: this.provider });
            }
            catch (error) {
                error.transactionHash = hash;
                throw error;
            }
        });
    }
    signMessage(message) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = ((typeof (message) === "string") ? (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_6__.toUtf8Bytes)(message) : message);
            const address = yield this.getAddress();
            try {
                return yield this.provider.send("personal_sign", [(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data), address.toLowerCase()]);
            }
            catch (error) {
                if (typeof (error.message) === "string" && error.message.match(/user denied/i)) {
                    logger.throwError("user rejected signing", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.ACTION_REJECTED, {
                        action: "signMessage",
                        from: address,
                        messageData: message
                    });
                }
                throw error;
            }
        });
    }
    _legacySignMessage(message) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = ((typeof (message) === "string") ? (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_6__.toUtf8Bytes)(message) : message);
            const address = yield this.getAddress();
            try {
                // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign
                return yield this.provider.send("eth_sign", [address.toLowerCase(), (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data)]);
            }
            catch (error) {
                if (typeof (error.message) === "string" && error.message.match(/user denied/i)) {
                    logger.throwError("user rejected signing", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.ACTION_REJECTED, {
                        action: "_legacySignMessage",
                        from: address,
                        messageData: message
                    });
                }
                throw error;
            }
        });
    }
    _signTypedData(domain, types, value) {
        return __awaiter(this, void 0, void 0, function* () {
            // Populate any ENS names (in-place)
            const populated = yield _ethersproject_hash__WEBPACK_IMPORTED_MODULE_7__.TypedDataEncoder.resolveNames(domain, types, value, (name) => {
                return this.provider.resolveName(name);
            });
            const address = yield this.getAddress();
            try {
                return yield this.provider.send("eth_signTypedData_v4", [
                    address.toLowerCase(),
                    JSON.stringify(_ethersproject_hash__WEBPACK_IMPORTED_MODULE_7__.TypedDataEncoder.getPayload(populated.domain, types, populated.value))
                ]);
            }
            catch (error) {
                if (typeof (error.message) === "string" && error.message.match(/user denied/i)) {
                    logger.throwError("user rejected signing", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.ACTION_REJECTED, {
                        action: "_signTypedData",
                        from: address,
                        messageData: { domain: populated.domain, types, value: populated.value }
                    });
                }
                throw error;
            }
        });
    }
    unlock(password) {
        return __awaiter(this, void 0, void 0, function* () {
            const provider = this.provider;
            const address = yield this.getAddress();
            return provider.send("personal_unlockAccount", [address.toLowerCase(), password, null]);
        });
    }
}
class UncheckedJsonRpcSigner extends JsonRpcSigner {
    sendTransaction(transaction) {
        return this.sendUncheckedTransaction(transaction).then((hash) => {
            return {
                hash: hash,
                nonce: null,
                gasLimit: null,
                gasPrice: null,
                data: null,
                value: null,
                chainId: null,
                confirmations: 0,
                from: null,
                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }
            };
        });
    }
}
const allowedTransactionKeys = {
    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,
    type: true, accessList: true,
    maxFeePerGas: true, maxPriorityFeePerGas: true
};
class JsonRpcProvider extends _base_provider__WEBPACK_IMPORTED_MODULE_8__.BaseProvider {
    constructor(url, network) {
        let networkOrReady = network;
        // The network is unknown, query the JSON-RPC for it
        if (networkOrReady == null) {
            networkOrReady = new Promise((resolve, reject) => {
                setTimeout(() => {
                    this.detectNetwork().then((network) => {
                        resolve(network);
                    }, (error) => {
                        reject(error);
                    });
                }, 0);
            });
        }
        super(networkOrReady);
        // Default URL
        if (!url) {
            url = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.getStatic)(this.constructor, "defaultUrl")();
        }
        if (typeof (url) === "string") {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.defineReadOnly)(this, "connection", Object.freeze({
                url: url
            }));
        }
        else {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.defineReadOnly)(this, "connection", Object.freeze((0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.shallowCopy)(url)));
        }
        this._nextId = 42;
    }
    get _cache() {
        if (this._eventLoopCache == null) {
            this._eventLoopCache = {};
        }
        return this._eventLoopCache;
    }
    static defaultUrl() {
        return "http:/\/localhost:8545";
    }
    detectNetwork() {
        if (!this._cache["detectNetwork"]) {
            this._cache["detectNetwork"] = this._uncachedDetectNetwork();
            // Clear this cache at the beginning of the next event loop
            setTimeout(() => {
                this._cache["detectNetwork"] = null;
            }, 0);
        }
        return this._cache["detectNetwork"];
    }
    _uncachedDetectNetwork() {
        return __awaiter(this, void 0, void 0, function* () {
            yield timer(0);
            let chainId = null;
            try {
                chainId = yield this.send("eth_chainId", []);
            }
            catch (error) {
                try {
                    chainId = yield this.send("net_version", []);
                }
                catch (error) { }
            }
            if (chainId != null) {
                const getNetwork = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.getStatic)(this.constructor, "getNetwork");
                try {
                    return getNetwork(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_9__.BigNumber.from(chainId).toNumber());
                }
                catch (error) {
                    return logger.throwError("could not detect network", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.NETWORK_ERROR, {
                        chainId: chainId,
                        event: "invalidNetwork",
                        serverError: error
                    });
                }
            }
            return logger.throwError("could not detect network", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.NETWORK_ERROR, {
                event: "noNetwork"
            });
        });
    }
    getSigner(addressOrIndex) {
        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);
    }
    getUncheckedSigner(addressOrIndex) {
        return this.getSigner(addressOrIndex).connectUnchecked();
    }
    listAccounts() {
        return this.send("eth_accounts", []).then((accounts) => {
            return accounts.map((a) => this.formatter.address(a));
        });
    }
    send(method, params) {
        const request = {
            method: method,
            params: params,
            id: (this._nextId++),
            jsonrpc: "2.0"
        };
        this.emit("debug", {
            action: "request",
            request: (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.deepCopy)(request),
            provider: this
        });
        // We can expand this in the future to any call, but for now these
        // are the biggest wins and do not require any serializing parameters.
        const cache = (["eth_chainId", "eth_blockNumber"].indexOf(method) >= 0);
        if (cache && this._cache[method]) {
            return this._cache[method];
        }
        const result = (0,_ethersproject_web__WEBPACK_IMPORTED_MODULE_5__.fetchJson)(this.connection, JSON.stringify(request), getResult).then((result) => {
            this.emit("debug", {
                action: "response",
                request: request,
                response: result,
                provider: this
            });
            return result;
        }, (error) => {
            this.emit("debug", {
                action: "response",
                error: error,
                request: request,
                provider: this
            });
            throw error;
        });
        // Cache the fetch, but clear it on the next event loop
        if (cache) {
            this._cache[method] = result;
            setTimeout(() => {
                this._cache[method] = null;
            }, 0);
        }
        return result;
    }
    prepareRequest(method, params) {
        switch (method) {
            case "getBlockNumber":
                return ["eth_blockNumber", []];
            case "getGasPrice":
                return ["eth_gasPrice", []];
            case "getBalance":
                return ["eth_getBalance", [getLowerCase(params.address), params.blockTag]];
            case "getTransactionCount":
                return ["eth_getTransactionCount", [getLowerCase(params.address), params.blockTag]];
            case "getCode":
                return ["eth_getCode", [getLowerCase(params.address), params.blockTag]];
            case "getStorageAt":
                return ["eth_getStorageAt", [getLowerCase(params.address), (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexZeroPad)(params.position, 32), params.blockTag]];
            case "sendTransaction":
                return ["eth_sendRawTransaction", [params.signedTransaction]];
            case "getBlock":
                if (params.blockTag) {
                    return ["eth_getBlockByNumber", [params.blockTag, !!params.includeTransactions]];
                }
                else if (params.blockHash) {
                    return ["eth_getBlockByHash", [params.blockHash, !!params.includeTransactions]];
                }
                return null;
            case "getTransaction":
                return ["eth_getTransactionByHash", [params.transactionHash]];
            case "getTransactionReceipt":
                return ["eth_getTransactionReceipt", [params.transactionHash]];
            case "call": {
                const hexlifyTransaction = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.getStatic)(this.constructor, "hexlifyTransaction");
                return ["eth_call", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];
            }
            case "estimateGas": {
                const hexlifyTransaction = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.getStatic)(this.constructor, "hexlifyTransaction");
                return ["eth_estimateGas", [hexlifyTransaction(params.transaction, { from: true })]];
            }
            case "getLogs":
                if (params.filter && params.filter.address != null) {
                    params.filter.address = getLowerCase(params.filter.address);
                }
                return ["eth_getLogs", [params.filter]];
            default:
                break;
        }
        return null;
    }
    perform(method, params) {
        return __awaiter(this, void 0, void 0, function* () {
            // Legacy networks do not like the type field being passed along (which
            // is fair), so we delete type if it is 0 and a non-EIP-1559 network
            if (method === "call" || method === "estimateGas") {
                const tx = params.transaction;
                if (tx && tx.type != null && _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_9__.BigNumber.from(tx.type).isZero()) {
                    // If there are no EIP-1559 properties, it might be non-EIP-1559
                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {
                        const feeData = yield this.getFeeData();
                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {
                            // Network doesn't know about EIP-1559 (and hence type)
                            params = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.shallowCopy)(params);
                            params.transaction = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.shallowCopy)(tx);
                            delete params.transaction.type;
                        }
                    }
                }
            }
            const args = this.prepareRequest(method, params);
            if (args == null) {
                logger.throwError(method + " not implemented", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.NOT_IMPLEMENTED, { operation: method });
            }
            try {
                return yield this.send(args[0], args[1]);
            }
            catch (error) {
                return checkError(method, error, params);
            }
        });
    }
    _startEvent(event) {
        if (event.tag === "pending") {
            this._startPending();
        }
        super._startEvent(event);
    }
    _startPending() {
        if (this._pendingFilter != null) {
            return;
        }
        const self = this;
        const pendingFilter = this.send("eth_newPendingTransactionFilter", []);
        this._pendingFilter = pendingFilter;
        pendingFilter.then(function (filterId) {
            function poll() {
                self.send("eth_getFilterChanges", [filterId]).then(function (hashes) {
                    if (self._pendingFilter != pendingFilter) {
                        return null;
                    }
                    let seq = Promise.resolve();
                    hashes.forEach(function (hash) {
                        // @TODO: This should be garbage collected at some point... How? When?
                        self._emitted["t:" + hash.toLowerCase()] = "pending";
                        seq = seq.then(function () {
                            return self.getTransaction(hash).then(function (tx) {
                                self.emit("pending", tx);
                                return null;
                            });
                        });
                    });
                    return seq.then(function () {
                        return timer(1000);
                    });
                }).then(function () {
                    if (self._pendingFilter != pendingFilter) {
                        self.send("eth_uninstallFilter", [filterId]);
                        return;
                    }
                    setTimeout(function () { poll(); }, 0);
                    return null;
                }).catch((error) => { });
            }
            poll();
            return filterId;
        }).catch((error) => { });
    }
    _stopEvent(event) {
        if (event.tag === "pending" && this.listenerCount("pending") === 0) {
            this._pendingFilter = null;
        }
        super._stopEvent(event);
    }
    // Convert an ethers.js transaction into a JSON-RPC transaction
    //  - gasLimit => gas
    //  - All values hexlified
    //  - All numeric values zero-striped
    //  - All addresses are lowercased
    // NOTE: This allows a TransactionRequest, but all values should be resolved
    //       before this is called
    // @TODO: This will likely be removed in future versions and prepareRequest
    //        will be the preferred method for this.
    static hexlifyTransaction(transaction, allowExtra) {
        // Check only allowed properties are given
        const allowed = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.shallowCopy)(allowedTransactionKeys);
        if (allowExtra) {
            for (const key in allowExtra) {
                if (allowExtra[key]) {
                    allowed[key] = true;
                }
            }
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_4__.checkProperties)(transaction, allowed);
        const result = {};
        // JSON-RPC now requires numeric values to be "quantity" values
        ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function (key) {
            if (transaction[key] == null) {
                return;
            }
            const value = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexValue)(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_9__.BigNumber.from(transaction[key]));
            if (key === "gasLimit") {
                key = "gas";
            }
            result[key] = value;
        });
        ["from", "to", "data"].forEach(function (key) {
            if (transaction[key] == null) {
                return;
            }
            result[key] = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(transaction[key]);
        });
        if (transaction.accessList) {
            result["accessList"] = (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_10__.accessListify)(transaction.accessList);
        }
        return result;
    }
}
//# sourceMappingURL=json-rpc-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodesmithProvider": () => (/* binding */ NodesmithProvider)
/* harmony export */ });
/* harmony import */ var _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./url-json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");
/* istanbul ignore file */




const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
// Special API key provided by Nodesmith for ethers.js
const defaultApiKey = "ETHERS_JS_SHARED";
class NodesmithProvider extends _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__.UrlJsonRpcProvider {
    static getApiKey(apiKey) {
        if (apiKey && typeof (apiKey) !== "string") {
            logger.throwArgumentError("invalid apiKey", "apiKey", apiKey);
        }
        return apiKey || defaultApiKey;
    }
    static getUrl(network, apiKey) {
        logger.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
        let host = null;
        switch (network.name) {
            case "homestead":
                host = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
                break;
            case "ropsten":
                host = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
                break;
            case "rinkeby":
                host = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
                break;
            case "goerli":
                host = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
                break;
            case "kovan":
                host = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
                break;
            default:
                logger.throwArgumentError("unsupported network", "network", arguments[0]);
        }
        return (host + "?apiKey=" + apiKey);
    }
}
//# sourceMappingURL=nodesmith-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/pocket-provider.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/pocket-provider.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PocketProvider": () => (/* binding */ PocketProvider)
/* harmony export */ });
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");
/* harmony import */ var _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./url-json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js");



const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

const defaultApplicationId = "62e1ad51b37b8e00394bda3b";
class PocketProvider extends _url_json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__.UrlJsonRpcProvider {
    static getApiKey(apiKey) {
        const apiKeyObj = {
            applicationId: null,
            loadBalancer: true,
            applicationSecretKey: null
        };
        // Parse applicationId and applicationSecretKey
        if (apiKey == null) {
            apiKeyObj.applicationId = defaultApplicationId;
        }
        else if (typeof (apiKey) === "string") {
            apiKeyObj.applicationId = apiKey;
        }
        else if (apiKey.applicationSecretKey != null) {
            apiKeyObj.applicationId = apiKey.applicationId;
            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;
        }
        else if (apiKey.applicationId) {
            apiKeyObj.applicationId = apiKey.applicationId;
        }
        else {
            logger.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", apiKey);
        }
        return apiKeyObj;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch (network ? network.name : "unknown") {
            case "goerli":
                host = "eth-goerli.gateway.pokt.network";
                break;
            case "homestead":
                host = "eth-mainnet.gateway.pokt.network";
                break;
            case "kovan":
                host = "poa-kovan.gateway.pokt.network";
                break;
            case "matic":
                host = "poly-mainnet.gateway.pokt.network";
                break;
            case "maticmum":
                host = "polygon-mumbai-rpc.gateway.pokt.network";
                break;
            case "rinkeby":
                host = "eth-rinkeby.gateway.pokt.network";
                break;
            case "ropsten":
                host = "eth-ropsten.gateway.pokt.network";
                break;
            default:
                logger.throwError("unsupported network", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, {
                    argument: "network",
                    value: network
                });
        }
        const url = `https:/\/${host}/v1/lb/${apiKey.applicationId}`;
        const connection = { headers: {}, url };
        if (apiKey.applicationSecretKey != null) {
            connection.user = "";
            connection.password = apiKey.applicationSecretKey;
        }
        return connection;
    }
    isCommunityResource() {
        return (this.applicationId === defaultApplicationId);
    }
}
//# sourceMappingURL=pocket-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StaticJsonRpcProvider": () => (/* binding */ StaticJsonRpcProvider),
/* harmony export */   "UrlJsonRpcProvider": () => (/* binding */ UrlJsonRpcProvider)
/* harmony export */ });
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");
/* harmony import */ var _json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

// A StaticJsonRpcProvider is useful when you *know* for certain that
// the backend will never change, as it never calls eth_chainId to
// verify its backend. However, if the backend does change, the effects
// are undefined and may include:
// - inconsistent results
// - locking up the UI
// - block skew warnings
// - wrong results
// If the network is not explicit (i.e. auto-detection is expected), the
// node MUST be running and available to respond to requests BEFORE this
// is instantiated.
class StaticJsonRpcProvider extends _json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider {
    detectNetwork() {
        const _super = Object.create(null, {
            detectNetwork: { get: () => super.detectNetwork }
        });
        return __awaiter(this, void 0, void 0, function* () {
            let network = this.network;
            if (network == null) {
                network = yield _super.detectNetwork.call(this);
                if (!network) {
                    logger.throwError("no network detected", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNKNOWN_ERROR, {});
                }
                // If still not set, set it
                if (this._network == null) {
                    // A static network does not support "any"
                    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_network", network);
                    this.emit("network", network, null);
                }
            }
            return network;
        });
    }
}
class UrlJsonRpcProvider extends StaticJsonRpcProvider {
    constructor(network, apiKey) {
        logger.checkAbstract(new.target, UrlJsonRpcProvider);
        // Normalize the Network and API Key
        network = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(new.target, "getNetwork")(network);
        apiKey = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(new.target, "getApiKey")(apiKey);
        const connection = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(new.target, "getUrl")(network, apiKey);
        super(connection, network);
        if (typeof (apiKey) === "string") {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "apiKey", apiKey);
        }
        else if (apiKey != null) {
            Object.keys(apiKey).forEach((key) => {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, key, apiKey[key]);
            });
        }
    }
    _startPending() {
        logger.warn("WARNING: API provider does not support pending filters");
    }
    isCommunityResource() {
        return false;
    }
    getSigner(address) {
        return logger.throwError("API provider does not support signing", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, { operation: "getSigner" });
    }
    listAccounts() {
        return Promise.resolve([]);
    }
    // Return a defaultApiKey if null, otherwise validate the API key
    static getApiKey(apiKey) {
        return apiKey;
    }
    // Returns the url or connection for the given network and API key. The
    // API key will have been sanitized by the getApiKey first, so any validation
    // or transformations can be done there.
    static getUrl(network, apiKey) {
        return logger.throwError("not implemented; sub-classes must override getUrl", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.NOT_IMPLEMENTED, {
            operation: "getUrl"
        });
    }
}
//# sourceMappingURL=url-json-rpc-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/web3-provider.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/web3-provider.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Web3Provider": () => (/* binding */ Web3Provider)
/* harmony export */ });
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");
/* harmony import */ var _json_rpc_provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js");




const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

let _nextId = 1;
function buildWeb3LegacyFetcher(provider, sendFunc) {
    const fetcher = "Web3LegacyFetcher";
    return function (method, params) {
        const request = {
            method: method,
            params: params,
            id: (_nextId++),
            jsonrpc: "2.0"
        };
        return new Promise((resolve, reject) => {
            this.emit("debug", {
                action: "request",
                fetcher,
                request: (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.deepCopy)(request),
                provider: this
            });
            sendFunc(request, (error, response) => {
                if (error) {
                    this.emit("debug", {
                        action: "response",
                        fetcher,
                        error,
                        request,
                        provider: this
                    });
                    return reject(error);
                }
                this.emit("debug", {
                    action: "response",
                    fetcher,
                    request,
                    response,
                    provider: this
                });
                if (response.error) {
                    const error = new Error(response.error.message);
                    error.code = response.error.code;
                    error.data = response.error.data;
                    return reject(error);
                }
                resolve(response.result);
            });
        });
    };
}
function buildEip1193Fetcher(provider) {
    return function (method, params) {
        if (params == null) {
            params = [];
        }
        const request = { method, params };
        this.emit("debug", {
            action: "request",
            fetcher: "Eip1193Fetcher",
            request: (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.deepCopy)(request),
            provider: this
        });
        return provider.request(request).then((response) => {
            this.emit("debug", {
                action: "response",
                fetcher: "Eip1193Fetcher",
                request,
                response,
                provider: this
            });
            return response;
        }, (error) => {
            this.emit("debug", {
                action: "response",
                fetcher: "Eip1193Fetcher",
                request,
                error,
                provider: this
            });
            throw error;
        });
    };
}
class Web3Provider extends _json_rpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider {
    constructor(provider, network) {
        if (provider == null) {
            logger.throwArgumentError("missing provider", "provider", provider);
        }
        let path = null;
        let jsonRpcFetchFunc = null;
        let subprovider = null;
        if (typeof (provider) === "function") {
            path = "unknown:";
            jsonRpcFetchFunc = provider;
        }
        else {
            path = provider.host || provider.path || "";
            if (!path && provider.isMetaMask) {
                path = "metamask";
            }
            subprovider = provider;
            if (provider.request) {
                if (path === "") {
                    path = "eip-1193:";
                }
                jsonRpcFetchFunc = buildEip1193Fetcher(provider);
            }
            else if (provider.sendAsync) {
                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));
            }
            else if (provider.send) {
                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));
            }
            else {
                logger.throwArgumentError("unsupported provider", "provider", provider);
            }
            if (!path) {
                path = "unknown:";
            }
        }
        super(path, network);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "jsonRpcFetchFunc", jsonRpcFetchFunc);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "provider", subprovider);
    }
    send(method, params) {
        return this.jsonRpcFetchFunc(method, params);
    }
}
//# sourceMappingURL=web3-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WebSocketProvider": () => (/* binding */ WebSocketProvider)
/* harmony export */ });
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json-rpc-provider */ "./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js");
/* harmony import */ var _ws__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ws */ "./node_modules/@ethersproject/providers/lib.esm/ws.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
/**
 *  Notes:
 *
 *  This provider differs a bit from the polling providers. One main
 *  difference is how it handles consistency. The polling providers
 *  will stall responses to ensure a consistent state, while this
 *  WebSocket provider assumes the connected backend will manage this.
 *
 *  For example, if a polling provider emits an event which indicates
 *  the event occurred in blockhash XXX, a call to fetch that block by
 *  its hash XXX, if not present will retry until it is present. This
 *  can occur when querying a pool of nodes that are mildly out of sync
 *  with each other.
 */
let NextId = 1;
// For more info about the Real-time Event API see:
//   https://geth.ethereum.org/docs/rpc/pubsub
class WebSocketProvider extends _json_rpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider {
    constructor(url, network) {
        // This will be added in the future; please open an issue to expedite
        if (network === "any") {
            logger.throwError("WebSocketProvider does not support 'any' network yet", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "network:any"
            });
        }
        if (typeof (url) === "string") {
            super(url, network);
        }
        else {
            super("_websocket", network);
        }
        this._pollingInterval = -1;
        this._wsReady = false;
        if (typeof (url) === "string") {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_websocket", new _ws__WEBPACK_IMPORTED_MODULE_4__.WebSocket(this.connection.url));
        }
        else {
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_websocket", url);
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_requests", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_subs", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_subIds", {});
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_detectNetwork", super.detectNetwork());
        // Stall sending requests until the socket is open...
        this.websocket.onopen = () => {
            this._wsReady = true;
            Object.keys(this._requests).forEach((id) => {
                this.websocket.send(this._requests[id].payload);
            });
        };
        this.websocket.onmessage = (messageEvent) => {
            const data = messageEvent.data;
            const result = JSON.parse(data);
            if (result.id != null) {
                const id = String(result.id);
                const request = this._requests[id];
                delete this._requests[id];
                if (result.result !== undefined) {
                    request.callback(null, result.result);
                    this.emit("debug", {
                        action: "response",
                        request: JSON.parse(request.payload),
                        response: result.result,
                        provider: this
                    });
                }
                else {
                    let error = null;
                    if (result.error) {
                        error = new Error(result.error.message || "unknown error");
                        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(error, "code", result.error.code || null);
                        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(error, "response", data);
                    }
                    else {
                        error = new Error("unknown error");
                    }
                    request.callback(error, undefined);
                    this.emit("debug", {
                        action: "response",
                        error: error,
                        request: JSON.parse(request.payload),
                        provider: this
                    });
                }
            }
            else if (result.method === "eth_subscription") {
                // Subscription...
                const sub = this._subs[result.params.subscription];
                if (sub) {
                    //this.emit.apply(this,                  );
                    sub.processFunc(result.params.result);
                }
            }
            else {
                console.warn("this should not happen");
            }
        };
        // This Provider does not actually poll, but we want to trigger
        // poll events for things that depend on them (like stalling for
        // block and transaction lookups)
        const fauxPoll = setInterval(() => {
            this.emit("poll");
        }, 1000);
        if (fauxPoll.unref) {
            fauxPoll.unref();
        }
    }
    // Cannot narrow the type of _websocket, as that is not backwards compatible
    // so we add a getter and let the WebSocket be a public API.
    get websocket() { return this._websocket; }
    detectNetwork() {
        return this._detectNetwork;
    }
    get pollingInterval() {
        return 0;
    }
    resetEventsBlock(blockNumber) {
        logger.throwError("cannot reset events block on WebSocketProvider", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "resetEventBlock"
        });
    }
    set pollingInterval(value) {
        logger.throwError("cannot set polling interval on WebSocketProvider", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "setPollingInterval"
        });
    }
    poll() {
        return __awaiter(this, void 0, void 0, function* () {
            return null;
        });
    }
    set polling(value) {
        if (!value) {
            return;
        }
        logger.throwError("cannot set polling on WebSocketProvider", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "setPolling"
        });
    }
    send(method, params) {
        const rid = NextId++;
        return new Promise((resolve, reject) => {
            function callback(error, result) {
                if (error) {
                    return reject(error);
                }
                return resolve(result);
            }
            const payload = JSON.stringify({
                method: method,
                params: params,
                id: rid,
                jsonrpc: "2.0"
            });
            this.emit("debug", {
                action: "request",
                request: JSON.parse(payload),
                provider: this
            });
            this._requests[String(rid)] = { callback, payload };
            if (this._wsReady) {
                this.websocket.send(payload);
            }
        });
    }
    static defaultUrl() {
        return "ws:/\/localhost:8546";
    }
    _subscribe(tag, param, processFunc) {
        return __awaiter(this, void 0, void 0, function* () {
            let subIdPromise = this._subIds[tag];
            if (subIdPromise == null) {
                subIdPromise = Promise.all(param).then((param) => {
                    return this.send("eth_subscribe", param);
                });
                this._subIds[tag] = subIdPromise;
            }
            const subId = yield subIdPromise;
            this._subs[subId] = { tag, processFunc };
        });
    }
    _startEvent(event) {
        switch (event.type) {
            case "block":
                this._subscribe("block", ["newHeads"], (result) => {
                    const blockNumber = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(result.number).toNumber();
                    this._emitted.block = blockNumber;
                    this.emit("block", blockNumber);
                });
                break;
            case "pending":
                this._subscribe("pending", ["newPendingTransactions"], (result) => {
                    this.emit("pending", result);
                });
                break;
            case "filter":
                this._subscribe(event.tag, ["logs", this._getFilter(event.filter)], (result) => {
                    if (result.removed == null) {
                        result.removed = false;
                    }
                    this.emit(event.filter, this.formatter.filterLog(result));
                });
                break;
            case "tx": {
                const emitReceipt = (event) => {
                    const hash = event.hash;
                    this.getTransactionReceipt(hash).then((receipt) => {
                        if (!receipt) {
                            return;
                        }
                        this.emit(hash, receipt);
                    });
                };
                // In case it is already mined
                emitReceipt(event);
                // To keep things simple, we start up a single newHeads subscription
                // to keep an eye out for transactions we are watching for.
                // Starting a subscription for an event (i.e. "tx") that is already
                // running is (basically) a nop.
                this._subscribe("tx", ["newHeads"], (result) => {
                    this._events.filter((e) => (e.type === "tx")).forEach(emitReceipt);
                });
                break;
            }
            // Nothing is needed
            case "debug":
            case "poll":
            case "willPoll":
            case "didPoll":
            case "error":
                break;
            default:
                console.log("unhandled:", event);
                break;
        }
    }
    _stopEvent(event) {
        let tag = event.tag;
        if (event.type === "tx") {
            // There are remaining transaction event listeners
            if (this._events.filter((e) => (e.type === "tx")).length) {
                return;
            }
            tag = "tx";
        }
        else if (this.listenerCount(event.event)) {
            // There are remaining event listeners
            return;
        }
        const subId = this._subIds[tag];
        if (!subId) {
            return;
        }
        delete this._subIds[tag];
        subId.then((subId) => {
            if (!this._subs[subId]) {
                return;
            }
            delete this._subs[subId];
            this.send("eth_unsubscribe", [subId]);
        });
    }
    destroy() {
        return __awaiter(this, void 0, void 0, function* () {
            // Wait until we have connected before trying to disconnect
            if (this.websocket.readyState === _ws__WEBPACK_IMPORTED_MODULE_4__.WebSocket.CONNECTING) {
                yield (new Promise((resolve) => {
                    this.websocket.onopen = function () {
                        resolve(true);
                    };
                    this.websocket.onerror = function () {
                        resolve(false);
                    };
                }));
            }
            // Hangup
            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes
            this.websocket.close(1000);
        });
    }
}
//# sourceMappingURL=websocket-provider.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/providers/lib.esm/ws.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/providers/lib.esm/ws.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WebSocket": () => (/* binding */ WS)
/* harmony export */ });
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/providers/lib.esm/_version.js");



let WS = null;
try {
    WS = WebSocket;
    if (WS == null) {
        throw new Error("inject please");
    }
}
catch (error) {
    const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
    WS = function () {
        logger.throwError("WebSockets not supported in this environment", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "new WebSocket()"
        });
    };
}
//export default WS;
//module.exports = WS;

//# sourceMappingURL=ws.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/random/lib.esm/_version.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/random/lib.esm/_version.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "random/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/random/lib.esm/random.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/random/lib.esm/random.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "randomBytes": () => (/* binding */ randomBytes)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/random/lib.esm/_version.js");




const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
// Debugging line for testing browser lib in node
//const window = { crypto: { getRandomValues: () => { } } };
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis
function getGlobal() {
    if (typeof self !== 'undefined') {
        return self;
    }
    if (typeof window !== 'undefined') {
        return window;
    }
    if (typeof __webpack_require__.g !== 'undefined') {
        return __webpack_require__.g;
    }
    throw new Error('unable to locate global object');
}
;
const anyGlobal = getGlobal();
let crypto = anyGlobal.crypto || anyGlobal.msCrypto;
if (!crypto || !crypto.getRandomValues) {
    logger.warn("WARNING: Missing strong random number source");
    crypto = {
        getRandomValues: function (buffer) {
            return logger.throwError("no secure random source avaialble", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "crypto.getRandomValues"
            });
        }
    };
}
function randomBytes(length) {
    if (length <= 0 || length > 1024 || (length % 1) || length != length) {
        logger.throwArgumentError("invalid length", "length", length);
    }
    const result = new Uint8Array(length);
    crypto.getRandomValues(result);
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(result);
}
;
//# sourceMappingURL=random.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/random/lib.esm/shuffle.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ethersproject/random/lib.esm/shuffle.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "shuffled": () => (/* binding */ shuffled)
/* harmony export */ });

function shuffled(array) {
    array = array.slice();
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        const tmp = array[i];
        array[i] = array[j];
        array[j] = tmp;
    }
    return array;
}
//# sourceMappingURL=shuffle.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/rlp/lib.esm/_version.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/rlp/lib.esm/_version.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "rlp/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/rlp/lib.esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ethersproject/rlp/lib.esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decode": () => (/* binding */ decode),
/* harmony export */   "encode": () => (/* binding */ encode)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/rlp/lib.esm/_version.js");

//See: https://github.com/ethereum/wiki/wiki/RLP



const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
function arrayifyInteger(value) {
    const result = [];
    while (value) {
        result.unshift(value & 0xff);
        value >>= 8;
    }
    return result;
}
function unarrayifyInteger(data, offset, length) {
    let result = 0;
    for (let i = 0; i < length; i++) {
        result = (result * 256) + data[offset + i];
    }
    return result;
}
function _encode(object) {
    if (Array.isArray(object)) {
        let payload = [];
        object.forEach(function (child) {
            payload = payload.concat(_encode(child));
        });
        if (payload.length <= 55) {
            payload.unshift(0xc0 + payload.length);
            return payload;
        }
        const length = arrayifyInteger(payload.length);
        length.unshift(0xf7 + length.length);
        return length.concat(payload);
    }
    if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isBytesLike)(object)) {
        logger.throwArgumentError("RLP object must be BytesLike", "object", object);
    }
    const data = Array.prototype.slice.call((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(object));
    if (data.length === 1 && data[0] <= 0x7f) {
        return data;
    }
    else if (data.length <= 55) {
        data.unshift(0x80 + data.length);
        return data;
    }
    const length = arrayifyInteger(data.length);
    length.unshift(0xb7 + length.length);
    return length.concat(data);
}
function encode(object) {
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(_encode(object));
}
function _decodeChildren(data, offset, childOffset, length) {
    const result = [];
    while (childOffset < offset + 1 + length) {
        const decoded = _decode(data, childOffset);
        result.push(decoded.result);
        childOffset += decoded.consumed;
        if (childOffset > offset + 1 + length) {
            logger.throwError("child data too short", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});
        }
    }
    return { consumed: (1 + length), result: result };
}
// returns { consumed: number, result: Object }
function _decode(data, offset) {
    if (data.length === 0) {
        logger.throwError("data too short", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});
    }
    // Array with extra length prefix
    if (data[offset] >= 0xf8) {
        const lengthLength = data[offset] - 0xf7;
        if (offset + 1 + lengthLength > data.length) {
            logger.throwError("data short segment too short", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});
        }
        const length = unarrayifyInteger(data, offset + 1, lengthLength);
        if (offset + 1 + lengthLength + length > data.length) {
            logger.throwError("data long segment too short", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});
        }
        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);
    }
    else if (data[offset] >= 0xc0) {
        const length = data[offset] - 0xc0;
        if (offset + 1 + length > data.length) {
            logger.throwError("data array too short", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});
        }
        return _decodeChildren(data, offset, offset + 1, length);
    }
    else if (data[offset] >= 0xb8) {
        const lengthLength = data[offset] - 0xb7;
        if (offset + 1 + lengthLength > data.length) {
            logger.throwError("data array too short", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});
        }
        const length = unarrayifyInteger(data, offset + 1, lengthLength);
        if (offset + 1 + lengthLength + length > data.length) {
            logger.throwError("data array too short", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});
        }
        const result = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));
        return { consumed: (1 + lengthLength + length), result: result };
    }
    else if (data[offset] >= 0x80) {
        const length = data[offset] - 0x80;
        if (offset + 1 + length > data.length) {
            logger.throwError("data too short", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});
        }
        const result = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data.slice(offset + 1, offset + 1 + length));
        return { consumed: (1 + length), result: result };
    }
    return { consumed: 1, result: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data[offset]) };
}
function decode(data) {
    const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(data);
    const decoded = _decode(bytes, 0);
    if (decoded.consumed !== bytes.length) {
        logger.throwArgumentError("invalid rlp data", "data", data);
    }
    return decoded.result;
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/sha2/lib.esm/_version.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/sha2/lib.esm/_version.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "sha2/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/sha2/lib.esm/sha2.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ethersproject/sha2/lib.esm/sha2.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "computeHmac": () => (/* binding */ computeHmac),
/* harmony export */   "ripemd160": () => (/* binding */ ripemd160),
/* harmony export */   "sha256": () => (/* binding */ sha256),
/* harmony export */   "sha512": () => (/* binding */ sha512)
/* harmony export */ });
/* harmony import */ var hash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
/* harmony import */ var hash_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hash_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types */ "./node_modules/@ethersproject/sha2/lib.esm/types.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/sha2/lib.esm/_version.js");


//const _ripemd160 = _hash.ripemd160;




const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_2__.version);
function ripemd160(data) {
    return "0x" + (hash_js__WEBPACK_IMPORTED_MODULE_0___default().ripemd160().update((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data)).digest("hex"));
}
function sha256(data) {
    return "0x" + (hash_js__WEBPACK_IMPORTED_MODULE_0___default().sha256().update((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data)).digest("hex"));
}
function sha512(data) {
    return "0x" + (hash_js__WEBPACK_IMPORTED_MODULE_0___default().sha512().update((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data)).digest("hex"));
}
function computeHmac(algorithm, key, data) {
    if (!_types__WEBPACK_IMPORTED_MODULE_4__.SupportedAlgorithm[algorithm]) {
        logger.throwError("unsupported algorithm " + algorithm, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "hmac",
            algorithm: algorithm
        });
    }
    return "0x" + hash_js__WEBPACK_IMPORTED_MODULE_0___default().hmac((hash_js__WEBPACK_IMPORTED_MODULE_0___default())[algorithm], (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(key)).update((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data)).digest("hex");
}
//# sourceMappingURL=sha2.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/sha2/lib.esm/types.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ethersproject/sha2/lib.esm/types.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SupportedAlgorithm": () => (/* binding */ SupportedAlgorithm)
/* harmony export */ });
var SupportedAlgorithm;
(function (SupportedAlgorithm) {
    SupportedAlgorithm["sha256"] = "sha256";
    SupportedAlgorithm["sha512"] = "sha512";
})(SupportedAlgorithm || (SupportedAlgorithm = {}));
;
//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/signing-key/lib.esm/_version.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethersproject/signing-key/lib.esm/_version.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "signing-key/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/signing-key/lib.esm/elliptic.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethersproject/signing-key/lib.esm/elliptic.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EC": () => (/* binding */ EC$1)
/* harmony export */ });
/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var hash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
/* harmony import */ var hash_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(hash_js__WEBPACK_IMPORTED_MODULE_1__);



var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, basedir, module) {
	return module = {
		path: basedir,
		exports: {},
		require: function (path, base) {
			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
		}
	}, fn(module, module.exports), module.exports;
}

function getDefaultExportFromNamespaceIfPresent (n) {
	return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;
}

function getDefaultExportFromNamespaceIfNotNamed (n) {
	return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;
}

function getAugmentedNamespace(n) {
	if (n.__esModule) return n;
	var a = Object.defineProperty({}, '__esModule', {value: true});
	Object.keys(n).forEach(function (k) {
		var d = Object.getOwnPropertyDescriptor(n, k);
		Object.defineProperty(a, k, d.get ? d : {
			enumerable: true,
			get: function () {
				return n[k];
			}
		});
	});
	return a;
}

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var minimalisticAssert = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

var utils_1 = createCommonjsModule(function (module, exports) {
'use strict';

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};
});

var utils_1$1 = createCommonjsModule(function (module, exports) {
'use strict';

var utils = exports;




utils.assert = minimalisticAssert;
utils.toArray = utils_1.toArray;
utils.zero2 = utils_1.zero2;
utils.toHex = utils_1.toHex;
utils.encode = utils_1.encode;

// Represent num in a w-NAF form
function getNAF(num, w, bits) {
  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
  naf.fill(0);

  var ws = 1 << (w + 1);
  var k = num.clone();

  for (var i = 0; i < naf.length; i++) {
    var z;
    var mod = k.andln(ws - 1);
    if (k.isOdd()) {
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }

    naf[i] = z;
    k.iushrn(1);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    [],
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  var m8;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
      this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
    bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;
});

'use strict';



var getNAF = utils_1$1.getNAF;
var getJSF = utils_1$1.getJSF;
var assert$1 = utils_1$1.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? bn_js__WEBPACK_IMPORTED_MODULE_0___default().red(conf.prime) : bn_js__WEBPACK_IMPORTED_MODULE_0___default().mont(this.p);

  // Useful for many curves
  this.zero = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(0).toRed(this.red);
  this.one = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(1).toRed(this.red);
  this.two = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
var base = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert$1(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);

    if (i < 0)
      break;
    var z = naf[i];
    assert$1(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
  points,
  coeffs,
  len,
  jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b], /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3,  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils_1$1.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert$1(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert$1(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len));
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils_1$1.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null,
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles,
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res,
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

var inherits_browser = createCommonjsModule(function (module) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function () {};
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
  };
}
});

'use strict';






var assert$2 = utils_1$1.assert;

function ShortCurve(conf) {
  base.call(this, 'short', conf);

  this.a = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(conf.a, 16).toRed(this.red);
  this.b = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits_browser(ShortCurve, base);
var short_1 = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(vec.a, 16),
        b: new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(vec.b, 16),
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis,
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : bn_js__WEBPACK_IMPORTED_MODULE_0___default().mont(num);
  var tinv = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(1);
  var y1 = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(0);
  var x2 = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(0);
  var y2 = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 },
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();

        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }

        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

      // Clean-up references to points and coefficients
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };

function Point(curve, x, y, isRed) {
  base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(x, 16);
    this.y = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits_browser(Point, base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul),
      },
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1),
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1),
    },
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point)),
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point)),
    },
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate),
      },
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(0);
  } else {
    this.x = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(x, 16);
    this.y = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(y, 16);
    this.z = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits_browser(JPoint, base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

var curve_1 = createCommonjsModule(function (module, exports) {
'use strict';

var curve = exports;

curve.base = base;
curve.short = short_1;
curve.mont = /*RicMoo:ethers:require(./mont)*/(null);
curve.edwards = /*RicMoo:ethers:require(./edwards)*/(null);
});

var curves_1 = createCommonjsModule(function (module, exports) {
'use strict';

var curves = exports;





var assert = utils_1$1.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new curve_1.short(options);
  else if (options.type === 'edwards')
    this.curve = new curve_1.edwards(options);
  else
    this.curve = new curve_1.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve,
      });
      return curve;
    },
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: (hash_js__WEBPACK_IMPORTED_MODULE_1___default().sha256),
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
  ],
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: (hash_js__WEBPACK_IMPORTED_MODULE_1___default().sha256),
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
  ],
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: (hash_js__WEBPACK_IMPORTED_MODULE_1___default().sha256),
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
  ],
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: (hash_js__WEBPACK_IMPORTED_MODULE_1___default().sha384),
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
  ],
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: (hash_js__WEBPACK_IMPORTED_MODULE_1___default().sha512),
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650',
  ],
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: (hash_js__WEBPACK_IMPORTED_MODULE_1___default().sha256),
  gRed: false,
  g: [
    '9',
  ],
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: (hash_js__WEBPACK_IMPORTED_MODULE_1___default().sha256),
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658',
  ],
});

var pre;
try {
  pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/(null).crash();
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: (hash_js__WEBPACK_IMPORTED_MODULE_1___default().sha256),

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3',
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15',
    },
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre,
  ],
});
});

'use strict';





function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');
  minimalisticAssert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
var hmacDrbg = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new (hash_js__WEBPACK_IMPORTED_MODULE_1___default().hmac)(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils_1.toArray(entropy, entropyEnc);
  add = utils_1.toArray(add, addEnc);

  minimalisticAssert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils_1.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils_1.encode(res, enc);
};

'use strict';



var assert$3 = utils_1$1.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
var key = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc,
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc,
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert$3(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert$3(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  if(!pub.validate()) {
    assert$3(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

'use strict';




var assert$4 = utils_1$1.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert$4(options.r && options.s, 'Signature without r or s');
  this.r = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(options.r, 16);
  this.s = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
var signature = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils_1$1.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(r);
  this.s = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils_1$1.encode(res, enc);
};

'use strict';





var rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });
var assert$5 = utils_1$1.assert;




function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options),
      'Unknown curve ' + options);

    options = curves_1[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves_1.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
var ec = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new key(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return key.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return key.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new hmacDrbg({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray(),
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(2));
  for (;;) {
    var priv = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};

EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new hmacDrbg({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(1));

  for (var iter = 0; ; iter++) {
    var k = options.k ?
      options.k(iter) :
      new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature$1, key, enc) {
  msg = this._truncateToN(new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature$1 = new signature(signature$1, 'hex');

  // Perform primitive values validation
  var r = signature$1.r;
  var s = signature$1.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;

  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {
  assert$5((3 & j) === j, 'The recovery param is more than two bits');
  signature$1 = new signature(signature$1, enc);

  var n = this.n;
  var e = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(msg);
  var r = signature$1.r;
  var s = signature$1.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature$1.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {
  signature$1 = new signature(signature$1, enc);
  if (signature$1.recoveryParam !== null)
    return signature$1.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature$1, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

var elliptic_1 = createCommonjsModule(function (module, exports) {
'use strict';

var elliptic = exports;

elliptic.version = /*RicMoo:ethers*/{ version: "6.5.4" }.version;
elliptic.utils = utils_1$1;
elliptic.rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });
elliptic.curve = curve_1;
elliptic.curves = curves_1;

// Protocols
elliptic.ec = ec;
elliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/(null);
});

var EC$1 = elliptic_1.ec;


//# sourceMappingURL=elliptic.js.map


/***/ }),

/***/ "./node_modules/@ethersproject/signing-key/lib.esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/signing-key/lib.esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SigningKey": () => (/* binding */ SigningKey),
/* harmony export */   "computePublicKey": () => (/* binding */ computePublicKey),
/* harmony export */   "recoverPublicKey": () => (/* binding */ recoverPublicKey)
/* harmony export */ });
/* harmony import */ var _elliptic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./elliptic */ "./node_modules/@ethersproject/signing-key/lib.esm/elliptic.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/signing-key/lib.esm/_version.js");






const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
let _curve = null;
function getCurve() {
    if (!_curve) {
        _curve = new _elliptic__WEBPACK_IMPORTED_MODULE_2__.EC("secp256k1");
    }
    return _curve;
}
class SigningKey {
    constructor(privateKey) {
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "curve", "secp256k1");
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "privateKey", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(privateKey));
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexDataLength)(this.privateKey) !== 32) {
            logger.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
        }
        const keyPair = getCurve().keyFromPrivate((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(this.privateKey));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "publicKey", "0x" + keyPair.getPublic(false, "hex"));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "compressedPublicKey", "0x" + keyPair.getPublic(true, "hex"));
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, "_isSigningKey", true);
    }
    _addPoint(other) {
        const p0 = getCurve().keyFromPublic((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(this.publicKey));
        const p1 = getCurve().keyFromPublic((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(other));
        return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
    }
    signDigest(digest) {
        const keyPair = getCurve().keyFromPrivate((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(this.privateKey));
        const digestBytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(digest);
        if (digestBytes.length !== 32) {
            logger.throwArgumentError("bad digest length", "digest", digest);
        }
        const signature = keyPair.sign(digestBytes, { canonical: true });
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.splitSignature)({
            recoveryParam: signature.recoveryParam,
            r: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexZeroPad)("0x" + signature.r.toString(16), 32),
            s: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexZeroPad)("0x" + signature.s.toString(16), 32),
        });
    }
    computeSharedSecret(otherKey) {
        const keyPair = getCurve().keyFromPrivate((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(this.privateKey));
        const otherKeyPair = getCurve().keyFromPublic((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(computePublicKey(otherKey)));
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexZeroPad)("0x" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);
    }
    static isSigningKey(value) {
        return !!(value && value._isSigningKey);
    }
}
function recoverPublicKey(digest, signature) {
    const sig = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.splitSignature)(signature);
    const rs = { r: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(sig.r), s: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(sig.s) };
    return "0x" + getCurve().recoverPubKey((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(digest), rs, sig.recoveryParam).encode("hex", false);
}
function computePublicKey(key, compressed) {
    const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.arrayify)(key);
    if (bytes.length === 32) {
        const signingKey = new SigningKey(bytes);
        if (compressed) {
            return "0x" + getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
        }
        return signingKey.publicKey;
    }
    else if (bytes.length === 33) {
        if (compressed) {
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(bytes);
        }
        return "0x" + getCurve().keyFromPublic(bytes).getPublic(false, "hex");
    }
    else if (bytes.length === 65) {
        if (!compressed) {
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_4__.hexlify)(bytes);
        }
        return "0x" + getCurve().keyFromPublic(bytes).getPublic(true, "hex");
    }
    return logger.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/solidity/lib.esm/_version.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/solidity/lib.esm/_version.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "solidity/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/solidity/lib.esm/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ethersproject/solidity/lib.esm/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keccak256": () => (/* binding */ keccak256),
/* harmony export */   "pack": () => (/* binding */ pack),
/* harmony export */   "sha256": () => (/* binding */ sha256)
/* harmony export */ });
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/sha2 */ "./node_modules/@ethersproject/sha2/lib.esm/sha2.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/solidity/lib.esm/_version.js");






const regexBytes = new RegExp("^bytes([0-9]+)$");
const regexNumber = new RegExp("^(u?int)([0-9]*)$");
const regexArray = new RegExp("^(.*)\\[([0-9]*)\\]$");
const Zeros = "0000000000000000000000000000000000000000000000000000000000000000";


const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
function _pack(type, value, isArray) {
    switch (type) {
        case "address":
            if (isArray) {
                return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.zeroPad)(value, 32);
            }
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(value);
        case "string":
            return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes)(value);
        case "bytes":
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(value);
        case "bool":
            value = (value ? "0x01" : "0x00");
            if (isArray) {
                return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.zeroPad)(value, 32);
            }
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(value);
    }
    let match = type.match(regexNumber);
    if (match) {
        //let signed = (match[1] === "int")
        let size = parseInt(match[2] || "256");
        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {
            logger.throwArgumentError("invalid number type", "type", type);
        }
        if (isArray) {
            size = 256;
        }
        value = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(value).toTwos(size);
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.zeroPad)(value, size / 8);
    }
    match = type.match(regexBytes);
    if (match) {
        const size = parseInt(match[1]);
        if (String(size) !== match[1] || size === 0 || size > 32) {
            logger.throwArgumentError("invalid bytes type", "type", type);
        }
        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(value).byteLength !== size) {
            logger.throwArgumentError(`invalid value for ${type}`, "value", value);
        }
        if (isArray) {
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)((value + Zeros).substring(0, 66));
        }
        return value;
    }
    match = type.match(regexArray);
    if (match && Array.isArray(value)) {
        const baseType = match[1];
        const count = parseInt(match[2] || String(value.length));
        if (count != value.length) {
            logger.throwArgumentError(`invalid array length for ${type}`, "value", value);
        }
        const result = [];
        value.forEach(function (value) {
            result.push(_pack(baseType, value, true));
        });
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.concat)(result);
    }
    return logger.throwArgumentError("invalid type", "type", type);
}
// @TODO: Array Enum
function pack(types, values) {
    if (types.length != values.length) {
        logger.throwArgumentError("wrong number of values; expected ${ types.length }", "values", values);
    }
    const tight = [];
    types.forEach(function (type, index) {
        tight.push(_pack(type, values[index]));
    });
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.concat)(tight));
}
function keccak256(types, values) {
    return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__.keccak256)(pack(types, values));
}
function sha256(types, values) {
    return (0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__.sha256)(pack(types, values));
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/strings/lib.esm/_version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/strings/lib.esm/_version.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "strings/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/strings/lib.esm/bytes32.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/strings/lib.esm/bytes32.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatBytes32String": () => (/* binding */ formatBytes32String),
/* harmony export */   "parseBytes32String": () => (/* binding */ parseBytes32String)
/* harmony export */ });
/* harmony import */ var _ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/constants */ "./node_modules/@ethersproject/constants/lib.esm/hashes.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _utf8__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utf8 */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");




function formatBytes32String(text) {
    // Get the bytes
    const bytes = (0,_utf8__WEBPACK_IMPORTED_MODULE_0__.toUtf8Bytes)(text);
    // Check we have room for null-termination
    if (bytes.length > 31) {
        throw new Error("bytes32 string must be less than 32 bytes");
    }
    // Zero-pad (implicitly null-terminates)
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([bytes, _ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.HashZero]).slice(0, 32));
}
function parseBytes32String(bytes) {
    const data = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(bytes);
    // Must be 32 bytes with a null-termination
    if (data.length !== 32) {
        throw new Error("invalid bytes32 - not 32 bytes long");
    }
    if (data[31] !== 0) {
        throw new Error("invalid bytes32 string - no null terminator");
    }
    // Find the null termination
    let length = 31;
    while (data[length - 1] === 0) {
        length--;
    }
    // Determine the string value
    return (0,_utf8__WEBPACK_IMPORTED_MODULE_0__.toUtf8String)(data.slice(0, length));
}
//# sourceMappingURL=bytes32.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/strings/lib.esm/idna.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/strings/lib.esm/idna.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_nameprepTableA1": () => (/* binding */ _nameprepTableA1),
/* harmony export */   "_nameprepTableB2": () => (/* binding */ _nameprepTableB2),
/* harmony export */   "_nameprepTableC": () => (/* binding */ _nameprepTableC),
/* harmony export */   "nameprep": () => (/* binding */ nameprep)
/* harmony export */ });
/* harmony import */ var _utf8__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utf8 */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");


function bytes2(data) {
    if ((data.length % 4) !== 0) {
        throw new Error("bad data");
    }
    let result = [];
    for (let i = 0; i < data.length; i += 4) {
        result.push(parseInt(data.substring(i, i + 4), 16));
    }
    return result;
}
function createTable(data, func) {
    if (!func) {
        func = function (value) { return [parseInt(value, 16)]; };
    }
    let lo = 0;
    let result = {};
    data.split(",").forEach((pair) => {
        let comps = pair.split(":");
        lo += parseInt(comps[0], 16);
        result[lo] = func(comps[1]);
    });
    return result;
}
function createRangeTable(data) {
    let hi = 0;
    return data.split(",").map((v) => {
        let comps = v.split("-");
        if (comps.length === 1) {
            comps[1] = "0";
        }
        else if (comps[1] === "") {
            comps[1] = "1";
        }
        let lo = hi + parseInt(comps[0], 16);
        hi = parseInt(comps[1], 16);
        return { l: lo, h: hi };
    });
}
function matchMap(value, ranges) {
    let lo = 0;
    for (let i = 0; i < ranges.length; i++) {
        let range = ranges[i];
        lo += range.l;
        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {
            if (range.e && range.e.indexOf(value - lo) !== -1) {
                continue;
            }
            return range;
        }
    }
    return null;
}
const Table_A_1_ranges = createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d");
// @TODO: Make this relative...
const Table_B_1_flags = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((v) => parseInt(v, 16));
const Table_B_2_ranges = [
    { h: 25, s: 32, l: 65 },
    { h: 30, s: 32, e: [23], l: 127 },
    { h: 54, s: 1, e: [48], l: 64, d: 2 },
    { h: 14, s: 1, l: 57, d: 2 },
    { h: 44, s: 1, l: 17, d: 2 },
    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },
    { h: 16, s: 1, l: 68, d: 2 },
    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },
    { h: 26, s: 32, e: [17], l: 435 },
    { h: 22, s: 1, l: 71, d: 2 },
    { h: 15, s: 80, l: 40 },
    { h: 31, s: 32, l: 16 },
    { h: 32, s: 1, l: 80, d: 2 },
    { h: 52, s: 1, l: 42, d: 2 },
    { h: 12, s: 1, l: 55, d: 2 },
    { h: 40, s: 1, e: [38], l: 15, d: 2 },
    { h: 14, s: 1, l: 48, d: 2 },
    { h: 37, s: 48, l: 49 },
    { h: 148, s: 1, l: 6351, d: 2 },
    { h: 88, s: 1, l: 160, d: 2 },
    { h: 15, s: 16, l: 704 },
    { h: 25, s: 26, l: 854 },
    { h: 25, s: 32, l: 55915 },
    { h: 37, s: 40, l: 1247 },
    { h: 25, s: -119711, l: 53248 },
    { h: 25, s: -119763, l: 52 },
    { h: 25, s: -119815, l: 52 },
    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },
    { h: 25, s: -119919, l: 52 },
    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },
    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },
    { h: 25, s: -120075, l: 52 },
    { h: 25, s: -120127, l: 52 },
    { h: 25, s: -120179, l: 52 },
    { h: 25, s: -120231, l: 52 },
    { h: 25, s: -120283, l: 52 },
    { h: 25, s: -120335, l: 52 },
    { h: 24, s: -119543, e: [17], l: 56 },
    { h: 24, s: -119601, e: [17], l: 58 },
    { h: 24, s: -119659, e: [17], l: 58 },
    { h: 24, s: -119717, e: [17], l: 58 },
    { h: 24, s: -119775, e: [17], l: 58 }
];
const Table_B_2_lut_abs = createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3");
const Table_B_2_lut_rel = createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7");
const Table_B_2_complex = createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", bytes2);
const Table_C_ranges = createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
function flatten(values) {
    return values.reduce((accum, value) => {
        value.forEach((value) => { accum.push(value); });
        return accum;
    }, []);
}
function _nameprepTableA1(codepoint) {
    return !!matchMap(codepoint, Table_A_1_ranges);
}
function _nameprepTableB2(codepoint) {
    let range = matchMap(codepoint, Table_B_2_ranges);
    if (range) {
        return [codepoint + range.s];
    }
    let codes = Table_B_2_lut_abs[codepoint];
    if (codes) {
        return codes;
    }
    let shift = Table_B_2_lut_rel[codepoint];
    if (shift) {
        return [codepoint + shift[0]];
    }
    let complex = Table_B_2_complex[codepoint];
    if (complex) {
        return complex;
    }
    return null;
}
function _nameprepTableC(codepoint) {
    return !!matchMap(codepoint, Table_C_ranges);
}
function nameprep(value) {
    // This allows platforms with incomplete normalize to bypass
    // it for very basic names which the built-in toLowerCase
    // will certainly handle correctly
    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {
        return value.toLowerCase();
    }
    // Get the code points (keeping the current normalization)
    let codes = (0,_utf8__WEBPACK_IMPORTED_MODULE_0__.toUtf8CodePoints)(value);
    codes = flatten(codes.map((code) => {
        // Substitute Table B.1 (Maps to Nothing)
        if (Table_B_1_flags.indexOf(code) >= 0) {
            return [];
        }
        if (code >= 0xfe00 && code <= 0xfe0f) {
            return [];
        }
        // Substitute Table B.2 (Case Folding)
        let codesTableB2 = _nameprepTableB2(code);
        if (codesTableB2) {
            return codesTableB2;
        }
        // No Substitution
        return [code];
    }));
    // Normalize using form KC
    codes = (0,_utf8__WEBPACK_IMPORTED_MODULE_0__.toUtf8CodePoints)((0,_utf8__WEBPACK_IMPORTED_MODULE_0__._toUtf8String)(codes), _utf8__WEBPACK_IMPORTED_MODULE_0__.UnicodeNormalizationForm.NFKC);
    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9
    codes.forEach((code) => {
        if (_nameprepTableC(code)) {
            throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
        }
    });
    // Prohibit Unassigned Code Points (Table A.1)
    codes.forEach((code) => {
        if (_nameprepTableA1(code)) {
            throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
        }
    });
    // IDNA extras
    let name = (0,_utf8__WEBPACK_IMPORTED_MODULE_0__._toUtf8String)(codes);
    // IDNA: 4.2.3.1
    if (name.substring(0, 1) === "-" || name.substring(2, 4) === "--" || name.substring(name.length - 1) === "-") {
        throw new Error("invalid hyphen");
    }
    return name;
}
//# sourceMappingURL=idna.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/strings/lib.esm/utf8.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/strings/lib.esm/utf8.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UnicodeNormalizationForm": () => (/* binding */ UnicodeNormalizationForm),
/* harmony export */   "Utf8ErrorFuncs": () => (/* binding */ Utf8ErrorFuncs),
/* harmony export */   "Utf8ErrorReason": () => (/* binding */ Utf8ErrorReason),
/* harmony export */   "_toEscapedUtf8String": () => (/* binding */ _toEscapedUtf8String),
/* harmony export */   "_toUtf8String": () => (/* binding */ _toUtf8String),
/* harmony export */   "toUtf8Bytes": () => (/* binding */ toUtf8Bytes),
/* harmony export */   "toUtf8CodePoints": () => (/* binding */ toUtf8CodePoints),
/* harmony export */   "toUtf8String": () => (/* binding */ toUtf8String)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/strings/lib.esm/_version.js");




const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
///////////////////////////////
var UnicodeNormalizationForm;
(function (UnicodeNormalizationForm) {
    UnicodeNormalizationForm["current"] = "";
    UnicodeNormalizationForm["NFC"] = "NFC";
    UnicodeNormalizationForm["NFD"] = "NFD";
    UnicodeNormalizationForm["NFKC"] = "NFKC";
    UnicodeNormalizationForm["NFKD"] = "NFKD";
})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));
;
var Utf8ErrorReason;
(function (Utf8ErrorReason) {
    // A continuation byte was present where there was nothing to continue
    // - offset = the index the codepoint began in
    Utf8ErrorReason["UNEXPECTED_CONTINUE"] = "unexpected continuation byte";
    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found
    // - offset = the index the codepoint began in
    Utf8ErrorReason["BAD_PREFIX"] = "bad codepoint prefix";
    // The string is too short to process the expected codepoint
    // - offset = the index the codepoint began in
    Utf8ErrorReason["OVERRUN"] = "string overrun";
    // A missing continuation byte was expected but not found
    // - offset = the index the continuation byte was expected at
    Utf8ErrorReason["MISSING_CONTINUE"] = "missing continuation byte";
    // The computed code point is outside the range for UTF-8
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; outside the UTF-8 range
    Utf8ErrorReason["OUT_OF_RANGE"] = "out of UTF-8 range";
    // UTF-8 strings may not contain UTF-16 surrogate pairs
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range
    Utf8ErrorReason["UTF16_SURROGATE"] = "UTF-16 surrogate";
    // The string is an overlong representation
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; already bounds checked
    Utf8ErrorReason["OVERLONG"] = "overlong representation";
})(Utf8ErrorReason || (Utf8ErrorReason = {}));
;
function errorFunc(reason, offset, bytes, output, badCodepoint) {
    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes);
}
function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes
    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {
        let i = 0;
        for (let o = offset + 1; o < bytes.length; o++) {
            if (bytes[o] >> 6 !== 0x02) {
                break;
            }
            i++;
        }
        return i;
    }
    // This byte runs us past the end of the string, so just jump to the end
    // (but the first byte was read already read and therefore skipped)
    if (reason === Utf8ErrorReason.OVERRUN) {
        return bytes.length - offset - 1;
    }
    // Nothing to skip
    return 0;
}
function replaceFunc(reason, offset, bytes, output, badCodepoint) {
    // Overlong representations are otherwise "valid" code points; just non-deistingtished
    if (reason === Utf8ErrorReason.OVERLONG) {
        output.push(badCodepoint);
        return 0;
    }
    // Put the replacement character into the output
    output.push(0xfffd);
    // Otherwise, process as if ignoring errors
    return ignoreFunc(reason, offset, bytes, output, badCodepoint);
}
// Common error handing strategies
const Utf8ErrorFuncs = Object.freeze({
    error: errorFunc,
    ignore: ignoreFunc,
    replace: replaceFunc
});
// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499
function getUtf8CodePoints(bytes, onError) {
    if (onError == null) {
        onError = Utf8ErrorFuncs.error;
    }
    bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(bytes);
    const result = [];
    let i = 0;
    // Invalid bytes are ignored
    while (i < bytes.length) {
        const c = bytes[i++];
        // 0xxx xxxx
        if (c >> 7 === 0) {
            result.push(c);
            continue;
        }
        // Multibyte; how many bytes left for this character?
        let extraLength = null;
        let overlongMask = null;
        // 110x xxxx 10xx xxxx
        if ((c & 0xe0) === 0xc0) {
            extraLength = 1;
            overlongMask = 0x7f;
            // 1110 xxxx 10xx xxxx 10xx xxxx
        }
        else if ((c & 0xf0) === 0xe0) {
            extraLength = 2;
            overlongMask = 0x7ff;
            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx
        }
        else if ((c & 0xf8) === 0xf0) {
            extraLength = 3;
            overlongMask = 0xffff;
        }
        else {
            if ((c & 0xc0) === 0x80) {
                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);
            }
            else {
                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);
            }
            continue;
        }
        // Do we have enough bytes in our data?
        if (i - 1 + extraLength >= bytes.length) {
            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);
            continue;
        }
        // Remove the length prefix from the char
        let res = c & ((1 << (8 - extraLength - 1)) - 1);
        for (let j = 0; j < extraLength; j++) {
            let nextChar = bytes[i];
            // Invalid continuation byte
            if ((nextChar & 0xc0) != 0x80) {
                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);
                res = null;
                break;
            }
            ;
            res = (res << 6) | (nextChar & 0x3f);
            i++;
        }
        // See above loop for invalid continuation byte
        if (res === null) {
            continue;
        }
        // Maximum code point
        if (res > 0x10ffff) {
            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        // Reserved for UTF-16 surrogate halves
        if (res >= 0xd800 && res <= 0xdfff) {
            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        // Check for overlong sequences (more bytes than needed)
        if (res <= overlongMask) {
            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        result.push(res);
    }
    return result;
}
// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array
function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {
    if (form != UnicodeNormalizationForm.current) {
        logger.checkNormalize();
        str = str.normalize(form);
    }
    let result = [];
    for (let i = 0; i < str.length; i++) {
        const c = str.charCodeAt(i);
        if (c < 0x80) {
            result.push(c);
        }
        else if (c < 0x800) {
            result.push((c >> 6) | 0xc0);
            result.push((c & 0x3f) | 0x80);
        }
        else if ((c & 0xfc00) == 0xd800) {
            i++;
            const c2 = str.charCodeAt(i);
            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {
                throw new Error("invalid utf-8 string");
            }
            // Surrogate Pair
            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);
            result.push((pair >> 18) | 0xf0);
            result.push(((pair >> 12) & 0x3f) | 0x80);
            result.push(((pair >> 6) & 0x3f) | 0x80);
            result.push((pair & 0x3f) | 0x80);
        }
        else {
            result.push((c >> 12) | 0xe0);
            result.push(((c >> 6) & 0x3f) | 0x80);
            result.push((c & 0x3f) | 0x80);
        }
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(result);
}
;
function escapeChar(value) {
    const hex = ("0000" + value.toString(16));
    return "\\u" + hex.substring(hex.length - 4);
}
function _toEscapedUtf8String(bytes, onError) {
    return '"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {
        if (codePoint < 256) {
            switch (codePoint) {
                case 8: return "\\b";
                case 9: return "\\t";
                case 10: return "\\n";
                case 13: return "\\r";
                case 34: return "\\\"";
                case 92: return "\\\\";
            }
            if (codePoint >= 32 && codePoint < 127) {
                return String.fromCharCode(codePoint);
            }
        }
        if (codePoint <= 0xffff) {
            return escapeChar(codePoint);
        }
        codePoint -= 0x10000;
        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);
    }).join("") + '"';
}
function _toUtf8String(codePoints) {
    return codePoints.map((codePoint) => {
        if (codePoint <= 0xffff) {
            return String.fromCharCode(codePoint);
        }
        codePoint -= 0x10000;
        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));
    }).join("");
}
function toUtf8String(bytes, onError) {
    return _toUtf8String(getUtf8CodePoints(bytes, onError));
}
function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {
    return getUtf8CodePoints(toUtf8Bytes(str, form));
}
//# sourceMappingURL=utf8.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/transactions/lib.esm/_version.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ethersproject/transactions/lib.esm/_version.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "transactions/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/transactions/lib.esm/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/transactions/lib.esm/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TransactionTypes": () => (/* binding */ TransactionTypes),
/* harmony export */   "accessListify": () => (/* binding */ accessListify),
/* harmony export */   "computeAddress": () => (/* binding */ computeAddress),
/* harmony export */   "parse": () => (/* binding */ parse),
/* harmony export */   "recoverAddress": () => (/* binding */ recoverAddress),
/* harmony export */   "serialize": () => (/* binding */ serialize)
/* harmony export */ });
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/constants */ "./node_modules/@ethersproject/constants/lib.esm/bignumbers.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/rlp */ "./node_modules/@ethersproject/rlp/lib.esm/index.js");
/* harmony import */ var _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/signing-key */ "./node_modules/@ethersproject/signing-key/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/transactions/lib.esm/_version.js");











const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
var TransactionTypes;
(function (TransactionTypes) {
    TransactionTypes[TransactionTypes["legacy"] = 0] = "legacy";
    TransactionTypes[TransactionTypes["eip2930"] = 1] = "eip2930";
    TransactionTypes[TransactionTypes["eip1559"] = 2] = "eip1559";
})(TransactionTypes || (TransactionTypes = {}));
;
///////////////////////////////
function handleAddress(value) {
    if (value === "0x") {
        return null;
    }
    return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_2__.getAddress)(value);
}
function handleNumber(value) {
    if (value === "0x") {
        return _ethersproject_constants__WEBPACK_IMPORTED_MODULE_3__.Zero;
    }
    return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(value);
}
// Legacy Transaction Fields
const transactionFields = [
    { name: "nonce", maxLength: 32, numeric: true },
    { name: "gasPrice", maxLength: 32, numeric: true },
    { name: "gasLimit", maxLength: 32, numeric: true },
    { name: "to", length: 20 },
    { name: "value", maxLength: 32, numeric: true },
    { name: "data" },
];
const allowedTransactionKeys = {
    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true
};
function computeAddress(key) {
    const publicKey = (0,_ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_5__.computePublicKey)(key);
    return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_2__.getAddress)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexDataSlice)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexDataSlice)(publicKey, 1)), 12));
}
function recoverAddress(digest, signature) {
    return computeAddress((0,_ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_5__.recoverPublicKey)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(digest), signature));
}
function formatNumber(value, name) {
    const result = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.stripZeros)(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(value).toHexString());
    if (result.length > 32) {
        logger.throwArgumentError("invalid length for " + name, ("transaction:" + name), value);
    }
    return result;
}
function accessSetify(addr, storageKeys) {
    return {
        address: (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_2__.getAddress)(addr),
        storageKeys: (storageKeys || []).map((storageKey, index) => {
            if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexDataLength)(storageKey) !== 32) {
                logger.throwArgumentError("invalid access list storageKey", `accessList[${addr}:${index}]`, storageKey);
            }
            return storageKey.toLowerCase();
        })
    };
}
function accessListify(value) {
    if (Array.isArray(value)) {
        return value.map((set, index) => {
            if (Array.isArray(set)) {
                if (set.length > 2) {
                    logger.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${index}]`, set);
                }
                return accessSetify(set[0], set[1]);
            }
            return accessSetify(set.address, set.storageKeys);
        });
    }
    const result = Object.keys(value).map((addr) => {
        const storageKeys = value[addr].reduce((accum, storageKey) => {
            accum[storageKey] = true;
            return accum;
        }, {});
        return accessSetify(addr, Object.keys(storageKeys).sort());
    });
    result.sort((a, b) => (a.address.localeCompare(b.address)));
    return result;
}
function formatAccessList(value) {
    return accessListify(value).map((set) => [set.address, set.storageKeys]);
}
function _serializeEip1559(transaction, signature) {
    // If there is an explicit gasPrice, make sure it matches the
    // EIP-1559 fees; otherwise they may not understand what they
    // think they are setting in terms of fee.
    if (transaction.gasPrice != null) {
        const gasPrice = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(transaction.gasPrice);
        const maxFeePerGas = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(transaction.maxFeePerGas || 0);
        if (!gasPrice.eq(maxFeePerGas)) {
            logger.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                gasPrice, maxFeePerGas
            });
        }
    }
    const fields = [
        formatNumber(transaction.chainId || 0, "chainId"),
        formatNumber(transaction.nonce || 0, "nonce"),
        formatNumber(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
        formatNumber(transaction.maxFeePerGas || 0, "maxFeePerGas"),
        formatNumber(transaction.gasLimit || 0, "gasLimit"),
        ((transaction.to != null) ? (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_2__.getAddress)(transaction.to) : "0x"),
        formatNumber(transaction.value || 0, "value"),
        (transaction.data || "0x"),
        (formatAccessList(transaction.accessList || []))
    ];
    if (signature) {
        const sig = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.splitSignature)(signature);
        fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
        fields.push((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.stripZeros)(sig.r));
        fields.push((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.stripZeros)(sig.s));
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexConcat)(["0x02", _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_8__.encode(fields)]);
}
function _serializeEip2930(transaction, signature) {
    const fields = [
        formatNumber(transaction.chainId || 0, "chainId"),
        formatNumber(transaction.nonce || 0, "nonce"),
        formatNumber(transaction.gasPrice || 0, "gasPrice"),
        formatNumber(transaction.gasLimit || 0, "gasLimit"),
        ((transaction.to != null) ? (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_2__.getAddress)(transaction.to) : "0x"),
        formatNumber(transaction.value || 0, "value"),
        (transaction.data || "0x"),
        (formatAccessList(transaction.accessList || []))
    ];
    if (signature) {
        const sig = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.splitSignature)(signature);
        fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
        fields.push((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.stripZeros)(sig.r));
        fields.push((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.stripZeros)(sig.s));
    }
    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexConcat)(["0x01", _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_8__.encode(fields)]);
}
// Legacy Transactions and EIP-155
function _serialize(transaction, signature) {
    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_9__.checkProperties)(transaction, allowedTransactionKeys);
    const raw = [];
    transactionFields.forEach(function (fieldInfo) {
        let value = transaction[fieldInfo.name] || ([]);
        const options = {};
        if (fieldInfo.numeric) {
            options.hexPad = "left";
        }
        value = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(value, options));
        // Fixed-width field
        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {
            logger.throwArgumentError("invalid length for " + fieldInfo.name, ("transaction:" + fieldInfo.name), value);
        }
        // Variable-width (with a maximum)
        if (fieldInfo.maxLength) {
            value = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.stripZeros)(value);
            if (value.length > fieldInfo.maxLength) {
                logger.throwArgumentError("invalid length for " + fieldInfo.name, ("transaction:" + fieldInfo.name), value);
            }
        }
        raw.push((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(value));
    });
    let chainId = 0;
    if (transaction.chainId != null) {
        // A chainId was provided; if non-zero we'll use EIP-155
        chainId = transaction.chainId;
        if (typeof (chainId) !== "number") {
            logger.throwArgumentError("invalid transaction.chainId", "transaction", transaction);
        }
    }
    else if (signature && !(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.isBytesLike)(signature) && signature.v > 28) {
        // No chainId provided, but the signature is signing with EIP-155; derive chainId
        chainId = Math.floor((signature.v - 35) / 2);
    }
    // We have an EIP-155 transaction (chainId was specified and non-zero)
    if (chainId !== 0) {
        raw.push((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(chainId)); // @TODO: hexValue?
        raw.push("0x");
        raw.push("0x");
    }
    // Requesting an unsigned transaction
    if (!signature) {
        return _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_8__.encode(raw);
    }
    // The splitSignature will ensure the transaction has a recoveryParam in the
    // case that the signTransaction function only adds a v.
    const sig = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.splitSignature)(signature);
    // We pushed a chainId and null r, s on for hashing only; remove those
    let v = 27 + sig.recoveryParam;
    if (chainId !== 0) {
        raw.pop();
        raw.pop();
        raw.pop();
        v += chainId * 2 + 8;
        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!
        if (sig.v > 28 && sig.v !== v) {
            logger.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
        }
    }
    else if (sig.v !== v) {
        logger.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
    }
    raw.push((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(v));
    raw.push((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.stripZeros)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(sig.r)));
    raw.push((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.stripZeros)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(sig.s)));
    return _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_8__.encode(raw);
}
function serialize(transaction, signature) {
    // Legacy and EIP-155 Transactions
    if (transaction.type == null || transaction.type === 0) {
        if (transaction.accessList != null) {
            logger.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", transaction);
        }
        return _serialize(transaction, signature);
    }
    // Typed Transactions (EIP-2718)
    switch (transaction.type) {
        case 1:
            return _serializeEip2930(transaction, signature);
        case 2:
            return _serializeEip1559(transaction, signature);
        default:
            break;
    }
    return logger.throwError(`unsupported transaction type: ${transaction.type}`, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "serializeTransaction",
        transactionType: transaction.type
    });
}
function _parseEipSignature(tx, fields, serialize) {
    try {
        const recid = handleNumber(fields[0]).toNumber();
        if (recid !== 0 && recid !== 1) {
            throw new Error("bad recid");
        }
        tx.v = recid;
    }
    catch (error) {
        logger.throwArgumentError("invalid v for transaction type: 1", "v", fields[0]);
    }
    tx.r = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexZeroPad)(fields[1], 32);
    tx.s = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexZeroPad)(fields[2], 32);
    try {
        const digest = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)(serialize(tx));
        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });
    }
    catch (error) { }
}
function _parseEip1559(payload) {
    const transaction = _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_8__.decode(payload.slice(1));
    if (transaction.length !== 9 && transaction.length !== 12) {
        logger.throwArgumentError("invalid component count for transaction type: 2", "payload", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(payload));
    }
    const maxPriorityFeePerGas = handleNumber(transaction[2]);
    const maxFeePerGas = handleNumber(transaction[3]);
    const tx = {
        type: 2,
        chainId: handleNumber(transaction[0]).toNumber(),
        nonce: handleNumber(transaction[1]).toNumber(),
        maxPriorityFeePerGas: maxPriorityFeePerGas,
        maxFeePerGas: maxFeePerGas,
        gasPrice: null,
        gasLimit: handleNumber(transaction[4]),
        to: handleAddress(transaction[5]),
        value: handleNumber(transaction[6]),
        data: transaction[7],
        accessList: accessListify(transaction[8]),
    };
    // Unsigned EIP-1559 Transaction
    if (transaction.length === 9) {
        return tx;
    }
    tx.hash = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)(payload);
    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);
    return tx;
}
function _parseEip2930(payload) {
    const transaction = _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_8__.decode(payload.slice(1));
    if (transaction.length !== 8 && transaction.length !== 11) {
        logger.throwArgumentError("invalid component count for transaction type: 1", "payload", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(payload));
    }
    const tx = {
        type: 1,
        chainId: handleNumber(transaction[0]).toNumber(),
        nonce: handleNumber(transaction[1]).toNumber(),
        gasPrice: handleNumber(transaction[2]),
        gasLimit: handleNumber(transaction[3]),
        to: handleAddress(transaction[4]),
        value: handleNumber(transaction[5]),
        data: transaction[6],
        accessList: accessListify(transaction[7])
    };
    // Unsigned EIP-2930 Transaction
    if (transaction.length === 8) {
        return tx;
    }
    tx.hash = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)(payload);
    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);
    return tx;
}
// Legacy Transactions and EIP-155
function _parse(rawTransaction) {
    const transaction = _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_8__.decode(rawTransaction);
    if (transaction.length !== 9 && transaction.length !== 6) {
        logger.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
    }
    const tx = {
        nonce: handleNumber(transaction[0]).toNumber(),
        gasPrice: handleNumber(transaction[1]),
        gasLimit: handleNumber(transaction[2]),
        to: handleAddress(transaction[3]),
        value: handleNumber(transaction[4]),
        data: transaction[5],
        chainId: 0
    };
    // Legacy unsigned transaction
    if (transaction.length === 6) {
        return tx;
    }
    try {
        tx.v = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(transaction[6]).toNumber();
    }
    catch (error) {
        // @TODO: What makes snese to do? The v is too big
        return tx;
    }
    tx.r = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexZeroPad)(transaction[7], 32);
    tx.s = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexZeroPad)(transaction[8], 32);
    if (_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(tx.r).isZero() && _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(tx.s).isZero()) {
        // EIP-155 unsigned transaction
        tx.chainId = tx.v;
        tx.v = 0;
    }
    else {
        // Signed Transaction
        tx.chainId = Math.floor((tx.v - 35) / 2);
        if (tx.chainId < 0) {
            tx.chainId = 0;
        }
        let recoveryParam = tx.v - 27;
        const raw = transaction.slice(0, 6);
        if (tx.chainId !== 0) {
            raw.push((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(tx.chainId));
            raw.push("0x");
            raw.push("0x");
            recoveryParam -= tx.chainId * 2 + 8;
        }
        const digest = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)(_ethersproject_rlp__WEBPACK_IMPORTED_MODULE_8__.encode(raw));
        try {
            tx.from = recoverAddress(digest, { r: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(tx.r), s: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.hexlify)(tx.s), recoveryParam: recoveryParam });
        }
        catch (error) { }
        tx.hash = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)(rawTransaction);
    }
    tx.type = null;
    return tx;
}
function parse(rawTransaction) {
    const payload = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_6__.arrayify)(rawTransaction);
    // Legacy and EIP-155 Transactions
    if (payload[0] > 0x7f) {
        return _parse(payload);
    }
    // Typed Transaction (EIP-2718)
    switch (payload[0]) {
        case 1:
            return _parseEip2930(payload);
        case 2:
            return _parseEip1559(payload);
        default:
            break;
    }
    return logger.throwError(`unsupported transaction type: ${payload[0]}`, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "parseTransaction",
        transactionType: payload[0]
    });
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/units/lib.esm/_version.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ethersproject/units/lib.esm/_version.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "units/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/units/lib.esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@ethersproject/units/lib.esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "commify": () => (/* binding */ commify),
/* harmony export */   "formatEther": () => (/* binding */ formatEther),
/* harmony export */   "formatUnits": () => (/* binding */ formatUnits),
/* harmony export */   "parseEther": () => (/* binding */ parseEther),
/* harmony export */   "parseUnits": () => (/* binding */ parseUnits)
/* harmony export */ });
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/units/lib.esm/_version.js");




const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
const names = [
    "wei",
    "kwei",
    "mwei",
    "gwei",
    "szabo",
    "finney",
    "ether",
];
// Some environments have issues with RegEx that contain back-tracking, so we cannot
// use them.
function commify(value) {
    const comps = String(value).split(".");
    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === "." || value === "-.") {
        logger.throwArgumentError("invalid value", "value", value);
    }
    // Make sure we have at least one whole digit (0 if none)
    let whole = comps[0];
    let negative = "";
    if (whole.substring(0, 1) === "-") {
        negative = "-";
        whole = whole.substring(1);
    }
    // Make sure we have at least 1 whole digit with no leading zeros
    while (whole.substring(0, 1) === "0") {
        whole = whole.substring(1);
    }
    if (whole === "") {
        whole = "0";
    }
    let suffix = "";
    if (comps.length === 2) {
        suffix = "." + (comps[1] || "0");
    }
    while (suffix.length > 2 && suffix[suffix.length - 1] === "0") {
        suffix = suffix.substring(0, suffix.length - 1);
    }
    const formatted = [];
    while (whole.length) {
        if (whole.length <= 3) {
            formatted.unshift(whole);
            break;
        }
        else {
            const index = whole.length - 3;
            formatted.unshift(whole.substring(index));
            whole = whole.substring(0, index);
        }
    }
    return negative + formatted.join(",") + suffix;
}
function formatUnits(value, unitName) {
    if (typeof (unitName) === "string") {
        const index = names.indexOf(unitName);
        if (index !== -1) {
            unitName = 3 * index;
        }
    }
    return (0,_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.formatFixed)(value, (unitName != null) ? unitName : 18);
}
function parseUnits(value, unitName) {
    if (typeof (value) !== "string") {
        logger.throwArgumentError("value must be a string", "value", value);
    }
    if (typeof (unitName) === "string") {
        const index = names.indexOf(unitName);
        if (index !== -1) {
            unitName = 3 * index;
        }
    }
    return (0,_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_2__.parseFixed)(value, (unitName != null) ? unitName : 18);
}
function formatEther(wei) {
    return formatUnits(wei, 18);
}
function parseEther(ether) {
    return parseUnits(ether, 18);
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/wallet/lib.esm/_version.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/wallet/lib.esm/_version.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "wallet/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/wallet/lib.esm/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/wallet/lib.esm/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Wallet": () => (/* binding */ Wallet),
/* harmony export */   "verifyMessage": () => (/* binding */ verifyMessage),
/* harmony export */   "verifyTypedData": () => (/* binding */ verifyTypedData)
/* harmony export */ });
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/abstract-provider */ "./node_modules/@ethersproject/abstract-provider/lib.esm/index.js");
/* harmony import */ var _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/abstract-signer */ "./node_modules/@ethersproject/abstract-signer/lib.esm/index.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/hash */ "./node_modules/@ethersproject/hash/lib.esm/message.js");
/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ethersproject/hash */ "./node_modules/@ethersproject/hash/lib.esm/typed-data.js");
/* harmony import */ var _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/hdnode */ "./node_modules/@ethersproject/hdnode/lib.esm/index.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_random__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ethersproject/random */ "./node_modules/@ethersproject/random/lib.esm/random.js");
/* harmony import */ var _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/signing-key */ "./node_modules/@ethersproject/signing-key/lib.esm/index.js");
/* harmony import */ var _ethersproject_json_wallets__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ethersproject/json-wallets */ "./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js");
/* harmony import */ var _ethersproject_json_wallets__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ethersproject/json-wallets */ "./node_modules/@ethersproject/json-wallets/lib.esm/index.js");
/* harmony import */ var _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/transactions */ "./node_modules/@ethersproject/transactions/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/wallet/lib.esm/_version.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};














const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
function isAccount(value) {
    return (value != null && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isHexString)(value.privateKey, 32) && value.address != null);
}
function hasMnemonic(value) {
    const mnemonic = value.mnemonic;
    return (mnemonic && mnemonic.phrase);
}
class Wallet extends _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_3__.Signer {
    constructor(privateKey, provider) {
        super();
        if (isAccount(privateKey)) {
            const signingKey = new _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_4__.SigningKey(privateKey.privateKey);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "_signingKey", () => signingKey);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "address", (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_6__.computeAddress)(this.publicKey));
            if (this.address !== (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_7__.getAddress)(privateKey.address)) {
                logger.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]");
            }
            if (hasMnemonic(privateKey)) {
                const srcMnemonic = privateKey.mnemonic;
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "_mnemonic", () => ({
                    phrase: srcMnemonic.phrase,
                    path: srcMnemonic.path || _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.defaultPath,
                    locale: srcMnemonic.locale || "en"
                }));
                const mnemonic = this.mnemonic;
                const node = _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);
                if ((0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_6__.computeAddress)(node.privateKey) !== this.address) {
                    logger.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]");
                }
            }
            else {
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "_mnemonic", () => null);
            }
        }
        else {
            if (_ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_4__.SigningKey.isSigningKey(privateKey)) {
                /* istanbul ignore if */
                if (privateKey.curve !== "secp256k1") {
                    logger.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]");
                }
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "_signingKey", () => privateKey);
            }
            else {
                // A lot of common tools do not prefix private keys with a 0x (see: #1166)
                if (typeof (privateKey) === "string") {
                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {
                        privateKey = "0x" + privateKey;
                    }
                }
                const signingKey = new _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_4__.SigningKey(privateKey);
                (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "_signingKey", () => signingKey);
            }
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "_mnemonic", () => null);
            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "address", (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_6__.computeAddress)(this.publicKey));
        }
        /* istanbul ignore if */
        if (provider && !_ethersproject_abstract_provider__WEBPACK_IMPORTED_MODULE_9__.Provider.isProvider(provider)) {
            logger.throwArgumentError("invalid provider", "provider", provider);
        }
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, "provider", provider || null);
    }
    get mnemonic() { return this._mnemonic(); }
    get privateKey() { return this._signingKey().privateKey; }
    get publicKey() { return this._signingKey().publicKey; }
    getAddress() {
        return Promise.resolve(this.address);
    }
    connect(provider) {
        return new Wallet(this, provider);
    }
    signTransaction(transaction) {
        return (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.resolveProperties)(transaction).then((tx) => {
            if (tx.from != null) {
                if ((0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_7__.getAddress)(tx.from) !== this.address) {
                    logger.throwArgumentError("transaction from address mismatch", "transaction.from", transaction.from);
                }
                delete tx.from;
            }
            const signature = this._signingKey().signDigest((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_10__.keccak256)((0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_6__.serialize)(tx)));
            return (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_6__.serialize)(tx, signature);
        });
    }
    signMessage(message) {
        return __awaiter(this, void 0, void 0, function* () {
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.joinSignature)(this._signingKey().signDigest((0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_11__.hashMessage)(message)));
        });
    }
    _signTypedData(domain, types, value) {
        return __awaiter(this, void 0, void 0, function* () {
            // Populate any ENS names
            const populated = yield _ethersproject_hash__WEBPACK_IMPORTED_MODULE_12__.TypedDataEncoder.resolveNames(domain, types, value, (name) => {
                if (this.provider == null) {
                    logger.throwError("cannot resolve ENS names without a provider", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "resolveName",
                        value: name
                    });
                }
                return this.provider.resolveName(name);
            });
            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.joinSignature)(this._signingKey().signDigest(_ethersproject_hash__WEBPACK_IMPORTED_MODULE_12__.TypedDataEncoder.hash(populated.domain, types, populated.value)));
        });
    }
    encrypt(password, options, progressCallback) {
        if (typeof (options) === "function" && !progressCallback) {
            progressCallback = options;
            options = {};
        }
        if (progressCallback && typeof (progressCallback) !== "function") {
            throw new Error("invalid callback");
        }
        if (!options) {
            options = {};
        }
        return (0,_ethersproject_json_wallets__WEBPACK_IMPORTED_MODULE_13__.encrypt)(this, password, options, progressCallback);
    }
    /**
     *  Static methods to create Wallet instances.
     */
    static createRandom(options) {
        let entropy = (0,_ethersproject_random__WEBPACK_IMPORTED_MODULE_14__.randomBytes)(16);
        if (!options) {
            options = {};
        }
        if (options.extraEntropy) {
            entropy = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataSlice)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_10__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.concat)([entropy, options.extraEntropy])), 0, 16));
        }
        const mnemonic = (0,_ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.entropyToMnemonic)(entropy, options.locale);
        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);
    }
    static fromEncryptedJson(json, password, progressCallback) {
        return (0,_ethersproject_json_wallets__WEBPACK_IMPORTED_MODULE_15__.decryptJsonWallet)(json, password, progressCallback).then((account) => {
            return new Wallet(account);
        });
    }
    static fromEncryptedJsonSync(json, password) {
        return new Wallet((0,_ethersproject_json_wallets__WEBPACK_IMPORTED_MODULE_15__.decryptJsonWalletSync)(json, password));
    }
    static fromMnemonic(mnemonic, path, wordlist) {
        if (!path) {
            path = _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.defaultPath;
        }
        return new Wallet(_ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));
    }
}
function verifyMessage(message, signature) {
    return (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_6__.recoverAddress)((0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_11__.hashMessage)(message), signature);
}
function verifyTypedData(domain, types, value, signature) {
    return (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_6__.recoverAddress)(_ethersproject_hash__WEBPACK_IMPORTED_MODULE_12__.TypedDataEncoder.hash(domain, types, value), signature);
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/web/lib.esm/_version.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/web/lib.esm/_version.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "web/5.7.1";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/web/lib.esm/geturl.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ethersproject/web/lib.esm/geturl.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getUrl": () => (/* binding */ getUrl)
/* harmony export */ });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

function getUrl(href, options) {
    return __awaiter(this, void 0, void 0, function* () {
        if (options == null) {
            options = {};
        }
        const request = {
            method: (options.method || "GET"),
            headers: (options.headers || {}),
            body: (options.body || undefined),
        };
        if (options.skipFetchSetup !== true) {
            request.mode = "cors"; // no-cors, cors, *same-origin
            request.cache = "no-cache"; // *default, no-cache, reload, force-cache, only-if-cached
            request.credentials = "same-origin"; // include, *same-origin, omit
            request.redirect = "follow"; // manual, *follow, error
            request.referrer = "client"; // no-referrer, *client
        }
        ;
        if (options.fetchOptions != null) {
            const opts = options.fetchOptions;
            if (opts.mode) {
                request.mode = (opts.mode);
            }
            if (opts.cache) {
                request.cache = (opts.cache);
            }
            if (opts.credentials) {
                request.credentials = (opts.credentials);
            }
            if (opts.redirect) {
                request.redirect = (opts.redirect);
            }
            if (opts.referrer) {
                request.referrer = opts.referrer;
            }
        }
        const response = yield fetch(href, request);
        const body = yield response.arrayBuffer();
        const headers = {};
        if (response.headers.forEach) {
            response.headers.forEach((value, key) => {
                headers[key.toLowerCase()] = value;
            });
        }
        else {
            ((response.headers).keys)().forEach((key) => {
                headers[key.toLowerCase()] = response.headers.get(key);
            });
        }
        return {
            headers: headers,
            statusCode: response.status,
            statusMessage: response.statusText,
            body: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.arrayify)(new Uint8Array(body)),
        };
    });
}
//# sourceMappingURL=geturl.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/web/lib.esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ethersproject/web/lib.esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_fetchData": () => (/* binding */ _fetchData),
/* harmony export */   "fetchJson": () => (/* binding */ fetchJson),
/* harmony export */   "poll": () => (/* binding */ poll)
/* harmony export */ });
/* harmony import */ var _ethersproject_base64__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/base64 */ "./node_modules/@ethersproject/base64/lib.esm/base64.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/web/lib.esm/_version.js");
/* harmony import */ var _geturl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./geturl */ "./node_modules/@ethersproject/web/lib.esm/geturl.js");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);

function staller(duration) {
    return new Promise((resolve) => {
        setTimeout(resolve, duration);
    });
}
function bodyify(value, type) {
    if (value == null) {
        return null;
    }
    if (typeof (value) === "string") {
        return value;
    }
    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isBytesLike)(value)) {
        if (type && (type.split("/")[0] === "text" || type.split(";")[0].trim() === "application/json")) {
            try {
                return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8String)(value);
            }
            catch (error) { }
            ;
        }
        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(value);
    }
    return value;
}
function unpercent(value) {
    return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes)(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {
        return String.fromCharCode(parseInt(code, 16));
    }));
}
// This API is still a work in progress; the future changes will likely be:
// - ConnectionInfo => FetchDataRequest<T = any>
// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }
//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)
// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T
// For this reason, it should be considered internal until the API is finalized
function _fetchData(connection, body, processFunc) {
    // How many times to retry in the event of a throttle
    const attemptLimit = (typeof (connection) === "object" && connection.throttleLimit != null) ? connection.throttleLimit : 12;
    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), "invalid connection throttle limit", "connection.throttleLimit", attemptLimit);
    const throttleCallback = ((typeof (connection) === "object") ? connection.throttleCallback : null);
    const throttleSlotInterval = ((typeof (connection) === "object" && typeof (connection.throttleSlotInterval) === "number") ? connection.throttleSlotInterval : 100);
    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), "invalid connection throttle slot interval", "connection.throttleSlotInterval", throttleSlotInterval);
    const errorPassThrough = ((typeof (connection) === "object") ? !!(connection.errorPassThrough) : false);
    const headers = {};
    let url = null;
    // @TODO: Allow ConnectionInfo to override some of these values
    const options = {
        method: "GET",
    };
    let allow304 = false;
    let timeout = 2 * 60 * 1000;
    if (typeof (connection) === "string") {
        url = connection;
    }
    else if (typeof (connection) === "object") {
        if (connection == null || connection.url == null) {
            logger.throwArgumentError("missing URL", "connection.url", connection);
        }
        url = connection.url;
        if (typeof (connection.timeout) === "number" && connection.timeout > 0) {
            timeout = connection.timeout;
        }
        if (connection.headers) {
            for (const key in connection.headers) {
                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };
                if (["if-none-match", "if-modified-since"].indexOf(key.toLowerCase()) >= 0) {
                    allow304 = true;
                }
            }
        }
        options.allowGzip = !!connection.allowGzip;
        if (connection.user != null && connection.password != null) {
            if (url.substring(0, 6) !== "https:" && connection.allowInsecureAuthentication !== true) {
                logger.throwError("basic authentication requires a secure https url", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, { argument: "url", url: url, user: connection.user, password: "[REDACTED]" });
            }
            const authorization = connection.user + ":" + connection.password;
            headers["authorization"] = {
                key: "Authorization",
                value: "Basic " + (0,_ethersproject_base64__WEBPACK_IMPORTED_MODULE_4__.encode)((0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes)(authorization))
            };
        }
        if (connection.skipFetchSetup != null) {
            options.skipFetchSetup = !!connection.skipFetchSetup;
        }
        if (connection.fetchOptions != null) {
            options.fetchOptions = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.shallowCopy)(connection.fetchOptions);
        }
    }
    const reData = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i");
    const dataMatch = ((url) ? url.match(reData) : null);
    if (dataMatch) {
        try {
            const response = {
                statusCode: 200,
                statusMessage: "OK",
                headers: { "content-type": (dataMatch[1] || "text/plain") },
                body: (dataMatch[2] ? (0,_ethersproject_base64__WEBPACK_IMPORTED_MODULE_4__.decode)(dataMatch[3]) : unpercent(dataMatch[3]))
            };
            let result = response.body;
            if (processFunc) {
                result = processFunc(response.body, response);
            }
            return Promise.resolve(result);
        }
        catch (error) {
            logger.throwError("processing response error", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.SERVER_ERROR, {
                body: bodyify(dataMatch[1], dataMatch[2]),
                error: error,
                requestBody: null,
                requestMethod: "GET",
                url: url
            });
        }
    }
    if (body) {
        options.method = "POST";
        options.body = body;
        if (headers["content-type"] == null) {
            headers["content-type"] = { key: "Content-Type", value: "application/octet-stream" };
        }
        if (headers["content-length"] == null) {
            headers["content-length"] = { key: "Content-Length", value: String(body.length) };
        }
    }
    const flatHeaders = {};
    Object.keys(headers).forEach((key) => {
        const header = headers[key];
        flatHeaders[header.key] = header.value;
    });
    options.headers = flatHeaders;
    const runningTimeout = (function () {
        let timer = null;
        const promise = new Promise(function (resolve, reject) {
            if (timeout) {
                timer = setTimeout(() => {
                    if (timer == null) {
                        return;
                    }
                    timer = null;
                    reject(logger.makeError("timeout", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.TIMEOUT, {
                        requestBody: bodyify(options.body, flatHeaders["content-type"]),
                        requestMethod: options.method,
                        timeout: timeout,
                        url: url
                    }));
                }, timeout);
            }
        });
        const cancel = function () {
            if (timer == null) {
                return;
            }
            clearTimeout(timer);
            timer = null;
        };
        return { promise, cancel };
    })();
    const runningFetch = (function () {
        return __awaiter(this, void 0, void 0, function* () {
            for (let attempt = 0; attempt < attemptLimit; attempt++) {
                let response = null;
                try {
                    response = yield (0,_geturl__WEBPACK_IMPORTED_MODULE_6__.getUrl)(url, options);
                    if (attempt < attemptLimit) {
                        if (response.statusCode === 301 || response.statusCode === 302) {
                            // Redirection; for now we only support absolute locataions
                            const location = response.headers.location || "";
                            if (options.method === "GET" && location.match(/^https:/)) {
                                url = response.headers.location;
                                continue;
                            }
                        }
                        else if (response.statusCode === 429) {
                            // Exponential back-off throttling
                            let tryAgain = true;
                            if (throttleCallback) {
                                tryAgain = yield throttleCallback(attempt, url);
                            }
                            if (tryAgain) {
                                let stall = 0;
                                const retryAfter = response.headers["retry-after"];
                                if (typeof (retryAfter) === "string" && retryAfter.match(/^[1-9][0-9]*$/)) {
                                    stall = parseInt(retryAfter) * 1000;
                                }
                                else {
                                    stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                                }
                                //console.log("Stalling 429");
                                yield staller(stall);
                                continue;
                            }
                        }
                    }
                }
                catch (error) {
                    response = error.response;
                    if (response == null) {
                        runningTimeout.cancel();
                        logger.throwError("missing response", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.SERVER_ERROR, {
                            requestBody: bodyify(options.body, flatHeaders["content-type"]),
                            requestMethod: options.method,
                            serverError: error,
                            url: url
                        });
                    }
                }
                let body = response.body;
                if (allow304 && response.statusCode === 304) {
                    body = null;
                }
                else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {
                    runningTimeout.cancel();
                    logger.throwError("bad response", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.SERVER_ERROR, {
                        status: response.statusCode,
                        headers: response.headers,
                        body: bodyify(body, ((response.headers) ? response.headers["content-type"] : null)),
                        requestBody: bodyify(options.body, flatHeaders["content-type"]),
                        requestMethod: options.method,
                        url: url
                    });
                }
                if (processFunc) {
                    try {
                        const result = yield processFunc(body, response);
                        runningTimeout.cancel();
                        return result;
                    }
                    catch (error) {
                        // Allow the processFunc to trigger a throttle
                        if (error.throttleRetry && attempt < attemptLimit) {
                            let tryAgain = true;
                            if (throttleCallback) {
                                tryAgain = yield throttleCallback(attempt, url);
                            }
                            if (tryAgain) {
                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                                //console.log("Stalling callback");
                                yield staller(timeout);
                                continue;
                            }
                        }
                        runningTimeout.cancel();
                        logger.throwError("processing response error", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.SERVER_ERROR, {
                            body: bodyify(body, ((response.headers) ? response.headers["content-type"] : null)),
                            error: error,
                            requestBody: bodyify(options.body, flatHeaders["content-type"]),
                            requestMethod: options.method,
                            url: url
                        });
                    }
                }
                runningTimeout.cancel();
                // If we had a processFunc, it either returned a T or threw above.
                // The "body" is now a Uint8Array.
                return body;
            }
            return logger.throwError("failed response", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.SERVER_ERROR, {
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url: url
            });
        });
    })();
    return Promise.race([runningTimeout.promise, runningFetch]);
}
function fetchJson(connection, json, processFunc) {
    let processJsonFunc = (value, response) => {
        let result = null;
        if (value != null) {
            try {
                result = JSON.parse((0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8String)(value));
            }
            catch (error) {
                logger.throwError("invalid JSON", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.SERVER_ERROR, {
                    body: value,
                    error: error
                });
            }
        }
        if (processFunc) {
            result = processFunc(result, response);
        }
        return result;
    };
    // If we have json to send, we must
    // - add content-type of application/json (unless already overridden)
    // - convert the json to bytes
    let body = null;
    if (json != null) {
        body = (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes)(json);
        // Create a connection with the content-type set for JSON
        const updated = (typeof (connection) === "string") ? ({ url: connection }) : (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.shallowCopy)(connection);
        if (updated.headers) {
            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === "content-type")).length) !== 0;
            if (!hasContentType) {
                updated.headers = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.shallowCopy)(updated.headers);
                updated.headers["content-type"] = "application/json";
            }
        }
        else {
            updated.headers = { "content-type": "application/json" };
        }
        connection = updated;
    }
    return _fetchData(connection, body, processJsonFunc);
}
function poll(func, options) {
    if (!options) {
        options = {};
    }
    options = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.shallowCopy)(options);
    if (options.floor == null) {
        options.floor = 0;
    }
    if (options.ceiling == null) {
        options.ceiling = 10000;
    }
    if (options.interval == null) {
        options.interval = 250;
    }
    return new Promise(function (resolve, reject) {
        let timer = null;
        let done = false;
        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.
        const cancel = () => {
            if (done) {
                return false;
            }
            done = true;
            if (timer) {
                clearTimeout(timer);
            }
            return true;
        };
        if (options.timeout) {
            timer = setTimeout(() => {
                if (cancel()) {
                    reject(new Error("timeout"));
                }
            }, options.timeout);
        }
        const retryLimit = options.retryLimit;
        let attempt = 0;
        function check() {
            return func().then(function (result) {
                // If we have a result, or are allowed null then we're done
                if (result !== undefined) {
                    if (cancel()) {
                        resolve(result);
                    }
                }
                else if (options.oncePoll) {
                    options.oncePoll.once("poll", check);
                }
                else if (options.onceBlock) {
                    options.onceBlock.once("block", check);
                    // Otherwise, exponential back-off (up to 10s) our next request
                }
                else if (!done) {
                    attempt++;
                    if (attempt > retryLimit) {
                        if (cancel()) {
                            reject(new Error("retry limit reached"));
                        }
                        return;
                    }
                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                    if (timeout < options.floor) {
                        timeout = options.floor;
                    }
                    if (timeout > options.ceiling) {
                        timeout = options.ceiling;
                    }
                    setTimeout(check, timeout);
                }
                return null;
            }, function (error) {
                if (cancel()) {
                    reject(error);
                }
            });
        }
        check();
    });
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/wordlists/lib.esm/_version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/wordlists/lib.esm/_version.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "wordlists/5.7.0";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "langEn": () => (/* binding */ langEn)
/* harmony export */ });
/* harmony import */ var _wordlist__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wordlist */ "./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js");


const words = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";
let wordlist = null;
function loadWords(lang) {
    if (wordlist != null) {
        return;
    }
    wordlist = words.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" ");
    // Verify the computed list matches the official list
    /* istanbul ignore if */
    if (_wordlist__WEBPACK_IMPORTED_MODULE_0__.Wordlist.check(lang) !== "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60") {
        wordlist = null;
        throw new Error("BIP39 Wordlist for en (English) FAILED");
    }
}
class LangEn extends _wordlist__WEBPACK_IMPORTED_MODULE_0__.Wordlist {
    constructor() {
        super("en");
    }
    getWord(index) {
        loadWords(this);
        return wordlist[index];
    }
    getWordIndex(word) {
        loadWords(this);
        return wordlist.indexOf(word);
    }
}
const langEn = new LangEn();
_wordlist__WEBPACK_IMPORTED_MODULE_0__.Wordlist.register(langEn);

//# sourceMappingURL=lang-en.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Wordlist": () => (/* binding */ Wordlist),
/* harmony export */   "logger": () => (/* binding */ logger)
/* harmony export */ });
/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/hash */ "./node_modules/@ethersproject/hash/lib.esm/id.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/@ethersproject/wordlists/lib.esm/_version.js");

// This gets overridden by rollup
const exportWordlist = false;




const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
class Wordlist {
    constructor(locale) {
        logger.checkAbstract(new.target, Wordlist);
        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, "locale", locale);
    }
    // Subclasses may override this
    split(mnemonic) {
        return mnemonic.toLowerCase().split(/ +/g);
    }
    // Subclasses may override this
    join(words) {
        return words.join(" ");
    }
    static check(wordlist) {
        const words = [];
        for (let i = 0; i < 2048; i++) {
            const word = wordlist.getWord(i);
            /* istanbul ignore if */
            if (i !== wordlist.getWordIndex(word)) {
                return "0x";
            }
            words.push(word);
        }
        return (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_3__.id)(words.join("\n") + "\n");
    }
    static register(lang, name) {
        if (!name) {
            name = lang.locale;
        }
        /* istanbul ignore if */
        if (exportWordlist) {
            try {
                const anyGlobal = window;
                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {
                    if (!anyGlobal._ethers.wordlists[name]) {
                        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(anyGlobal._ethers.wordlists, name, lang);
                    }
                }
            }
            catch (error) { }
        }
    }
}
//# sourceMappingURL=wordlist.js.map

/***/ }),

/***/ "./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wordlists": () => (/* binding */ wordlists)
/* harmony export */ });
/* harmony import */ var _lang_en__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lang-en */ "./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js");


const wordlists = {
    en: _lang_en__WEBPACK_IMPORTED_MODULE_0__.langEn
};
//# sourceMappingURL=wordlists.js.map

/***/ }),

/***/ "./node_modules/aes-js/index.js":
/*!**************************************!*\
  !*** ./node_modules/aes-js/index.js ***!
  \**************************************/
/***/ (function(module) {

"use strict";


(function(root) {

    function checkInt(value) {
        return (parseInt(value) === value);
    }

    function checkInts(arrayish) {
        if (!checkInt(arrayish.length)) { return false; }

        for (var i = 0; i < arrayish.length; i++) {
            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {
                return false;
            }
        }

        return true;
    }

    function coerceArray(arg, copy) {

        // ArrayBuffer view
        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {

            if (copy) {
                if (arg.slice) {
                    arg = arg.slice();
                } else {
                    arg = Array.prototype.slice.call(arg);
                }
            }

            return arg;
        }

        // It's an array; check it is a valid representation of a byte
        if (Array.isArray(arg)) {
            if (!checkInts(arg)) {
                throw new Error('Array contains invalid value: ' + arg);
            }

            return new Uint8Array(arg);
        }

        // Something else, but behaves like an array (maybe a Buffer? Arguments?)
        if (checkInt(arg.length) && checkInts(arg)) {
            return new Uint8Array(arg);
        }

        throw new Error('unsupported array-like object');
    }

    function createArray(length) {
        return new Uint8Array(length);
    }

    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {
        if (sourceStart != null || sourceEnd != null) {
            if (sourceArray.slice) {
                sourceArray = sourceArray.slice(sourceStart, sourceEnd);
            } else {
                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);
            }
        }
        targetArray.set(sourceArray, targetStart);
    }



    var convertUtf8 = (function() {
        function toBytes(text) {
            var result = [], i = 0;
            text = encodeURI(text);
            while (i < text.length) {
                var c = text.charCodeAt(i++);

                // if it is a % sign, encode the following 2 bytes as a hex value
                if (c === 37) {
                    result.push(parseInt(text.substr(i, 2), 16))
                    i += 2;

                // otherwise, just the actual byte
                } else {
                    result.push(c)
                }
            }

            return coerceArray(result);
        }

        function fromBytes(bytes) {
            var result = [], i = 0;

            while (i < bytes.length) {
                var c = bytes[i];

                if (c < 128) {
                    result.push(String.fromCharCode(c));
                    i++;
                } else if (c > 191 && c < 224) {
                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));
                    i += 2;
                } else {
                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));
                    i += 3;
                }
            }

            return result.join('');
        }

        return {
            toBytes: toBytes,
            fromBytes: fromBytes,
        }
    })();

    var convertHex = (function() {
        function toBytes(text) {
            var result = [];
            for (var i = 0; i < text.length; i += 2) {
                result.push(parseInt(text.substr(i, 2), 16));
            }

            return result;
        }

        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html
        var Hex = '0123456789abcdef';

        function fromBytes(bytes) {
                var result = [];
                for (var i = 0; i < bytes.length; i++) {
                    var v = bytes[i];
                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);
                }
                return result.join('');
        }

        return {
            toBytes: toBytes,
            fromBytes: fromBytes,
        }
    })();


    // Number of rounds by keysize
    var numberOfRounds = {16: 10, 24: 12, 32: 14}

    // Round constant words
    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];

    // S-box and Inverse S-box (S is for Substitution)
    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];
    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];

    // Transformations for encryption
    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];
    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];
    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];
    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];

    // Transformations for decryption
    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];
    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];
    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];
    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];

    // Transformations for decryption key expansion
    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];
    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];
    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];
    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];

    function convertToInt32(bytes) {
        var result = [];
        for (var i = 0; i < bytes.length; i += 4) {
            result.push(
                (bytes[i    ] << 24) |
                (bytes[i + 1] << 16) |
                (bytes[i + 2] <<  8) |
                 bytes[i + 3]
            );
        }
        return result;
    }

    var AES = function(key) {
        if (!(this instanceof AES)) {
            throw Error('AES must be instanitated with `new`');
        }

        Object.defineProperty(this, 'key', {
            value: coerceArray(key, true)
        });

        this._prepare();
    }


    AES.prototype._prepare = function() {

        var rounds = numberOfRounds[this.key.length];
        if (rounds == null) {
            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');
        }

        // encryption round keys
        this._Ke = [];

        // decryption round keys
        this._Kd = [];

        for (var i = 0; i <= rounds; i++) {
            this._Ke.push([0, 0, 0, 0]);
            this._Kd.push([0, 0, 0, 0]);
        }

        var roundKeyCount = (rounds + 1) * 4;
        var KC = this.key.length / 4;

        // convert the key into ints
        var tk = convertToInt32(this.key);

        // copy values into round key arrays
        var index;
        for (var i = 0; i < KC; i++) {
            index = i >> 2;
            this._Ke[index][i % 4] = tk[i];
            this._Kd[rounds - index][i % 4] = tk[i];
        }

        // key expansion (fips-197 section 5.2)
        var rconpointer = 0;
        var t = KC, tt;
        while (t < roundKeyCount) {
            tt = tk[KC - 1];
            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^
                      (S[(tt >>  8) & 0xFF] << 16) ^
                      (S[ tt        & 0xFF] <<  8) ^
                       S[(tt >> 24) & 0xFF]        ^
                      (rcon[rconpointer] << 24));
            rconpointer += 1;

            // key expansion (for non-256 bit)
            if (KC != 8) {
                for (var i = 1; i < KC; i++) {
                    tk[i] ^= tk[i - 1];
                }

            // key expansion for 256-bit keys is "slightly different" (fips-197)
            } else {
                for (var i = 1; i < (KC / 2); i++) {
                    tk[i] ^= tk[i - 1];
                }
                tt = tk[(KC / 2) - 1];

                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^
                              (S[(tt >>  8) & 0xFF] <<  8) ^
                              (S[(tt >> 16) & 0xFF] << 16) ^
                              (S[(tt >> 24) & 0xFF] << 24));

                for (var i = (KC / 2) + 1; i < KC; i++) {
                    tk[i] ^= tk[i - 1];
                }
            }

            // copy values into round key arrays
            var i = 0, r, c;
            while (i < KC && t < roundKeyCount) {
                r = t >> 2;
                c = t % 4;
                this._Ke[r][c] = tk[i];
                this._Kd[rounds - r][c] = tk[i++];
                t++;
            }
        }

        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)
        for (var r = 1; r < rounds; r++) {
            for (var c = 0; c < 4; c++) {
                tt = this._Kd[r][c];
                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^
                                  U2[(tt >> 16) & 0xFF] ^
                                  U3[(tt >>  8) & 0xFF] ^
                                  U4[ tt        & 0xFF]);
            }
        }
    }

    AES.prototype.encrypt = function(plaintext) {
        if (plaintext.length != 16) {
            throw new Error('invalid plaintext size (must be 16 bytes)');
        }

        var rounds = this._Ke.length - 1;
        var a = [0, 0, 0, 0];

        // convert plaintext to (ints ^ key)
        var t = convertToInt32(plaintext);
        for (var i = 0; i < 4; i++) {
            t[i] ^= this._Ke[0][i];
        }

        // apply round transforms
        for (var r = 1; r < rounds; r++) {
            for (var i = 0; i < 4; i++) {
                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^
                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^
                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^
                        T4[ t[(i + 3) % 4]        & 0xff] ^
                        this._Ke[r][i]);
            }
            t = a.slice();
        }

        // the last round is special
        var result = createArray(16), tt;
        for (var i = 0; i < 4; i++) {
            tt = this._Ke[rounds][i];
            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;
            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;
            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;
            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;
        }

        return result;
    }

    AES.prototype.decrypt = function(ciphertext) {
        if (ciphertext.length != 16) {
            throw new Error('invalid ciphertext size (must be 16 bytes)');
        }

        var rounds = this._Kd.length - 1;
        var a = [0, 0, 0, 0];

        // convert plaintext to (ints ^ key)
        var t = convertToInt32(ciphertext);
        for (var i = 0; i < 4; i++) {
            t[i] ^= this._Kd[0][i];
        }

        // apply round transforms
        for (var r = 1; r < rounds; r++) {
            for (var i = 0; i < 4; i++) {
                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^
                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^
                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^
                        T8[ t[(i + 1) % 4]        & 0xff] ^
                        this._Kd[r][i]);
            }
            t = a.slice();
        }

        // the last round is special
        var result = createArray(16), tt;
        for (var i = 0; i < 4; i++) {
            tt = this._Kd[rounds][i];
            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;
            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;
            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;
            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;
        }

        return result;
    }


    /**
     *  Mode Of Operation - Electonic Codebook (ECB)
     */
    var ModeOfOperationECB = function(key) {
        if (!(this instanceof ModeOfOperationECB)) {
            throw Error('AES must be instanitated with `new`');
        }

        this.description = "Electronic Code Block";
        this.name = "ecb";

        this._aes = new AES(key);
    }

    ModeOfOperationECB.prototype.encrypt = function(plaintext) {
        plaintext = coerceArray(plaintext);

        if ((plaintext.length % 16) !== 0) {
            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
        }

        var ciphertext = createArray(plaintext.length);
        var block = createArray(16);

        for (var i = 0; i < plaintext.length; i += 16) {
            copyArray(plaintext, block, 0, i, i + 16);
            block = this._aes.encrypt(block);
            copyArray(block, ciphertext, i);
        }

        return ciphertext;
    }

    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {
        ciphertext = coerceArray(ciphertext);

        if ((ciphertext.length % 16) !== 0) {
            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
        }

        var plaintext = createArray(ciphertext.length);
        var block = createArray(16);

        for (var i = 0; i < ciphertext.length; i += 16) {
            copyArray(ciphertext, block, 0, i, i + 16);
            block = this._aes.decrypt(block);
            copyArray(block, plaintext, i);
        }

        return plaintext;
    }


    /**
     *  Mode Of Operation - Cipher Block Chaining (CBC)
     */
    var ModeOfOperationCBC = function(key, iv) {
        if (!(this instanceof ModeOfOperationCBC)) {
            throw Error('AES must be instanitated with `new`');
        }

        this.description = "Cipher Block Chaining";
        this.name = "cbc";

        if (!iv) {
            iv = createArray(16);

        } else if (iv.length != 16) {
            throw new Error('invalid initialation vector size (must be 16 bytes)');
        }

        this._lastCipherblock = coerceArray(iv, true);

        this._aes = new AES(key);
    }

    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {
        plaintext = coerceArray(plaintext);

        if ((plaintext.length % 16) !== 0) {
            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
        }

        var ciphertext = createArray(plaintext.length);
        var block = createArray(16);

        for (var i = 0; i < plaintext.length; i += 16) {
            copyArray(plaintext, block, 0, i, i + 16);

            for (var j = 0; j < 16; j++) {
                block[j] ^= this._lastCipherblock[j];
            }

            this._lastCipherblock = this._aes.encrypt(block);
            copyArray(this._lastCipherblock, ciphertext, i);
        }

        return ciphertext;
    }

    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {
        ciphertext = coerceArray(ciphertext);

        if ((ciphertext.length % 16) !== 0) {
            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
        }

        var plaintext = createArray(ciphertext.length);
        var block = createArray(16);

        for (var i = 0; i < ciphertext.length; i += 16) {
            copyArray(ciphertext, block, 0, i, i + 16);
            block = this._aes.decrypt(block);

            for (var j = 0; j < 16; j++) {
                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];
            }

            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);
        }

        return plaintext;
    }


    /**
     *  Mode Of Operation - Cipher Feedback (CFB)
     */
    var ModeOfOperationCFB = function(key, iv, segmentSize) {
        if (!(this instanceof ModeOfOperationCFB)) {
            throw Error('AES must be instanitated with `new`');
        }

        this.description = "Cipher Feedback";
        this.name = "cfb";

        if (!iv) {
            iv = createArray(16);

        } else if (iv.length != 16) {
            throw new Error('invalid initialation vector size (must be 16 size)');
        }

        if (!segmentSize) { segmentSize = 1; }

        this.segmentSize = segmentSize;

        this._shiftRegister = coerceArray(iv, true);

        this._aes = new AES(key);
    }

    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {
        if ((plaintext.length % this.segmentSize) != 0) {
            throw new Error('invalid plaintext size (must be segmentSize bytes)');
        }

        var encrypted = coerceArray(plaintext, true);

        var xorSegment;
        for (var i = 0; i < encrypted.length; i += this.segmentSize) {
            xorSegment = this._aes.encrypt(this._shiftRegister);
            for (var j = 0; j < this.segmentSize; j++) {
                encrypted[i + j] ^= xorSegment[j];
            }

            // Shift the register
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
        }

        return encrypted;
    }

    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {
        if ((ciphertext.length % this.segmentSize) != 0) {
            throw new Error('invalid ciphertext size (must be segmentSize bytes)');
        }

        var plaintext = coerceArray(ciphertext, true);

        var xorSegment;
        for (var i = 0; i < plaintext.length; i += this.segmentSize) {
            xorSegment = this._aes.encrypt(this._shiftRegister);

            for (var j = 0; j < this.segmentSize; j++) {
                plaintext[i + j] ^= xorSegment[j];
            }

            // Shift the register
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
        }

        return plaintext;
    }

    /**
     *  Mode Of Operation - Output Feedback (OFB)
     */
    var ModeOfOperationOFB = function(key, iv) {
        if (!(this instanceof ModeOfOperationOFB)) {
            throw Error('AES must be instanitated with `new`');
        }

        this.description = "Output Feedback";
        this.name = "ofb";

        if (!iv) {
            iv = createArray(16);

        } else if (iv.length != 16) {
            throw new Error('invalid initialation vector size (must be 16 bytes)');
        }

        this._lastPrecipher = coerceArray(iv, true);
        this._lastPrecipherIndex = 16;

        this._aes = new AES(key);
    }

    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {
        var encrypted = coerceArray(plaintext, true);

        for (var i = 0; i < encrypted.length; i++) {
            if (this._lastPrecipherIndex === 16) {
                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);
                this._lastPrecipherIndex = 0;
            }
            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];
        }

        return encrypted;
    }

    // Decryption is symetric
    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;


    /**
     *  Counter object for CTR common mode of operation
     */
    var Counter = function(initialValue) {
        if (!(this instanceof Counter)) {
            throw Error('Counter must be instanitated with `new`');
        }

        // We allow 0, but anything false-ish uses the default 1
        if (initialValue !== 0 && !initialValue) { initialValue = 1; }

        if (typeof(initialValue) === 'number') {
            this._counter = createArray(16);
            this.setValue(initialValue);

        } else {
            this.setBytes(initialValue);
        }
    }

    Counter.prototype.setValue = function(value) {
        if (typeof(value) !== 'number' || parseInt(value) != value) {
            throw new Error('invalid counter value (must be an integer)');
        }

        for (var index = 15; index >= 0; --index) {
            this._counter[index] = value % 256;
            value = value >> 8;
        }
    }

    Counter.prototype.setBytes = function(bytes) {
        bytes = coerceArray(bytes, true);

        if (bytes.length != 16) {
            throw new Error('invalid counter bytes size (must be 16 bytes)');
        }

        this._counter = bytes;
    };

    Counter.prototype.increment = function() {
        for (var i = 15; i >= 0; i--) {
            if (this._counter[i] === 255) {
                this._counter[i] = 0;
            } else {
                this._counter[i]++;
                break;
            }
        }
    }


    /**
     *  Mode Of Operation - Counter (CTR)
     */
    var ModeOfOperationCTR = function(key, counter) {
        if (!(this instanceof ModeOfOperationCTR)) {
            throw Error('AES must be instanitated with `new`');
        }

        this.description = "Counter";
        this.name = "ctr";

        if (!(counter instanceof Counter)) {
            counter = new Counter(counter)
        }

        this._counter = counter;

        this._remainingCounter = null;
        this._remainingCounterIndex = 16;

        this._aes = new AES(key);
    }

    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {
        var encrypted = coerceArray(plaintext, true);

        for (var i = 0; i < encrypted.length; i++) {
            if (this._remainingCounterIndex === 16) {
                this._remainingCounter = this._aes.encrypt(this._counter._counter);
                this._remainingCounterIndex = 0;
                this._counter.increment();
            }
            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];
        }

        return encrypted;
    }

    // Decryption is symetric
    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;


    ///////////////////////
    // Padding

    // See:https://tools.ietf.org/html/rfc2315
    function pkcs7pad(data) {
        data = coerceArray(data, true);
        var padder = 16 - (data.length % 16);
        var result = createArray(data.length + padder);
        copyArray(data, result);
        for (var i = data.length; i < result.length; i++) {
            result[i] = padder;
        }
        return result;
    }

    function pkcs7strip(data) {
        data = coerceArray(data, true);
        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }

        var padder = data[data.length - 1];
        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }

        var length = data.length - padder;
        for (var i = 0; i < padder; i++) {
            if (data[length + i] !== padder) {
                throw new Error('PKCS#7 invalid padding byte');
            }
        }

        var result = createArray(length);
        copyArray(data, result, 0, 0, length);
        return result;
    }

    ///////////////////////
    // Exporting


    // The block cipher
    var aesjs = {
        AES: AES,
        Counter: Counter,

        ModeOfOperation: {
            ecb: ModeOfOperationECB,
            cbc: ModeOfOperationCBC,
            cfb: ModeOfOperationCFB,
            ofb: ModeOfOperationOFB,
            ctr: ModeOfOperationCTR
        },

        utils: {
            hex: convertHex,
            utf8: convertUtf8
        },

        padding: {
            pkcs7: {
                pad: pkcs7pad,
                strip: pkcs7strip
            }
        },

        _arrayTest: {
            coerceArray: coerceArray,
            createArray: createArray,
            copyArray: copyArray,
        }
    };


    // node.js
    if (true) {
        module.exports = aesjs

    // RequireJS/AMD
    // http://www.requirejs.org/docs/api.html
    // https://github.com/amdjs/amdjs-api/wiki/AMD
    } else {}


})(this);


/***/ }),

/***/ "./resources/js/InfractionsAddress.js":
/*!********************************************!*\
  !*** ./resources/js/InfractionsAddress.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deployedInfractionsContractAddress": () => (/* binding */ deployedInfractionsContractAddress)
/* harmony export */ });
var deployedInfractionsContractAddress = "0x5d24452BEb4dbF4D011691dF89DAAE22FDBB52aA";


/***/ }),

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

/**
 * First we will load all of this project's JavaScript dependencies which
 * includes React and other helpers. It's a great starting point while
 * building robust, powerful web applications using React + Laravel.
 */
// require("./bootstrap");

/**
 * Next, we will create a fresh React component instance and attach it to
 * the page. Then, you may begin adding components to this application
 * or customize the JavaScript scaffolding to fit your unique needs.
 */
// require("./bootstrap");
// require("ethers");
__webpack_require__(/*! flowbite */ "./node_modules/flowbite/dist/flowbite.js");

window.ethers = __webpack_require__(/*! ethers */ "./node_modules/ethers/lib.esm/index.js");

var _require = __webpack_require__(/*! ethers */ "./node_modules/ethers/lib.esm/index.js"),
    ethers = _require.ethers;

var DriverFactoryContract = __webpack_require__(/*! ../../build/contracts/DriverFactory.json */ "./build/contracts/DriverFactory.json");

var DriverContract = __webpack_require__(/*! ../../build/contracts/Driver.json */ "./build/contracts/Driver.json");

var TicketFactoryContract = __webpack_require__(/*! ../../build/contracts/TicketFactory.json */ "./build/contracts/TicketFactory.json");

var TicketContract = __webpack_require__(/*! ../../build/contracts/Ticket.json */ "./build/contracts/Ticket.json");

var InfractionsContract = __webpack_require__(/*! ../../build/contracts/Infractions.json */ "./build/contracts/Infractions.json");

var JudgeFactoryContract = __webpack_require__(/*! ../../build/contracts/JudgeFactory.json */ "./build/contracts/JudgeFactory.json");

var JudgeContract = __webpack_require__(/*! ../../build/contracts/Judge.json */ "./build/contracts/Judge.json");

var PoliceFactoryContract = __webpack_require__(/*! ../../build/contracts/PoliceFactory.json */ "./build/contracts/PoliceFactory.json");

var PoliceContract = __webpack_require__(/*! ../../build/contracts/Police.json */ "./build/contracts/Police.json");

var VehicleFactoryContract = __webpack_require__(/*! ../../build/contracts/VehicleFactory.json */ "./build/contracts/VehicleFactory.json");

window.driverContractFactoryABI = DriverFactoryContract.abi;
window.driverContractABI = DriverContract.abi;
window.ticketFactoryContractABI = TicketFactoryContract.abi;
window.ticketContractABI = TicketContract.abi;
window.infractionContractABI = InfractionsContract.abi;
window.judgeFactoryContractABI = JudgeFactoryContract.abi;
window.judgeContractABI = JudgeContract.abi;
window.policeFactoryContractABI = PoliceFactoryContract.abi;
window.policeContractABI = PoliceContract.abi;
window.VehicleFactoryContractABI = VehicleFactoryContract.abi;
var ganacheRPCUrl = "http://127.0.0.1:7545";
var systemProvider = new ethers.providers.JsonRpcProvider(ganacheRPCUrl);
window.systemSigner = systemProvider.getSigner(19);
var systemWalletAddress = "0x2702fA187b43A791BF7E208ed6C12e7301A36d8E";

var _require2 = __webpack_require__(/*! ./driverFactoryAddress.js */ "./resources/js/driverFactoryAddress.js"),
    deployedDriverFactoryContractAddress = _require2.deployedDriverFactoryContractAddress;

var _require3 = __webpack_require__(/*! ./ticketFactoryAddress.js */ "./resources/js/ticketFactoryAddress.js"),
    deployedTicketFactoryContractAddress = _require3.deployedTicketFactoryContractAddress;

var _require4 = __webpack_require__(/*! ./InfractionsAddress.js */ "./resources/js/InfractionsAddress.js"),
    deployedInfractionsContractAddress = _require4.deployedInfractionsContractAddress;

var _require5 = __webpack_require__(/*! ./judgeFactoryAddress.js */ "./resources/js/judgeFactoryAddress.js"),
    deployedJudgeFactoryContractAddress = _require5.deployedJudgeFactoryContractAddress;

var _require6 = __webpack_require__(/*! ./policeFactoryAddress.js */ "./resources/js/policeFactoryAddress.js"),
    deployedPoliceFactoryContractAddress = _require6.deployedPoliceFactoryContractAddress;

var _require7 = __webpack_require__(/*! ./vehicleFactoryAddress.js */ "./resources/js/vehicleFactoryAddress.js"),
    deployedVehicleFactoryContractAddress = _require7.deployedVehicleFactoryContractAddress;

var getSigner = function getSigner() {
  var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : systemWalletAddress;
  var ganacheRPCUrl = "http://127.0.0.1:7545";
  var provider = new ethers.providers.JsonRpcProvider(ganacheRPCUrl);
  signer = provider.getSigner(address);
  return signer;
};

window.driverContractFactory = new ethers.Contract(deployedDriverFactoryContractAddress, window.driverContractFactoryABI, window.systemSigner);
window.ticketContractFactory = new ethers.Contract(deployedTicketFactoryContractAddress, window.ticketFactoryContractABI, window.systemSigner);

window.ticketContractFactory2 = function (address) {
  return new ethers.Contract(deployedTicketFactoryContractAddress, window.ticketFactoryContractABI, getSigner(address));
};

window.judgeContractFactory = new ethers.Contract(deployedJudgeFactoryContractAddress, window.judgeFactoryContractABI, window.systemSigner);
window.infractionContract = new ethers.Contract(deployedInfractionsContractAddress, window.infractionContractABI, window.systemSigner);
window.policeContractFactory = new ethers.Contract(deployedPoliceFactoryContractAddress, window.policeFactoryContractABI, window.systemSigner);

window.policeContractFactory2 = function (address) {
  return new ethers.Contract(deployedPoliceFactoryContractAddress, window.policeFactoryContractABI, getSigner(address));
};

window.VehicleFactoryContract = new ethers.Contract(deployedVehicleFactoryContractAddress, window.VehicleFactoryContractABI, window.systemSigner); // testing

_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
  return _regeneratorRuntime().wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
}))();

window.DriverContractInstance = function (contractAddress, signerAddress) {
  return new ethers.Contract(contractAddress, window.driverContractABI, getSigner(signerAddress));
};

window.TicketContractInstance = function (contractAddress, signerAddress) {
  return new ethers.Contract(contractAddress, window.ticketContractABI, getSigner(signerAddress));
};

window.JudgeContractInstance = function (contractAddress, signerAddress) {
  return new ethers.Contract(contractAddress, window.judgeContractABI, getSigner(signerAddress));
};

window.PoliceContractInstance = function (contractAddress, signerAddress) {
  return new ethers.Contract(contractAddress, window.policeContractABI, getSigner(signerAddress));
};

/***/ }),

/***/ "./resources/js/driverFactoryAddress.js":
/*!**********************************************!*\
  !*** ./resources/js/driverFactoryAddress.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deployedDriverFactoryContractAddress": () => (/* binding */ deployedDriverFactoryContractAddress)
/* harmony export */ });
var deployedDriverFactoryContractAddress = "0x2C8A42f734301afB2393529E115B9e5189909D62";


/***/ }),

/***/ "./resources/js/judgeFactoryAddress.js":
/*!*********************************************!*\
  !*** ./resources/js/judgeFactoryAddress.js ***!
  \*********************************************/
/***/ ((module) => {

var deployedJudgeFactoryContractAddress = "0x64f380D8Dc7AE4e1F58f77bba47e7C7303B6b48c";
module.exports = {
  deployedJudgeFactoryContractAddress: deployedJudgeFactoryContractAddress
};

/***/ }),

/***/ "./resources/js/policeFactoryAddress.js":
/*!**********************************************!*\
  !*** ./resources/js/policeFactoryAddress.js ***!
  \**********************************************/
/***/ ((module) => {

var deployedPoliceFactoryContractAddress = "0xdC3a945772EC02c5292968c92634eC9dD9c32FCA";
module.exports = {
  deployedPoliceFactoryContractAddress: deployedPoliceFactoryContractAddress
};

/***/ }),

/***/ "./resources/js/ticketFactoryAddress.js":
/*!**********************************************!*\
  !*** ./resources/js/ticketFactoryAddress.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deployedTicketFactoryContractAddress": () => (/* binding */ deployedTicketFactoryContractAddress)
/* harmony export */ });
var deployedTicketFactoryContractAddress = "0xE1B55E6a14fa19fb5419bFdca8B38b979F378790";


/***/ }),

/***/ "./resources/js/vehicleFactoryAddress.js":
/*!***********************************************!*\
  !*** ./resources/js/vehicleFactoryAddress.js ***!
  \***********************************************/
/***/ ((module) => {

var deployedVehicleFactoryContractAddress = "0xdb559af72221d88a9b6B11C818f3066D28D6F6a8";
module.exports = {
  deployedVehicleFactoryContractAddress: deployedVehicleFactoryContractAddress
};

/***/ }),

/***/ "./node_modules/bech32/index.js":
/*!**************************************!*\
  !*** ./node_modules/bech32/index.js ***!
  \**************************************/
/***/ ((module) => {

"use strict";

var ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'

// pre-compute lookup table
var ALPHABET_MAP = {}
for (var z = 0; z < ALPHABET.length; z++) {
  var x = ALPHABET.charAt(z)

  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')
  ALPHABET_MAP[x] = z
}

function polymodStep (pre) {
  var b = pre >> 25
  return ((pre & 0x1FFFFFF) << 5) ^
    (-((b >> 0) & 1) & 0x3b6a57b2) ^
    (-((b >> 1) & 1) & 0x26508e6d) ^
    (-((b >> 2) & 1) & 0x1ea119fa) ^
    (-((b >> 3) & 1) & 0x3d4233dd) ^
    (-((b >> 4) & 1) & 0x2a1462b3)
}

function prefixChk (prefix) {
  var chk = 1
  for (var i = 0; i < prefix.length; ++i) {
    var c = prefix.charCodeAt(i)
    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'

    chk = polymodStep(chk) ^ (c >> 5)
  }
  chk = polymodStep(chk)

  for (i = 0; i < prefix.length; ++i) {
    var v = prefix.charCodeAt(i)
    chk = polymodStep(chk) ^ (v & 0x1f)
  }
  return chk
}

function encode (prefix, words, LIMIT) {
  LIMIT = LIMIT || 90
  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')

  prefix = prefix.toLowerCase()

  // determine chk mod
  var chk = prefixChk(prefix)
  if (typeof chk === 'string') throw new Error(chk)

  var result = prefix + '1'
  for (var i = 0; i < words.length; ++i) {
    var x = words[i]
    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')

    chk = polymodStep(chk) ^ x
    result += ALPHABET.charAt(x)
  }

  for (i = 0; i < 6; ++i) {
    chk = polymodStep(chk)
  }
  chk ^= 1

  for (i = 0; i < 6; ++i) {
    var v = (chk >> ((5 - i) * 5)) & 0x1f
    result += ALPHABET.charAt(v)
  }

  return result
}

function __decode (str, LIMIT) {
  LIMIT = LIMIT || 90
  if (str.length < 8) return str + ' too short'
  if (str.length > LIMIT) return 'Exceeds length limit'

  // don't allow mixed case
  var lowered = str.toLowerCase()
  var uppered = str.toUpperCase()
  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str
  str = lowered

  var split = str.lastIndexOf('1')
  if (split === -1) return 'No separator character for ' + str
  if (split === 0) return 'Missing prefix for ' + str

  var prefix = str.slice(0, split)
  var wordChars = str.slice(split + 1)
  if (wordChars.length < 6) return 'Data too short'

  var chk = prefixChk(prefix)
  if (typeof chk === 'string') return chk

  var words = []
  for (var i = 0; i < wordChars.length; ++i) {
    var c = wordChars.charAt(i)
    var v = ALPHABET_MAP[c]
    if (v === undefined) return 'Unknown character ' + c
    chk = polymodStep(chk) ^ v

    // not in the checksum?
    if (i + 6 >= wordChars.length) continue
    words.push(v)
  }

  if (chk !== 1) return 'Invalid checksum for ' + str
  return { prefix: prefix, words: words }
}

function decodeUnsafe () {
  var res = __decode.apply(null, arguments)
  if (typeof res === 'object') return res
}

function decode (str) {
  var res = __decode.apply(null, arguments)
  if (typeof res === 'object') return res

  throw new Error(res)
}

function convert (data, inBits, outBits, pad) {
  var value = 0
  var bits = 0
  var maxV = (1 << outBits) - 1

  var result = []
  for (var i = 0; i < data.length; ++i) {
    value = (value << inBits) | data[i]
    bits += inBits

    while (bits >= outBits) {
      bits -= outBits
      result.push((value >> bits) & maxV)
    }
  }

  if (pad) {
    if (bits > 0) {
      result.push((value << (outBits - bits)) & maxV)
    }
  } else {
    if (bits >= inBits) return 'Excess padding'
    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'
  }

  return result
}

function toWordsUnsafe (bytes) {
  var res = convert(bytes, 8, 5, true)
  if (Array.isArray(res)) return res
}

function toWords (bytes) {
  var res = convert(bytes, 8, 5, true)
  if (Array.isArray(res)) return res

  throw new Error(res)
}

function fromWordsUnsafe (words) {
  var res = convert(words, 5, 8, false)
  if (Array.isArray(res)) return res
}

function fromWords (words) {
  var res = convert(words, 5, 8, false)
  if (Array.isArray(res)) return res

  throw new Error(res)
}

module.exports = {
  decodeUnsafe: decodeUnsafe,
  decode: decode,
  encode: encode,
  toWordsUnsafe: toWordsUnsafe,
  toWords: toWords,
  fromWordsUnsafe: fromWordsUnsafe,
  fromWords: fromWords
}


/***/ }),

/***/ "./node_modules/bn.js/lib/bn.js":
/*!**************************************!*\
  !*** ./node_modules/bn.js/lib/bn.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__webpack_require__(/*! buffer */ "?f4e8").Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [number & 0x3ffffff];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [0];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this._strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // '0' - '9'
    if (c >= 48 && c <= 57) {
      return c - 48;
    // 'A' - 'F'
    } else if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    } else {
      assert(false, 'Invalid character in ' + string);
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this._strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var b = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        b = c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        b = c - 17 + 0xa;

      // '0' - '9'
      } else {
        b = c;
      }
      assert(c >= 0 && b < mul, 'Invalid character');
      r += b;
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [0];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this._strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  function move (dest, src) {
    dest.words = src.words;
    dest.length = src.length;
    dest.negative = src.negative;
    dest.red = src.red;
  }

  BN.prototype._move = function _move (dest) {
    move(dest, this);
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype._strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  // Check Symbol.for because not everywhere where Symbol defined
  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
    try {
      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
      BN.prototype.inspect = inspect;
    }
  } else {
    BN.prototype.inspect = inspect;
  }

  function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  }

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modrn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16, 2);
  };

  if (Buffer) {
    BN.prototype.toBuffer = function toBuffer (endian, length) {
      return this.toArrayLike(Buffer, endian, length);
    };
  }

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  var allocate = function allocate (ArrayType, size) {
    if (ArrayType.allocUnsafe) {
      return ArrayType.allocUnsafe(size);
    }
    return new ArrayType(size);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    this._strip();

    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    var res = allocate(ArrayType, reqLength);
    var postfix = endian === 'le' ? 'LE' : 'BE';
    this['_toArrayLike' + postfix](res, byteLength);
    return res;
  };

  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
    var position = 0;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position++] = word & 0xff;
      if (position < res.length) {
        res[position++] = (word >> 8) & 0xff;
      }
      if (position < res.length) {
        res[position++] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position < res.length) {
          res[position++] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position < res.length) {
      res[position++] = carry;

      while (position < res.length) {
        res[position++] = 0;
      }
    }
  };

  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
    var position = res.length - 1;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position--] = word & 0xff;
      if (position >= 0) {
        res[position--] = (word >> 8) & 0xff;
      }
      if (position >= 0) {
        res[position--] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position >= 0) {
          res[position--] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position >= 0) {
      res[position--] = carry;

      while (position >= 0) {
        res[position--] = 0;
      }
    }
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] >>> wbit) & 0x01;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this._strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this._strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this._strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this._strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this._strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this._strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out._strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out._strip();
  }

  function jumboMulTo (self, num, out) {
    // Temporary disable, see https://github.com/indutny/bn.js/issues/211
    // var fftm = new FFTM();
    // return fftm.mulp(self, num, out);
    return bigMulTo(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out._strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this._strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this._strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this._strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) <= num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this._strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this._strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this._strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q._strip();
    }
    a._strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modrn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modrn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modrn = function modrn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return isNegNum ? -acc : acc;
  };

  // WARNING: DEPRECATED
  BN.prototype.modn = function modn (num) {
    return this.modrn(num);
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    this._strip();
    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this._strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is a BN v4 instance
        r.strip();
      } else {
        // r is a BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);

    move(a, a.umod(this.m)._forceRed(this));
    return a;
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ "./node_modules/ethers/lib.esm/_version.js":
/*!*************************************************!*\
  !*** ./node_modules/ethers/lib.esm/_version.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => (/* binding */ version)
/* harmony export */ });
const version = "ethers/5.7.2";
//# sourceMappingURL=_version.js.map

/***/ }),

/***/ "./node_modules/ethers/lib.esm/ethers.js":
/*!***********************************************!*\
  !*** ./node_modules/ethers/lib.esm/ethers.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseContract": () => (/* reexport safe */ _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_5__.BaseContract),
/* harmony export */   "BigNumber": () => (/* reexport safe */ _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber),
/* harmony export */   "Contract": () => (/* reexport safe */ _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_5__.Contract),
/* harmony export */   "ContractFactory": () => (/* reexport safe */ _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_5__.ContractFactory),
/* harmony export */   "FixedNumber": () => (/* reexport safe */ _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_7__.FixedNumber),
/* harmony export */   "Signer": () => (/* reexport safe */ _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_2__.Signer),
/* harmony export */   "VoidSigner": () => (/* reexport safe */ _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_2__.VoidSigner),
/* harmony export */   "Wallet": () => (/* reexport safe */ _ethersproject_wallet__WEBPACK_IMPORTED_MODULE_3__.Wallet),
/* harmony export */   "Wordlist": () => (/* reexport safe */ _ethersproject_wordlists__WEBPACK_IMPORTED_MODULE_11__.Wordlist),
/* harmony export */   "constants": () => (/* reexport module object */ _ethersproject_constants__WEBPACK_IMPORTED_MODULE_8__),
/* harmony export */   "errors": () => (/* reexport safe */ _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.ErrorCode),
/* harmony export */   "getDefaultProvider": () => (/* reexport safe */ _ethersproject_providers__WEBPACK_IMPORTED_MODULE_4__.getDefaultProvider),
/* harmony export */   "logger": () => (/* binding */ logger),
/* harmony export */   "providers": () => (/* reexport module object */ _ethersproject_providers__WEBPACK_IMPORTED_MODULE_4__),
/* harmony export */   "utils": () => (/* reexport module object */ _utils__WEBPACK_IMPORTED_MODULE_9__),
/* harmony export */   "version": () => (/* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_1__.version),
/* harmony export */   "wordlists": () => (/* reexport safe */ _ethersproject_wordlists__WEBPACK_IMPORTED_MODULE_10__.wordlists)
/* harmony export */ });
/* harmony import */ var _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/contracts */ "./node_modules/@ethersproject/contracts/lib.esm/index.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/bignumber */ "./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js");
/* harmony import */ var _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/abstract-signer */ "./node_modules/@ethersproject/abstract-signer/lib.esm/index.js");
/* harmony import */ var _ethersproject_wallet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/wallet */ "./node_modules/@ethersproject/wallet/lib.esm/index.js");
/* harmony import */ var _ethersproject_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/constants */ "./node_modules/@ethersproject/constants/lib.esm/index.js");
/* harmony import */ var _ethersproject_providers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/providers */ "./node_modules/@ethersproject/providers/lib.esm/index.js");
/* harmony import */ var _ethersproject_wordlists__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/wordlists */ "./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js");
/* harmony import */ var _ethersproject_wordlists__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/wordlists */ "./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils */ "./node_modules/ethers/lib.esm/utils.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ "./node_modules/ethers/lib.esm/_version.js");











////////////////////////
// Compile-Time Constants
// This is generated by "npm run dist"

const logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);
////////////////////////
// Exports

//# sourceMappingURL=ethers.js.map

/***/ }),

/***/ "./node_modules/ethers/lib.esm/index.js":
/*!**********************************************!*\
  !*** ./node_modules/ethers/lib.esm/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseContract": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_4__.BaseContract),
/* harmony export */   "BigNumber": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber),
/* harmony export */   "Contract": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_4__.Contract),
/* harmony export */   "ContractFactory": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_4__.ContractFactory),
/* harmony export */   "FixedNumber": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_6__.FixedNumber),
/* harmony export */   "Signer": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_1__.Signer),
/* harmony export */   "VoidSigner": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_1__.VoidSigner),
/* harmony export */   "Wallet": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_2__.Wallet),
/* harmony export */   "Wordlist": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_12__.Wordlist),
/* harmony export */   "constants": () => (/* reexport module object */ _ethers__WEBPACK_IMPORTED_MODULE_7__),
/* harmony export */   "errors": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_8__.ErrorCode),
/* harmony export */   "ethers": () => (/* reexport module object */ _ethers__WEBPACK_IMPORTED_MODULE_0__),
/* harmony export */   "getDefaultProvider": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_3__.getDefaultProvider),
/* harmony export */   "logger": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_0__.logger),
/* harmony export */   "providers": () => (/* reexport module object */ _ethers__WEBPACK_IMPORTED_MODULE_3__),
/* harmony export */   "utils": () => (/* reexport module object */ _ethers__WEBPACK_IMPORTED_MODULE_9__),
/* harmony export */   "version": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_11__.version),
/* harmony export */   "wordlists": () => (/* reexport safe */ _ethers__WEBPACK_IMPORTED_MODULE_10__.wordlists)
/* harmony export */ });
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ethers */ "./node_modules/ethers/lib.esm/ethers.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ethers */ "./node_modules/@ethersproject/abstract-signer/lib.esm/index.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ethers */ "./node_modules/@ethersproject/wallet/lib.esm/index.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ethers */ "./node_modules/@ethersproject/providers/lib.esm/index.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ethers */ "./node_modules/@ethersproject/contracts/lib.esm/index.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ethers */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ethers */ "./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ethers */ "./node_modules/@ethersproject/constants/lib.esm/index.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ethers */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ethers */ "./node_modules/ethers/lib.esm/utils.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ethers */ "./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ethers */ "./node_modules/ethers/lib.esm/_version.js");
/* harmony import */ var _ethers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ethers */ "./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js");

// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js

try {
    const anyGlobal = window;
    if (anyGlobal._ethers == null) {
        anyGlobal._ethers = _ethers__WEBPACK_IMPORTED_MODULE_0__;
    }
}
catch (error) { }


//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/ethers/lib.esm/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/ethers/lib.esm/utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbiCoder": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_0__.AbiCoder),
/* harmony export */   "ConstructorFragment": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__.ConstructorFragment),
/* harmony export */   "ErrorFragment": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__.ErrorFragment),
/* harmony export */   "EventFragment": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__.EventFragment),
/* harmony export */   "FormatTypes": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__.FormatTypes),
/* harmony export */   "Fragment": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__.Fragment),
/* harmony export */   "FunctionFragment": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__.FunctionFragment),
/* harmony export */   "HDNode": () => (/* reexport safe */ _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.HDNode),
/* harmony export */   "Indexed": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__.Indexed),
/* harmony export */   "Interface": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__.Interface),
/* harmony export */   "LogDescription": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__.LogDescription),
/* harmony export */   "Logger": () => (/* reexport safe */ _ethersproject_logger__WEBPACK_IMPORTED_MODULE_3__.Logger),
/* harmony export */   "ParamType": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__.ParamType),
/* harmony export */   "RLP": () => (/* reexport module object */ _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_4__),
/* harmony export */   "SigningKey": () => (/* reexport safe */ _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_9__.SigningKey),
/* harmony export */   "SupportedAlgorithm": () => (/* reexport safe */ _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_30__.SupportedAlgorithm),
/* harmony export */   "TransactionDescription": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__.TransactionDescription),
/* harmony export */   "TransactionTypes": () => (/* reexport safe */ _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_27__.TransactionTypes),
/* harmony export */   "UnicodeNormalizationForm": () => (/* reexport safe */ _ethersproject_strings__WEBPACK_IMPORTED_MODULE_14__.UnicodeNormalizationForm),
/* harmony export */   "Utf8ErrorFuncs": () => (/* reexport safe */ _ethersproject_strings__WEBPACK_IMPORTED_MODULE_14__.Utf8ErrorFuncs),
/* harmony export */   "Utf8ErrorReason": () => (/* reexport safe */ _ethersproject_strings__WEBPACK_IMPORTED_MODULE_14__.Utf8ErrorReason),
/* harmony export */   "_TypedDataEncoder": () => (/* reexport safe */ _ethersproject_hash__WEBPACK_IMPORTED_MODULE_19__.TypedDataEncoder),
/* harmony export */   "_fetchData": () => (/* reexport safe */ _ethersproject_web__WEBPACK_IMPORTED_MODULE_5__._fetchData),
/* harmony export */   "_toEscapedUtf8String": () => (/* reexport safe */ _ethersproject_strings__WEBPACK_IMPORTED_MODULE_14__._toEscapedUtf8String),
/* harmony export */   "accessListify": () => (/* reexport safe */ _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_27__.accessListify),
/* harmony export */   "arrayify": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.arrayify),
/* harmony export */   "base58": () => (/* reexport safe */ _ethersproject_basex__WEBPACK_IMPORTED_MODULE_11__.Base58),
/* harmony export */   "base64": () => (/* reexport module object */ _ethersproject_base64__WEBPACK_IMPORTED_MODULE_12__),
/* harmony export */   "checkProperties": () => (/* reexport safe */ _ethersproject_properties__WEBPACK_IMPORTED_MODULE_6__.checkProperties),
/* harmony export */   "checkResultErrors": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_2__.checkResultErrors),
/* harmony export */   "commify": () => (/* reexport safe */ _ethersproject_units__WEBPACK_IMPORTED_MODULE_21__.commify),
/* harmony export */   "computeAddress": () => (/* reexport safe */ _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_27__.computeAddress),
/* harmony export */   "computeHmac": () => (/* reexport safe */ _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_22__.computeHmac),
/* harmony export */   "computePublicKey": () => (/* reexport safe */ _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_9__.computePublicKey),
/* harmony export */   "concat": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.concat),
/* harmony export */   "deepCopy": () => (/* reexport safe */ _ethersproject_properties__WEBPACK_IMPORTED_MODULE_6__.deepCopy),
/* harmony export */   "defaultAbiCoder": () => (/* reexport safe */ _ethersproject_abi__WEBPACK_IMPORTED_MODULE_0__.defaultAbiCoder),
/* harmony export */   "defaultPath": () => (/* reexport safe */ _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.defaultPath),
/* harmony export */   "defineReadOnly": () => (/* reexport safe */ _ethersproject_properties__WEBPACK_IMPORTED_MODULE_6__.defineReadOnly),
/* harmony export */   "dnsEncode": () => (/* reexport safe */ _ethersproject_hash__WEBPACK_IMPORTED_MODULE_16__.dnsEncode),
/* harmony export */   "entropyToMnemonic": () => (/* reexport safe */ _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.entropyToMnemonic),
/* harmony export */   "fetchJson": () => (/* reexport safe */ _ethersproject_web__WEBPACK_IMPORTED_MODULE_5__.fetchJson),
/* harmony export */   "formatBytes32String": () => (/* reexport safe */ _ethersproject_strings__WEBPACK_IMPORTED_MODULE_15__.formatBytes32String),
/* harmony export */   "formatEther": () => (/* reexport safe */ _ethersproject_units__WEBPACK_IMPORTED_MODULE_21__.formatEther),
/* harmony export */   "formatUnits": () => (/* reexport safe */ _ethersproject_units__WEBPACK_IMPORTED_MODULE_21__.formatUnits),
/* harmony export */   "getAccountPath": () => (/* reexport safe */ _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.getAccountPath),
/* harmony export */   "getAddress": () => (/* reexport safe */ _ethersproject_address__WEBPACK_IMPORTED_MODULE_20__.getAddress),
/* harmony export */   "getContractAddress": () => (/* reexport safe */ _ethersproject_address__WEBPACK_IMPORTED_MODULE_20__.getContractAddress),
/* harmony export */   "getCreate2Address": () => (/* reexport safe */ _ethersproject_address__WEBPACK_IMPORTED_MODULE_20__.getCreate2Address),
/* harmony export */   "getIcapAddress": () => (/* reexport safe */ _ethersproject_address__WEBPACK_IMPORTED_MODULE_20__.getIcapAddress),
/* harmony export */   "getJsonWalletAddress": () => (/* reexport safe */ _ethersproject_json_wallets__WEBPACK_IMPORTED_MODULE_28__.getJsonWalletAddress),
/* harmony export */   "getStatic": () => (/* reexport safe */ _ethersproject_properties__WEBPACK_IMPORTED_MODULE_6__.getStatic),
/* harmony export */   "hashMessage": () => (/* reexport safe */ _ethersproject_hash__WEBPACK_IMPORTED_MODULE_17__.hashMessage),
/* harmony export */   "hexConcat": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexConcat),
/* harmony export */   "hexDataLength": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexDataLength),
/* harmony export */   "hexDataSlice": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexDataSlice),
/* harmony export */   "hexStripZeros": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexStripZeros),
/* harmony export */   "hexValue": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexValue),
/* harmony export */   "hexZeroPad": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexZeroPad),
/* harmony export */   "hexlify": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify),
/* harmony export */   "id": () => (/* reexport safe */ _ethersproject_hash__WEBPACK_IMPORTED_MODULE_18__.id),
/* harmony export */   "isAddress": () => (/* reexport safe */ _ethersproject_address__WEBPACK_IMPORTED_MODULE_20__.isAddress),
/* harmony export */   "isBytes": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isBytes),
/* harmony export */   "isBytesLike": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isBytesLike),
/* harmony export */   "isHexString": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString),
/* harmony export */   "isValidMnemonic": () => (/* reexport safe */ _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.isValidMnemonic),
/* harmony export */   "isValidName": () => (/* reexport safe */ _ethersproject_hash__WEBPACK_IMPORTED_MODULE_16__.isValidName),
/* harmony export */   "joinSignature": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.joinSignature),
/* harmony export */   "keccak256": () => (/* reexport safe */ _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_23__.keccak256),
/* harmony export */   "mnemonicToEntropy": () => (/* reexport safe */ _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.mnemonicToEntropy),
/* harmony export */   "mnemonicToSeed": () => (/* reexport safe */ _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__.mnemonicToSeed),
/* harmony export */   "namehash": () => (/* reexport safe */ _ethersproject_hash__WEBPACK_IMPORTED_MODULE_16__.namehash),
/* harmony export */   "nameprep": () => (/* reexport safe */ _ethersproject_strings__WEBPACK_IMPORTED_MODULE_13__.nameprep),
/* harmony export */   "parseBytes32String": () => (/* reexport safe */ _ethersproject_strings__WEBPACK_IMPORTED_MODULE_15__.parseBytes32String),
/* harmony export */   "parseEther": () => (/* reexport safe */ _ethersproject_units__WEBPACK_IMPORTED_MODULE_21__.parseEther),
/* harmony export */   "parseTransaction": () => (/* reexport safe */ _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_27__.parse),
/* harmony export */   "parseUnits": () => (/* reexport safe */ _ethersproject_units__WEBPACK_IMPORTED_MODULE_21__.parseUnits),
/* harmony export */   "poll": () => (/* reexport safe */ _ethersproject_web__WEBPACK_IMPORTED_MODULE_5__.poll),
/* harmony export */   "randomBytes": () => (/* reexport safe */ _ethersproject_random__WEBPACK_IMPORTED_MODULE_24__.randomBytes),
/* harmony export */   "recoverAddress": () => (/* reexport safe */ _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_27__.recoverAddress),
/* harmony export */   "recoverPublicKey": () => (/* reexport safe */ _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_9__.recoverPublicKey),
/* harmony export */   "resolveProperties": () => (/* reexport safe */ _ethersproject_properties__WEBPACK_IMPORTED_MODULE_6__.resolveProperties),
/* harmony export */   "ripemd160": () => (/* reexport safe */ _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_22__.ripemd160),
/* harmony export */   "serializeTransaction": () => (/* reexport safe */ _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_27__.serialize),
/* harmony export */   "sha256": () => (/* reexport safe */ _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_22__.sha256),
/* harmony export */   "sha512": () => (/* reexport safe */ _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_22__.sha512),
/* harmony export */   "shallowCopy": () => (/* reexport safe */ _ethersproject_properties__WEBPACK_IMPORTED_MODULE_6__.shallowCopy),
/* harmony export */   "shuffled": () => (/* reexport safe */ _ethersproject_random__WEBPACK_IMPORTED_MODULE_25__.shuffled),
/* harmony export */   "solidityKeccak256": () => (/* reexport safe */ _ethersproject_solidity__WEBPACK_IMPORTED_MODULE_26__.keccak256),
/* harmony export */   "solidityPack": () => (/* reexport safe */ _ethersproject_solidity__WEBPACK_IMPORTED_MODULE_26__.pack),
/* harmony export */   "soliditySha256": () => (/* reexport safe */ _ethersproject_solidity__WEBPACK_IMPORTED_MODULE_26__.sha256),
/* harmony export */   "splitSignature": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.splitSignature),
/* harmony export */   "stripZeros": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.stripZeros),
/* harmony export */   "toUtf8Bytes": () => (/* reexport safe */ _ethersproject_strings__WEBPACK_IMPORTED_MODULE_14__.toUtf8Bytes),
/* harmony export */   "toUtf8CodePoints": () => (/* reexport safe */ _ethersproject_strings__WEBPACK_IMPORTED_MODULE_14__.toUtf8CodePoints),
/* harmony export */   "toUtf8String": () => (/* reexport safe */ _ethersproject_strings__WEBPACK_IMPORTED_MODULE_14__.toUtf8String),
/* harmony export */   "verifyMessage": () => (/* reexport safe */ _ethersproject_wallet__WEBPACK_IMPORTED_MODULE_29__.verifyMessage),
/* harmony export */   "verifyTypedData": () => (/* reexport safe */ _ethersproject_wallet__WEBPACK_IMPORTED_MODULE_29__.verifyTypedData),
/* harmony export */   "zeroPad": () => (/* reexport safe */ _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.zeroPad)
/* harmony export */ });
/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/abi */ "./node_modules/@ethersproject/abi/lib.esm/abi-coder.js");
/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/abi */ "./node_modules/@ethersproject/abi/lib.esm/fragments.js");
/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/abi */ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js");
/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/abi */ "./node_modules/@ethersproject/abi/lib.esm/interface.js");
/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @ethersproject/address */ "./node_modules/@ethersproject/address/lib.esm/index.js");
/* harmony import */ var _ethersproject_base64__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ethersproject/base64 */ "./node_modules/@ethersproject/base64/lib.esm/index.js");
/* harmony import */ var _ethersproject_basex__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/basex */ "./node_modules/@ethersproject/basex/lib.esm/index.js");
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/bytes */ "./node_modules/@ethersproject/bytes/lib.esm/index.js");
/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @ethersproject/hash */ "./node_modules/@ethersproject/hash/lib.esm/namehash.js");
/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @ethersproject/hash */ "./node_modules/@ethersproject/hash/lib.esm/message.js");
/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @ethersproject/hash */ "./node_modules/@ethersproject/hash/lib.esm/id.js");
/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @ethersproject/hash */ "./node_modules/@ethersproject/hash/lib.esm/typed-data.js");
/* harmony import */ var _ethersproject_hdnode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/hdnode */ "./node_modules/@ethersproject/hdnode/lib.esm/index.js");
/* harmony import */ var _ethersproject_json_wallets__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @ethersproject/json-wallets */ "./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js");
/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @ethersproject/keccak256 */ "./node_modules/@ethersproject/keccak256/lib.esm/index.js");
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/logger */ "./node_modules/@ethersproject/logger/lib.esm/index.js");
/* harmony import */ var _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @ethersproject/sha2 */ "./node_modules/@ethersproject/sha2/lib.esm/sha2.js");
/* harmony import */ var _ethersproject_solidity__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @ethersproject/solidity */ "./node_modules/@ethersproject/solidity/lib.esm/index.js");
/* harmony import */ var _ethersproject_random__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ethersproject/random */ "./node_modules/@ethersproject/random/lib.esm/random.js");
/* harmony import */ var _ethersproject_random__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @ethersproject/random */ "./node_modules/@ethersproject/random/lib.esm/shuffle.js");
/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/properties */ "./node_modules/@ethersproject/properties/lib.esm/index.js");
/* harmony import */ var _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/rlp */ "./node_modules/@ethersproject/rlp/lib.esm/index.js");
/* harmony import */ var _ethersproject_signing_key__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/signing-key */ "./node_modules/@ethersproject/signing-key/lib.esm/index.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/idna.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/utf8.js");
/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ethersproject/strings */ "./node_modules/@ethersproject/strings/lib.esm/bytes32.js");
/* harmony import */ var _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @ethersproject/transactions */ "./node_modules/@ethersproject/transactions/lib.esm/index.js");
/* harmony import */ var _ethersproject_units__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @ethersproject/units */ "./node_modules/@ethersproject/units/lib.esm/index.js");
/* harmony import */ var _ethersproject_wallet__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @ethersproject/wallet */ "./node_modules/@ethersproject/wallet/lib.esm/index.js");
/* harmony import */ var _ethersproject_web__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/web */ "./node_modules/@ethersproject/web/lib.esm/index.js");
/* harmony import */ var _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @ethersproject/sha2 */ "./node_modules/@ethersproject/sha2/lib.esm/types.js");






















////////////////////////
// Enums


////////////////////////
// Exports

//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/flowbite/dist/flowbite.js":
/*!************************************************!*\
  !*** ./node_modules/flowbite/dist/flowbite.js ***!
  \************************************************/
/***/ (() => {

/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};

// UNUSED EXPORTS: default

;// CONCATENATED MODULE: ./src/components/accordion.js
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var Default = {
  alwaysOpen: false,
  activeClasses: 'bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white',
  inactiveClasses: 'text-gray-500 dark:text-gray-400',
  onOpen: function onOpen() {},
  onClose: function onClose() {},
  onToggle: function onToggle() {}
};

var Accordion = /*#__PURE__*/function () {
  function Accordion() {
    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Accordion);

    this._items = items;
    this._options = _objectSpread(_objectSpread({}, Default), options);

    this._init();
  }

  _createClass(Accordion, [{
    key: "_init",
    value: function _init() {
      var _this = this;

      if (this._items.length) {
        // show accordion item based on click
        this._items.map(function (item) {
          if (item.active) {
            _this.open(item.id);
          }

          item.triggerEl.addEventListener('click', function () {
            _this.toggle(item.id);
          });
        });
      }
    }
  }, {
    key: "getItem",
    value: function getItem(id) {
      return this._items.filter(function (item) {
        return item.id === id;
      })[0];
    }
  }, {
    key: "open",
    value: function open(id) {
      var _this2 = this,
          _item$triggerEl$class,
          _item$triggerEl$class2;

      var item = this.getItem(id); // don't hide other accordions if always open

      if (!this._options.alwaysOpen) {
        this._items.map(function (i) {
          if (i !== item) {
            var _i$triggerEl$classLis, _i$triggerEl$classLis2;

            (_i$triggerEl$classLis = i.triggerEl.classList).remove.apply(_i$triggerEl$classLis, _toConsumableArray(_this2._options.activeClasses.split(" ")));

            (_i$triggerEl$classLis2 = i.triggerEl.classList).add.apply(_i$triggerEl$classLis2, _toConsumableArray(_this2._options.inactiveClasses.split(" ")));

            i.targetEl.classList.add('hidden');
            i.triggerEl.setAttribute('aria-expanded', false);
            i.active = false; // rotate icon if set

            if (i.iconEl) {
              i.iconEl.classList.remove('rotate-180');
            }
          }
        });
      } // show active item


      (_item$triggerEl$class = item.triggerEl.classList).add.apply(_item$triggerEl$class, _toConsumableArray(this._options.activeClasses.split(" ")));

      (_item$triggerEl$class2 = item.triggerEl.classList).remove.apply(_item$triggerEl$class2, _toConsumableArray(this._options.inactiveClasses.split(" ")));

      item.triggerEl.setAttribute('aria-expanded', true);
      item.targetEl.classList.remove('hidden');
      item.active = true; // rotate icon if set

      if (item.iconEl) {
        item.iconEl.classList.add('rotate-180');
      } // callback function


      this._options.onOpen(this, item);
    }
  }, {
    key: "toggle",
    value: function toggle(id) {
      var item = this.getItem(id);

      if (item.active) {
        this.close(id);
      } else {
        this.open(id);
      } // callback function


      this._options.onToggle(this, item);
    }
  }, {
    key: "close",
    value: function close(id) {
      var _item$triggerEl$class3, _item$triggerEl$class4;

      var item = this.getItem(id);

      (_item$triggerEl$class3 = item.triggerEl.classList).remove.apply(_item$triggerEl$class3, _toConsumableArray(this._options.activeClasses.split(" ")));

      (_item$triggerEl$class4 = item.triggerEl.classList).add.apply(_item$triggerEl$class4, _toConsumableArray(this._options.inactiveClasses.split(" ")));

      item.targetEl.classList.add('hidden');
      item.triggerEl.setAttribute('aria-expanded', false);
      item.active = false; // rotate icon if set

      if (item.iconEl) {
        item.iconEl.classList.remove('rotate-180');
      } // callback function


      this._options.onClose(this, item);
    }
  }]);

  return Accordion;
}();

window.Accordion = Accordion;

function initAccordion() {
  document.querySelectorAll('[data-accordion]').forEach(function (accordionEl) {
    var alwaysOpen = accordionEl.getAttribute('data-accordion');
    var activeClasses = accordionEl.getAttribute('data-active-classes');
    var inactiveClasses = accordionEl.getAttribute('data-inactive-classes');
    var items = [];
    accordionEl.querySelectorAll('[data-accordion-target]').forEach(function (el) {
      var item = {
        id: el.getAttribute('data-accordion-target'),
        triggerEl: el,
        targetEl: document.querySelector(el.getAttribute('data-accordion-target')),
        iconEl: el.querySelector('[data-accordion-icon]'),
        active: el.getAttribute('aria-expanded') === 'true' ? true : false
      };
      items.push(item);
    });
    new Accordion(items, {
      alwaysOpen: alwaysOpen === 'open' ? true : false,
      activeClasses: activeClasses ? activeClasses : Default.activeClasses,
      inactiveClasses: inactiveClasses ? inactiveClasses : Default.inactiveClasses
    });
  });
}

if (document.readyState !== 'loading') {
  // DOMContentLoaded event were already fired. Perform explicit initialization now
  initAccordion();
} else {
  // DOMContentLoaded event not yet fired, attach initialization process to it
  document.addEventListener('DOMContentLoaded', initAccordion);
}

/* harmony default export */ const accordion = (Accordion);
;// CONCATENATED MODULE: ./src/components/collapse.js
function collapse_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function collapse_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? collapse_ownKeys(Object(source), !0).forEach(function (key) { collapse_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : collapse_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function collapse_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function collapse_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function collapse_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function collapse_createClass(Constructor, protoProps, staticProps) { if (protoProps) collapse_defineProperties(Constructor.prototype, protoProps); if (staticProps) collapse_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var collapse_Default = {
  triggerEl: null,
  onCollapse: function onCollapse() {},
  onExpand: function onExpand() {},
  onToggle: function onToggle() {}
};

var Collapse = /*#__PURE__*/function () {
  function Collapse() {
    var targetEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var options = arguments.length > 1 ? arguments[1] : undefined;

    collapse_classCallCheck(this, Collapse);

    this._targetEl = targetEl;
    this._triggerEl = options ? options.triggerEl : collapse_Default.triggerEl;
    this._options = collapse_objectSpread(collapse_objectSpread({}, collapse_Default), options);
    this._visible = false;

    this._init();
  }

  collapse_createClass(Collapse, [{
    key: "_init",
    value: function _init() {
      var _this = this;

      if (this._triggerEl) {
        if (this._triggerEl.hasAttribute('aria-expanded')) {
          this._visible = this._triggerEl.getAttribute('aria-expanded') === 'true' ? true : false;
        } else {
          // fix until v2 not to break previous single collapses which became dismiss
          this._visible = this._targetEl.classList.contains('hidden') ? false : true;
        }

        this._triggerEl.addEventListener('click', function () {
          _this._visible ? _this.collapse() : _this.expand();
        });
      }
    }
  }, {
    key: "collapse",
    value: function collapse() {
      this._targetEl.classList.add('hidden');

      if (this._triggerEl) {
        this._triggerEl.setAttribute('aria-expanded', 'false');
      }

      this._visible = false; // callback function

      this._options.onCollapse(this);
    }
  }, {
    key: "expand",
    value: function expand() {
      this._targetEl.classList.remove('hidden');

      if (this._triggerEl) {
        this._triggerEl.setAttribute('aria-expanded', 'true');
      }

      this._visible = true; // callback function

      this._options.onExpand(this);
    }
  }, {
    key: "toggle",
    value: function toggle() {
      if (this._visible) {
        this.collapse();
      } else {
        this.expand();
      }
    }
  }]);

  return Collapse;
}();

window.Collapse = Collapse;

function initCollapse() {
  document.querySelectorAll('[data-collapse-toggle]').forEach(function (triggerEl) {
    var targetEl = document.getElementById(triggerEl.getAttribute('data-collapse-toggle'));
    new Collapse(targetEl, {
      triggerEl: triggerEl
    });
  });
}

if (document.readyState !== 'loading') {
  // DOMContentLoaded event were already fired. Perform explicit initialization now
  initCollapse();
} else {
  // DOMContentLoaded event not yet fired, attach initialization process to it
  document.addEventListener('DOMContentLoaded', initCollapse);
}

/* harmony default export */ const collapse = (Collapse);
;// CONCATENATED MODULE: ./src/components/carousel.js
function carousel_toConsumableArray(arr) { return carousel_arrayWithoutHoles(arr) || carousel_iterableToArray(arr) || carousel_unsupportedIterableToArray(arr) || carousel_nonIterableSpread(); }

function carousel_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function carousel_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return carousel_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return carousel_arrayLikeToArray(o, minLen); }

function carousel_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function carousel_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return carousel_arrayLikeToArray(arr); }

function carousel_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function carousel_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function carousel_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? carousel_ownKeys(Object(source), !0).forEach(function (key) { carousel_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : carousel_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function carousel_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function carousel_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function carousel_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function carousel_createClass(Constructor, protoProps, staticProps) { if (protoProps) carousel_defineProperties(Constructor.prototype, protoProps); if (staticProps) carousel_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var carousel_Default = {
  defaultPosition: 0,
  indicators: {
    items: [],
    activeClasses: 'bg-white dark:bg-gray-800',
    inactiveClasses: 'bg-white/50 dark:bg-gray-800/50 hover:bg-white dark:hover:bg-gray-800'
  },
  interval: 3000,
  onNext: function onNext() {},
  onPrev: function onPrev() {},
  onChange: function onChange() {}
};

var Carousel = /*#__PURE__*/function () {
  function Carousel() {
    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    carousel_classCallCheck(this, Carousel);

    this._items = items;
    this._options = carousel_objectSpread(carousel_objectSpread(carousel_objectSpread({}, carousel_Default), options), {}, {
      indicators: carousel_objectSpread(carousel_objectSpread({}, carousel_Default.indicators), options.indicators)
    });
    this._activeItem = this.getItem(this._options.defaultPosition);
    this._indicators = this._options.indicators.items;
    this._interval = null;

    this._init();
  }
  /**
   * Initialise carousel and items based on active one
   */


  carousel_createClass(Carousel, [{
    key: "_init",
    value: function _init() {
      var _this = this;

      this._items.map(function (item) {
        item.el.classList.add('absolute', 'inset-0', 'transition-all', 'transform');
      }); // if no active item is set then first position is default


      if (this._getActiveItem()) {
        this.slideTo(this._getActiveItem().position);
      } else {
        this.slideTo(0);
      }

      this._indicators.map(function (indicator, position) {
        indicator.el.addEventListener('click', function () {
          _this.slideTo(position);
        });
      });
    }
  }, {
    key: "getItem",
    value: function getItem(position) {
      return this._items[position];
    }
    /**
     * Slide to the element based on id
     * @param {*} position 
     */

  }, {
    key: "slideTo",
    value: function slideTo(position) {
      var nextItem = this._items[position];
      var rotationItems = {
        'left': nextItem.position === 0 ? this._items[this._items.length - 1] : this._items[nextItem.position - 1],
        'middle': nextItem,
        'right': nextItem.position === this._items.length - 1 ? this._items[0] : this._items[nextItem.position + 1]
      };

      this._rotate(rotationItems);

      this._setActiveItem(nextItem.position);

      if (this._interval) {
        this.pause();
        this.cycle();
      }

      this._options.onChange(this);
    }
    /**
     * Based on the currently active item it will go to the next position
     */

  }, {
    key: "next",
    value: function next() {
      var activeItem = this._getActiveItem();

      var nextItem = null; // check if last item

      if (activeItem.position === this._items.length - 1) {
        nextItem = this._items[0];
      } else {
        nextItem = this._items[activeItem.position + 1];
      }

      this.slideTo(nextItem.position); // callback function

      this._options.onNext(this);
    }
    /**
     * Based on the currently active item it will go to the previous position
     */

  }, {
    key: "prev",
    value: function prev() {
      var activeItem = this._getActiveItem();

      var prevItem = null; // check if first item

      if (activeItem.position === 0) {
        prevItem = this._items[this._items.length - 1];
      } else {
        prevItem = this._items[activeItem.position - 1];
      }

      this.slideTo(prevItem.position); // callback function

      this._options.onPrev(this);
    }
    /**
     * This method applies the transform classes based on the left, middle, and right rotation carousel items
     * @param {*} rotationItems 
     */

  }, {
    key: "_rotate",
    value: function _rotate(rotationItems) {
      // reset
      this._items.map(function (item) {
        item.el.classList.add('hidden');
      }); // left item (previously active)


      rotationItems.left.el.classList.remove('-translate-x-full', 'translate-x-full', 'translate-x-0', 'hidden', 'z-20');
      rotationItems.left.el.classList.add('-translate-x-full', 'z-10'); // currently active item

      rotationItems.middle.el.classList.remove('-translate-x-full', 'translate-x-full', 'translate-x-0', 'hidden', 'z-10');
      rotationItems.middle.el.classList.add('translate-x-0', 'z-20'); // right item (upcoming active)

      rotationItems.right.el.classList.remove('-translate-x-full', 'translate-x-full', 'translate-x-0', 'hidden', 'z-20');
      rotationItems.right.el.classList.add('translate-x-full', 'z-10');
    }
    /**
     * Set an interval to cycle through the carousel items
     */

  }, {
    key: "cycle",
    value: function cycle() {
      var _this2 = this;

      this._interval = setInterval(function () {
        _this2.next();
      }, this._options.interval);
    }
    /**
     * Clears the cycling interval
     */

  }, {
    key: "pause",
    value: function pause() {
      clearInterval(this._interval);
    }
    /**
     * Get the currently active item
     */

  }, {
    key: "_getActiveItem",
    value: function _getActiveItem() {
      return this._activeItem;
    }
    /**
     * Set the currently active item and data attribute
     * @param {*} position 
     */

  }, {
    key: "_setActiveItem",
    value: function _setActiveItem(position) {
      var _this3 = this;

      this._activeItem = this._items[position]; // update the indicators if available

      if (this._indicators.length) {
        var _this$_indicators$pos, _this$_indicators$pos2;

        this._indicators.map(function (indicator) {
          var _indicator$el$classLi, _indicator$el$classLi2;

          indicator.el.setAttribute('aria-current', 'false');

          (_indicator$el$classLi = indicator.el.classList).remove.apply(_indicator$el$classLi, carousel_toConsumableArray(_this3._options.indicators.activeClasses.split(" ")));

          (_indicator$el$classLi2 = indicator.el.classList).add.apply(_indicator$el$classLi2, carousel_toConsumableArray(_this3._options.indicators.inactiveClasses.split(" ")));
        });

        (_this$_indicators$pos = this._indicators[position].el.classList).add.apply(_this$_indicators$pos, carousel_toConsumableArray(this._options.indicators.activeClasses.split(" ")));

        (_this$_indicators$pos2 = this._indicators[position].el.classList).remove.apply(_this$_indicators$pos2, carousel_toConsumableArray(this._options.indicators.inactiveClasses.split(" ")));

        this._indicators[position].el.setAttribute('aria-current', 'true');
      }
    }
  }]);

  return Carousel;
}();

window.Carousel = Carousel;

function initCarousel() {
  document.querySelectorAll('[data-carousel]').forEach(function (carouselEl) {
    var interval = carouselEl.getAttribute('data-carousel-interval');
    var slide = carouselEl.getAttribute('data-carousel') === 'slide' ? true : false;
    var items = [];
    var defaultPosition = 0;

    if (carouselEl.querySelectorAll('[data-carousel-item]').length) {
      carousel_toConsumableArray(carouselEl.querySelectorAll('[data-carousel-item]')).map(function (carouselItemEl, position) {
        items.push({
          position: position,
          el: carouselItemEl
        });

        if (carouselItemEl.getAttribute('data-carousel-item') === 'active') {
          defaultPosition = position;
        }
      });
    }

    var indicators = [];

    if (carouselEl.querySelectorAll('[data-carousel-slide-to]').length) {
      carousel_toConsumableArray(carouselEl.querySelectorAll('[data-carousel-slide-to]')).map(function (indicatorEl) {
        indicators.push({
          position: indicatorEl.getAttribute('data-carousel-slide-to'),
          el: indicatorEl
        });
      });
    }

    var carousel = new Carousel(items, {
      defaultPosition: defaultPosition,
      indicators: {
        items: indicators
      },
      interval: interval ? interval : carousel_Default.interval
    });

    if (slide) {
      carousel.cycle();
    } // check for controls


    var carouselNextEl = carouselEl.querySelector('[data-carousel-next]');
    var carouselPrevEl = carouselEl.querySelector('[data-carousel-prev]');

    if (carouselNextEl) {
      carouselNextEl.addEventListener('click', function () {
        carousel.next();
      });
    }

    if (carouselPrevEl) {
      carouselPrevEl.addEventListener('click', function () {
        carousel.prev();
      });
    }
  });
}

if (document.readyState !== 'loading') {
  // DOMContentLoaded event were already fired. Perform explicit initialization now
  initCarousel();
} else {
  // DOMContentLoaded event not yet fired, attach initialization process to it
  document.addEventListener('DOMContentLoaded', initCarousel);
}

/* harmony default export */ const carousel = (Carousel);
;// CONCATENATED MODULE: ./src/components/dismiss.js
function dismiss_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function dismiss_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? dismiss_ownKeys(Object(source), !0).forEach(function (key) { dismiss_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : dismiss_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function dismiss_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function dismiss_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function dismiss_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function dismiss_createClass(Constructor, protoProps, staticProps) { if (protoProps) dismiss_defineProperties(Constructor.prototype, protoProps); if (staticProps) dismiss_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var dismiss_Default = {
  triggerEl: null,
  transition: 'transition-opacity',
  duration: 300,
  timing: 'ease-out',
  onHide: function onHide() {}
};

var Dismiss = /*#__PURE__*/function () {
  function Dismiss() {
    var targetEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    dismiss_classCallCheck(this, Dismiss);

    this._targetEl = targetEl;
    this._triggerEl = options ? options.triggerEl : dismiss_Default.triggerEl;
    this._options = dismiss_objectSpread(dismiss_objectSpread({}, dismiss_Default), options);

    this._init();
  }

  dismiss_createClass(Dismiss, [{
    key: "_init",
    value: function _init() {
      var _this = this;

      if (this._triggerEl) {
        this._triggerEl.addEventListener('click', function () {
          _this.hide();
        });
      }
    }
  }, {
    key: "hide",
    value: function hide() {
      var _this2 = this;

      this._targetEl.classList.add(this._options.transition, "duration-".concat(this._options.duration), this._options.timing, 'opacity-0');

      setTimeout(function () {
        _this2._targetEl.classList.add('hidden');
      }, this._options.duration); // callback function

      this._options.onHide(this, this._targetEl);
    }
  }]);

  return Dismiss;
}();

window.Dismiss = Dismiss;

function initDismiss() {
  document.querySelectorAll('[data-dismiss-target]').forEach(function (triggerEl) {
    var targetEl = document.querySelector(triggerEl.getAttribute('data-dismiss-target'));
    new Dismiss(targetEl, {
      triggerEl: triggerEl
    });
  });
}

if (document.readyState !== 'loading') {
  // DOMContentLoaded event were already fired. Perform explicit initialization now
  initDismiss();
} else {
  // DOMContentLoaded event not yet fired, attach initialization process to it
  document.addEventListener('DOMContentLoaded', initDismiss);
}

/* harmony default export */ const dismiss = (Dismiss);
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js


function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}


;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/math.js
var math_max = Math.max;
var math_min = Math.min;
var round = Math.round;
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js


function getBoundingClientRect(element, includeScale) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  var rect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if (isHTMLElement(element) && includeScale) {
    var offsetHeight = element.offsetHeight;
    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale
    // Fallback to 1 in case both values are `0`

    if (offsetWidth > 0) {
      scaleX = round(rect.width) / offsetWidth || 1;
    }

    if (offsetHeight > 0) {
      scaleY = round(rect.height) / offsetHeight || 1;
    }
  }

  return {
    width: rect.width / scaleX,
    height: rect.height / scaleY,
    top: rect.top / scaleY,
    right: rect.right / scaleX,
    bottom: rect.bottom / scaleY,
    left: rect.left / scaleX,
    x: rect.left / scaleX,
    y: rect.top / scaleY
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js




function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js



function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js

function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js









function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
 // Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js



function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js




function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js




/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js







function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
  var isIE = navigator.userAgent.indexOf('Trident') !== -1;

  if (isIE && isHTMLElement(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = getParentNode(element);

  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/enums.js
var enums_top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [enums_top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var enums_placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/orderModifiers.js
 // source: https://stackoverflow.com/questions/49875255

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/createPopper.js














var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        if (false) { var _getComputedStyle, marginTop, marginRight, marginBottom, marginLeft, flipModifier, modifiers; }

        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          if (false) {}

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (false) {}

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      if (false) {}

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}
var createPopper = /*#__PURE__*/(/* unused pure expression or super */ null && (0)); // eslint-disable-next-line import/no-unused-modules


;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js
 // eslint-disable-next-line import/no-unused-modules

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const eventListeners = ({
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js

function getBasePlacement(placement) {
  return placement.split('-')[0];
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split('-')[1];
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeOffsets.js




function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case enums_top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;

      default:
    }
  }

  return offsets;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js


function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_popperOffsets = ({
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js







 // eslint-disable-next-line import/no-unused-modules

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets,
      isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
      x = _offsets$x === void 0 ? 0 : _offsets$x,
      _offsets$y = offsets.y,
      y = _offsets$y === void 0 ? 0 : _offsets$y;

  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = enums_top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);

      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === enums_top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left || (placement === enums_top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref4.x;
  y = _ref4.y;

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref5) {
  var state = _ref5.state,
      options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;

  if (false) { var transitionProperty; }

  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_computeStyles = ({
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js

 // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function applyStyles_effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_applyStyles = ({
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: applyStyles_effect,
  requires: ['computeStyles']
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/offset.js

 // eslint-disable-next-line import/no-unused-modules

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, enums_top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = enums_placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_offset = ({
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var getOppositeVariationPlacement_hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return getOppositeVariationPlacement_hash[matched];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js



function getViewportRect(element) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js




 // Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = math_max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = math_max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle(body || html).direction === 'rtl') {
    x += math_max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/contains.js

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js















function getInnerBoundingClientRect(element) {
  var rect = getBoundingClientRect(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = math_max(rect.top, accRect.top);
    accRect.right = math_min(rect.right, accRect.right);
    accRect.bottom = math_min(rect.bottom, accRect.bottom);
    accRect.left = math_max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/detectOverflow.js








 // eslint-disable-next-line import/no-unused-modules

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [enums_top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js




function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? enums_placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements;

    if (false) {}
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/flip.js






 // eslint-disable-next-line import/no-unused-modules

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start;
    var isVertical = [enums_top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : enums_top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_flip = ({
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/within.js

function within(min, value, max) {
  return math_max(min, math_min(value, max));
}
function withinMaxClamp(min, value, max) {
  var v = within(min, value, max);
  return v > max ? max : v;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js












function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var _offsetModifierState$;

    var mainSide = mainAxis === 'y' ? enums_top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = offset + overflow[mainSide];
    var max = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? math_min(min, tetherMin) : min, offset, tether ? math_max(max, tetherMax) : max);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _offsetModifierState$2;

    var _mainSide = mainAxis === 'x' ? enums_top : left;

    var _altSide = mainAxis === 'x' ? bottom : right;

    var _offset = popperOffsets[altAxis];

    var _len = altAxis === 'y' ? 'height' : 'width';

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var isOriginSide = [enums_top, left].indexOf(basePlacement) !== -1;

    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_preventOverflow = ({
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/arrow.js









 // eslint-disable-next-line import/no-unused-modules

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? enums_top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function arrow_effect(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (false) {}

  if (!contains(state.elements.popper, arrowElement)) {
    if (false) {}

    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_arrow = ({
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: arrow_effect,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/hide.js



function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [enums_top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const modifiers_hide = ({
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper.js










var defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];
var popper_createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules


;// CONCATENATED MODULE: ./src/components/dropdown.js
function dropdown_toConsumableArray(arr) { return dropdown_arrayWithoutHoles(arr) || dropdown_iterableToArray(arr) || dropdown_unsupportedIterableToArray(arr) || dropdown_nonIterableSpread(); }

function dropdown_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function dropdown_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return dropdown_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return dropdown_arrayLikeToArray(o, minLen); }

function dropdown_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function dropdown_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return dropdown_arrayLikeToArray(arr); }

function dropdown_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function dropdown_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function dropdown_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? dropdown_ownKeys(Object(source), !0).forEach(function (key) { dropdown_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : dropdown_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function dropdown_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function dropdown_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function dropdown_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function dropdown_createClass(Constructor, protoProps, staticProps) { if (protoProps) dropdown_defineProperties(Constructor.prototype, protoProps); if (staticProps) dropdown_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var dropdown_Default = {
  placement: 'bottom',
  triggerType: 'click',
  onShow: function onShow() {},
  onHide: function onHide() {}
};

var Dropdown = /*#__PURE__*/function () {
  function Dropdown() {
    var targetElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var triggerElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    dropdown_classCallCheck(this, Dropdown);

    this._targetEl = targetElement;
    this._triggerEl = triggerElement;
    this._options = dropdown_objectSpread(dropdown_objectSpread({}, dropdown_Default), options);
    this._popperInstance = this._createPopperInstace();
    this._visible = false;

    this._init();
  }

  dropdown_createClass(Dropdown, [{
    key: "_init",
    value: function _init() {
      var _this = this;

      if (this._triggerEl) {
        this._triggerEl.addEventListener('click', function () {
          _this.toggle();
        });
      }
    }
  }, {
    key: "_createPopperInstace",
    value: function _createPopperInstace() {
      return popper_createPopper(this._triggerEl, this._targetEl, {
        placement: this._options.placement,
        modifiers: [{
          name: 'offset',
          options: {
            offset: [0, 10]
          }
        }]
      });
    }
  }, {
    key: "_handleClickOutside",
    value: function _handleClickOutside(ev, targetEl) {
      var clickedEl = ev.target;

      if (clickedEl !== targetEl && !targetEl.contains(clickedEl) && !this._triggerEl.contains(clickedEl) && this._visible) {
        this.hide();
      }

      document.body.removeEventListener('click', this._handleClickOutside, true);
    }
  }, {
    key: "toggle",
    value: function toggle() {
      if (this._visible) {
        this.hide();
        document.body.removeEventListener('click', this._handleClickOutside, true);
      } else {
        this.show();
      }
    }
  }, {
    key: "show",
    value: function show() {
      var _this2 = this;

      this._targetEl.classList.remove('hidden');

      this._targetEl.classList.add('block'); // Enable the event listeners


      this._popperInstance.setOptions(function (options) {
        return dropdown_objectSpread(dropdown_objectSpread({}, options), {}, {
          modifiers: [].concat(dropdown_toConsumableArray(options.modifiers), [{
            name: 'eventListeners',
            enabled: true
          }])
        });
      });

      document.body.addEventListener('click', function (ev) {
        _this2._handleClickOutside(ev, _this2._targetEl);
      }, true); // Update its position

      this._popperInstance.update();

      this._visible = true; // callback function

      this._options.onShow(this);
    }
  }, {
    key: "hide",
    value: function hide() {
      this._targetEl.classList.remove('block');

      this._targetEl.classList.add('hidden'); // Disable the event listeners


      this._popperInstance.setOptions(function (options) {
        return dropdown_objectSpread(dropdown_objectSpread({}, options), {}, {
          modifiers: [].concat(dropdown_toConsumableArray(options.modifiers), [{
            name: 'eventListeners',
            enabled: false
          }])
        });
      });

      this._visible = false; // callback function

      this._options.onHide(this);
    }
  }]);

  return Dropdown;
}();

window.Dropdown = Dropdown;

function initDropdown() {
  document.querySelectorAll('[data-dropdown-toggle]').forEach(function (triggerEl) {
    var targetEl = document.getElementById(triggerEl.getAttribute('data-dropdown-toggle'));
    var placement = triggerEl.getAttribute('data-dropdown-placement');
    new Dropdown(targetEl, triggerEl, {
      placement: placement ? placement : dropdown_Default.placement
    });
  });
}

if (document.readyState !== 'loading') {
  // DOMContentLoaded event were already fired. Perform explicit initialization now
  initDropdown();
} else {
  // DOMContentLoaded event not yet fired, attach initialization process to it
  document.addEventListener('DOMContentLoaded', initDropdown);
}

/* harmony default export */ const dropdown = (Dropdown);
;// CONCATENATED MODULE: ./src/components/modal.js
function modal_toConsumableArray(arr) { return modal_arrayWithoutHoles(arr) || modal_iterableToArray(arr) || modal_unsupportedIterableToArray(arr) || modal_nonIterableSpread(); }

function modal_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function modal_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return modal_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return modal_arrayLikeToArray(o, minLen); }

function modal_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function modal_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return modal_arrayLikeToArray(arr); }

function modal_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function modal_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function modal_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? modal_ownKeys(Object(source), !0).forEach(function (key) { modal_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : modal_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function modal_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function modal_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function modal_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function modal_createClass(Constructor, protoProps, staticProps) { if (protoProps) modal_defineProperties(Constructor.prototype, protoProps); if (staticProps) modal_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var modal_Default = {
  placement: 'center',
  backdropClasses: 'bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-40',
  onHide: function onHide() {},
  onShow: function onShow() {},
  onToggle: function onToggle() {}
};

var Modal = /*#__PURE__*/function () {
  function Modal() {
    var targetEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    modal_classCallCheck(this, Modal);

    this._targetEl = targetEl;
    this._options = modal_objectSpread(modal_objectSpread({}, modal_Default), options);
    this._isHidden = true;

    this._init();
  }

  modal_createClass(Modal, [{
    key: "_init",
    value: function _init() {
      var _this = this;

      this._getPlacementClasses().map(function (c) {
        _this._targetEl.classList.add(c);
      });
    }
  }, {
    key: "_createBackdrop",
    value: function _createBackdrop() {
      if (this._isHidden) {
        var _backdropEl$classList;

        var backdropEl = document.createElement('div');
        backdropEl.setAttribute('modal-backdrop', '');

        (_backdropEl$classList = backdropEl.classList).add.apply(_backdropEl$classList, modal_toConsumableArray(this._options.backdropClasses.split(" ")));

        document.querySelector('body').append(backdropEl);
      }
    }
  }, {
    key: "_destroyBackdropEl",
    value: function _destroyBackdropEl() {
      if (!this._isHidden) {
        document.querySelector('[modal-backdrop]').remove();
      }
    }
  }, {
    key: "_getPlacementClasses",
    value: function _getPlacementClasses() {
      switch (this._options.placement) {
        // top
        case 'top-left':
          return ['justify-start', 'items-start'];

        case 'top-center':
          return ['justify-center', 'items-start'];

        case 'top-right':
          return ['justify-end', 'items-start'];
        // center

        case 'center-left':
          return ['justify-start', 'items-center'];

        case 'center':
          return ['justify-center', 'items-center'];

        case 'center-right':
          return ['justify-end', 'items-center'];
        // bottom

        case 'bottom-left':
          return ['justify-start', 'items-end'];

        case 'bottom-center':
          return ['justify-center', 'items-end'];

        case 'bottom-right':
          return ['justify-end', 'items-end'];

        default:
          return ['justify-center', 'items-center'];
      }
    }
  }, {
    key: "toggle",
    value: function toggle() {
      if (this._isHidden) {
        this.show();
      } else {
        this.hide();
      } // callback function


      this._options.onToggle(this);
    }
  }, {
    key: "show",
    value: function show() {
      this._targetEl.classList.add('flex');

      this._targetEl.classList.remove('hidden');

      this._targetEl.setAttribute('aria-modal', 'true');

      this._targetEl.setAttribute('role', 'dialog');

      this._targetEl.removeAttribute('aria-hidden');

      this._createBackdrop();

      this._isHidden = false; // callback function

      this._options.onShow(this);
    }
  }, {
    key: "hide",
    value: function hide() {
      this._targetEl.classList.add('hidden');

      this._targetEl.classList.remove('flex');

      this._targetEl.setAttribute('aria-hidden', 'true');

      this._targetEl.removeAttribute('aria-modal');

      this._targetEl.removeAttribute('role');

      this._destroyBackdropEl();

      this._isHidden = true; // callback function

      this._options.onHide(this);
    }
  }]);

  return Modal;
}();

window.Modal = Modal;

var getModalInstance = function getModalInstance(id, instances) {
  if (instances.some(function (modalInstance) {
    return modalInstance.id === id;
  })) {
    return instances.find(function (modalInstance) {
      return modalInstance.id === id;
    });
  }

  return false;
};

function initModal() {
  var modalInstances = [];
  document.querySelectorAll('[data-modal-toggle]').forEach(function (el) {
    var modalId = el.getAttribute('data-modal-toggle');
    var modalEl = document.getElementById(modalId);
    var placement = modalEl.getAttribute('data-modal-placement');

    if (modalEl) {
      if (!modalEl.hasAttribute('aria-hidden') && !modalEl.hasAttribute('aria-modal')) {
        modalEl.setAttribute('aria-hidden', 'true');
      }
    }

    var modal = null;

    if (getModalInstance(modalId, modalInstances)) {
      modal = getModalInstance(modalId, modalInstances);
      modal = modal.object;
    } else {
      modal = new Modal(modalEl, {
        placement: placement ? placement : modal_Default.placement
      });
      modalInstances.push({
        id: modalId,
        object: modal
      });
    }

    if (modalEl.hasAttribute('data-modal-show') && modalEl.getAttribute('data-modal-show') === 'true') {
      modal.show();
    }

    el.addEventListener('click', function () {
      modal.toggle();
    });
  });
}

if (document.readyState !== 'loading') {
  // DOMContentLoaded event were already fired. Perform explicit initialization now
  initModal();
} else {
  // DOMContentLoaded event not yet fired, attach initialization process to it
  document.addEventListener('DOMContentLoaded', initModal);
}

/* harmony default export */ const modal = (Modal);
;// CONCATENATED MODULE: ./src/components/drawer.js
function drawer_toConsumableArray(arr) { return drawer_arrayWithoutHoles(arr) || drawer_iterableToArray(arr) || drawer_unsupportedIterableToArray(arr) || drawer_nonIterableSpread(); }

function drawer_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function drawer_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return drawer_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return drawer_arrayLikeToArray(o, minLen); }

function drawer_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function drawer_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return drawer_arrayLikeToArray(arr); }

function drawer_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function drawer_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function drawer_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? drawer_ownKeys(Object(source), !0).forEach(function (key) { drawer_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : drawer_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function drawer_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function drawer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function drawer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function drawer_createClass(Constructor, protoProps, staticProps) { if (protoProps) drawer_defineProperties(Constructor.prototype, protoProps); if (staticProps) drawer_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var drawer_Default = {
  placement: 'left',
  bodyScrolling: false,
  backdrop: true,
  edge: false,
  edgeOffset: 'bottom-[60px]',
  backdropClasses: 'bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-30',
  onShow: function onShow() {},
  onHide: function onHide() {},
  onToggle: function onToggle() {}
};

var Drawer = /*#__PURE__*/function () {
  function Drawer() {
    var targetEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var options = arguments.length > 1 ? arguments[1] : undefined;

    drawer_classCallCheck(this, Drawer);

    this._targetEl = targetEl;
    this._options = drawer_objectSpread(drawer_objectSpread({}, drawer_Default), options);
    this._visible = false;

    this._init();
  }

  drawer_createClass(Drawer, [{
    key: "_init",
    value: function _init() {
      var _this = this;

      // set initial accessibility attributes
      if (this._targetEl) {
        this._targetEl.setAttribute('aria-hidden', 'true');

        this._targetEl.classList.add('transition-transform');
      } // set base placement classes


      this._getPlacementClasses(this._options.placement).base.map(function (c) {
        _this._targetEl.classList.add(c);
      }); // hide by default


      this.hide();
    }
  }, {
    key: "isVisible",
    value: function isVisible() {
      return this._visible;
    }
  }, {
    key: "hide",
    value: function hide() {
      var _this2 = this;

      // based on the edge option show placement classes
      if (this._options.edge) {
        this._getPlacementClasses(this._options.placement + '-edge').active.map(function (c) {
          _this2._targetEl.classList.remove(c);
        });

        this._getPlacementClasses(this._options.placement + '-edge').inactive.map(function (c) {
          _this2._targetEl.classList.add(c);
        });
      } else {
        this._getPlacementClasses(this._options.placement).active.map(function (c) {
          _this2._targetEl.classList.remove(c);
        });

        this._getPlacementClasses(this._options.placement).inactive.map(function (c) {
          _this2._targetEl.classList.add(c);
        });
      } // set accessibility attributes


      this._targetEl.setAttribute('aria-hidden', 'true');

      this._targetEl.removeAttribute('aria-modal');

      this._targetEl.removeAttribute('role'); // enable body scroll


      if (!this._options.bodyScrolling) {
        document.body.classList.remove('overflow-hidden');
      } // destroy backdrop


      if (this._options.backdrop) {
        this._destroyBackdropEl();
      }

      this._visible = false; // callback function

      this._options.onHide(this);
    }
  }, {
    key: "show",
    value: function show() {
      var _this3 = this;

      if (this._options.edge) {
        this._getPlacementClasses(this._options.placement + '-edge').active.map(function (c) {
          _this3._targetEl.classList.add(c);
        });

        this._getPlacementClasses(this._options.placement + '-edge').inactive.map(function (c) {
          _this3._targetEl.classList.remove(c);
        });
      } else {
        this._getPlacementClasses(this._options.placement).active.map(function (c) {
          _this3._targetEl.classList.add(c);
        });

        this._getPlacementClasses(this._options.placement).inactive.map(function (c) {
          _this3._targetEl.classList.remove(c);
        });
      } // set accessibility attributes


      this._targetEl.setAttribute('aria-modal', 'true');

      this._targetEl.setAttribute('role', 'dialog');

      this._targetEl.removeAttribute('aria-hidden'); // disable body scroll


      if (!this._options.bodyScrolling) {
        document.body.classList.add('overflow-hidden');
      } // show backdrop


      if (this._options.backdrop) {
        this._createBackdrop();
      }

      this._visible = true; // callback function

      this._options.onShow(this);
    }
  }, {
    key: "toggle",
    value: function toggle() {
      if (this.isVisible()) {
        this.hide();
      } else {
        this.show();
      }
    }
  }, {
    key: "_createBackdrop",
    value: function _createBackdrop() {
      var _this4 = this;

      if (!this._visible) {
        var _backdropEl$classList;

        var backdropEl = document.createElement('div');
        backdropEl.setAttribute('drawer-backdrop', '');

        (_backdropEl$classList = backdropEl.classList).add.apply(_backdropEl$classList, drawer_toConsumableArray(this._options.backdropClasses.split(" ")));

        document.querySelector('body').append(backdropEl);
        backdropEl.addEventListener('click', function () {
          _this4.hide();
        });
      }
    }
  }, {
    key: "_destroyBackdropEl",
    value: function _destroyBackdropEl() {
      if (this._visible) {
        document.querySelector('[drawer-backdrop]').remove();
      }
    }
  }, {
    key: "_getPlacementClasses",
    value: function _getPlacementClasses(placement) {
      switch (placement) {
        case 'top':
          return {
            base: ['top-0', 'left-0', 'right-0'],
            active: ['transform-none'],
            inactive: ['-translate-y-full']
          };

        case 'right':
          return {
            base: ['right-0', 'top-0'],
            active: ['transform-none'],
            inactive: ['translate-x-full']
          };

        case 'bottom':
          return {
            base: ['bottom-0', 'left-0', 'right-0'],
            active: ['transform-none'],
            inactive: ['translate-y-full']
          };

        case 'left':
          return {
            base: ['left-0', 'top-0'],
            active: ['transform-none'],
            inactive: ['-translate-x-full']
          };

        case 'bottom-edge':
          return {
            base: ['left-0', 'top-0'],
            active: ['transform-none'],
            inactive: ['translate-y-full', this._options.edgeOffset]
          };

        default:
          return {
            base: ['left-0', 'top-0'],
            active: ['transform-none'],
            inactive: ['-translate-x-full']
          };
      }
    }
  }]);

  return Drawer;
}();

window.Drawer = Drawer;

var getDrawerInstance = function getDrawerInstance(id, instances) {
  if (instances.some(function (drawerInstance) {
    return drawerInstance.id === id;
  })) {
    return instances.find(function (drawerInstance) {
      return drawerInstance.id === id;
    });
  }

  return false;
};

function initDrawer() {
  var drawerInstances = [];
  document.querySelectorAll('[data-drawer-target]').forEach(function (triggerEl) {
    // mandatory
    var targetEl = document.getElementById(triggerEl.getAttribute('data-drawer-target'));
    var drawerId = targetEl.id; // optional

    var placement = triggerEl.getAttribute('data-drawer-placement');
    var bodyScrolling = triggerEl.getAttribute('data-drawer-body-scrolling');
    var backdrop = triggerEl.getAttribute('data-drawer-backdrop');
    var edge = triggerEl.getAttribute('data-drawer-edge');
    var edgeOffset = triggerEl.getAttribute('data-drawer-edge-offset');
    var drawer = null;

    if (getDrawerInstance(drawerId, drawerInstances)) {
      drawer = getDrawerInstance(drawerId, drawerInstances);
      drawer = drawer.object;
    } else {
      drawer = new Drawer(targetEl, {
        placement: placement ? placement : drawer_Default.placement,
        bodyScrolling: bodyScrolling ? bodyScrolling === 'true' ? true : false : drawer_Default.bodyScrolling,
        backdrop: backdrop ? backdrop === 'true' ? true : false : drawer_Default.backdrop,
        edge: edge ? edge === 'true' ? true : false : drawer_Default.edge,
        edgeOffset: edgeOffset ? edgeOffset : drawer_Default.edgeOffset
      });
      drawerInstances.push({
        id: drawerId,
        object: drawer
      });
    }
  });
  document.querySelectorAll('[data-drawer-toggle]').forEach(function (triggerEl) {
    var targetEl = document.getElementById(triggerEl.getAttribute('data-drawer-toggle'));
    var drawerId = targetEl.id;
    var drawer = getDrawerInstance(drawerId, drawerInstances);
    triggerEl.addEventListener('click', function () {
      if (drawer.object.isVisible()) {
        drawer.object.hide();
      } else {
        drawer.object.show();
      }
    });
  });
  document.querySelectorAll('[data-drawer-dismiss]').forEach(function (triggerEl) {
    var targetEl = document.getElementById(triggerEl.getAttribute('data-drawer-dismiss'));
    var drawerId = targetEl.id;
    var drawer = getDrawerInstance(drawerId, drawerInstances);
    triggerEl.addEventListener('click', function () {
      drawer.object.hide();
    });
  });
  document.querySelectorAll('[data-drawer-show]').forEach(function (triggerEl) {
    var targetEl = document.getElementById(triggerEl.getAttribute('data-drawer-show'));
    var drawerId = targetEl.id;
    var drawer = getDrawerInstance(drawerId, drawerInstances);
    triggerEl.addEventListener('click', function () {
      drawer.object.show();
    });
  });
}

if (document.readyState !== 'loading') {
  // DOMContentLoaded event were already fired. Perform explicit initialization now
  initDrawer();
} else {
  // DOMContentLoaded event not yet fired, attach initialization process to it
  document.addEventListener('DOMContentLoaded', initDrawer);
}

/* harmony default export */ const drawer = (Drawer);
;// CONCATENATED MODULE: ./src/components/tabs.js
function tabs_toConsumableArray(arr) { return tabs_arrayWithoutHoles(arr) || tabs_iterableToArray(arr) || tabs_unsupportedIterableToArray(arr) || tabs_nonIterableSpread(); }

function tabs_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function tabs_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return tabs_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return tabs_arrayLikeToArray(o, minLen); }

function tabs_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function tabs_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return tabs_arrayLikeToArray(arr); }

function tabs_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function tabs_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function tabs_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? tabs_ownKeys(Object(source), !0).forEach(function (key) { tabs_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : tabs_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function tabs_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function tabs_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function tabs_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function tabs_createClass(Constructor, protoProps, staticProps) { if (protoProps) tabs_defineProperties(Constructor.prototype, protoProps); if (staticProps) tabs_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var tabs_Default = {
  defaultTabId: null,
  activeClasses: 'text-blue-600 hover:text-blue-600 dark:text-blue-500 dark:hover:text-blue-500 border-blue-600 dark:border-blue-500',
  inactiveClasses: 'dark:border-transparent text-gray-500 hover:text-gray-600 dark:text-gray-400 border-gray-100 hover:border-gray-300 dark:border-gray-700 dark:hover:text-gray-300',
  onShow: function onShow() {}
};

var Tabs = /*#__PURE__*/function () {
  function Tabs() {
    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    tabs_classCallCheck(this, Tabs);

    this._items = items;
    this._activeTab = options ? this.getTab(options.defaultTabId) : null;
    this._options = tabs_objectSpread(tabs_objectSpread({}, tabs_Default), options);

    this._init();
  }

  tabs_createClass(Tabs, [{
    key: "_init",
    value: function _init() {
      var _this = this;

      if (this._items.length) {
        // set the first tab as active if not set by explicitly
        if (!this._activeTab) {
          this._setActiveTab(this._items[0]);
        } // force show the first default tab


        this.show(this._activeTab.id, true); // show tab content based on click

        this._items.map(function (tab) {
          tab.triggerEl.addEventListener('click', function () {
            _this.show(tab.id);
          });
        });
      }
    }
  }, {
    key: "getActiveTab",
    value: function getActiveTab() {
      return this._activeTab;
    }
  }, {
    key: "_setActiveTab",
    value: function _setActiveTab(tab) {
      this._activeTab = tab;
    }
  }, {
    key: "getTab",
    value: function getTab(id) {
      return this._items.filter(function (t) {
        return t.id === id;
      })[0];
    }
  }, {
    key: "show",
    value: function show(id) {
      var _this2 = this,
          _tab$triggerEl$classL,
          _tab$triggerEl$classL2;

      var forceShow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var tab = this.getTab(id); // don't do anything if already active

      if (tab === this._activeTab && !forceShow) {
        return;
      } // hide other tabs


      this._items.map(function (t) {
        if (t !== tab) {
          var _t$triggerEl$classLis, _t$triggerEl$classLis2;

          (_t$triggerEl$classLis = t.triggerEl.classList).remove.apply(_t$triggerEl$classLis, tabs_toConsumableArray(_this2._options.activeClasses.split(" ")));

          (_t$triggerEl$classLis2 = t.triggerEl.classList).add.apply(_t$triggerEl$classLis2, tabs_toConsumableArray(_this2._options.inactiveClasses.split(" ")));

          t.targetEl.classList.add('hidden');
          t.triggerEl.setAttribute('aria-selected', false);
        }
      }); // show active tab


      (_tab$triggerEl$classL = tab.triggerEl.classList).add.apply(_tab$triggerEl$classL, tabs_toConsumableArray(this._options.activeClasses.split(" ")));

      (_tab$triggerEl$classL2 = tab.triggerEl.classList).remove.apply(_tab$triggerEl$classL2, tabs_toConsumableArray(this._options.inactiveClasses.split(" ")));

      tab.triggerEl.setAttribute('aria-selected', true);
      tab.targetEl.classList.remove('hidden');

      this._setActiveTab(tab); // callback function


      this._options.onShow(this, tab);
    }
  }]);

  return Tabs;
}();

window.Tabs = Tabs;

function initTabs() {
  document.querySelectorAll('[data-tabs-toggle]').forEach(function (triggerEl) {
    var tabElements = [];
    var defaultTabId = null;
    triggerEl.querySelectorAll('[role="tab"]').forEach(function (el) {
      var isActive = el.getAttribute('aria-selected') === 'true';
      var tab = {
        id: el.getAttribute('data-tabs-target'),
        triggerEl: el,
        targetEl: document.querySelector(el.getAttribute('data-tabs-target'))
      };
      tabElements.push(tab);

      if (isActive) {
        defaultTabId = tab.id;
      }
    });
    new Tabs(tabElements, {
      defaultTabId: defaultTabId
    });
  });
}

if (document.readyState !== 'loading') {
  // DOMContentLoaded event were already fired. Perform explicit initialization now
  initTabs();
} else {
  // DOMContentLoaded event not yet fired, attach initialization process to it
  document.addEventListener('DOMContentLoaded', initTabs);
}

/* harmony default export */ const tabs = (Tabs);
;// CONCATENATED MODULE: ./src/components/tooltip.js
function tooltip_toConsumableArray(arr) { return tooltip_arrayWithoutHoles(arr) || tooltip_iterableToArray(arr) || tooltip_unsupportedIterableToArray(arr) || tooltip_nonIterableSpread(); }

function tooltip_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function tooltip_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return tooltip_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return tooltip_arrayLikeToArray(o, minLen); }

function tooltip_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function tooltip_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return tooltip_arrayLikeToArray(arr); }

function tooltip_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function tooltip_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function tooltip_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? tooltip_ownKeys(Object(source), !0).forEach(function (key) { tooltip_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : tooltip_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function tooltip_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function tooltip_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function tooltip_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function tooltip_createClass(Constructor, protoProps, staticProps) { if (protoProps) tooltip_defineProperties(Constructor.prototype, protoProps); if (staticProps) tooltip_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var tooltip_Default = {
  placement: 'top',
  triggerType: 'hover',
  onShow: function onShow() {},
  onHide: function onHide() {}
};

var Tooltip = /*#__PURE__*/function () {
  function Tooltip() {
    var targetEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var triggerEl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    tooltip_classCallCheck(this, Tooltip);

    this._targetEl = targetEl;
    this._triggerEl = triggerEl;
    this._options = tooltip_objectSpread(tooltip_objectSpread({}, tooltip_Default), options);
    this._popperInstance = this._createPopperInstace();

    this._init();
  }

  tooltip_createClass(Tooltip, [{
    key: "_init",
    value: function _init() {
      var _this = this;

      if (this._triggerEl) {
        var triggerEvents = this._getTriggerEvents();

        triggerEvents.showEvents.forEach(function (ev) {
          _this._triggerEl.addEventListener(ev, function () {
            _this.show();
          });
        });
        triggerEvents.hideEvents.forEach(function (ev) {
          _this._triggerEl.addEventListener(ev, function () {
            _this.hide();
          });
        });
      }
    }
  }, {
    key: "_createPopperInstace",
    value: function _createPopperInstace() {
      return popper_createPopper(this._triggerEl, this._targetEl, {
        placement: this._options.placement,
        modifiers: [{
          name: 'offset',
          options: {
            offset: [0, 8]
          }
        }]
      });
    }
  }, {
    key: "_getTriggerEvents",
    value: function _getTriggerEvents() {
      switch (this._options.triggerType) {
        case 'hover':
          return {
            showEvents: ['mouseenter', 'focus'],
            hideEvents: ['mouseleave', 'blur']
          };

        case 'click':
          return {
            showEvents: ['click', 'focus'],
            hideEvents: ['focusout', 'blur']
          };

        default:
          return {
            showEvents: ['mouseenter', 'focus'],
            hideEvents: ['mouseleave', 'blur']
          };
      }
    }
  }, {
    key: "show",
    value: function show() {
      this._targetEl.classList.remove('opacity-0', 'invisible');

      this._targetEl.classList.add('opacity-100', 'visible'); // Enable the event listeners


      this._popperInstance.setOptions(function (options) {
        return tooltip_objectSpread(tooltip_objectSpread({}, options), {}, {
          modifiers: [].concat(tooltip_toConsumableArray(options.modifiers), [{
            name: 'eventListeners',
            enabled: true
          }])
        });
      }); // Update its position


      this._popperInstance.update(); // callback function


      this._options.onShow(this);
    }
  }, {
    key: "hide",
    value: function hide() {
      this._targetEl.classList.remove('opacity-100', 'visible');

      this._targetEl.classList.add('opacity-0', 'invisible'); // Disable the event listeners


      this._popperInstance.setOptions(function (options) {
        return tooltip_objectSpread(tooltip_objectSpread({}, options), {}, {
          modifiers: [].concat(tooltip_toConsumableArray(options.modifiers), [{
            name: 'eventListeners',
            enabled: false
          }])
        });
      }); // callback function


      this._options.onHide(this);
    }
  }]);

  return Tooltip;
}();

window.Tooltip = Tooltip;

function initTooltip() {
  document.querySelectorAll('[data-tooltip-target]').forEach(function (triggerEl) {
    var targetEl = document.getElementById(triggerEl.getAttribute('data-tooltip-target'));
    var triggerType = triggerEl.getAttribute('data-tooltip-trigger');
    var placement = triggerEl.getAttribute('data-tooltip-placement');
    new Tooltip(targetEl, triggerEl, {
      placement: placement ? placement : tooltip_Default.placement,
      triggerType: triggerType ? triggerType : tooltip_Default.triggerType
    });
  });
}

if (document.readyState !== 'loading') {
  // DOMContentLoaded event were already fired. Perform explicit initialization now
  initTooltip();
} else {
  // DOMContentLoaded event not yet fired, attach initialization process to it
  document.addEventListener('DOMContentLoaded', initTooltip);
}

/* harmony default export */ const tooltip = (Tooltip);
;// CONCATENATED MODULE: ./src/components/popover.js
function popover_toConsumableArray(arr) { return popover_arrayWithoutHoles(arr) || popover_iterableToArray(arr) || popover_unsupportedIterableToArray(arr) || popover_nonIterableSpread(); }

function popover_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function popover_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return popover_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return popover_arrayLikeToArray(o, minLen); }

function popover_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function popover_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return popover_arrayLikeToArray(arr); }

function popover_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function popover_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function popover_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? popover_ownKeys(Object(source), !0).forEach(function (key) { popover_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : popover_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function popover_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function popover_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function popover_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function popover_createClass(Constructor, protoProps, staticProps) { if (protoProps) popover_defineProperties(Constructor.prototype, protoProps); if (staticProps) popover_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var popover_Default = {
  placement: 'top',
  offset: 10,
  triggerType: 'hover',
  onShow: function onShow() {},
  onHide: function onHide() {}
};

var Popover = /*#__PURE__*/function () {
  function Popover() {
    var targetEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var triggerEl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    popover_classCallCheck(this, Popover);

    this._targetEl = targetEl;
    this._triggerEl = triggerEl;
    this._options = popover_objectSpread(popover_objectSpread({}, popover_Default), options);
    this._popperInstance = this._createPopperInstace();

    this._init();
  }

  popover_createClass(Popover, [{
    key: "_init",
    value: function _init() {
      var _this = this;

      if (this._triggerEl) {
        var triggerEvents = this._getTriggerEvents();

        triggerEvents.showEvents.forEach(function (ev) {
          _this._triggerEl.addEventListener(ev, function () {
            _this.show();
          });

          _this._targetEl.addEventListener(ev, function () {
            _this.show();
          });
        });
        triggerEvents.hideEvents.forEach(function (ev) {
          _this._triggerEl.addEventListener(ev, function () {
            setTimeout(function () {
              if (!_this._targetEl.matches(':hover')) {
                _this.hide();
              }
            }, 100);
          });

          _this._targetEl.addEventListener(ev, function () {
            setTimeout(function () {
              if (!_this._triggerEl.matches(':hover')) {
                _this.hide();
              }
            }, 100);
          });
        });
      }
    }
  }, {
    key: "_createPopperInstace",
    value: function _createPopperInstace() {
      return popper_createPopper(this._triggerEl, this._targetEl, {
        placement: this._options.placement,
        modifiers: [{
          name: 'offset',
          options: {
            offset: [0, this._options.offset]
          }
        }]
      });
    }
  }, {
    key: "_getTriggerEvents",
    value: function _getTriggerEvents() {
      switch (this._options.triggerType) {
        case 'hover':
          return {
            showEvents: ['mouseenter', 'focus'],
            hideEvents: ['mouseleave', 'blur']
          };

        case 'click':
          return {
            showEvents: ['click', 'focus'],
            hideEvents: ['focusout', 'blur']
          };

        default:
          return {
            showEvents: ['mouseenter', 'focus'],
            hideEvents: ['mouseleave', 'blur']
          };
      }
    }
  }, {
    key: "show",
    value: function show() {
      this._targetEl.classList.remove('opacity-0', 'invisible');

      this._targetEl.classList.add('opacity-100', 'visible'); // Enable the event listeners


      this._popperInstance.setOptions(function (options) {
        return popover_objectSpread(popover_objectSpread({}, options), {}, {
          modifiers: [].concat(popover_toConsumableArray(options.modifiers), [{
            name: 'eventListeners',
            enabled: true
          }])
        });
      }); // Update its position


      this._popperInstance.update(); // callback function


      this._options.onShow(this);
    }
  }, {
    key: "hide",
    value: function hide() {
      this._targetEl.classList.remove('opacity-100', 'visible');

      this._targetEl.classList.add('opacity-0', 'invisible'); // Disable the event listeners


      this._popperInstance.setOptions(function (options) {
        return popover_objectSpread(popover_objectSpread({}, options), {}, {
          modifiers: [].concat(popover_toConsumableArray(options.modifiers), [{
            name: 'eventListeners',
            enabled: false
          }])
        });
      }); // callback function


      this._options.onHide(this);
    }
  }]);

  return Popover;
}();

window.Popover = Popover;

function initPopover() {
  document.querySelectorAll('[data-popover-target]').forEach(function (triggerEl) {
    var targetEl = document.getElementById(triggerEl.getAttribute('data-popover-target'));
    var triggerType = triggerEl.getAttribute('data-popover-trigger');
    var placement = triggerEl.getAttribute('data-popover-placement');
    var offset = triggerEl.getAttribute('data-popover-offset');
    new Popover(targetEl, triggerEl, {
      placement: placement ? placement : popover_Default.placement,
      offset: offset ? parseInt(offset) : popover_Default.offset,
      triggerType: triggerType ? triggerType : popover_Default.triggerType
    });
  });
}

if (document.readyState !== 'loading') {
  // DOMContentLoaded event were already fired. Perform explicit initialization now
  initPopover();
} else {
  // DOMContentLoaded event not yet fired, attach initialization process to it
  document.addEventListener('DOMContentLoaded', initPopover);
}

/* harmony default export */ const popover = (Popover);
;// CONCATENATED MODULE: ./src/flowbite.js
 // core components











/* harmony default export */ const flowbite = ({
  Accordion: accordion,
  Collapse: collapse,
  Carousel: carousel,
  Dismiss: dismiss,
  Dropdown: dropdown,
  Modal: modal,
  Drawer: drawer,
  Tabs: tabs,
  Tooltip: tooltip,
  Popover: popover
});
/******/ })()
;
//# sourceMappingURL=flowbite.js.map

/***/ }),

/***/ "./node_modules/hash.js/lib/hash.js":
/*!******************************************!*\
  !*** ./node_modules/hash.js/lib/hash.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var hash = exports;

hash.utils = __webpack_require__(/*! ./hash/utils */ "./node_modules/hash.js/lib/hash/utils.js");
hash.common = __webpack_require__(/*! ./hash/common */ "./node_modules/hash.js/lib/hash/common.js");
hash.sha = __webpack_require__(/*! ./hash/sha */ "./node_modules/hash.js/lib/hash/sha.js");
hash.ripemd = __webpack_require__(/*! ./hash/ripemd */ "./node_modules/hash.js/lib/hash/ripemd.js");
hash.hmac = __webpack_require__(/*! ./hash/hmac */ "./node_modules/hash.js/lib/hash/hmac.js");

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/common.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/common.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/hmac.js":
/*!***********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/hmac.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/ripemd.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/ripemd.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha.js":
/*!**********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.sha1 = __webpack_require__(/*! ./sha/1 */ "./node_modules/hash.js/lib/hash/sha/1.js");
exports.sha224 = __webpack_require__(/*! ./sha/224 */ "./node_modules/hash.js/lib/hash/sha/224.js");
exports.sha256 = __webpack_require__(/*! ./sha/256 */ "./node_modules/hash.js/lib/hash/sha/256.js");
exports.sha384 = __webpack_require__(/*! ./sha/384 */ "./node_modules/hash.js/lib/hash/sha/384.js");
exports.sha512 = __webpack_require__(/*! ./sha/512 */ "./node_modules/hash.js/lib/hash/sha/512.js");


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/1.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/1.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/sha/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/224.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/224.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var SHA256 = __webpack_require__(/*! ./256 */ "./node_modules/hash.js/lib/hash/sha/256.js");

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};



/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/256.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/256.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/sha/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/384.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/384.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");

var SHA512 = __webpack_require__(/*! ./512 */ "./node_modules/hash.js/lib/hash/sha/512.js");

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/512.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/512.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/common.js":
/*!*****************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/common.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/utils.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/utils.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;


/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),

/***/ "./node_modules/js-sha3/src/sha3.js":
/*!******************************************!*\
  !*** ./node_modules/js-sha3/src/sha3.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */
/*jslint bitwise: true */
(function () {
  'use strict';

  var INPUT_ERROR = 'input is invalid type';
  var FINALIZE_ERROR = 'finalize already called';
  var WINDOW = typeof window === 'object';
  var root = WINDOW ? window : {};
  if (root.JS_SHA3_NO_WINDOW) {
    WINDOW = false;
  }
  var WEB_WORKER = !WINDOW && typeof self === 'object';
  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
  if (NODE_JS) {
    root = __webpack_require__.g;
  } else if (WEB_WORKER) {
    root = self;
  }
  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && "object" === 'object' && module.exports;
  var AMD =  true && __webpack_require__.amdO;
  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
  var HEX_CHARS = '0123456789abcdef'.split('');
  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
  var KECCAK_PADDING = [1, 256, 65536, 16777216];
  var PADDING = [6, 1536, 393216, 100663296];
  var SHIFT = [0, 8, 16, 24];
  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,
    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,
    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,
    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,
    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
  var BITS = [224, 256, 384, 512];
  var SHAKE_BITS = [128, 256];
  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];
  var CSHAKE_BYTEPAD = {
    '128': 168,
    '256': 136
  };

  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
    Array.isArray = function (obj) {
      return Object.prototype.toString.call(obj) === '[object Array]';
    };
  }

  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
    ArrayBuffer.isView = function (obj) {
      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
  }

  var createOutputMethod = function (bits, padding, outputType) {
    return function (message) {
      return new Keccak(bits, padding, bits).update(message)[outputType]();
    };
  };

  var createShakeOutputMethod = function (bits, padding, outputType) {
    return function (message, outputBits) {
      return new Keccak(bits, padding, outputBits).update(message)[outputType]();
    };
  };

  var createCshakeOutputMethod = function (bits, padding, outputType) {
    return function (message, outputBits, n, s) {
      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();
    };
  };

  var createKmacOutputMethod = function (bits, padding, outputType) {
    return function (key, message, outputBits, s) {
      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();
    };
  };

  var createOutputMethods = function (method, createMethod, bits, padding) {
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createMethod(bits, padding, type);
    }
    return method;
  };

  var createMethod = function (bits, padding) {
    var method = createOutputMethod(bits, padding, 'hex');
    method.create = function () {
      return new Keccak(bits, padding, bits);
    };
    method.update = function (message) {
      return method.create().update(message);
    };
    return createOutputMethods(method, createOutputMethod, bits, padding);
  };

  var createShakeMethod = function (bits, padding) {
    var method = createShakeOutputMethod(bits, padding, 'hex');
    method.create = function (outputBits) {
      return new Keccak(bits, padding, outputBits);
    };
    method.update = function (message, outputBits) {
      return method.create(outputBits).update(message);
    };
    return createOutputMethods(method, createShakeOutputMethod, bits, padding);
  };

  var createCshakeMethod = function (bits, padding) {
    var w = CSHAKE_BYTEPAD[bits];
    var method = createCshakeOutputMethod(bits, padding, 'hex');
    method.create = function (outputBits, n, s) {
      if (!n && !s) {
        return methods['shake' + bits].create(outputBits);
      } else {
        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);
      }
    };
    method.update = function (message, outputBits, n, s) {
      return method.create(outputBits, n, s).update(message);
    };
    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);
  };

  var createKmacMethod = function (bits, padding) {
    var w = CSHAKE_BYTEPAD[bits];
    var method = createKmacOutputMethod(bits, padding, 'hex');
    method.create = function (key, outputBits, s) {
      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);
    };
    method.update = function (key, message, outputBits, s) {
      return method.create(key, outputBits, s).update(message);
    };
    return createOutputMethods(method, createKmacOutputMethod, bits, padding);
  };

  var algorithms = [
    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },
    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },
    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
  ];

  var methods = {}, methodNames = [];

  for (var i = 0; i < algorithms.length; ++i) {
    var algorithm = algorithms[i];
    var bits = algorithm.bits;
    for (var j = 0; j < bits.length; ++j) {
      var methodName = algorithm.name + '_' + bits[j];
      methodNames.push(methodName);
      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
      if (algorithm.name !== 'sha3') {
        var newMethodName = algorithm.name + bits[j];
        methodNames.push(newMethodName);
        methods[newMethodName] = methods[methodName];
      }
    }
  }

  function Keccak(bits, padding, outputBits) {
    this.blocks = [];
    this.s = [];
    this.padding = padding;
    this.outputBits = outputBits;
    this.reset = true;
    this.finalized = false;
    this.block = 0;
    this.start = 0;
    this.blockCount = (1600 - (bits << 1)) >> 5;
    this.byteCount = this.blockCount << 2;
    this.outputBlocks = outputBits >> 5;
    this.extraBytes = (outputBits & 31) >> 3;

    for (var i = 0; i < 50; ++i) {
      this.s[i] = 0;
    }
  }

  Keccak.prototype.update = function (message) {
    if (this.finalized) {
      throw new Error(FINALIZE_ERROR);
    }
    var notString, type = typeof message;
    if (type !== 'string') {
      if (type === 'object') {
        if (message === null) {
          throw new Error(INPUT_ERROR);
        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        } else if (!Array.isArray(message)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
            throw new Error(INPUT_ERROR);
          }
        }
      } else {
        throw new Error(INPUT_ERROR);
      }
      notString = true;
    }
    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,
      blockCount = this.blockCount, index = 0, s = this.s, i, code;

    while (index < length) {
      if (this.reset) {
        this.reset = false;
        blocks[0] = this.block;
        for (i = 1; i < blockCount + 1; ++i) {
          blocks[i] = 0;
        }
      }
      if (notString) {
        for (i = this.start; index < length && i < byteCount; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = this.start; index < length && i < byteCount; ++index) {
          code = message.charCodeAt(index);
          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          }
        }
      }
      this.lastByteIndex = i;
      if (i >= byteCount) {
        this.start = i - byteCount;
        this.block = blocks[blockCount];
        for (i = 0; i < blockCount; ++i) {
          s[i] ^= blocks[i];
        }
        f(s);
        this.reset = true;
      } else {
        this.start = i;
      }
    }
    return this;
  };

  Keccak.prototype.encode = function (x, right) {
    var o = x & 255, n = 1;
    var bytes = [o];
    x = x >> 8;
    o = x & 255;
    while (o > 0) {
      bytes.unshift(o);
      x = x >> 8;
      o = x & 255;
      ++n;
    }
    if (right) {
      bytes.push(n);
    } else {
      bytes.unshift(n);
    }
    this.update(bytes);
    return bytes.length;
  };

  Keccak.prototype.encodeString = function (str) {
    var notString, type = typeof str;
    if (type !== 'string') {
      if (type === 'object') {
        if (str === null) {
          throw new Error(INPUT_ERROR);
        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
          str = new Uint8Array(str);
        } else if (!Array.isArray(str)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
            throw new Error(INPUT_ERROR);
          }
        }
      } else {
        throw new Error(INPUT_ERROR);
      }
      notString = true;
    }
    var bytes = 0, length = str.length;
    if (notString) {
      bytes = length;
    } else {
      for (var i = 0; i < str.length; ++i) {
        var code = str.charCodeAt(i);
        if (code < 0x80) {
          bytes += 1;
        } else if (code < 0x800) {
          bytes += 2;
        } else if (code < 0xd800 || code >= 0xe000) {
          bytes += 3;
        } else {
          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));
          bytes += 4;
        }
      }
    }
    bytes += this.encode(bytes * 8);
    this.update(str);
    return bytes;
  };

  Keccak.prototype.bytepad = function (strs, w) {
    var bytes = this.encode(w);
    for (var i = 0; i < strs.length; ++i) {
      bytes += this.encodeString(strs[i]);
    }
    var paddingBytes = w - bytes % w;
    var zeros = [];
    zeros.length = paddingBytes;
    this.update(zeros);
    return this;
  };

  Keccak.prototype.finalize = function () {
    if (this.finalized) {
      return;
    }
    this.finalized = true;
    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
    blocks[i >> 2] |= this.padding[i & 3];
    if (this.lastByteIndex === this.byteCount) {
      blocks[0] = blocks[blockCount];
      for (i = 1; i < blockCount + 1; ++i) {
        blocks[i] = 0;
      }
    }
    blocks[blockCount - 1] |= 0x80000000;
    for (i = 0; i < blockCount; ++i) {
      s[i] ^= blocks[i];
    }
    f(s);
  };

  Keccak.prototype.toString = Keccak.prototype.hex = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
      extraBytes = this.extraBytes, i = 0, j = 0;
    var hex = '', block;
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        block = s[i];
        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +
          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +
          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +
          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];
      }
      if (j % blockCount === 0) {
        f(s);
        i = 0;
      }
    }
    if (extraBytes) {
      block = s[i];
      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];
      if (extraBytes > 1) {
        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];
      }
      if (extraBytes > 2) {
        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];
      }
    }
    return hex;
  };

  Keccak.prototype.arrayBuffer = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
      extraBytes = this.extraBytes, i = 0, j = 0;
    var bytes = this.outputBits >> 3;
    var buffer;
    if (extraBytes) {
      buffer = new ArrayBuffer((outputBlocks + 1) << 2);
    } else {
      buffer = new ArrayBuffer(bytes);
    }
    var array = new Uint32Array(buffer);
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        array[j] = s[i];
      }
      if (j % blockCount === 0) {
        f(s);
      }
    }
    if (extraBytes) {
      array[i] = s[i];
      buffer = buffer.slice(0, bytes);
    }
    return buffer;
  };

  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;

  Keccak.prototype.digest = Keccak.prototype.array = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
      extraBytes = this.extraBytes, i = 0, j = 0;
    var array = [], offset, block;
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        offset = j << 2;
        block = s[i];
        array[offset] = block & 0xFF;
        array[offset + 1] = (block >> 8) & 0xFF;
        array[offset + 2] = (block >> 16) & 0xFF;
        array[offset + 3] = (block >> 24) & 0xFF;
      }
      if (j % blockCount === 0) {
        f(s);
      }
    }
    if (extraBytes) {
      offset = j << 2;
      block = s[i];
      array[offset] = block & 0xFF;
      if (extraBytes > 1) {
        array[offset + 1] = (block >> 8) & 0xFF;
      }
      if (extraBytes > 2) {
        array[offset + 2] = (block >> 16) & 0xFF;
      }
    }
    return array;
  };

  function Kmac(bits, padding, outputBits) {
    Keccak.call(this, bits, padding, outputBits);
  }

  Kmac.prototype = new Keccak();

  Kmac.prototype.finalize = function () {
    this.encode(this.outputBits, true);
    return Keccak.prototype.finalize.call(this);
  };

  var f = function (s) {
    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,
      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,
      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,
      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
    for (n = 0; n < 48; n += 2) {
      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];

      h = c8 ^ ((c2 << 1) | (c3 >>> 31));
      l = c9 ^ ((c3 << 1) | (c2 >>> 31));
      s[0] ^= h;
      s[1] ^= l;
      s[10] ^= h;
      s[11] ^= l;
      s[20] ^= h;
      s[21] ^= l;
      s[30] ^= h;
      s[31] ^= l;
      s[40] ^= h;
      s[41] ^= l;
      h = c0 ^ ((c4 << 1) | (c5 >>> 31));
      l = c1 ^ ((c5 << 1) | (c4 >>> 31));
      s[2] ^= h;
      s[3] ^= l;
      s[12] ^= h;
      s[13] ^= l;
      s[22] ^= h;
      s[23] ^= l;
      s[32] ^= h;
      s[33] ^= l;
      s[42] ^= h;
      s[43] ^= l;
      h = c2 ^ ((c6 << 1) | (c7 >>> 31));
      l = c3 ^ ((c7 << 1) | (c6 >>> 31));
      s[4] ^= h;
      s[5] ^= l;
      s[14] ^= h;
      s[15] ^= l;
      s[24] ^= h;
      s[25] ^= l;
      s[34] ^= h;
      s[35] ^= l;
      s[44] ^= h;
      s[45] ^= l;
      h = c4 ^ ((c8 << 1) | (c9 >>> 31));
      l = c5 ^ ((c9 << 1) | (c8 >>> 31));
      s[6] ^= h;
      s[7] ^= l;
      s[16] ^= h;
      s[17] ^= l;
      s[26] ^= h;
      s[27] ^= l;
      s[36] ^= h;
      s[37] ^= l;
      s[46] ^= h;
      s[47] ^= l;
      h = c6 ^ ((c0 << 1) | (c1 >>> 31));
      l = c7 ^ ((c1 << 1) | (c0 >>> 31));
      s[8] ^= h;
      s[9] ^= l;
      s[18] ^= h;
      s[19] ^= l;
      s[28] ^= h;
      s[29] ^= l;
      s[38] ^= h;
      s[39] ^= l;
      s[48] ^= h;
      s[49] ^= l;

      b0 = s[0];
      b1 = s[1];
      b32 = (s[11] << 4) | (s[10] >>> 28);
      b33 = (s[10] << 4) | (s[11] >>> 28);
      b14 = (s[20] << 3) | (s[21] >>> 29);
      b15 = (s[21] << 3) | (s[20] >>> 29);
      b46 = (s[31] << 9) | (s[30] >>> 23);
      b47 = (s[30] << 9) | (s[31] >>> 23);
      b28 = (s[40] << 18) | (s[41] >>> 14);
      b29 = (s[41] << 18) | (s[40] >>> 14);
      b20 = (s[2] << 1) | (s[3] >>> 31);
      b21 = (s[3] << 1) | (s[2] >>> 31);
      b2 = (s[13] << 12) | (s[12] >>> 20);
      b3 = (s[12] << 12) | (s[13] >>> 20);
      b34 = (s[22] << 10) | (s[23] >>> 22);
      b35 = (s[23] << 10) | (s[22] >>> 22);
      b16 = (s[33] << 13) | (s[32] >>> 19);
      b17 = (s[32] << 13) | (s[33] >>> 19);
      b48 = (s[42] << 2) | (s[43] >>> 30);
      b49 = (s[43] << 2) | (s[42] >>> 30);
      b40 = (s[5] << 30) | (s[4] >>> 2);
      b41 = (s[4] << 30) | (s[5] >>> 2);
      b22 = (s[14] << 6) | (s[15] >>> 26);
      b23 = (s[15] << 6) | (s[14] >>> 26);
      b4 = (s[25] << 11) | (s[24] >>> 21);
      b5 = (s[24] << 11) | (s[25] >>> 21);
      b36 = (s[34] << 15) | (s[35] >>> 17);
      b37 = (s[35] << 15) | (s[34] >>> 17);
      b18 = (s[45] << 29) | (s[44] >>> 3);
      b19 = (s[44] << 29) | (s[45] >>> 3);
      b10 = (s[6] << 28) | (s[7] >>> 4);
      b11 = (s[7] << 28) | (s[6] >>> 4);
      b42 = (s[17] << 23) | (s[16] >>> 9);
      b43 = (s[16] << 23) | (s[17] >>> 9);
      b24 = (s[26] << 25) | (s[27] >>> 7);
      b25 = (s[27] << 25) | (s[26] >>> 7);
      b6 = (s[36] << 21) | (s[37] >>> 11);
      b7 = (s[37] << 21) | (s[36] >>> 11);
      b38 = (s[47] << 24) | (s[46] >>> 8);
      b39 = (s[46] << 24) | (s[47] >>> 8);
      b30 = (s[8] << 27) | (s[9] >>> 5);
      b31 = (s[9] << 27) | (s[8] >>> 5);
      b12 = (s[18] << 20) | (s[19] >>> 12);
      b13 = (s[19] << 20) | (s[18] >>> 12);
      b44 = (s[29] << 7) | (s[28] >>> 25);
      b45 = (s[28] << 7) | (s[29] >>> 25);
      b26 = (s[38] << 8) | (s[39] >>> 24);
      b27 = (s[39] << 8) | (s[38] >>> 24);
      b8 = (s[48] << 14) | (s[49] >>> 18);
      b9 = (s[49] << 14) | (s[48] >>> 18);

      s[0] = b0 ^ (~b2 & b4);
      s[1] = b1 ^ (~b3 & b5);
      s[10] = b10 ^ (~b12 & b14);
      s[11] = b11 ^ (~b13 & b15);
      s[20] = b20 ^ (~b22 & b24);
      s[21] = b21 ^ (~b23 & b25);
      s[30] = b30 ^ (~b32 & b34);
      s[31] = b31 ^ (~b33 & b35);
      s[40] = b40 ^ (~b42 & b44);
      s[41] = b41 ^ (~b43 & b45);
      s[2] = b2 ^ (~b4 & b6);
      s[3] = b3 ^ (~b5 & b7);
      s[12] = b12 ^ (~b14 & b16);
      s[13] = b13 ^ (~b15 & b17);
      s[22] = b22 ^ (~b24 & b26);
      s[23] = b23 ^ (~b25 & b27);
      s[32] = b32 ^ (~b34 & b36);
      s[33] = b33 ^ (~b35 & b37);
      s[42] = b42 ^ (~b44 & b46);
      s[43] = b43 ^ (~b45 & b47);
      s[4] = b4 ^ (~b6 & b8);
      s[5] = b5 ^ (~b7 & b9);
      s[14] = b14 ^ (~b16 & b18);
      s[15] = b15 ^ (~b17 & b19);
      s[24] = b24 ^ (~b26 & b28);
      s[25] = b25 ^ (~b27 & b29);
      s[34] = b34 ^ (~b36 & b38);
      s[35] = b35 ^ (~b37 & b39);
      s[44] = b44 ^ (~b46 & b48);
      s[45] = b45 ^ (~b47 & b49);
      s[6] = b6 ^ (~b8 & b0);
      s[7] = b7 ^ (~b9 & b1);
      s[16] = b16 ^ (~b18 & b10);
      s[17] = b17 ^ (~b19 & b11);
      s[26] = b26 ^ (~b28 & b20);
      s[27] = b27 ^ (~b29 & b21);
      s[36] = b36 ^ (~b38 & b30);
      s[37] = b37 ^ (~b39 & b31);
      s[46] = b46 ^ (~b48 & b40);
      s[47] = b47 ^ (~b49 & b41);
      s[8] = b8 ^ (~b0 & b2);
      s[9] = b9 ^ (~b1 & b3);
      s[18] = b18 ^ (~b10 & b12);
      s[19] = b19 ^ (~b11 & b13);
      s[28] = b28 ^ (~b20 & b22);
      s[29] = b29 ^ (~b21 & b23);
      s[38] = b38 ^ (~b30 & b32);
      s[39] = b39 ^ (~b31 & b33);
      s[48] = b48 ^ (~b40 & b42);
      s[49] = b49 ^ (~b41 & b43);

      s[0] ^= RC[n];
      s[1] ^= RC[n + 1];
    }
  };

  if (COMMON_JS) {
    module.exports = methods;
  } else {
    for (i = 0; i < methodNames.length; ++i) {
      root[methodNames[i]] = methods[methodNames[i]];
    }
    if (AMD) {
      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
        return methods;
      }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    }
  }
})();


/***/ }),

/***/ "./resources/css/app.css":
/*!*******************************!*\
  !*** ./resources/css/app.css ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/minimalistic-assert/index.js":
/*!***************************************************!*\
  !*** ./node_modules/minimalistic-assert/index.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/scrypt-js/scrypt.js":
/*!******************************************!*\
  !*** ./node_modules/scrypt-js/scrypt.js ***!
  \******************************************/
/***/ (function(module) {

"use strict";


(function(root) {
    const MAX_VALUE = 0x7fffffff;

    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:
    // See: https://github.com/dchest/scrypt-async-js
    function SHA256(m) {
        const K = new Uint32Array([
           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,
           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,
           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,
           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,
           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,
           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,
           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
       ]);

        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;
        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;
        const w = new Uint32Array(64);

        function blocks(p) {
            let off = 0, len = p.length;
            while (len >= 64) {
                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;

                for (i = 0; i < 16; i++) {
                    j = off + i*4;
                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |
                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);
                }

                for (i = 16; i < 64; i++) {
                    u = w[i-2];
                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);

                    u = w[i-15];
                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);

                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;
                }

                for (i = 0; i < 64; i++) {
                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^
                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +
                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;

                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^
                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;

                    h = g;
                    g = f;
                    f = e;
                    e = (d + t1) | 0;
                    d = c;
                    c = b;
                    b = a;
                    a = (t1 + t2) | 0;
                }

                h0 = (h0 + a) | 0;
                h1 = (h1 + b) | 0;
                h2 = (h2 + c) | 0;
                h3 = (h3 + d) | 0;
                h4 = (h4 + e) | 0;
                h5 = (h5 + f) | 0;
                h6 = (h6 + g) | 0;
                h7 = (h7 + h) | 0;

                off += 64;
                len -= 64;
            }
        }

        blocks(m);

        let i, bytesLeft = m.length % 64,
        bitLenHi = (m.length / 0x20000000) | 0,
        bitLenLo = m.length << 3,
        numZeros = (bytesLeft < 56) ? 56 : 120,
        p = m.slice(m.length - bytesLeft, m.length);

        p.push(0x80);
        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }
        p.push((bitLenHi >>> 24) & 0xff);
        p.push((bitLenHi >>> 16) & 0xff);
        p.push((bitLenHi >>> 8)  & 0xff);
        p.push((bitLenHi >>> 0)  & 0xff);
        p.push((bitLenLo >>> 24) & 0xff);
        p.push((bitLenLo >>> 16) & 0xff);
        p.push((bitLenLo >>> 8)  & 0xff);
        p.push((bitLenLo >>> 0)  & 0xff);

        blocks(p);

        return [
            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,
            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,
            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,
            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,
            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,
            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,
            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,
            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff
        ];
    }

    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {
        // compress password if it's longer than hash block length
        password = (password.length <= 64) ? password : SHA256(password);

        const innerLen = 64 + salt.length + 4;
        const inner = new Array(innerLen);
        const outerKey = new Array(64);

        let i;
        let dk = [];

        // inner = (password ^ ipad) || salt || counter
        for (i = 0; i < 64; i++) { inner[i] = 0x36; }
        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }
        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }
        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }

        // outerKey = password ^ opad
        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;
        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];

        // increments counter inside inner
        function incrementCounter() {
            for (let i = innerLen - 1; i >= innerLen - 4; i--) {
                inner[i]++;
                if (inner[i] <= 0xff) return;
                inner[i] = 0;
            }
        }

        // output blocks = SHA256(outerKey || SHA256(inner)) ...
        while (dkLen >= 32) {
            incrementCounter();
            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));
            dkLen -= 32;
        }
        if (dkLen > 0) {
            incrementCounter();
            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));
        }

        return dk;
    }

    // The following is an adaptation of scryptsy
    // See: https://www.npmjs.com/package/scryptsy
    function blockmix_salsa8(BY, Yi, r, x, _X) {
        let i;

        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);
        for (i = 0; i < 2 * r; i++) {
            blockxor(BY, i * 16, _X, 16);
            salsa20_8(_X, x);
            arraycopy(_X, 0, BY, Yi + (i * 16), 16);
        }

        for (i = 0; i < r; i++) {
            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);
        }

        for (i = 0; i < r; i++) {
            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);
        }
    }

    function R(a, b) {
        return (a << b) | (a >>> (32 - b));
    }

    function salsa20_8(B, x) {
        arraycopy(B, 0, x, 0, 16);

        for (let i = 8; i > 0; i -= 2) {
            x[ 4] ^= R(x[ 0] + x[12], 7);
            x[ 8] ^= R(x[ 4] + x[ 0], 9);
            x[12] ^= R(x[ 8] + x[ 4], 13);
            x[ 0] ^= R(x[12] + x[ 8], 18);
            x[ 9] ^= R(x[ 5] + x[ 1], 7);
            x[13] ^= R(x[ 9] + x[ 5], 9);
            x[ 1] ^= R(x[13] + x[ 9], 13);
            x[ 5] ^= R(x[ 1] + x[13], 18);
            x[14] ^= R(x[10] + x[ 6], 7);
            x[ 2] ^= R(x[14] + x[10], 9);
            x[ 6] ^= R(x[ 2] + x[14], 13);
            x[10] ^= R(x[ 6] + x[ 2], 18);
            x[ 3] ^= R(x[15] + x[11], 7);
            x[ 7] ^= R(x[ 3] + x[15], 9);
            x[11] ^= R(x[ 7] + x[ 3], 13);
            x[15] ^= R(x[11] + x[ 7], 18);
            x[ 1] ^= R(x[ 0] + x[ 3], 7);
            x[ 2] ^= R(x[ 1] + x[ 0], 9);
            x[ 3] ^= R(x[ 2] + x[ 1], 13);
            x[ 0] ^= R(x[ 3] + x[ 2], 18);
            x[ 6] ^= R(x[ 5] + x[ 4], 7);
            x[ 7] ^= R(x[ 6] + x[ 5], 9);
            x[ 4] ^= R(x[ 7] + x[ 6], 13);
            x[ 5] ^= R(x[ 4] + x[ 7], 18);
            x[11] ^= R(x[10] + x[ 9], 7);
            x[ 8] ^= R(x[11] + x[10], 9);
            x[ 9] ^= R(x[ 8] + x[11], 13);
            x[10] ^= R(x[ 9] + x[ 8], 18);
            x[12] ^= R(x[15] + x[14], 7);
            x[13] ^= R(x[12] + x[15], 9);
            x[14] ^= R(x[13] + x[12], 13);
            x[15] ^= R(x[14] + x[13], 18);
        }

        for (let i = 0; i < 16; ++i) {
            B[i] += x[i];
        }
    }

    // naive approach... going back to loop unrolling may yield additional performance
    function blockxor(S, Si, D, len) {
        for (let i = 0; i < len; i++) {
            D[i] ^= S[Si + i]
        }
    }

    function arraycopy(src, srcPos, dest, destPos, length) {
        while (length--) {
            dest[destPos++] = src[srcPos++];
        }
    }

    function checkBufferish(o) {
        if (!o || typeof(o.length) !== 'number') { return false; }

        for (let i = 0; i < o.length; i++) {
            const v = o[i];
            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {
                return false;
            }
        }

        return true;
    }

    function ensureInteger(value, name) {
        if (typeof(value) !== "number" || (value % 1)) { throw new Error('invalid ' + name); }
        return value;
    }

    // N = Cpu cost, r = Memory cost, p = parallelization cost
    // callback(error, progress, key)
    function _scrypt(password, salt, N, r, p, dkLen, callback) {

        N = ensureInteger(N, 'N');
        r = ensureInteger(r, 'r');
        p = ensureInteger(p, 'p');

        dkLen = ensureInteger(dkLen, 'dkLen');

        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }

        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }
        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }

        if (!checkBufferish(password)) {
            throw new Error('password must be an array or buffer');
        }
        password = Array.prototype.slice.call(password);

        if (!checkBufferish(salt)) {
            throw new Error('salt must be an array or buffer');
        }
        salt = Array.prototype.slice.call(salt);

        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);
        const B = new Uint32Array(p * 32 * r)
        for (let i = 0; i < B.length; i++) {
            const j = i * 4;
            B[i] = ((b[j + 3] & 0xff) << 24) |
                   ((b[j + 2] & 0xff) << 16) |
                   ((b[j + 1] & 0xff) << 8) |
                   ((b[j + 0] & 0xff) << 0);
        }

        const XY = new Uint32Array(64 * r);
        const V = new Uint32Array(32 * r * N);

        const Yi = 32 * r;

        // scratch space
        const x = new Uint32Array(16);       // salsa20_8
        const _X = new Uint32Array(16);      // blockmix_salsa8

        const totalOps = p * N * 2;
        let currentOp = 0;
        let lastPercent10 = null;

        // Set this to true to abandon the scrypt on the next step
        let stop = false;

        // State information
        let state = 0;
        let i0 = 0, i1;
        let Bi;

        // How many blockmix_salsa8 can we do per step?
        const limit = callback ? parseInt(1000 / r): 0xffffffff;

        // Trick from scrypt-async; if there is a setImmediate shim in place, use it
        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;

        // This is really all I changed; making scryptsy a state machine so we occasionally
        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo
        const incrementalSMix = function() {
            if (stop) {
                return callback(new Error('cancelled'), currentOp / totalOps);
            }

            let steps;

            switch (state) {
                case 0:
                    // for (var i = 0; i < p; i++)...
                    Bi = i0 * 32 * r;

                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1

                    state = 1;                                         // Move to ROMix 2
                    i1 = 0;

                    // Fall through

                case 1:

                    // Run up to 1000 steps of the first inner smix loop
                    steps = N - i1;
                    if (steps > limit) { steps = limit; }
                    for (let i = 0; i < steps; i++) {                  // ROMix - 2
                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3
                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4
                    }

                    // for (var i = 0; i < N; i++)
                    i1 += steps;
                    currentOp += steps;

                    if (callback) {
                        // Call the callback with the progress (optionally stopping us)
                        const percent10 = parseInt(1000 * currentOp / totalOps);
                        if (percent10 !== lastPercent10) {
                            stop = callback(null, currentOp / totalOps);
                            if (stop) { break; }
                            lastPercent10 = percent10;
                        }
                    }

                    if (i1 < N) { break; }

                    i1 = 0;                                          // Move to ROMix 6
                    state = 2;

                    // Fall through

                case 2:

                    // Run up to 1000 steps of the second inner smix loop
                    steps = N - i1;
                    if (steps > limit) { steps = limit; }
                    for (let i = 0; i < steps; i++) {                // ROMix - 6
                        const offset = (2 * r - 1) * 16;             // ROMix - 7
                        const j = XY[offset] & (N - 1);
                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)
                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)
                    }

                    // for (var i = 0; i < N; i++)...
                    i1 += steps;
                    currentOp += steps;

                    // Call the callback with the progress (optionally stopping us)
                    if (callback) {
                        const percent10 = parseInt(1000 * currentOp / totalOps);
                        if (percent10 !== lastPercent10) {
                            stop = callback(null, currentOp / totalOps);
                            if (stop) { break; }
                            lastPercent10 = percent10;
                        }
                    }

                    if (i1 < N) { break; }

                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10

                    // for (var i = 0; i < p; i++)...
                    i0++;
                    if (i0 < p) {
                        state = 0;
                        break;
                    }

                    b = [];
                    for (let i = 0; i < B.length; i++) {
                        b.push((B[i] >>  0) & 0xff);
                        b.push((B[i] >>  8) & 0xff);
                        b.push((B[i] >> 16) & 0xff);
                        b.push((B[i] >> 24) & 0xff);
                    }

                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);

                    // Send the result to the callback
                    if (callback) { callback(null, 1.0, derivedKey); }

                    // Done; don't break (which would reschedule)
                    return derivedKey;
            }

            // Schedule the next steps
            if (callback) { nextTick(incrementalSMix); }
        }

        // Run the smix state machine until completion
        if (!callback) {
            while (true) {
                const derivedKey = incrementalSMix();
                if (derivedKey != undefined) { return derivedKey; }
            }
        }

        // Bootstrap the async incremental smix
        incrementalSMix();
    }

    const lib = {
        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {
            return new Promise(function(resolve, reject) {
                let lastProgress = 0;
                if (progressCallback) { progressCallback(0); }
                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {
                    if (error) {
                        reject(error);
                    } else if (key) {
                        if (progressCallback && lastProgress !== 1) {
                            progressCallback(1);
                        }
                        resolve(new Uint8Array(key));
                    } else if (progressCallback && progress !== lastProgress) {
                        lastProgress = progress;
                        return progressCallback(progress);
                    }
                });
            });
        },
        syncScrypt: function(password, salt, N, r, p, dkLen) {
            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));
        }
    };

    // node.js
    if (true) {
       module.exports = lib;

    // RequireJS/AMD
    // http://www.requirejs.org/docs/api.html
    // https://github.com/amdjs/amdjs-api/wiki/AMD
    } else {}

})(this);


/***/ }),

/***/ "?f4e8":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "./build/contracts/Driver.json":
/*!*************************************!*\
  !*** ./build/contracts/Driver.json ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"Driver","abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"uint256","name":"NID","type":"uint256"},{"internalType":"uint256","name":"_licenseNo","type":"uint256"},{"internalType":"uint256","name":"issue_date","type":"uint256"},{"internalType":"uint256","name":"exp_date","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"changeName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_score","type":"uint16"}],"name":"updateScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_lic_exp_date","type":"uint256"}],"name":"updateExpDate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLicNo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLicIssueDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLicExpDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getScore","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllInfo","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.17+commit.8df45f5f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"_name\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"NID\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_licenseNo\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"issue_date\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"exp_date\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"_name\\",\\"type\\":\\"string\\"}],\\"name\\":\\"changeName\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getAllInfo\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint16\\",\\"name\\":\\"\\",\\"type\\":\\"uint16\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getLicExpDate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getLicIssueDate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getLicNo\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getNID\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getName\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getScore\\",\\"outputs\\":[{\\"internalType\\":\\"uint16\\",\\"name\\":\\"\\",\\"type\\":\\"uint16\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_lic_exp_date\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"updateExpDate\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint16\\",\\"name\\":\\"_score\\",\\"type\\":\\"uint16\\"}],\\"name\\":\\"updateScore\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/Driver.sol\\":\\"Driver\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"project:/contracts/Driver.sol\\":{\\"keccak256\\":\\"0xd834e84490164126a83e6c546c7c6fbaad7497ade42fd3a2868c9427355832af\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://3b860d27562e3b6930cfa3110dc1c62d5f8b746076ee50eb550b67ccb0ecedd8\\",\\"dweb:/ipfs/QmePFKHAjMUWnnU9x9WYTXxRZaWb7R1HxNbAbM4m5nchtd\\"]}},\\"version\\":1}","bytecode":"","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063afd8206711610066578063afd8206714610135578063b18e15bd14610153578063d8c4661c14610176578063e90bf00f14610194578063f92973c2146101b25761009e565b806317d7de7c146100a357806317fd2967146100c15780631f810d0e146100dd5780635353a2d8146100fb5780638c64b1f214610117575b600080fd5b6100ab6101ce565b6040516100b891906104e9565b60405180910390f35b6100db60048036038101906100d69190610559565b610260565b005b6100e5610280565b6040516100f2919061059f565b60405180910390f35b610115600480360381019061011091906106ef565b6102a8565b005b61011f6102bb565b60405161012c919061059f565b60405180910390f35b61013d6102c5565b60405161014a9190610747565b60405180910390f35b61015b6102dd565b60405161016d96959493929190610762565b60405180910390f35b61017e6103ff565b60405161018b919061059f565b60405180910390f35b61019c610427565b6040516101a9919061059f565b60405180910390f35b6101cc60048036038101906101c791906107f6565b61044f565b005b6060600080546101dd90610852565b80601f016020809104026020016040519081016040528092919081815260200182805461020990610852565b80156102565780601f1061022b57610100808354040283529160200191610256565b820191906000526020600020905b81548152906001019060200180831161023957829003601f168201915b5050505050905090565b80600260006101000a81548161ffff021916908361ffff16021790555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b80600090816102b79190610a2f565b5050565b6000600154905090565b6000600260009054906101000a900461ffff16905090565b60606000806000806000807f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000600154600260009054906101000a900461ffff1685805461036b90610852565b80601f016020809104026020016040519081016040528092919081815260200182805461039790610852565b80156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b50505050509550955095509550955095509550909192939495565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b8060018190555050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610493578082015181840152602081019050610478565b60008484015250505050565b6000601f19601f8301169050919050565b60006104bb82610459565b6104c58185610464565b93506104d5818560208601610475565b6104de8161049f565b840191505092915050565b6000602082019050818103600083015261050381846104b0565b905092915050565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6105368161051f565b811461054157600080fd5b50565b6000813590506105538161052d565b92915050565b60006020828403121561056f5761056e610515565b5b600061057d84828501610544565b91505092915050565b6000819050919050565b61059981610586565b82525050565b60006020820190506105b46000830184610590565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105fc8261049f565b810181811067ffffffffffffffff8211171561061b5761061a6105c4565b5b80604052505050565b600061062e61050b565b905061063a82826105f3565b919050565b600067ffffffffffffffff82111561065a576106596105c4565b5b6106638261049f565b9050602081019050919050565b82818337600083830152505050565b600061069261068d8461063f565b610624565b9050828152602081018484840111156106ae576106ad6105bf565b5b6106b9848285610670565b509392505050565b600082601f8301126106d6576106d56105ba565b5b81356106e684826020860161067f565b91505092915050565b60006020828403121561070557610704610515565b5b600082013567ffffffffffffffff8111156107235761072261051a565b5b61072f848285016106c1565b91505092915050565b6107418161051f565b82525050565b600060208201905061075c6000830184610738565b92915050565b600060c082019050818103600083015261077c81896104b0565b905061078b6020830188610590565b6107986040830187610590565b6107a56060830186610590565b6107b26080830185610590565b6107bf60a0830184610738565b979650505050505050565b6107d381610586565b81146107de57600080fd5b50565b6000813590506107f0816107ca565b92915050565b60006020828403121561080c5761080b610515565b5b600061081a848285016107e1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061086a57607f821691505b60208210810361087d5761087c610823565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108e57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108a8565b6108ef86836108a8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061092c61092761092284610586565b610907565b610586565b9050919050565b6000819050919050565b61094683610911565b61095a61095282610933565b8484546108b5565b825550505050565b600090565b61096f610962565b61097a81848461093d565b505050565b5b8181101561099e57610993600082610967565b600181019050610980565b5050565b601f8211156109e3576109b481610883565b6109bd84610898565b810160208510156109cc578190505b6109e06109d885610898565b83018261097f565b50505b505050565b600082821c905092915050565b6000610a06600019846008026109e8565b1980831691505092915050565b6000610a1f83836109f5565b9150826002028217905092915050565b610a3882610459565b67ffffffffffffffff811115610a5157610a506105c4565b5b610a5b8254610852565b610a668282856109a2565b600060209050601f831160018114610a995760008415610a87578287015190505b610a918582610a13565b865550610af9565b601f198416610aa786610883565b60005b82811015610acf57848901518255600182019150602085019450602081019050610aaa565b86831015610aec5784890151610ae8601f8916826109f5565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220ee21ad9613442649cc538caa5b969e0ce81c0dc44e42e5a167f56244a3c4fe4f64736f6c63430008110033","immutableReferences":{"682":[{"length":32,"start":644},{"length":32,"start":779}],"684":[{"length":32,"start":746},{"length":32,"start":1027}],"686":[{"length":32,"start":812},{"length":32,"start":1067}]},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9148:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"423:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:12:17"},"nodeType":"YulExpressionStatement","src":"433:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:17"},{"body":{"nodeType":"YulBlock","src":"546:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:17"},"nodeType":"YulFunctionCall","src":"556:12:17"},"nodeType":"YulExpressionStatement","src":"556:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:17"},{"body":{"nodeType":"YulBlock","src":"628:54:17","statements":[{"nodeType":"YulAssignment","src":"638:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:17"},"nodeType":"YulFunctionCall","src":"652:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:17"},"nodeType":"YulFunctionCall","src":"648:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:17","type":""}],"src":"580:102:17"},{"body":{"nodeType":"YulBlock","src":"716:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:17"},"nodeType":"YulFunctionCall","src":"726:88:17"},"nodeType":"YulExpressionStatement","src":"726:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:17"},"nodeType":"YulFunctionCall","src":"823:15:17"},"nodeType":"YulExpressionStatement","src":"823:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:17"},"nodeType":"YulFunctionCall","src":"847:15:17"},"nodeType":"YulExpressionStatement","src":"847:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:17"},{"body":{"nodeType":"YulBlock","src":"917:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:17"},"nodeType":"YulFunctionCall","src":"957:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:17"},"nodeType":"YulFunctionCall","src":"945:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:17"},"nodeType":"YulFunctionCall","src":"1098:18:17"},"nodeType":"YulExpressionStatement","src":"1098:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:17"},"nodeType":"YulFunctionCall","src":"1036:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:17"},"nodeType":"YulFunctionCall","src":"1072:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:17"},"nodeType":"YulFunctionCall","src":"1033:62:17"},"nodeType":"YulIf","src":"1030:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:17"},"nodeType":"YulFunctionCall","src":"1127:22:17"},"nodeType":"YulExpressionStatement","src":"1127:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:17","type":""}],"src":"874:281:17"},{"body":{"nodeType":"YulBlock","src":"1202:88:17","statements":[{"nodeType":"YulAssignment","src":"1212:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:17"},"nodeType":"YulFunctionCall","src":"1222:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:17"},"nodeType":"YulFunctionCall","src":"1251:33:17"},"nodeType":"YulExpressionStatement","src":"1251:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:17","type":""}],"src":"1161:129:17"},{"body":{"nodeType":"YulBlock","src":"1363:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:17"},"nodeType":"YulFunctionCall","src":"1470:18:17"},"nodeType":"YulExpressionStatement","src":"1470:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:17"},"nodeType":"YulFunctionCall","src":"1437:30:17"},"nodeType":"YulIf","src":"1434:56:17"},{"nodeType":"YulAssignment","src":"1500:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:17"},"nodeType":"YulFunctionCall","src":"1508:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:17"}]},{"nodeType":"YulAssignment","src":"1574:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:17"},"nodeType":"YulFunctionCall","src":"1582:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:17","type":""}],"src":"1296:308:17"},{"body":{"nodeType":"YulBlock","src":"1672:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:17"},"nodeType":"YulFunctionCall","src":"1772:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:17"},"nodeType":"YulFunctionCall","src":"1791:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:17"},"nodeType":"YulFunctionCall","src":"1785:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:17"},"nodeType":"YulFunctionCall","src":"1765:39:17"},"nodeType":"YulExpressionStatement","src":"1765:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:17"},"nodeType":"YulFunctionCall","src":"1709:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:17","statements":[{"nodeType":"YulAssignment","src":"1725:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:17"},"nodeType":"YulFunctionCall","src":"1730:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:17","statements":[]},"src":"1701:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:17"},"nodeType":"YulFunctionCall","src":"1830:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:17"},"nodeType":"YulFunctionCall","src":"1823:27:17"},"nodeType":"YulExpressionStatement","src":"1823:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:17","type":""}],"src":"1610:246:17"},{"body":{"nodeType":"YulBlock","src":"1957:339:17","statements":[{"nodeType":"YulAssignment","src":"1967:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:17"},"nodeType":"YulFunctionCall","src":"1992:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:17"},"nodeType":"YulFunctionCall","src":"1976:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:17"},"nodeType":"YulFunctionCall","src":"2051:21:17"},"nodeType":"YulExpressionStatement","src":"2051:21:17"},{"nodeType":"YulVariableDeclaration","src":"2081:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:17"},"nodeType":"YulFunctionCall","src":"2092:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:17"},"nodeType":"YulFunctionCall","src":"2148:79:17"},"nodeType":"YulExpressionStatement","src":"2148:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:17"},"nodeType":"YulFunctionCall","src":"2123:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:17"},"nodeType":"YulFunctionCall","src":"2120:25:17"},"nodeType":"YulIf","src":"2117:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:17"},"nodeType":"YulFunctionCall","src":"2238:52:17"},"nodeType":"YulExpressionStatement","src":"2238:52:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:17","type":""}],"src":"1862:434:17"},{"body":{"nodeType":"YulBlock","src":"2389:282:17","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:17"},"nodeType":"YulFunctionCall","src":"2440:79:17"},"nodeType":"YulExpressionStatement","src":"2440:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:17"},"nodeType":"YulFunctionCall","src":"2413:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:17"},"nodeType":"YulFunctionCall","src":"2409:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:17"},"nodeType":"YulFunctionCall","src":"2402:35:17"},"nodeType":"YulIf","src":"2399:122:17"},{"nodeType":"YulVariableDeclaration","src":"2530:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:17"},"nodeType":"YulFunctionCall","src":"2544:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:17"},"nodeType":"YulFunctionCall","src":"2634:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:17"},"nodeType":"YulFunctionCall","src":"2575:90:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:17","type":""}],"src":"2316:355:17"},{"body":{"nodeType":"YulBlock","src":"2722:32:17","statements":[{"nodeType":"YulAssignment","src":"2732:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2743:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2732:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2704:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2714:7:17","type":""}],"src":"2677:77:17"},{"body":{"nodeType":"YulBlock","src":"2803:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2860:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2869:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2872:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2862:6:17"},"nodeType":"YulFunctionCall","src":"2862:12:17"},"nodeType":"YulExpressionStatement","src":"2862:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2826:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2851:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2833:17:17"},"nodeType":"YulFunctionCall","src":"2833:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2823:2:17"},"nodeType":"YulFunctionCall","src":"2823:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2816:6:17"},"nodeType":"YulFunctionCall","src":"2816:43:17"},"nodeType":"YulIf","src":"2813:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2796:5:17","type":""}],"src":"2760:122:17"},{"body":{"nodeType":"YulBlock","src":"2951:80:17","statements":[{"nodeType":"YulAssignment","src":"2961:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2976:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2970:5:17"},"nodeType":"YulFunctionCall","src":"2970:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2961:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3019:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2992:26:17"},"nodeType":"YulFunctionCall","src":"2992:33:17"},"nodeType":"YulExpressionStatement","src":"2992:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2929:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2937:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2945:5:17","type":""}],"src":"2888:143:17"},{"body":{"nodeType":"YulBlock","src":"3192:995:17","statements":[{"body":{"nodeType":"YulBlock","src":"3239:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3241:77:17"},"nodeType":"YulFunctionCall","src":"3241:79:17"},"nodeType":"YulExpressionStatement","src":"3241:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3213:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3222:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3209:3:17"},"nodeType":"YulFunctionCall","src":"3209:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3234:3:17","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3205:3:17"},"nodeType":"YulFunctionCall","src":"3205:33:17"},"nodeType":"YulIf","src":"3202:120:17"},{"nodeType":"YulBlock","src":"3332:291:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3371:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3382:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3367:3:17"},"nodeType":"YulFunctionCall","src":"3367:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3361:5:17"},"nodeType":"YulFunctionCall","src":"3361:24:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3432:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3434:77:17"},"nodeType":"YulFunctionCall","src":"3434:79:17"},"nodeType":"YulExpressionStatement","src":"3434:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3404:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3412:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3401:2:17"},"nodeType":"YulFunctionCall","src":"3401:30:17"},"nodeType":"YulIf","src":"3398:117:17"},{"nodeType":"YulAssignment","src":"3529:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3585:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3596:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3581:3:17"},"nodeType":"YulFunctionCall","src":"3581:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3605:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3539:41:17"},"nodeType":"YulFunctionCall","src":"3539:74:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3529:6:17"}]}]},{"nodeType":"YulBlock","src":"3633:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3648:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3662:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3652:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3678:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3724:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3735:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3720:3:17"},"nodeType":"YulFunctionCall","src":"3720:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3744:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3688:31:17"},"nodeType":"YulFunctionCall","src":"3688:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3678:6:17"}]}]},{"nodeType":"YulBlock","src":"3772:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3787:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3801:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3791:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3817:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3863:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3874:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3859:3:17"},"nodeType":"YulFunctionCall","src":"3859:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3883:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3827:31:17"},"nodeType":"YulFunctionCall","src":"3827:64:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3817:6:17"}]}]},{"nodeType":"YulBlock","src":"3911:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3926:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3940:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3930:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3956:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4002:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4013:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:17"},"nodeType":"YulFunctionCall","src":"3998:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4022:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3966:31:17"},"nodeType":"YulFunctionCall","src":"3966:64:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3956:6:17"}]}]},{"nodeType":"YulBlock","src":"4050:130:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4065:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4079:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4069:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4096:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4142:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4153:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4138:3:17"},"nodeType":"YulFunctionCall","src":"4138:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4162:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4106:31:17"},"nodeType":"YulFunctionCall","src":"4106:64:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4096:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3130:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3141:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3153:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3161:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3169:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3177:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3185:6:17","type":""}],"src":"3037:1150:17"},{"body":{"nodeType":"YulBlock","src":"4252:40:17","statements":[{"nodeType":"YulAssignment","src":"4263:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4279:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4273:5:17"},"nodeType":"YulFunctionCall","src":"4273:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4263:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4235:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4245:6:17","type":""}],"src":"4193:99:17"},{"body":{"nodeType":"YulBlock","src":"4326:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4343:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4346:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4336:6:17"},"nodeType":"YulFunctionCall","src":"4336:88:17"},"nodeType":"YulExpressionStatement","src":"4336:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4440:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4443:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4433:6:17"},"nodeType":"YulFunctionCall","src":"4433:15:17"},"nodeType":"YulExpressionStatement","src":"4433:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4464:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4467:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4457:6:17"},"nodeType":"YulFunctionCall","src":"4457:15:17"},"nodeType":"YulExpressionStatement","src":"4457:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4298:180:17"},{"body":{"nodeType":"YulBlock","src":"4535:269:17","statements":[{"nodeType":"YulAssignment","src":"4545:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4559:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"4565:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4555:3:17"},"nodeType":"YulFunctionCall","src":"4555:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4545:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"4576:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4606:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"4612:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4602:3:17"},"nodeType":"YulFunctionCall","src":"4602:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4580:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4653:51:17","statements":[{"nodeType":"YulAssignment","src":"4667:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4681:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4689:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4677:3:17"},"nodeType":"YulFunctionCall","src":"4677:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4667:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4633:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4626:6:17"},"nodeType":"YulFunctionCall","src":"4626:26:17"},"nodeType":"YulIf","src":"4623:81:17"},{"body":{"nodeType":"YulBlock","src":"4756:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4770:16:17"},"nodeType":"YulFunctionCall","src":"4770:18:17"},"nodeType":"YulExpressionStatement","src":"4770:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4720:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4743:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4751:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4740:2:17"},"nodeType":"YulFunctionCall","src":"4740:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4717:2:17"},"nodeType":"YulFunctionCall","src":"4717:38:17"},"nodeType":"YulIf","src":"4714:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4519:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4528:6:17","type":""}],"src":"4484:320:17"},{"body":{"nodeType":"YulBlock","src":"4864:87:17","statements":[{"nodeType":"YulAssignment","src":"4874:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4882:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4874:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4902:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4905:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4895:6:17"},"nodeType":"YulFunctionCall","src":"4895:14:17"},"nodeType":"YulExpressionStatement","src":"4895:14:17"},{"nodeType":"YulAssignment","src":"4918:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4936:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4939:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4926:9:17"},"nodeType":"YulFunctionCall","src":"4926:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4918:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4851:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4859:4:17","type":""}],"src":"4810:141:17"},{"body":{"nodeType":"YulBlock","src":"5001:49:17","statements":[{"nodeType":"YulAssignment","src":"5011:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5029:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5036:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5025:3:17"},"nodeType":"YulFunctionCall","src":"5025:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"5041:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5021:3:17"},"nodeType":"YulFunctionCall","src":"5021:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5011:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4984:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4994:6:17","type":""}],"src":"4957:93:17"},{"body":{"nodeType":"YulBlock","src":"5109:54:17","statements":[{"nodeType":"YulAssignment","src":"5119:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5144:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"5150:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5140:3:17"},"nodeType":"YulFunctionCall","src":"5140:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5119:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5084:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"5090:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5100:8:17","type":""}],"src":"5056:107:17"},{"body":{"nodeType":"YulBlock","src":"5245:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5255:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"5276:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"5288:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5272:3:17"},"nodeType":"YulFunctionCall","src":"5272:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"5259:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5299:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5330:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5341:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5311:18:17"},"nodeType":"YulFunctionCall","src":"5311:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5303:4:17","type":""}]},{"nodeType":"YulAssignment","src":"5417:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5448:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5459:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5429:18:17"},"nodeType":"YulFunctionCall","src":"5429:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5417:8:17"}]},{"nodeType":"YulAssignment","src":"5477:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5490:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5501:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5497:3:17"},"nodeType":"YulFunctionCall","src":"5497:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5486:3:17"},"nodeType":"YulFunctionCall","src":"5486:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5477:5:17"}]},{"nodeType":"YulAssignment","src":"5516:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5529:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5540:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"5550:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5536:3:17"},"nodeType":"YulFunctionCall","src":"5536:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5526:2:17"},"nodeType":"YulFunctionCall","src":"5526:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5516:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5206:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"5213:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"5225:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5238:6:17","type":""}],"src":"5169:393:17"},{"body":{"nodeType":"YulBlock","src":"5600:28:17","statements":[{"nodeType":"YulAssignment","src":"5610:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5617:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5610:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5586:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5596:3:17","type":""}],"src":"5568:60:17"},{"body":{"nodeType":"YulBlock","src":"5694:82:17","statements":[{"nodeType":"YulAssignment","src":"5704:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5762:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5744:17:17"},"nodeType":"YulFunctionCall","src":"5744:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5735:8:17"},"nodeType":"YulFunctionCall","src":"5735:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5717:17:17"},"nodeType":"YulFunctionCall","src":"5717:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5704:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5674:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5684:9:17","type":""}],"src":"5634:142:17"},{"body":{"nodeType":"YulBlock","src":"5829:28:17","statements":[{"nodeType":"YulAssignment","src":"5839:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5846:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5839:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5815:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5825:3:17","type":""}],"src":"5782:75:17"},{"body":{"nodeType":"YulBlock","src":"5939:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5949:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"6004:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5973:30:17"},"nodeType":"YulFunctionCall","src":"5973:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5953:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6028:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6068:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6062:5:17"},"nodeType":"YulFunctionCall","src":"6062:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6075:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"6107:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"6083:23:17"},"nodeType":"YulFunctionCall","src":"6083:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"6034:27:17"},"nodeType":"YulFunctionCall","src":"6034:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6021:6:17"},"nodeType":"YulFunctionCall","src":"6021:105:17"},"nodeType":"YulExpressionStatement","src":"6021:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5916:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5922:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5930:7:17","type":""}],"src":"5863:269:17"},{"body":{"nodeType":"YulBlock","src":"6187:24:17","statements":[{"nodeType":"YulAssignment","src":"6197:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6204:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6197:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6183:3:17","type":""}],"src":"6138:73:17"},{"body":{"nodeType":"YulBlock","src":"6270:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6280:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6294:30:17"},"nodeType":"YulFunctionCall","src":"6294:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6284:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6379:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6385:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6393:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6335:43:17"},"nodeType":"YulFunctionCall","src":"6335:65:17"},"nodeType":"YulExpressionStatement","src":"6335:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6256:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6262:6:17","type":""}],"src":"6217:189:17"},{"body":{"nodeType":"YulBlock","src":"6462:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"6529:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6573:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6580:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6543:29:17"},"nodeType":"YulFunctionCall","src":"6543:39:17"},"nodeType":"YulExpressionStatement","src":"6543:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6482:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"6489:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6479:2:17"},"nodeType":"YulFunctionCall","src":"6479:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6494:26:17","statements":[{"nodeType":"YulAssignment","src":"6496:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6509:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6516:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6505:3:17"},"nodeType":"YulFunctionCall","src":"6505:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6496:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"6476:2:17","statements":[]},"src":"6472:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6450:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6457:3:17","type":""}],"src":"6412:186:17"},{"body":{"nodeType":"YulBlock","src":"6683:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"6709:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6723:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6771:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6739:31:17"},"nodeType":"YulFunctionCall","src":"6739:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6727:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6790:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6813:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6841:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6823:17:17"},"nodeType":"YulFunctionCall","src":"6823:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6809:3:17"},"nodeType":"YulFunctionCall","src":"6809:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6794:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7010:27:17","statements":[{"nodeType":"YulAssignment","src":"7012:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"7027:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7012:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6994:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"7006:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6991:2:17"},"nodeType":"YulFunctionCall","src":"6991:18:17"},"nodeType":"YulIf","src":"6988:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7079:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7096:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7124:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7106:17:17"},"nodeType":"YulFunctionCall","src":"7106:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7092:3:17"},"nodeType":"YulFunctionCall","src":"7092:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"7050:28:17"},"nodeType":"YulFunctionCall","src":"7050:80:17"},"nodeType":"YulExpressionStatement","src":"7050:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6700:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6705:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6697:2:17"},"nodeType":"YulFunctionCall","src":"6697:11:17"},"nodeType":"YulIf","src":"6694:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6659:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"6666:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6671:10:17","type":""}],"src":"6604:543:17"},{"body":{"nodeType":"YulBlock","src":"7216:54:17","statements":[{"nodeType":"YulAssignment","src":"7226:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7251:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"7257:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7247:3:17"},"nodeType":"YulFunctionCall","src":"7247:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7226:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7191:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"7197:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7207:8:17","type":""}],"src":"7153:117:17"},{"body":{"nodeType":"YulBlock","src":"7327:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7337:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7386:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7389:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7382:3:17"},"nodeType":"YulFunctionCall","src":"7382:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7401:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7397:3:17"},"nodeType":"YulFunctionCall","src":"7397:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7353:28:17"},"nodeType":"YulFunctionCall","src":"7353:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7349:3:17"},"nodeType":"YulFunctionCall","src":"7349:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7341:4:17","type":""}]},{"nodeType":"YulAssignment","src":"7414:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7428:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"7434:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7424:3:17"},"nodeType":"YulFunctionCall","src":"7424:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7414:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7304:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7310:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7320:6:17","type":""}],"src":"7276:169:17"},{"body":{"nodeType":"YulBlock","src":"7531:214:17","statements":[{"nodeType":"YulAssignment","src":"7664:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7691:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"7697:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7672:18:17"},"nodeType":"YulFunctionCall","src":"7672:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7664:4:17"}]},{"nodeType":"YulAssignment","src":"7710:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7721:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7731:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7734:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7727:3:17"},"nodeType":"YulFunctionCall","src":"7727:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7718:2:17"},"nodeType":"YulFunctionCall","src":"7718:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7710:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7512:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"7518:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7526:4:17","type":""}],"src":"7450:295:17"},{"body":{"nodeType":"YulBlock","src":"7842:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7853:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7900:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7867:32:17"},"nodeType":"YulFunctionCall","src":"7867:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7857:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7989:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7991:16:17"},"nodeType":"YulFunctionCall","src":"7991:18:17"},"nodeType":"YulExpressionStatement","src":"7991:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7961:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7969:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7958:2:17"},"nodeType":"YulFunctionCall","src":"7958:30:17"},"nodeType":"YulIf","src":"7955:56:17"},{"nodeType":"YulVariableDeclaration","src":"8021:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8067:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8061:5:17"},"nodeType":"YulFunctionCall","src":"8061:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8035:25:17"},"nodeType":"YulFunctionCall","src":"8035:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"8025:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8166:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"8172:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8180:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"8120:45:17"},"nodeType":"YulFunctionCall","src":"8120:67:17"},"nodeType":"YulExpressionStatement","src":"8120:67:17"},{"nodeType":"YulVariableDeclaration","src":"8197:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8214:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8201:9:17","type":""}]},{"nodeType":"YulAssignment","src":"8225:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8238:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8225:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8289:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8303:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8322:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8334:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8330:3:17"},"nodeType":"YulFunctionCall","src":"8330:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8318:3:17"},"nodeType":"YulFunctionCall","src":"8318:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8307:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8354:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8400:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8368:31:17"},"nodeType":"YulFunctionCall","src":"8368:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8358:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8418:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8427:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8422:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8486:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8511:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8529:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8534:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8525:3:17"},"nodeType":"YulFunctionCall","src":"8525:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8519:5:17"},"nodeType":"YulFunctionCall","src":"8519:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8504:6:17"},"nodeType":"YulFunctionCall","src":"8504:42:17"},"nodeType":"YulExpressionStatement","src":"8504:42:17"},{"nodeType":"YulAssignment","src":"8563:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8577:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8585:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8573:3:17"},"nodeType":"YulFunctionCall","src":"8573:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8563:6:17"}]},{"nodeType":"YulAssignment","src":"8604:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8621:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8632:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8617:3:17"},"nodeType":"YulFunctionCall","src":"8617:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8604:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8452:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8455:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8449:2:17"},"nodeType":"YulFunctionCall","src":"8449:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8464:21:17","statements":[{"nodeType":"YulAssignment","src":"8466:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8475:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"8478:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8471:3:17"},"nodeType":"YulFunctionCall","src":"8471:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8466:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"8445:3:17","statements":[]},"src":"8441:208:17"},{"body":{"nodeType":"YulBlock","src":"8685:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8703:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8730:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8735:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8726:3:17"},"nodeType":"YulFunctionCall","src":"8726:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8720:5:17"},"nodeType":"YulFunctionCall","src":"8720:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8707:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8770:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8797:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8812:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8820:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8808:3:17"},"nodeType":"YulFunctionCall","src":"8808:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8778:18:17"},"nodeType":"YulFunctionCall","src":"8778:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8763:6:17"},"nodeType":"YulFunctionCall","src":"8763:64:17"},"nodeType":"YulExpressionStatement","src":"8763:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8668:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8677:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8665:2:17"},"nodeType":"YulFunctionCall","src":"8665:19:17"},"nodeType":"YulIf","src":"8662:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8861:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8875:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8883:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8871:3:17"},"nodeType":"YulFunctionCall","src":"8871:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"8887:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8867:3:17"},"nodeType":"YulFunctionCall","src":"8867:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8854:6:17"},"nodeType":"YulFunctionCall","src":"8854:36:17"},"nodeType":"YulExpressionStatement","src":"8854:36:17"}]},"nodeType":"YulCase","src":"8282:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8287:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8917:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8931:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8944:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8935:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8968:67:17","statements":[{"nodeType":"YulAssignment","src":"8986:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9005:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9010:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9001:3:17"},"nodeType":"YulFunctionCall","src":"9001:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8995:5:17"},"nodeType":"YulFunctionCall","src":"8995:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8986:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8961:6:17"},"nodeType":"YulIf","src":"8958:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9055:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9114:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"9121:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9061:52:17"},"nodeType":"YulFunctionCall","src":"9061:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9048:6:17"},"nodeType":"YulFunctionCall","src":"9048:81:17"},"nodeType":"YulExpressionStatement","src":"9048:81:17"}]},"nodeType":"YulCase","src":"8909:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8262:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8270:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8259:2:17"},"nodeType":"YulFunctionCall","src":"8259:14:17"},"nodeType":"YulSwitch","src":"8252:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7831:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"7837:3:17","type":""}],"src":"7750:1395:17"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_memory_to_memory_with_cleanup(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := mload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function validator_revert_t_uint256(value) {\\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\\n        value := mload(offset)\\n        validator_revert_t_uint256(value)\\n    }\\n\\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := mload(add(headStart, 0))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 32\\n\\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 64\\n\\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 96\\n\\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 128\\n\\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function panic_error_0x22() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x22)\\n        revert(0, 0x24)\\n    }\\n\\n    function extract_byte_array_length(data) -> length {\\n        length := div(data, 2)\\n        let outOfPlaceEncoding := and(data, 1)\\n        if iszero(outOfPlaceEncoding) {\\n            length := and(length, 0x7f)\\n        }\\n\\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\\n            panic_error_0x22()\\n        }\\n    }\\n\\n    function array_dataslot_t_string_storage(ptr) -> data {\\n        data := ptr\\n\\n        mstore(0, ptr)\\n        data := keccak256(0, 0x20)\\n\\n    }\\n\\n    function divide_by_32_ceil(value) -> result {\\n        result := div(add(value, 31), 32)\\n    }\\n\\n    function shift_left_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shl(bits, value)\\n\\n    }\\n\\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\\n        let shiftBits := mul(shiftBytes, 8)\\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\\n        value := and(value, not(mask))\\n        result := or(value, and(toInsert, mask))\\n    }\\n\\n    function identity(value) -> ret {\\n        ret := value\\n    }\\n\\n    function convert_t_uint256_to_t_uint256(value) -> converted {\\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\\n    }\\n\\n    function prepare_store_t_uint256(value) -> ret {\\n        ret := value\\n    }\\n\\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\\n    }\\n\\n    function zero_value_for_split_t_uint256() -> ret {\\n        ret := 0\\n    }\\n\\n    function storage_set_to_zero_t_uint256(slot, offset) {\\n        let zero_0 := zero_value_for_split_t_uint256()\\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\\n    }\\n\\n    function clear_storage_range_t_bytes1(start, end) {\\n        for {} lt(start, end) { start := add(start, 1) }\\n        {\\n            storage_set_to_zero_t_uint256(start, 0)\\n        }\\n    }\\n\\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\\n\\n        if gt(len, 31) {\\n            let dataArea := array_dataslot_t_string_storage(array)\\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\\n            if lt(startIndex, 32) { deleteStart := dataArea }\\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\\n        }\\n\\n    }\\n\\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shr(bits, value)\\n\\n    }\\n\\n    function mask_bytes_dynamic(data, bytes) -> result {\\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\\n        result := and(data, mask)\\n    }\\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\\n        // we want to save only elements that are part of the array after resizing\\n        // others should be set to zero\\n        data := mask_bytes_dynamic(data, len)\\n        used := or(data, mul(2, len))\\n    }\\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\\n\\n        let newLen := array_length_t_string_memory_ptr(src)\\n        // Make sure array length is sane\\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        let oldLen := extract_byte_array_length(sload(slot))\\n\\n        // potentially truncate data\\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\\n\\n        let srcOffset := 0\\n\\n        srcOffset := 0x20\\n\\n        switch gt(newLen, 31)\\n        case 1 {\\n            let loopEnd := and(newLen, not(0x1f))\\n\\n            let dstPtr := array_dataslot_t_string_storage(slot)\\n            let i := 0\\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\\n                sstore(dstPtr, mload(add(src, srcOffset)))\\n                dstPtr := add(dstPtr, 1)\\n                srcOffset := add(srcOffset, 32)\\n            }\\n            if lt(loopEnd, newLen) {\\n                let lastValue := mload(add(src, srcOffset))\\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\\n            }\\n            sstore(slot, add(mul(newLen, 2), 1))\\n        }\\n        default {\\n            let value := 0\\n            if newLen {\\n                value := mload(add(src, srcOffset))\\n            }\\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\\n        }\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"deployedGeneratedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12105:17","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:17","statements":[{"nodeType":"YulAssignment","src":"77:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:17"},"nodeType":"YulFunctionCall","src":"87:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:17","type":""}],"src":"7:99:17"},{"body":{"nodeType":"YulBlock","src":"208:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:17"},"nodeType":"YulFunctionCall","src":"218:19:17"},"nodeType":"YulExpressionStatement","src":"218:19:17"},{"nodeType":"YulAssignment","src":"246:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:17"},"nodeType":"YulFunctionCall","src":"261:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:17","type":""}],"src":"112:169:17"},{"body":{"nodeType":"YulBlock","src":"349:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:17"},"nodeType":"YulFunctionCall","src":"449:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:17"},"nodeType":"YulFunctionCall","src":"468:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:17"},"nodeType":"YulFunctionCall","src":"462:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:17"},"nodeType":"YulFunctionCall","src":"442:39:17"},"nodeType":"YulExpressionStatement","src":"442:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:17"},"nodeType":"YulFunctionCall","src":"386:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:17","statements":[{"nodeType":"YulAssignment","src":"402:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:17"},"nodeType":"YulFunctionCall","src":"407:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:17","statements":[]},"src":"378:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:17"},"nodeType":"YulFunctionCall","src":"507:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:17"},"nodeType":"YulFunctionCall","src":"500:27:17"},"nodeType":"YulExpressionStatement","src":"500:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:17","type":""}],"src":"287:246:17"},{"body":{"nodeType":"YulBlock","src":"587:54:17","statements":[{"nodeType":"YulAssignment","src":"597:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:17"},"nodeType":"YulFunctionCall","src":"611:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:17"},"nodeType":"YulFunctionCall","src":"627:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:17"},"nodeType":"YulFunctionCall","src":"607:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:17","type":""}],"src":"539:102:17"},{"body":{"nodeType":"YulBlock","src":"739:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:17"},"nodeType":"YulFunctionCall","src":"763:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:17","type":""}]},{"nodeType":"YulAssignment","src":"811:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:17"},"nodeType":"YulFunctionCall","src":"818:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:17"},"nodeType":"YulFunctionCall","src":"933:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:17"},"nodeType":"YulFunctionCall","src":"898:65:17"},"nodeType":"YulExpressionStatement","src":"898:65:17"},{"nodeType":"YulAssignment","src":"972:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:17"},"nodeType":"YulFunctionCall","src":"988:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:17"},"nodeType":"YulFunctionCall","src":"979:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:17","type":""}],"src":"647:377:17"},{"body":{"nodeType":"YulBlock","src":"1148:195:17","statements":[{"nodeType":"YulAssignment","src":"1158:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:17"},"nodeType":"YulFunctionCall","src":"1166:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:17"},"nodeType":"YulFunctionCall","src":"1201:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:17"},"nodeType":"YulFunctionCall","src":"1220:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:17"},"nodeType":"YulFunctionCall","src":"1194:47:17"},"nodeType":"YulExpressionStatement","src":"1194:47:17"},{"nodeType":"YulAssignment","src":"1250:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:17"},"nodeType":"YulFunctionCall","src":"1258:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:17","type":""}],"src":"1030:313:17"},{"body":{"nodeType":"YulBlock","src":"1389:35:17","statements":[{"nodeType":"YulAssignment","src":"1399:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:17"},"nodeType":"YulFunctionCall","src":"1409:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:17","type":""}],"src":"1349:75:17"},{"body":{"nodeType":"YulBlock","src":"1519:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:17"},"nodeType":"YulFunctionCall","src":"1529:12:17"},"nodeType":"YulExpressionStatement","src":"1529:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:17"},{"body":{"nodeType":"YulBlock","src":"1642:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:17"},"nodeType":"YulFunctionCall","src":"1652:12:17"},"nodeType":"YulExpressionStatement","src":"1652:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:17"},{"body":{"nodeType":"YulBlock","src":"1720:45:17","statements":[{"nodeType":"YulAssignment","src":"1730:29:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1745:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1752:6:17","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1741:3:17"},"nodeType":"YulFunctionCall","src":"1741:18:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1730:7:17"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1702:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1712:7:17","type":""}],"src":"1676:89:17"},{"body":{"nodeType":"YulBlock","src":"1813:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"1869:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1878:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1881:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1871:6:17"},"nodeType":"YulFunctionCall","src":"1871:12:17"},"nodeType":"YulExpressionStatement","src":"1871:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1836:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1860:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"1843:16:17"},"nodeType":"YulFunctionCall","src":"1843:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1833:2:17"},"nodeType":"YulFunctionCall","src":"1833:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1826:6:17"},"nodeType":"YulFunctionCall","src":"1826:42:17"},"nodeType":"YulIf","src":"1823:62:17"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1806:5:17","type":""}],"src":"1771:120:17"},{"body":{"nodeType":"YulBlock","src":"1948:86:17","statements":[{"nodeType":"YulAssignment","src":"1958:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1980:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1967:12:17"},"nodeType":"YulFunctionCall","src":"1967:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1958:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2022:5:17"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"1996:25:17"},"nodeType":"YulFunctionCall","src":"1996:32:17"},"nodeType":"YulExpressionStatement","src":"1996:32:17"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1926:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1934:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1942:5:17","type":""}],"src":"1897:137:17"},{"body":{"nodeType":"YulBlock","src":"2105:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"2151:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2153:77:17"},"nodeType":"YulFunctionCall","src":"2153:79:17"},"nodeType":"YulExpressionStatement","src":"2153:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2126:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2122:3:17"},"nodeType":"YulFunctionCall","src":"2122:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2147:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2118:3:17"},"nodeType":"YulFunctionCall","src":"2118:32:17"},"nodeType":"YulIf","src":"2115:119:17"},{"nodeType":"YulBlock","src":"2244:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2259:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2273:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2263:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2288:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2322:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2333:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2318:3:17"},"nodeType":"YulFunctionCall","src":"2318:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2342:7:17"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"2298:19:17"},"nodeType":"YulFunctionCall","src":"2298:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2288:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2075:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2086:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2098:6:17","type":""}],"src":"2040:327:17"},{"body":{"nodeType":"YulBlock","src":"2418:32:17","statements":[{"nodeType":"YulAssignment","src":"2428:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2439:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2428:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2400:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2410:7:17","type":""}],"src":"2373:77:17"},{"body":{"nodeType":"YulBlock","src":"2521:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2538:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2561:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2543:17:17"},"nodeType":"YulFunctionCall","src":"2543:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2531:6:17"},"nodeType":"YulFunctionCall","src":"2531:37:17"},"nodeType":"YulExpressionStatement","src":"2531:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2509:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2516:3:17","type":""}],"src":"2456:118:17"},{"body":{"nodeType":"YulBlock","src":"2678:124:17","statements":[{"nodeType":"YulAssignment","src":"2688:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2711:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2696:3:17"},"nodeType":"YulFunctionCall","src":"2696:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2688:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2768:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2781:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2792:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2777:3:17"},"nodeType":"YulFunctionCall","src":"2777:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2724:43:17"},"nodeType":"YulFunctionCall","src":"2724:71:17"},"nodeType":"YulExpressionStatement","src":"2724:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2650:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2662:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2673:4:17","type":""}],"src":"2580:222:17"},{"body":{"nodeType":"YulBlock","src":"2897:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2914:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2917:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2907:6:17"},"nodeType":"YulFunctionCall","src":"2907:12:17"},"nodeType":"YulExpressionStatement","src":"2907:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2808:117:17"},{"body":{"nodeType":"YulBlock","src":"3020:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3037:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3040:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3030:6:17"},"nodeType":"YulFunctionCall","src":"3030:12:17"},"nodeType":"YulExpressionStatement","src":"3030:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2931:117:17"},{"body":{"nodeType":"YulBlock","src":"3082:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3099:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3102:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3092:6:17"},"nodeType":"YulFunctionCall","src":"3092:88:17"},"nodeType":"YulExpressionStatement","src":"3092:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3196:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3199:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3189:6:17"},"nodeType":"YulFunctionCall","src":"3189:15:17"},"nodeType":"YulExpressionStatement","src":"3189:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3220:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3223:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3213:6:17"},"nodeType":"YulFunctionCall","src":"3213:15:17"},"nodeType":"YulExpressionStatement","src":"3213:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3054:180:17"},{"body":{"nodeType":"YulBlock","src":"3283:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3293:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3315:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3345:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3323:21:17"},"nodeType":"YulFunctionCall","src":"3323:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3311:3:17"},"nodeType":"YulFunctionCall","src":"3311:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3297:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3462:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3464:16:17"},"nodeType":"YulFunctionCall","src":"3464:18:17"},"nodeType":"YulExpressionStatement","src":"3464:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3405:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3417:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3402:2:17"},"nodeType":"YulFunctionCall","src":"3402:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3441:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3453:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3438:2:17"},"nodeType":"YulFunctionCall","src":"3438:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3399:2:17"},"nodeType":"YulFunctionCall","src":"3399:62:17"},"nodeType":"YulIf","src":"3396:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3500:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3504:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3493:6:17"},"nodeType":"YulFunctionCall","src":"3493:22:17"},"nodeType":"YulExpressionStatement","src":"3493:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3269:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"3277:4:17","type":""}],"src":"3240:281:17"},{"body":{"nodeType":"YulBlock","src":"3568:88:17","statements":[{"nodeType":"YulAssignment","src":"3578:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3588:18:17"},"nodeType":"YulFunctionCall","src":"3588:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3578:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3637:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"3645:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3617:19:17"},"nodeType":"YulFunctionCall","src":"3617:33:17"},"nodeType":"YulExpressionStatement","src":"3617:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3552:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3561:6:17","type":""}],"src":"3527:129:17"},{"body":{"nodeType":"YulBlock","src":"3729:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"3834:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3836:16:17"},"nodeType":"YulFunctionCall","src":"3836:18:17"},"nodeType":"YulExpressionStatement","src":"3836:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3806:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3814:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3803:2:17"},"nodeType":"YulFunctionCall","src":"3803:30:17"},"nodeType":"YulIf","src":"3800:56:17"},{"nodeType":"YulAssignment","src":"3866:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3896:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3874:21:17"},"nodeType":"YulFunctionCall","src":"3874:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3866:4:17"}]},{"nodeType":"YulAssignment","src":"3940:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3952:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3958:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3948:3:17"},"nodeType":"YulFunctionCall","src":"3948:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3940:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3713:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3724:4:17","type":""}],"src":"3662:308:17"},{"body":{"nodeType":"YulBlock","src":"4040:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4063:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"4068:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4073:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4050:12:17"},"nodeType":"YulFunctionCall","src":"4050:30:17"},"nodeType":"YulExpressionStatement","src":"4050:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4100:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4105:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4096:3:17"},"nodeType":"YulFunctionCall","src":"4096:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"4114:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4089:6:17"},"nodeType":"YulFunctionCall","src":"4089:27:17"},"nodeType":"YulExpressionStatement","src":"4089:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4022:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4027:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4032:6:17","type":""}],"src":"3976:146:17"},{"body":{"nodeType":"YulBlock","src":"4212:341:17","statements":[{"nodeType":"YulAssignment","src":"4222:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4289:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4247:41:17"},"nodeType":"YulFunctionCall","src":"4247:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4231:15:17"},"nodeType":"YulFunctionCall","src":"4231:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4222:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4313:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"4320:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4306:6:17"},"nodeType":"YulFunctionCall","src":"4306:21:17"},"nodeType":"YulExpressionStatement","src":"4306:21:17"},{"nodeType":"YulVariableDeclaration","src":"4336:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4351:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4358:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4347:3:17"},"nodeType":"YulFunctionCall","src":"4347:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4340:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4401:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4403:77:17"},"nodeType":"YulFunctionCall","src":"4403:79:17"},"nodeType":"YulExpressionStatement","src":"4403:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4382:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4387:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4378:3:17"},"nodeType":"YulFunctionCall","src":"4378:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"4396:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4375:2:17"},"nodeType":"YulFunctionCall","src":"4375:25:17"},"nodeType":"YulIf","src":"4372:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4530:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"4535:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4540:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4493:36:17"},"nodeType":"YulFunctionCall","src":"4493:54:17"},"nodeType":"YulExpressionStatement","src":"4493:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4185:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4190:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4198:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4206:5:17","type":""}],"src":"4128:425:17"},{"body":{"nodeType":"YulBlock","src":"4635:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"4684:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4686:77:17"},"nodeType":"YulFunctionCall","src":"4686:79:17"},"nodeType":"YulExpressionStatement","src":"4686:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4663:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4671:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:17"},"nodeType":"YulFunctionCall","src":"4659:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"4678:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4655:3:17"},"nodeType":"YulFunctionCall","src":"4655:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4648:6:17"},"nodeType":"YulFunctionCall","src":"4648:35:17"},"nodeType":"YulIf","src":"4645:122:17"},{"nodeType":"YulVariableDeclaration","src":"4776:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4803:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4790:12:17"},"nodeType":"YulFunctionCall","src":"4790:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4780:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4819:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4880:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4888:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4876:3:17"},"nodeType":"YulFunctionCall","src":"4876:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"4895:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"4903:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4828:47:17"},"nodeType":"YulFunctionCall","src":"4828:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4819:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4613:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4621:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4629:5:17","type":""}],"src":"4573:340:17"},{"body":{"nodeType":"YulBlock","src":"4995:433:17","statements":[{"body":{"nodeType":"YulBlock","src":"5041:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5043:77:17"},"nodeType":"YulFunctionCall","src":"5043:79:17"},"nodeType":"YulExpressionStatement","src":"5043:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5016:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5025:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5012:3:17"},"nodeType":"YulFunctionCall","src":"5012:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5037:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5008:3:17"},"nodeType":"YulFunctionCall","src":"5008:32:17"},"nodeType":"YulIf","src":"5005:119:17"},{"nodeType":"YulBlock","src":"5134:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5149:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5191:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:17"},"nodeType":"YulFunctionCall","src":"5176:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5163:12:17"},"nodeType":"YulFunctionCall","src":"5163:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5153:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5241:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5243:77:17"},"nodeType":"YulFunctionCall","src":"5243:79:17"},"nodeType":"YulExpressionStatement","src":"5243:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5213:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5221:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5210:2:17"},"nodeType":"YulFunctionCall","src":"5210:30:17"},"nodeType":"YulIf","src":"5207:117:17"},{"nodeType":"YulAssignment","src":"5338:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5383:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5394:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5379:3:17"},"nodeType":"YulFunctionCall","src":"5379:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5403:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5348:30:17"},"nodeType":"YulFunctionCall","src":"5348:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5338:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4965:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4976:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4988:6:17","type":""}],"src":"4919:509:17"},{"body":{"nodeType":"YulBlock","src":"5497:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5514:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5536:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"5519:16:17"},"nodeType":"YulFunctionCall","src":"5519:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5507:6:17"},"nodeType":"YulFunctionCall","src":"5507:36:17"},"nodeType":"YulExpressionStatement","src":"5507:36:17"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5485:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5492:3:17","type":""}],"src":"5434:115:17"},{"body":{"nodeType":"YulBlock","src":"5651:122:17","statements":[{"nodeType":"YulAssignment","src":"5661:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5673:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5684:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5669:3:17"},"nodeType":"YulFunctionCall","src":"5669:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5661:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5739:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5752:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5763:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5748:3:17"},"nodeType":"YulFunctionCall","src":"5748:17:17"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"5697:41:17"},"nodeType":"YulFunctionCall","src":"5697:69:17"},"nodeType":"YulExpressionStatement","src":"5697:69:17"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5623:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5635:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5646:4:17","type":""}],"src":"5555:218:17"},{"body":{"nodeType":"YulBlock","src":"6035:606:17","statements":[{"nodeType":"YulAssignment","src":"6045:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6057:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6068:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6053:3:17"},"nodeType":"YulFunctionCall","src":"6053:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6045:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6093:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6104:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6089:3:17"},"nodeType":"YulFunctionCall","src":"6089:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6112:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6118:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6108:3:17"},"nodeType":"YulFunctionCall","src":"6108:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6082:6:17"},"nodeType":"YulFunctionCall","src":"6082:47:17"},"nodeType":"YulExpressionStatement","src":"6082:47:17"},{"nodeType":"YulAssignment","src":"6138:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"6219:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6146:63:17"},"nodeType":"YulFunctionCall","src":"6146:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6138:4:17"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6278:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6291:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6302:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6287:3:17"},"nodeType":"YulFunctionCall","src":"6287:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6234:43:17"},"nodeType":"YulFunctionCall","src":"6234:72:17"},"nodeType":"YulExpressionStatement","src":"6234:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6360:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6373:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6384:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6369:3:17"},"nodeType":"YulFunctionCall","src":"6369:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6316:43:17"},"nodeType":"YulFunctionCall","src":"6316:72:17"},"nodeType":"YulExpressionStatement","src":"6316:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6442:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6455:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6466:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6451:3:17"},"nodeType":"YulFunctionCall","src":"6451:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6398:43:17"},"nodeType":"YulFunctionCall","src":"6398:72:17"},"nodeType":"YulExpressionStatement","src":"6398:72:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6524:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6537:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6548:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6533:3:17"},"nodeType":"YulFunctionCall","src":"6533:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6480:43:17"},"nodeType":"YulFunctionCall","src":"6480:73:17"},"nodeType":"YulExpressionStatement","src":"6480:73:17"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"6605:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6618:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6629:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6614:3:17"},"nodeType":"YulFunctionCall","src":"6614:19:17"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"6563:41:17"},"nodeType":"YulFunctionCall","src":"6563:71:17"},"nodeType":"YulExpressionStatement","src":"6563:71:17"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint16__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5967:9:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5979:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5987:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5995:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6003:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6011:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6019:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6030:4:17","type":""}],"src":"5779:862:17"},{"body":{"nodeType":"YulBlock","src":"6690:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"6747:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6756:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6759:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6749:6:17"},"nodeType":"YulFunctionCall","src":"6749:12:17"},"nodeType":"YulExpressionStatement","src":"6749:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6713:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6738:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6720:17:17"},"nodeType":"YulFunctionCall","src":"6720:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6710:2:17"},"nodeType":"YulFunctionCall","src":"6710:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6703:6:17"},"nodeType":"YulFunctionCall","src":"6703:43:17"},"nodeType":"YulIf","src":"6700:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6683:5:17","type":""}],"src":"6647:122:17"},{"body":{"nodeType":"YulBlock","src":"6827:87:17","statements":[{"nodeType":"YulAssignment","src":"6837:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6859:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6846:12:17"},"nodeType":"YulFunctionCall","src":"6846:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6837:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6902:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6875:26:17"},"nodeType":"YulFunctionCall","src":"6875:33:17"},"nodeType":"YulExpressionStatement","src":"6875:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6805:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6813:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6821:5:17","type":""}],"src":"6775:139:17"},{"body":{"nodeType":"YulBlock","src":"6986:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"7032:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7034:77:17"},"nodeType":"YulFunctionCall","src":"7034:79:17"},"nodeType":"YulExpressionStatement","src":"7034:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7007:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7016:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7003:3:17"},"nodeType":"YulFunctionCall","src":"7003:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7028:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6999:3:17"},"nodeType":"YulFunctionCall","src":"6999:32:17"},"nodeType":"YulIf","src":"6996:119:17"},{"nodeType":"YulBlock","src":"7125:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7140:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7154:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7144:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7169:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7204:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7215:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7200:3:17"},"nodeType":"YulFunctionCall","src":"7200:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7224:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7179:20:17"},"nodeType":"YulFunctionCall","src":"7179:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7169:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6956:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6967:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6979:6:17","type":""}],"src":"6920:329:17"},{"body":{"nodeType":"YulBlock","src":"7283:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7300:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7303:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7293:6:17"},"nodeType":"YulFunctionCall","src":"7293:88:17"},"nodeType":"YulExpressionStatement","src":"7293:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7390:6:17"},"nodeType":"YulFunctionCall","src":"7390:15:17"},"nodeType":"YulExpressionStatement","src":"7390:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7421:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7424:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7414:6:17"},"nodeType":"YulFunctionCall","src":"7414:15:17"},"nodeType":"YulExpressionStatement","src":"7414:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7255:180:17"},{"body":{"nodeType":"YulBlock","src":"7492:269:17","statements":[{"nodeType":"YulAssignment","src":"7502:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7516:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"7522:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7512:3:17"},"nodeType":"YulFunctionCall","src":"7512:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7502:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"7533:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7563:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"7569:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7559:3:17"},"nodeType":"YulFunctionCall","src":"7559:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7537:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7610:51:17","statements":[{"nodeType":"YulAssignment","src":"7624:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7638:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7646:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7634:3:17"},"nodeType":"YulFunctionCall","src":"7634:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7624:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7590:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7583:6:17"},"nodeType":"YulFunctionCall","src":"7583:26:17"},"nodeType":"YulIf","src":"7580:81:17"},{"body":{"nodeType":"YulBlock","src":"7713:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"7727:16:17"},"nodeType":"YulFunctionCall","src":"7727:18:17"},"nodeType":"YulExpressionStatement","src":"7727:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7677:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7700:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7708:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7697:2:17"},"nodeType":"YulFunctionCall","src":"7697:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7674:2:17"},"nodeType":"YulFunctionCall","src":"7674:38:17"},"nodeType":"YulIf","src":"7671:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7476:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7485:6:17","type":""}],"src":"7441:320:17"},{"body":{"nodeType":"YulBlock","src":"7821:87:17","statements":[{"nodeType":"YulAssignment","src":"7831:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7839:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7831:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7859:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"7862:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7852:6:17"},"nodeType":"YulFunctionCall","src":"7852:14:17"},"nodeType":"YulExpressionStatement","src":"7852:14:17"},{"nodeType":"YulAssignment","src":"7875:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7893:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7896:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7883:9:17"},"nodeType":"YulFunctionCall","src":"7883:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7875:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7808:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7816:4:17","type":""}],"src":"7767:141:17"},{"body":{"nodeType":"YulBlock","src":"7958:49:17","statements":[{"nodeType":"YulAssignment","src":"7968:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7986:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7993:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7982:3:17"},"nodeType":"YulFunctionCall","src":"7982:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"7998:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7978:3:17"},"nodeType":"YulFunctionCall","src":"7978:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7968:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7941:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7951:6:17","type":""}],"src":"7914:93:17"},{"body":{"nodeType":"YulBlock","src":"8066:54:17","statements":[{"nodeType":"YulAssignment","src":"8076:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"8101:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"8107:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8097:3:17"},"nodeType":"YulFunctionCall","src":"8097:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8076:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"8041:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"8047:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"8057:8:17","type":""}],"src":"8013:107:17"},{"body":{"nodeType":"YulBlock","src":"8202:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8212:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"8233:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"8245:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8229:3:17"},"nodeType":"YulFunctionCall","src":"8229:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"8216:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8256:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"8287:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8298:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8268:18:17"},"nodeType":"YulFunctionCall","src":"8268:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8260:4:17","type":""}]},{"nodeType":"YulAssignment","src":"8374:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"8405:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"8416:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8386:18:17"},"nodeType":"YulFunctionCall","src":"8386:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"8374:8:17"}]},{"nodeType":"YulAssignment","src":"8434:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8447:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"8458:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8454:3:17"},"nodeType":"YulFunctionCall","src":"8454:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8443:3:17"},"nodeType":"YulFunctionCall","src":"8443:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8434:5:17"}]},{"nodeType":"YulAssignment","src":"8473:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8486:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"8497:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"8507:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8493:3:17"},"nodeType":"YulFunctionCall","src":"8493:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8483:2:17"},"nodeType":"YulFunctionCall","src":"8483:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8473:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8163:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"8170:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"8182:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8195:6:17","type":""}],"src":"8126:393:17"},{"body":{"nodeType":"YulBlock","src":"8557:28:17","statements":[{"nodeType":"YulAssignment","src":"8567:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"8574:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8567:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8543:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8553:3:17","type":""}],"src":"8525:60:17"},{"body":{"nodeType":"YulBlock","src":"8651:82:17","statements":[{"nodeType":"YulAssignment","src":"8661:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8719:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8701:17:17"},"nodeType":"YulFunctionCall","src":"8701:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"8692:8:17"},"nodeType":"YulFunctionCall","src":"8692:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8674:17:17"},"nodeType":"YulFunctionCall","src":"8674:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8661:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8631:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8641:9:17","type":""}],"src":"8591:142:17"},{"body":{"nodeType":"YulBlock","src":"8786:28:17","statements":[{"nodeType":"YulAssignment","src":"8796:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"8803:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8796:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8772:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8782:3:17","type":""}],"src":"8739:75:17"},{"body":{"nodeType":"YulBlock","src":"8896:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8906:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"8961:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8930:30:17"},"nodeType":"YulFunctionCall","src":"8930:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"8910:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8985:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9025:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9019:5:17"},"nodeType":"YulFunctionCall","src":"9019:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9032:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"9064:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"9040:23:17"},"nodeType":"YulFunctionCall","src":"9040:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"8991:27:17"},"nodeType":"YulFunctionCall","src":"8991:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8978:6:17"},"nodeType":"YulFunctionCall","src":"8978:105:17"},"nodeType":"YulExpressionStatement","src":"8978:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8873:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"8879:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"8887:7:17","type":""}],"src":"8820:269:17"},{"body":{"nodeType":"YulBlock","src":"9144:24:17","statements":[{"nodeType":"YulAssignment","src":"9154:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9161:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9154:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9140:3:17","type":""}],"src":"9095:73:17"},{"body":{"nodeType":"YulBlock","src":"9227:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9237:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"9251:30:17"},"nodeType":"YulFunctionCall","src":"9251:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"9241:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9336:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9342:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"9350:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9292:43:17"},"nodeType":"YulFunctionCall","src":"9292:65:17"},"nodeType":"YulExpressionStatement","src":"9292:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9213:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"9219:6:17","type":""}],"src":"9174:189:17"},{"body":{"nodeType":"YulBlock","src":"9419:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"9486:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9530:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9537:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"9500:29:17"},"nodeType":"YulFunctionCall","src":"9500:39:17"},"nodeType":"YulExpressionStatement","src":"9500:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9439:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"9446:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9436:2:17"},"nodeType":"YulFunctionCall","src":"9436:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9451:26:17","statements":[{"nodeType":"YulAssignment","src":"9453:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9466:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9473:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9462:3:17"},"nodeType":"YulFunctionCall","src":"9462:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"9453:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"9433:2:17","statements":[]},"src":"9429:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"9407:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"9414:3:17","type":""}],"src":"9369:186:17"},{"body":{"nodeType":"YulBlock","src":"9640:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"9666:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9680:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9728:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"9696:31:17"},"nodeType":"YulFunctionCall","src":"9696:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"9684:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9747:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"9770:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9798:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"9780:17:17"},"nodeType":"YulFunctionCall","src":"9780:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9766:3:17"},"nodeType":"YulFunctionCall","src":"9766:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"9751:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9967:27:17","statements":[{"nodeType":"YulAssignment","src":"9969:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"9984:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9969:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9951:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"9963:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9948:2:17"},"nodeType":"YulFunctionCall","src":"9948:18:17"},"nodeType":"YulIf","src":"9945:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"10036:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"10053:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"10081:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"10063:17:17"},"nodeType":"YulFunctionCall","src":"10063:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10049:3:17"},"nodeType":"YulFunctionCall","src":"10049:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"10007:28:17"},"nodeType":"YulFunctionCall","src":"10007:80:17"},"nodeType":"YulExpressionStatement","src":"10007:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"9657:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9662:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9654:2:17"},"nodeType":"YulFunctionCall","src":"9654:11:17"},"nodeType":"YulIf","src":"9651:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"9616:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"9623:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"9628:10:17","type":""}],"src":"9561:543:17"},{"body":{"nodeType":"YulBlock","src":"10173:54:17","statements":[{"nodeType":"YulAssignment","src":"10183:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"10208:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"10214:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10204:3:17"},"nodeType":"YulFunctionCall","src":"10204:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"10183:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"10148:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"10154:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"10164:8:17","type":""}],"src":"10110:117:17"},{"body":{"nodeType":"YulBlock","src":"10284:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10294:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10343:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"10346:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10339:3:17"},"nodeType":"YulFunctionCall","src":"10339:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10358:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10354:3:17"},"nodeType":"YulFunctionCall","src":"10354:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"10310:28:17"},"nodeType":"YulFunctionCall","src":"10310:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10306:3:17"},"nodeType":"YulFunctionCall","src":"10306:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"10298:4:17","type":""}]},{"nodeType":"YulAssignment","src":"10371:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10385:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"10391:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10381:3:17"},"nodeType":"YulFunctionCall","src":"10381:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10371:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10261:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"10267:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"10277:6:17","type":""}],"src":"10233:169:17"},{"body":{"nodeType":"YulBlock","src":"10488:214:17","statements":[{"nodeType":"YulAssignment","src":"10621:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10648:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"10654:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"10629:18:17"},"nodeType":"YulFunctionCall","src":"10629:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10621:4:17"}]},{"nodeType":"YulAssignment","src":"10667:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10678:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10688:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"10691:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10684:3:17"},"nodeType":"YulFunctionCall","src":"10684:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10675:2:17"},"nodeType":"YulFunctionCall","src":"10675:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"10667:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10469:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"10475:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"10483:4:17","type":""}],"src":"10407:295:17"},{"body":{"nodeType":"YulBlock","src":"10799:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10810:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10857:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10824:32:17"},"nodeType":"YulFunctionCall","src":"10824:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"10814:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10946:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10948:16:17"},"nodeType":"YulFunctionCall","src":"10948:18:17"},"nodeType":"YulExpressionStatement","src":"10948:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10918:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10926:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10915:2:17"},"nodeType":"YulFunctionCall","src":"10915:30:17"},"nodeType":"YulIf","src":"10912:56:17"},{"nodeType":"YulVariableDeclaration","src":"10978:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11024:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11018:5:17"},"nodeType":"YulFunctionCall","src":"11018:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"10992:25:17"},"nodeType":"YulFunctionCall","src":"10992:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"10982:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11123:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"11129:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"11137:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"11077:45:17"},"nodeType":"YulFunctionCall","src":"11077:67:17"},"nodeType":"YulExpressionStatement","src":"11077:67:17"},{"nodeType":"YulVariableDeclaration","src":"11154:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11171:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"11158:9:17","type":""}]},{"nodeType":"YulAssignment","src":"11182:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11195:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11182:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"11246:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11260:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11279:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11291:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11287:3:17"},"nodeType":"YulFunctionCall","src":"11287:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11275:3:17"},"nodeType":"YulFunctionCall","src":"11275:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"11264:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11311:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11357:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"11325:31:17"},"nodeType":"YulFunctionCall","src":"11325:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"11315:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11375:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11384:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11379:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11443:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11468:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11486:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11491:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11482:3:17"},"nodeType":"YulFunctionCall","src":"11482:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11476:5:17"},"nodeType":"YulFunctionCall","src":"11476:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11461:6:17"},"nodeType":"YulFunctionCall","src":"11461:42:17"},"nodeType":"YulExpressionStatement","src":"11461:42:17"},{"nodeType":"YulAssignment","src":"11520:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11534:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11542:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11530:3:17"},"nodeType":"YulFunctionCall","src":"11530:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11520:6:17"}]},{"nodeType":"YulAssignment","src":"11561:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11578:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11589:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11574:3:17"},"nodeType":"YulFunctionCall","src":"11574:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11561:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11409:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"11412:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11406:2:17"},"nodeType":"YulFunctionCall","src":"11406:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11421:21:17","statements":[{"nodeType":"YulAssignment","src":"11423:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11432:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"11435:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11428:3:17"},"nodeType":"YulFunctionCall","src":"11428:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11423:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"11402:3:17","statements":[]},"src":"11398:208:17"},{"body":{"nodeType":"YulBlock","src":"11642:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11660:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11687:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11692:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11683:3:17"},"nodeType":"YulFunctionCall","src":"11683:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11677:5:17"},"nodeType":"YulFunctionCall","src":"11677:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"11664:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11727:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"11754:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11769:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11777:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11765:3:17"},"nodeType":"YulFunctionCall","src":"11765:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"11735:18:17"},"nodeType":"YulFunctionCall","src":"11735:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11720:6:17"},"nodeType":"YulFunctionCall","src":"11720:64:17"},"nodeType":"YulExpressionStatement","src":"11720:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"11625:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"11634:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11622:2:17"},"nodeType":"YulFunctionCall","src":"11622:19:17"},"nodeType":"YulIf","src":"11619:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11818:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11832:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11840:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11828:3:17"},"nodeType":"YulFunctionCall","src":"11828:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"11844:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11824:3:17"},"nodeType":"YulFunctionCall","src":"11824:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11811:6:17"},"nodeType":"YulFunctionCall","src":"11811:36:17"},"nodeType":"YulExpressionStatement","src":"11811:36:17"}]},"nodeType":"YulCase","src":"11239:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11244:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"11874:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11888:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11901:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11892:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11925:67:17","statements":[{"nodeType":"YulAssignment","src":"11943:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11962:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11967:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11958:3:17"},"nodeType":"YulFunctionCall","src":"11958:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11952:5:17"},"nodeType":"YulFunctionCall","src":"11952:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11943:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"11918:6:17"},"nodeType":"YulIf","src":"11915:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12012:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12071:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"12078:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"12018:52:17"},"nodeType":"YulFunctionCall","src":"12018:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12005:6:17"},"nodeType":"YulFunctionCall","src":"12005:81:17"},"nodeType":"YulExpressionStatement","src":"12005:81:17"}]},"nodeType":"YulCase","src":"11866:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11219:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11227:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11216:2:17"},"nodeType":"YulFunctionCall","src":"11216:14:17"},"nodeType":"YulSwitch","src":"11209:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"10788:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"10794:3:17","type":""}],"src":"10707:1395:17"}]},"contents":"{\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\\n        let length := array_length_t_string_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\\n        end := add(pos, round_up_to_mul_of_32(length))\\n    }\\n\\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_uint16(value) -> cleaned {\\n        cleaned := and(value, 0xffff)\\n    }\\n\\n    function validator_revert_t_uint16(value) {\\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint16(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint16(value)\\n    }\\n\\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_uint256(value))\\n    }\\n\\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\\n        calldatacopy(dst, src, length)\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := calldataload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\\n    }\\n\\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 0))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_uint16(value))\\n    }\\n\\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint16__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint16__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\\n        tail := add(headStart, 192)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\\n\\n        abi_encode_t_uint16_to_t_uint16_fromStack(value5,  add(headStart, 160))\\n\\n    }\\n\\n    function validator_revert_t_uint256(value) {\\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint256(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint256(value)\\n    }\\n\\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function panic_error_0x22() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x22)\\n        revert(0, 0x24)\\n    }\\n\\n    function extract_byte_array_length(data) -> length {\\n        length := div(data, 2)\\n        let outOfPlaceEncoding := and(data, 1)\\n        if iszero(outOfPlaceEncoding) {\\n            length := and(length, 0x7f)\\n        }\\n\\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\\n            panic_error_0x22()\\n        }\\n    }\\n\\n    function array_dataslot_t_string_storage(ptr) -> data {\\n        data := ptr\\n\\n        mstore(0, ptr)\\n        data := keccak256(0, 0x20)\\n\\n    }\\n\\n    function divide_by_32_ceil(value) -> result {\\n        result := div(add(value, 31), 32)\\n    }\\n\\n    function shift_left_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shl(bits, value)\\n\\n    }\\n\\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\\n        let shiftBits := mul(shiftBytes, 8)\\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\\n        value := and(value, not(mask))\\n        result := or(value, and(toInsert, mask))\\n    }\\n\\n    function identity(value) -> ret {\\n        ret := value\\n    }\\n\\n    function convert_t_uint256_to_t_uint256(value) -> converted {\\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\\n    }\\n\\n    function prepare_store_t_uint256(value) -> ret {\\n        ret := value\\n    }\\n\\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\\n    }\\n\\n    function zero_value_for_split_t_uint256() -> ret {\\n        ret := 0\\n    }\\n\\n    function storage_set_to_zero_t_uint256(slot, offset) {\\n        let zero_0 := zero_value_for_split_t_uint256()\\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\\n    }\\n\\n    function clear_storage_range_t_bytes1(start, end) {\\n        for {} lt(start, end) { start := add(start, 1) }\\n        {\\n            storage_set_to_zero_t_uint256(start, 0)\\n        }\\n    }\\n\\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\\n\\n        if gt(len, 31) {\\n            let dataArea := array_dataslot_t_string_storage(array)\\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\\n            if lt(startIndex, 32) { deleteStart := dataArea }\\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\\n        }\\n\\n    }\\n\\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shr(bits, value)\\n\\n    }\\n\\n    function mask_bytes_dynamic(data, bytes) -> result {\\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\\n        result := and(data, mask)\\n    }\\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\\n        // we want to save only elements that are part of the array after resizing\\n        // others should be set to zero\\n        data := mask_bytes_dynamic(data, len)\\n        used := or(data, mul(2, len))\\n    }\\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\\n\\n        let newLen := array_length_t_string_memory_ptr(src)\\n        // Make sure array length is sane\\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        let oldLen := extract_byte_array_length(sload(slot))\\n\\n        // potentially truncate data\\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\\n\\n        let srcOffset := 0\\n\\n        srcOffset := 0x20\\n\\n        switch gt(newLen, 31)\\n        case 1 {\\n            let loopEnd := and(newLen, not(0x1f))\\n\\n            let dstPtr := array_dataslot_t_string_storage(slot)\\n            let i := 0\\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\\n                sstore(dstPtr, mload(add(src, srcOffset)))\\n                dstPtr := add(dstPtr, 1)\\n                srcOffset := add(srcOffset, 32)\\n            }\\n            if lt(loopEnd, newLen) {\\n                let lastValue := mload(add(src, srcOffset))\\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\\n            }\\n            sstore(slot, add(mul(newLen, 2), 1))\\n        }\\n        default {\\n            let value := 0\\n            if newLen {\\n                value := mload(add(src, srcOffset))\\n            }\\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\\n        }\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"sourceMap":"92:1705:6:-:0;;;329:306;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;497:3;489:11;;;;;;517:5;510:4;:12;;;;;;:::i;:::-;;546:10;532:24;;;;;;585:10;566:29;;;;;;620:8;605:12;:23;;;;329:306;;;;;92:1705;;7:75:17;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1150::-;3153:6;3161;3169;3177;3185;3234:3;3222:9;3213:7;3209:23;3205:33;3202:120;;;3241:79;;:::i;:::-;3202:120;3382:1;3371:9;3367:17;3361:24;3412:18;3404:6;3401:30;3398:117;;;3434:79;;:::i;:::-;3398:117;3539:74;3605:7;3596:6;3585:9;3581:22;3539:74;:::i;:::-;3529:84;;3332:291;3662:2;3688:64;3744:7;3735:6;3724:9;3720:22;3688:64;:::i;:::-;3678:74;;3633:129;3801:2;3827:64;3883:7;3874:6;3863:9;3859:22;3827:64;:::i;:::-;3817:74;;3772:129;3940:2;3966:64;4022:7;4013:6;4002:9;3998:22;3966:64;:::i;:::-;3956:74;;3911:129;4079:3;4106:64;4162:7;4153:6;4142:9;4138:22;4106:64;:::i;:::-;4096:74;;4050:130;3037:1150;;;;;;;;:::o;4193:99::-;4245:6;4279:5;4273:12;4263:22;;4193:99;;;:::o;4298:180::-;4346:77;4343:1;4336:88;4443:4;4440:1;4433:15;4467:4;4464:1;4457:15;4484:320;4528:6;4565:1;4559:4;4555:12;4545:22;;4612:1;4606:4;4602:12;4633:18;4623:81;;4689:4;4681:6;4677:17;4667:27;;4623:81;4751:2;4743:6;4740:14;4720:18;4717:38;4714:84;;4770:18;;:::i;:::-;4714:84;4535:269;4484:320;;;:::o;4810:141::-;4859:4;4882:3;4874:11;;4905:3;4902:1;4895:14;4939:4;4936:1;4926:18;4918:26;;4810:141;;;:::o;4957:93::-;4994:6;5041:2;5036;5029:5;5025:14;5021:23;5011:33;;4957:93;;;:::o;5056:107::-;5100:8;5150:5;5144:4;5140:16;5119:37;;5056:107;;;;:::o;5169:393::-;5238:6;5288:1;5276:10;5272:18;5311:97;5341:66;5330:9;5311:97;:::i;:::-;5429:39;5459:8;5448:9;5429:39;:::i;:::-;5417:51;;5501:4;5497:9;5490:5;5486:21;5477:30;;5550:4;5540:8;5536:19;5529:5;5526:30;5516:40;;5245:317;;5169:393;;;;;:::o;5568:60::-;5596:3;5617:5;5610:12;;5568:60;;;:::o;5634:142::-;5684:9;5717:53;5735:34;5744:24;5762:5;5744:24;:::i;:::-;5735:34;:::i;:::-;5717:53;:::i;:::-;5704:66;;5634:142;;;:::o;5782:75::-;5825:3;5846:5;5839:12;;5782:75;;;:::o;5863:269::-;5973:39;6004:7;5973:39;:::i;:::-;6034:91;6083:41;6107:16;6083:41;:::i;:::-;6075:6;6068:4;6062:11;6034:91;:::i;:::-;6028:4;6021:105;5939:193;5863:269;;;:::o;6138:73::-;6183:3;6138:73;:::o;6217:189::-;6294:32;;:::i;:::-;6335:65;6393:6;6385;6379:4;6335:65;:::i;:::-;6270:136;6217:189;;:::o;6412:186::-;6472:120;6489:3;6482:5;6479:14;6472:120;;;6543:39;6580:1;6573:5;6543:39;:::i;:::-;6516:1;6509:5;6505:13;6496:22;;6472:120;;;6412:186;;:::o;6604:543::-;6705:2;6700:3;6697:11;6694:446;;;6739:38;6771:5;6739:38;:::i;:::-;6823:29;6841:10;6823:29;:::i;:::-;6813:8;6809:44;7006:2;6994:10;6991:18;6988:49;;;7027:8;7012:23;;6988:49;7050:80;7106:22;7124:3;7106:22;:::i;:::-;7096:8;7092:37;7079:11;7050:80;:::i;:::-;6709:431;;6694:446;6604:543;;;:::o;7153:117::-;7207:8;7257:5;7251:4;7247:16;7226:37;;7153:117;;;;:::o;7276:169::-;7320:6;7353:51;7401:1;7397:6;7389:5;7386:1;7382:13;7353:51;:::i;:::-;7349:56;7434:4;7428;7424:15;7414:25;;7327:118;7276:169;;;;:::o;7450:295::-;7526:4;7672:29;7697:3;7691:4;7672:29;:::i;:::-;7664:37;;7734:3;7731:1;7727:11;7721:4;7718:21;7710:29;;7450:295;;;;:::o;7750:1395::-;7867:37;7900:3;7867:37;:::i;:::-;7969:18;7961:6;7958:30;7955:56;;;7991:18;;:::i;:::-;7955:56;8035:38;8067:4;8061:11;8035:38;:::i;:::-;8120:67;8180:6;8172;8166:4;8120:67;:::i;:::-;8214:1;8238:4;8225:17;;8270:2;8262:6;8259:14;8287:1;8282:618;;;;8944:1;8961:6;8958:77;;;9010:9;9005:3;9001:19;8995:26;8986:35;;8958:77;9061:67;9121:6;9114:5;9061:67;:::i;:::-;9055:4;9048:81;8917:222;8252:887;;8282:618;8334:4;8330:9;8322:6;8318:22;8368:37;8400:4;8368:37;:::i;:::-;8427:1;8441:208;8455:7;8452:1;8449:14;8441:208;;;8534:9;8529:3;8525:19;8519:26;8511:6;8504:42;8585:1;8577:6;8573:14;8563:24;;8632:2;8621:9;8617:18;8604:31;;8478:4;8475:1;8471:12;8466:17;;8441:208;;;8677:6;8668:7;8665:19;8662:179;;;8735:9;8730:3;8726:19;8720:26;8778:48;8820:4;8812:6;8808:17;8797:9;8778:48;:::i;:::-;8770:6;8763:64;8685:156;8662:179;8887:1;8883;8875:6;8871:14;8867:22;8861:4;8854:36;8289:611;;;8252:887;;7842:1303;;;7750:1395;;:::o;92:1705:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","deployedSourceMap":"92:1705:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;914:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;726:76;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1088:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;641:79;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1284:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1382:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1467:328;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1004:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1180:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;808:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;914:84;955:13;987:4;980:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;914:84;:::o;726:76::-;789:6;781:5;;:14;;;;;;;;;;;;;;;;;;726:76;:::o;1088:86::-;1130:7;1156:11;1149:18;;1088:86;:::o;641:79::-;708:5;701:4;:12;;;;;;:::i;:::-;;641:79;:::o;1284:92::-;1331:7;1357:12;;1350:19;;1284:92;:::o;1382:79::-;1424:6;1449:5;;;;;;;;;;;1442:12;;1382:79;:::o;1467:328::-;1520:13;1543:7;1560;1577;1594;1611:6;1655:4;1673:5;1692:11;1717:16;1747:12;;1773:5;;;;;;;;;;;1634:154;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1467:328;;;;;;:::o;1004:78::-;1044:7;1070:5;1063:12;;1004:78;:::o;1180:98::-;1229:7;1255:16;1248:23;;1180:98;:::o;808:100::-;888:13;873:12;:28;;;;808:100;:::o;7:99:17:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:89;1712:7;1752:6;1745:5;1741:18;1730:29;;1676:89;;;:::o;1771:120::-;1843:23;1860:5;1843:23;:::i;:::-;1836:5;1833:34;1823:62;;1881:1;1878;1871:12;1823:62;1771:120;:::o;1897:137::-;1942:5;1980:6;1967:20;1958:29;;1996:32;2022:5;1996:32;:::i;:::-;1897:137;;;;:::o;2040:327::-;2098:6;2147:2;2135:9;2126:7;2122:23;2118:32;2115:119;;;2153:79;;:::i;:::-;2115:119;2273:1;2298:52;2342:7;2333:6;2322:9;2318:22;2298:52;:::i;:::-;2288:62;;2244:116;2040:327;;;;:::o;2373:77::-;2410:7;2439:5;2428:16;;2373:77;;;:::o;2456:118::-;2543:24;2561:5;2543:24;:::i;:::-;2538:3;2531:37;2456:118;;:::o;2580:222::-;2673:4;2711:2;2700:9;2696:18;2688:26;;2724:71;2792:1;2781:9;2777:17;2768:6;2724:71;:::i;:::-;2580:222;;;;:::o;2808:117::-;2917:1;2914;2907:12;2931:117;3040:1;3037;3030:12;3054:180;3102:77;3099:1;3092:88;3199:4;3196:1;3189:15;3223:4;3220:1;3213:15;3240:281;3323:27;3345:4;3323:27;:::i;:::-;3315:6;3311:40;3453:6;3441:10;3438:22;3417:18;3405:10;3402:34;3399:62;3396:88;;;3464:18;;:::i;:::-;3396:88;3504:10;3500:2;3493:22;3283:238;3240:281;;:::o;3527:129::-;3561:6;3588:20;;:::i;:::-;3578:30;;3617:33;3645:4;3637:6;3617:33;:::i;:::-;3527:129;;;:::o;3662:308::-;3724:4;3814:18;3806:6;3803:30;3800:56;;;3836:18;;:::i;:::-;3800:56;3874:29;3896:6;3874:29;:::i;:::-;3866:37;;3958:4;3952;3948:15;3940:23;;3662:308;;;:::o;3976:146::-;4073:6;4068:3;4063;4050:30;4114:1;4105:6;4100:3;4096:16;4089:27;3976:146;;;:::o;4128:425::-;4206:5;4231:66;4247:49;4289:6;4247:49;:::i;:::-;4231:66;:::i;:::-;4222:75;;4320:6;4313:5;4306:21;4358:4;4351:5;4347:16;4396:3;4387:6;4382:3;4378:16;4375:25;4372:112;;;4403:79;;:::i;:::-;4372:112;4493:54;4540:6;4535:3;4530;4493:54;:::i;:::-;4212:341;4128:425;;;;;:::o;4573:340::-;4629:5;4678:3;4671:4;4663:6;4659:17;4655:27;4645:122;;4686:79;;:::i;:::-;4645:122;4803:6;4790:20;4828:79;4903:3;4895:6;4888:4;4880:6;4876:17;4828:79;:::i;:::-;4819:88;;4635:278;4573:340;;;;:::o;4919:509::-;4988:6;5037:2;5025:9;5016:7;5012:23;5008:32;5005:119;;;5043:79;;:::i;:::-;5005:119;5191:1;5180:9;5176:17;5163:31;5221:18;5213:6;5210:30;5207:117;;;5243:79;;:::i;:::-;5207:117;5348:63;5403:7;5394:6;5383:9;5379:22;5348:63;:::i;:::-;5338:73;;5134:287;4919:509;;;;:::o;5434:115::-;5519:23;5536:5;5519:23;:::i;:::-;5514:3;5507:36;5434:115;;:::o;5555:218::-;5646:4;5684:2;5673:9;5669:18;5661:26;;5697:69;5763:1;5752:9;5748:17;5739:6;5697:69;:::i;:::-;5555:218;;;;:::o;5779:862::-;6030:4;6068:3;6057:9;6053:19;6045:27;;6118:9;6112:4;6108:20;6104:1;6093:9;6089:17;6082:47;6146:78;6219:4;6210:6;6146:78;:::i;:::-;6138:86;;6234:72;6302:2;6291:9;6287:18;6278:6;6234:72;:::i;:::-;6316;6384:2;6373:9;6369:18;6360:6;6316:72;:::i;:::-;6398;6466:2;6455:9;6451:18;6442:6;6398:72;:::i;:::-;6480:73;6548:3;6537:9;6533:19;6524:6;6480:73;:::i;:::-;6563:71;6629:3;6618:9;6614:19;6605:6;6563:71;:::i;:::-;5779:862;;;;;;;;;:::o;6647:122::-;6720:24;6738:5;6720:24;:::i;:::-;6713:5;6710:35;6700:63;;6759:1;6756;6749:12;6700:63;6647:122;:::o;6775:139::-;6821:5;6859:6;6846:20;6837:29;;6875:33;6902:5;6875:33;:::i;:::-;6775:139;;;;:::o;6920:329::-;6979:6;7028:2;7016:9;7007:7;7003:23;6999:32;6996:119;;;7034:79;;:::i;:::-;6996:119;7154:1;7179:53;7224:7;7215:6;7204:9;7200:22;7179:53;:::i;:::-;7169:63;;7125:117;6920:329;;;;:::o;7255:180::-;7303:77;7300:1;7293:88;7400:4;7397:1;7390:15;7424:4;7421:1;7414:15;7441:320;7485:6;7522:1;7516:4;7512:12;7502:22;;7569:1;7563:4;7559:12;7590:18;7580:81;;7646:4;7638:6;7634:17;7624:27;;7580:81;7708:2;7700:6;7697:14;7677:18;7674:38;7671:84;;7727:18;;:::i;:::-;7671:84;7492:269;7441:320;;;:::o;7767:141::-;7816:4;7839:3;7831:11;;7862:3;7859:1;7852:14;7896:4;7893:1;7883:18;7875:26;;7767:141;;;:::o;7914:93::-;7951:6;7998:2;7993;7986:5;7982:14;7978:23;7968:33;;7914:93;;;:::o;8013:107::-;8057:8;8107:5;8101:4;8097:16;8076:37;;8013:107;;;;:::o;8126:393::-;8195:6;8245:1;8233:10;8229:18;8268:97;8298:66;8287:9;8268:97;:::i;:::-;8386:39;8416:8;8405:9;8386:39;:::i;:::-;8374:51;;8458:4;8454:9;8447:5;8443:21;8434:30;;8507:4;8497:8;8493:19;8486:5;8483:30;8473:40;;8202:317;;8126:393;;;;;:::o;8525:60::-;8553:3;8574:5;8567:12;;8525:60;;;:::o;8591:142::-;8641:9;8674:53;8692:34;8701:24;8719:5;8701:24;:::i;:::-;8692:34;:::i;:::-;8674:53;:::i;:::-;8661:66;;8591:142;;;:::o;8739:75::-;8782:3;8803:5;8796:12;;8739:75;;;:::o;8820:269::-;8930:39;8961:7;8930:39;:::i;:::-;8991:91;9040:41;9064:16;9040:41;:::i;:::-;9032:6;9025:4;9019:11;8991:91;:::i;:::-;8985:4;8978:105;8896:193;8820:269;;;:::o;9095:73::-;9140:3;9095:73;:::o;9174:189::-;9251:32;;:::i;:::-;9292:65;9350:6;9342;9336:4;9292:65;:::i;:::-;9227:136;9174:189;;:::o;9369:186::-;9429:120;9446:3;9439:5;9436:14;9429:120;;;9500:39;9537:1;9530:5;9500:39;:::i;:::-;9473:1;9466:5;9462:13;9453:22;;9429:120;;;9369:186;;:::o;9561:543::-;9662:2;9657:3;9654:11;9651:446;;;9696:38;9728:5;9696:38;:::i;:::-;9780:29;9798:10;9780:29;:::i;:::-;9770:8;9766:44;9963:2;9951:10;9948:18;9945:49;;;9984:8;9969:23;;9945:49;10007:80;10063:22;10081:3;10063:22;:::i;:::-;10053:8;10049:37;10036:11;10007:80;:::i;:::-;9666:431;;9651:446;9561:543;;;:::o;10110:117::-;10164:8;10214:5;10208:4;10204:16;10183:37;;10110:117;;;;:::o;10233:169::-;10277:6;10310:51;10358:1;10354:6;10346:5;10343:1;10339:13;10310:51;:::i;:::-;10306:56;10391:4;10385;10381:15;10371:25;;10284:118;10233:169;;;;:::o;10407:295::-;10483:4;10629:29;10654:3;10648:4;10629:29;:::i;:::-;10621:37;;10691:3;10688:1;10684:11;10678:4;10675:21;10667:29;;10407:295;;;;:::o;10707:1395::-;10824:37;10857:3;10824:37;:::i;:::-;10926:18;10918:6;10915:30;10912:56;;;10948:18;;:::i;:::-;10912:56;10992:38;11024:4;11018:11;10992:38;:::i;:::-;11077:67;11137:6;11129;11123:4;11077:67;:::i;:::-;11171:1;11195:4;11182:17;;11227:2;11219:6;11216:14;11244:1;11239:618;;;;11901:1;11918:6;11915:77;;;11967:9;11962:3;11958:19;11952:26;11943:35;;11915:77;12018:67;12078:6;12071:5;12018:67;:::i;:::-;12012:4;12005:81;11874:222;11209:887;;11239:618;11291:4;11287:9;11279:6;11275:22;11325:37;11357:4;11325:37;:::i;:::-;11384:1;11398:208;11412:7;11409:1;11406:14;11398:208;;;11491:9;11486:3;11482:19;11476:26;11468:6;11461:42;11542:1;11534:6;11530:14;11520:24;;11589:2;11578:9;11574:18;11561:31;;11435:4;11432:1;11428:12;11423:17;;11398:208;;;11634:6;11625:7;11622:19;11619:179;;;11692:9;11687:3;11683:19;11677:26;11735:48;11777:4;11769:6;11765:17;11754:9;11735:48;:::i;:::-;11727:6;11720:64;11642:156;11619:179;11844:1;11840;11832:6;11828:14;11824:22;11818:4;11811:36;11246:611;;;11209:887;;10799:1303;;;10707:1395;;:::o","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n// TODO: Implement access control\\n\\ncontract Driver {\\n\\n    string private name;\\n    uint256 private immutable i_licenseNo;\\n    uint256 private immutable i_NID;\\n    uint256 private immutable i_lic_issue_date;\\n    uint256 private lic_exp_date;\\n    uint16 private score;\\n\\n    constructor(\\n        string memory _name,\\n        uint256 NID,\\n        uint256 _licenseNo,\\n        uint256 issue_date,\\n        uint256 exp_date\\n    ) {\\n        i_NID = NID;\\n        name = _name;\\n        i_licenseNo = _licenseNo;\\n        i_lic_issue_date = issue_date;\\n        lic_exp_date = exp_date;\\n    }\\n\\n    function changeName(string memory _name) external {\\n        name = _name;\\n    }\\n\\n    function updateScore(uint16 _score) external {\\n        score = _score;\\n    }\\n\\n    function updateExpDate(uint256 _lic_exp_date) external {\\n        lic_exp_date = _lic_exp_date;\\n    }\\n\\n    function getName() external view returns(string memory) {\\n        return name;\\n    }\\n\\n    function getNID() external view returns(uint256) {\\n        return i_NID;\\n    }\\n\\n    function getLicNo() external view returns(uint256) {\\n        return i_licenseNo;\\n    }\\n\\n    function getLicIssueDate() external view returns(uint256) {\\n        return i_lic_issue_date;\\n    }\\n\\n    function getLicExpDate() external view returns(uint256) {\\n        return lic_exp_date;\\n    }\\n\\n    function getScore() external view returns(uint16) {\\n        return score;\\n    }\\n\\n    function getAllInfo() external view returns(\\n        string memory,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint16\\n    ) {\\n        return (\\n            name,\\n            i_NID,\\n            i_licenseNo,\\n            i_lic_issue_date,\\n            lic_exp_date,\\n            score\\n        );\\n    }\\n}\\n","sourcePath":"C:\\\\Users\\\\samin\\\\Documents\\\\Projects\\\\AWT\\\\TraffiChain\\\\contracts\\\\Driver.sol","ast":{"absolutePath":"project:/contracts/Driver.sol","exportedSymbols":{"Driver":[827]},"id":828,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Driver","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":827,"linearizedBaseContracts":[827],"name":"Driver","nameLocation":"101:6:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":680,"mutability":"mutable","name":"name","nameLocation":"130:4:6","nodeType":"VariableDeclaration","scope":827,"src":"115:19:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"115:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":682,"mutability":"immutable","name":"i_licenseNo","nameLocation":"166:11:6","nodeType":"VariableDeclaration","scope":827,"src":"140:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"140:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":684,"mutability":"immutable","name":"i_NID","nameLocation":"209:5:6","nodeType":"VariableDeclaration","scope":827,"src":"183:31:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"183:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":686,"mutability":"immutable","name":"i_lic_issue_date","nameLocation":"246:16:6","nodeType":"VariableDeclaration","scope":827,"src":"220:42:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"220:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":688,"mutability":"mutable","name":"lic_exp_date","nameLocation":"284:12:6","nodeType":"VariableDeclaration","scope":827,"src":"268:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"268:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":690,"mutability":"mutable","name":"score","nameLocation":"317:5:6","nodeType":"VariableDeclaration","scope":827,"src":"302:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":689,"name":"uint16","nodeType":"ElementaryTypeName","src":"302:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"private"},{"body":{"id":723,"nodeType":"Block","src":"479:156:6","statements":[{"expression":{"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":703,"name":"i_NID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"489:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":704,"name":"NID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"497:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"489:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":706,"nodeType":"ExpressionStatement","src":"489:11:6"},{"expression":{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":707,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"510:4:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":708,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"517:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"510:12:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":710,"nodeType":"ExpressionStatement","src":"510:12:6"},{"expression":{"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":711,"name":"i_licenseNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"532:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":712,"name":"_licenseNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"546:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"532:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":714,"nodeType":"ExpressionStatement","src":"532:24:6"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":715,"name":"i_lic_issue_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"566:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":716,"name":"issue_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"585:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"566:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":718,"nodeType":"ExpressionStatement","src":"566:29:6"},{"expression":{"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":719,"name":"lic_exp_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"605:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":720,"name":"exp_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"620:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"605:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":722,"nodeType":"ExpressionStatement","src":"605:23:6"}]},"id":724,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"_name","nameLocation":"364:5:6","nodeType":"VariableDeclaration","scope":724,"src":"350:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":691,"name":"string","nodeType":"ElementaryTypeName","src":"350:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"NID","nameLocation":"387:3:6","nodeType":"VariableDeclaration","scope":724,"src":"379:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"379:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"_licenseNo","nameLocation":"408:10:6","nodeType":"VariableDeclaration","scope":724,"src":"400:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"400:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"issue_date","nameLocation":"436:10:6","nodeType":"VariableDeclaration","scope":724,"src":"428:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"exp_date","nameLocation":"464:8:6","nodeType":"VariableDeclaration","scope":724,"src":"456:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"340:138:6"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"479:0:6"},"scope":827,"src":"329:306:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":733,"nodeType":"Block","src":"691:29:6","statements":[{"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":729,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"701:4:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":730,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"708:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"701:12:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":732,"nodeType":"ExpressionStatement","src":"701:12:6"}]},"functionSelector":"5353a2d8","id":734,"implemented":true,"kind":"function","modifiers":[],"name":"changeName","nameLocation":"650:10:6","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"_name","nameLocation":"675:5:6","nodeType":"VariableDeclaration","scope":734,"src":"661:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":725,"name":"string","nodeType":"ElementaryTypeName","src":"661:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"660:21:6"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"691:0:6"},"scope":827,"src":"641:79:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":743,"nodeType":"Block","src":"771:31:6","statements":[{"expression":{"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":739,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"781:5:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":740,"name":"_score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"789:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"781:14:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":742,"nodeType":"ExpressionStatement","src":"781:14:6"}]},"functionSelector":"17fd2967","id":744,"implemented":true,"kind":"function","modifiers":[],"name":"updateScore","nameLocation":"735:11:6","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"_score","nameLocation":"754:6:6","nodeType":"VariableDeclaration","scope":744,"src":"747:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":735,"name":"uint16","nodeType":"ElementaryTypeName","src":"747:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"746:15:6"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"771:0:6"},"scope":827,"src":"726:76:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":753,"nodeType":"Block","src":"863:45:6","statements":[{"expression":{"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":749,"name":"lic_exp_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"873:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":750,"name":"_lic_exp_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"888:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"873:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":752,"nodeType":"ExpressionStatement","src":"873:28:6"}]},"functionSelector":"f92973c2","id":754,"implemented":true,"kind":"function","modifiers":[],"name":"updateExpDate","nameLocation":"817:13:6","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"_lic_exp_date","nameLocation":"839:13:6","nodeType":"VariableDeclaration","scope":754,"src":"831:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:23:6"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"863:0:6"},"scope":827,"src":"808:100:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":761,"nodeType":"Block","src":"970:28:6","statements":[{"expression":{"id":759,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"987:4:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":758,"id":760,"nodeType":"Return","src":"980:11:6"}]},"functionSelector":"17d7de7c","id":762,"implemented":true,"kind":"function","modifiers":[],"name":"getName","nameLocation":"923:7:6","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"930:2:6"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":762,"src":"955:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":756,"name":"string","nodeType":"ElementaryTypeName","src":"955:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"954:15:6"},"scope":827,"src":"914:84:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":769,"nodeType":"Block","src":"1053:29:6","statements":[{"expression":{"id":767,"name":"i_NID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"1070:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":766,"id":768,"nodeType":"Return","src":"1063:12:6"}]},"functionSelector":"d8c4661c","id":770,"implemented":true,"kind":"function","modifiers":[],"name":"getNID","nameLocation":"1013:6:6","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"1019:2:6"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":770,"src":"1044:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:9:6"},"scope":827,"src":"1004:78:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":777,"nodeType":"Block","src":"1139:35:6","statements":[{"expression":{"id":775,"name":"i_licenseNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"1156:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":774,"id":776,"nodeType":"Return","src":"1149:18:6"}]},"functionSelector":"1f810d0e","id":778,"implemented":true,"kind":"function","modifiers":[],"name":"getLicNo","nameLocation":"1097:8:6","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"1105:2:6"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"1130:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1130:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:9:6"},"scope":827,"src":"1088:86:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":785,"nodeType":"Block","src":"1238:40:6","statements":[{"expression":{"id":783,"name":"i_lic_issue_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1255:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":782,"id":784,"nodeType":"Return","src":"1248:23:6"}]},"functionSelector":"e90bf00f","id":786,"implemented":true,"kind":"function","modifiers":[],"name":"getLicIssueDate","nameLocation":"1189:15:6","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[],"src":"1204:2:6"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"1229:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:9:6"},"scope":827,"src":"1180:98:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":793,"nodeType":"Block","src":"1340:36:6","statements":[{"expression":{"id":791,"name":"lic_exp_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"1357:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":790,"id":792,"nodeType":"Return","src":"1350:19:6"}]},"functionSelector":"8c64b1f2","id":794,"implemented":true,"kind":"function","modifiers":[],"name":"getLicExpDate","nameLocation":"1293:13:6","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"1306:2:6"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":794,"src":"1331:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1330:9:6"},"scope":827,"src":"1284:92:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":801,"nodeType":"Block","src":"1432:29:6","statements":[{"expression":{"id":799,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"1449:5:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":798,"id":800,"nodeType":"Return","src":"1442:12:6"}]},"functionSelector":"afd82067","id":802,"implemented":true,"kind":"function","modifiers":[],"name":"getScore","nameLocation":"1391:8:6","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[],"src":"1399:2:6"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":802,"src":"1424:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":796,"name":"uint16","nodeType":"ElementaryTypeName","src":"1424:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1423:8:6"},"scope":827,"src":"1382:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":825,"nodeType":"Block","src":"1624:171:6","statements":[{"expression":{"components":[{"id":817,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"1655:4:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":818,"name":"i_NID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"1673:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":819,"name":"i_licenseNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"1692:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":820,"name":"i_lic_issue_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1717:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":821,"name":"lic_exp_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"1747:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":822,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"1773:5:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1641:147:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$","typeString":"tuple(string storage ref,uint256,uint256,uint256,uint256,uint16)"}},"functionReturnParameters":816,"id":824,"nodeType":"Return","src":"1634:154:6"}]},"functionSelector":"b18e15bd","id":826,"implemented":true,"kind":"function","modifiers":[],"name":"getAllInfo","nameLocation":"1476:10:6","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[],"src":"1486:2:6"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"1520:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":804,"name":"string","nodeType":"ElementaryTypeName","src":"1520:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"1543:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"1560:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"1577:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"1594:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"1611:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":814,"name":"uint16","nodeType":"ElementaryTypeName","src":"1611:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1510:113:6"},"scope":827,"src":"1467:328:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":828,"src":"92:1705:6","usedErrors":[]}],"src":"32:1766:6"},"compiler":{"name":"solc","version":"0.8.17+commit.8df45f5f.Emscripten.clang"},"networks":{},"schemaVersion":"3.4.10","updatedAt":"2022-11-28T05:49:11.847Z","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}}');

/***/ }),

/***/ "./build/contracts/DriverFactory.json":
/*!********************************************!*\
  !*** ./build/contracts/DriverFactory.json ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"DriverFactory","abi":[{"inputs":[{"internalType":"address","name":"driverWallet","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"nid","type":"uint256"},{"internalType":"uint256","name":"licenseNo","type":"uint256"},{"internalType":"uint256","name":"issue_date","type":"uint256"},{"internalType":"uint256","name":"exp_date","type":"uint256"}],"name":"createNewDriverProfile","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"driverWallet","type":"address"}],"name":"getDriverProfile","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.17+commit.8df45f5f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"driverWallet\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"name\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"nid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"licenseNo\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"issue_date\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"exp_date\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createNewDriverProfile\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"driverWallet\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getDriverProfile\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/DriverFactory.sol\\":\\"DriverFactory\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"project:/contracts/Driver.sol\\":{\\"keccak256\\":\\"0xd834e84490164126a83e6c546c7c6fbaad7497ade42fd3a2868c9427355832af\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://3b860d27562e3b6930cfa3110dc1c62d5f8b746076ee50eb550b67ccb0ecedd8\\",\\"dweb:/ipfs/QmePFKHAjMUWnnU9x9WYTXxRZaWb7R1HxNbAbM4m5nchtd\\"]},\\"project:/contracts/DriverFactory.sol\\":{\\"keccak256\\":\\"0x7b23dcd29455bdafa59fc9faec47dcabaaa4ae9fc15ef05a8e0687f722c2f964\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://d1741d30e5145caf9d11ee3e6a8b9c724b7a4d9b4215114a69af72fc29045ba2\\",\\"dweb:/ipfs/QmdRjXJWbhQ4dhKGyrDGiog6hYJPAfF1Fs7uSFZbc3aYum\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506117fd806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c806338cc4831146200004b578063722c7310146200006d578063d10a309614620000a3575b600080fd5b62000055620000c3565b60405162000064919062000251565b60405180910390f35b6200008b6004803603810190620000859190620002b3565b620000cb565b6040516200009a919062000251565b60405180910390f35b620000c16004803603810190620000bb919062000482565b62000133565b005b600030905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600085858585856040516200014890620001fe565b62000158959493929190620005d7565b604051809103906000f08015801562000175573d6000803e3d6000fd5b509050806000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b61118c806200063c83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000239826200020c565b9050919050565b6200024b816200022c565b82525050565b600060208201905062000268600083018462000240565b92915050565b6000604051905090565b600080fd5b600080fd5b6200028d816200022c565b81146200029957600080fd5b50565b600081359050620002ad8162000282565b92915050565b600060208284031215620002cc57620002cb62000278565b5b6000620002dc848285016200029c565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200033a82620002ef565b810181811067ffffffffffffffff821117156200035c576200035b62000300565b5b80604052505050565b6000620003716200026e565b90506200037f82826200032f565b919050565b600067ffffffffffffffff821115620003a257620003a162000300565b5b620003ad82620002ef565b9050602081019050919050565b82818337600083830152505050565b6000620003e0620003da8462000384565b62000365565b905082815260208101848484011115620003ff57620003fe620002ea565b5b6200040c848285620003ba565b509392505050565b600082601f8301126200042c576200042b620002e5565b5b81356200043e848260208601620003c9565b91505092915050565b6000819050919050565b6200045c8162000447565b81146200046857600080fd5b50565b6000813590506200047c8162000451565b92915050565b60008060008060008060c08789031215620004a257620004a162000278565b5b6000620004b289828a016200029c565b965050602087013567ffffffffffffffff811115620004d657620004d56200027d565b5b620004e489828a0162000414565b9550506040620004f789828a016200046b565b94505060606200050a89828a016200046b565b93505060806200051d89828a016200046b565b92505060a06200053089828a016200046b565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b60005b83811015620005795780820151818401526020810190506200055c565b60008484015250505050565b600062000592826200053d565b6200059e818562000548565b9350620005b081856020860162000559565b620005bb81620002ef565b840191505092915050565b620005d18162000447565b82525050565b600060a0820190508181036000830152620005f3818862000585565b9050620006046020830187620005c6565b620006136040830186620005c6565b620006226060830185620005c6565b620006316080830184620005c6565b969550505050505056fe60e06040523480156200001157600080fd5b506040516200118c3803806200118c833981810160405281019062000037919062000241565b8360a08181525050846000908162000050919062000529565b5082608081815250508160c0818152505080600181905550505050505062000610565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000dc8262000091565b810181811067ffffffffffffffff82111715620000fe57620000fd620000a2565b5b80604052505050565b60006200011362000073565b9050620001218282620000d1565b919050565b600067ffffffffffffffff821115620001445762000143620000a2565b5b6200014f8262000091565b9050602081019050919050565b60005b838110156200017c5780820151818401526020810190506200015f565b60008484015250505050565b60006200019f620001998462000126565b62000107565b905082815260208101848484011115620001be57620001bd6200008c565b5b620001cb8482856200015c565b509392505050565b600082601f830112620001eb57620001ea62000087565b5b8151620001fd84826020860162000188565b91505092915050565b6000819050919050565b6200021b8162000206565b81146200022757600080fd5b50565b6000815190506200023b8162000210565b92915050565b600080600080600060a0868803121562000260576200025f6200007d565b5b600086015167ffffffffffffffff81111562000281576200028062000082565b5b6200028f88828901620001d3565b9550506020620002a2888289016200022a565b9450506040620002b5888289016200022a565b9350506060620002c8888289016200022a565b9250506080620002db888289016200022a565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200033b57607f821691505b602082108103620003515762000350620002f3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003bb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200037c565b620003c786836200037c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200040a62000404620003fe8462000206565b620003df565b62000206565b9050919050565b6000819050919050565b6200042683620003e9565b6200043e620004358262000411565b84845462000389565b825550505050565b600090565b6200045562000446565b620004628184846200041b565b505050565b5b818110156200048a576200047e6000826200044b565b60018101905062000468565b5050565b601f821115620004d957620004a38162000357565b620004ae846200036c565b81016020851015620004be578190505b620004d6620004cd856200036c565b83018262000467565b50505b505050565b600082821c905092915050565b6000620004fe60001984600802620004de565b1980831691505092915050565b6000620005198383620004eb565b9150826002028217905092915050565b6200053482620002e8565b67ffffffffffffffff81111562000550576200054f620000a2565b5b6200055c825462000322565b620005698282856200048e565b600060209050601f831160018114620005a157600084156200058c578287015190505b6200059885826200050b565b86555062000608565b601f198416620005b18662000357565b60005b82811015620005db57848901518255600182019150602085019450602081019050620005b4565b86831015620005fb5784890151620005f7601f891682620004eb565b8355505b6001600288020188555050505b505050505050565b60805160a05160c051610b37620006556000396000818161032c015261042b0152600081816102ea0152610403015260008181610284015261030b0152610b376000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063afd8206711610066578063afd8206714610135578063b18e15bd14610153578063d8c4661c14610176578063e90bf00f14610194578063f92973c2146101b25761009e565b806317d7de7c146100a357806317fd2967146100c15780631f810d0e146100dd5780635353a2d8146100fb5780638c64b1f214610117575b600080fd5b6100ab6101ce565b6040516100b891906104e9565b60405180910390f35b6100db60048036038101906100d69190610559565b610260565b005b6100e5610280565b6040516100f2919061059f565b60405180910390f35b610115600480360381019061011091906106ef565b6102a8565b005b61011f6102bb565b60405161012c919061059f565b60405180910390f35b61013d6102c5565b60405161014a9190610747565b60405180910390f35b61015b6102dd565b60405161016d96959493929190610762565b60405180910390f35b61017e6103ff565b60405161018b919061059f565b60405180910390f35b61019c610427565b6040516101a9919061059f565b60405180910390f35b6101cc60048036038101906101c791906107f6565b61044f565b005b6060600080546101dd90610852565b80601f016020809104026020016040519081016040528092919081815260200182805461020990610852565b80156102565780601f1061022b57610100808354040283529160200191610256565b820191906000526020600020905b81548152906001019060200180831161023957829003601f168201915b5050505050905090565b80600260006101000a81548161ffff021916908361ffff16021790555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b80600090816102b79190610a2f565b5050565b6000600154905090565b6000600260009054906101000a900461ffff16905090565b60606000806000806000807f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000600154600260009054906101000a900461ffff1685805461036b90610852565b80601f016020809104026020016040519081016040528092919081815260200182805461039790610852565b80156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b50505050509550955095509550955095509550909192939495565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b8060018190555050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610493578082015181840152602081019050610478565b60008484015250505050565b6000601f19601f8301169050919050565b60006104bb82610459565b6104c58185610464565b93506104d5818560208601610475565b6104de8161049f565b840191505092915050565b6000602082019050818103600083015261050381846104b0565b905092915050565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6105368161051f565b811461054157600080fd5b50565b6000813590506105538161052d565b92915050565b60006020828403121561056f5761056e610515565b5b600061057d84828501610544565b91505092915050565b6000819050919050565b61059981610586565b82525050565b60006020820190506105b46000830184610590565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105fc8261049f565b810181811067ffffffffffffffff8211171561061b5761061a6105c4565b5b80604052505050565b600061062e61050b565b905061063a82826105f3565b919050565b600067ffffffffffffffff82111561065a576106596105c4565b5b6106638261049f565b9050602081019050919050565b82818337600083830152505050565b600061069261068d8461063f565b610624565b9050828152602081018484840111156106ae576106ad6105bf565b5b6106b9848285610670565b509392505050565b600082601f8301126106d6576106d56105ba565b5b81356106e684826020860161067f565b91505092915050565b60006020828403121561070557610704610515565b5b600082013567ffffffffffffffff8111156107235761072261051a565b5b61072f848285016106c1565b91505092915050565b6107418161051f565b82525050565b600060208201905061075c6000830184610738565b92915050565b600060c082019050818103600083015261077c81896104b0565b905061078b6020830188610590565b6107986040830187610590565b6107a56060830186610590565b6107b26080830185610590565b6107bf60a0830184610738565b979650505050505050565b6107d381610586565b81146107de57600080fd5b50565b6000813590506107f0816107ca565b92915050565b60006020828403121561080c5761080b610515565b5b600061081a848285016107e1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061086a57607f821691505b60208210810361087d5761087c610823565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108e57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108a8565b6108ef86836108a8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061092c61092761092284610586565b610907565b610586565b9050919050565b6000819050919050565b61094683610911565b61095a61095282610933565b8484546108b5565b825550505050565b600090565b61096f610962565b61097a81848461093d565b505050565b5b8181101561099e57610993600082610967565b600181019050610980565b5050565b601f8211156109e3576109b481610883565b6109bd84610898565b810160208510156109cc578190505b6109e06109d885610898565b83018261097f565b50505b505050565b600082821c905092915050565b6000610a06600019846008026109e8565b1980831691505092915050565b6000610a1f83836109f5565b9150826002028217905092915050565b610a3882610459565b67ffffffffffffffff811115610a5157610a506105c4565b5b610a5b8254610852565b610a668282856109a2565b600060209050601f831160018114610a995760008415610a87578287015190505b610a918582610a13565b865550610af9565b601f198416610aa786610883565b60005b82811015610acf57848901518255600182019150602085019450602081019050610aaa565b86831015610aec5784890151610ae8601f8916826109f5565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220ee21ad9613442649cc538caa5b969e0ce81c0dc44e42e5a167f56244a3c4fe4f64736f6c63430008110033a264697066735822122000129e2f8ffdd92f3864e96254db057352c2150857a303875eed7a34f10f951864736f6c63430008110033","deployedBytecode":"","immutableReferences":{},"generatedSources":[],"deployedGeneratedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7143:17","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:17","statements":[{"nodeType":"YulAssignment","src":"62:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:17"},"nodeType":"YulFunctionCall","src":"73:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:17","type":""}],"src":"7:126:17"},{"body":{"nodeType":"YulBlock","src":"184:51:17","statements":[{"nodeType":"YulAssignment","src":"194:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:17"},"nodeType":"YulFunctionCall","src":"205:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:17","type":""}],"src":"139:96:17"},{"body":{"nodeType":"YulBlock","src":"306:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:17"},"nodeType":"YulFunctionCall","src":"328:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:17"},"nodeType":"YulFunctionCall","src":"316:37:17"},"nodeType":"YulExpressionStatement","src":"316:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:17","type":""}],"src":"241:118:17"},{"body":{"nodeType":"YulBlock","src":"463:124:17","statements":[{"nodeType":"YulAssignment","src":"473:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:17"},"nodeType":"YulFunctionCall","src":"481:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:17"},"nodeType":"YulFunctionCall","src":"562:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:17"},"nodeType":"YulFunctionCall","src":"509:71:17"},"nodeType":"YulExpressionStatement","src":"509:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:17","type":""}],"src":"365:222:17"},{"body":{"nodeType":"YulBlock","src":"633:35:17","statements":[{"nodeType":"YulAssignment","src":"643:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:17"},"nodeType":"YulFunctionCall","src":"653:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:17","type":""}],"src":"593:75:17"},{"body":{"nodeType":"YulBlock","src":"763:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:17"},"nodeType":"YulFunctionCall","src":"773:12:17"},"nodeType":"YulExpressionStatement","src":"773:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:17"},{"body":{"nodeType":"YulBlock","src":"886:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:17"},"nodeType":"YulFunctionCall","src":"896:12:17"},"nodeType":"YulExpressionStatement","src":"896:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:17"},{"body":{"nodeType":"YulBlock","src":"963:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:17"},"nodeType":"YulFunctionCall","src":"1022:12:17"},"nodeType":"YulExpressionStatement","src":"1022:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:17"},"nodeType":"YulFunctionCall","src":"993:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:17"},"nodeType":"YulFunctionCall","src":"983:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:17"},"nodeType":"YulFunctionCall","src":"976:43:17"},"nodeType":"YulIf","src":"973:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:17","type":""}],"src":"920:122:17"},{"body":{"nodeType":"YulBlock","src":"1100:87:17","statements":[{"nodeType":"YulAssignment","src":"1110:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:17"},"nodeType":"YulFunctionCall","src":"1119:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:17"},"nodeType":"YulFunctionCall","src":"1148:33:17"},"nodeType":"YulExpressionStatement","src":"1148:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:17","type":""}],"src":"1048:139:17"},{"body":{"nodeType":"YulBlock","src":"1259:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:17"},"nodeType":"YulFunctionCall","src":"1307:79:17"},"nodeType":"YulExpressionStatement","src":"1307:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:17"},"nodeType":"YulFunctionCall","src":"1276:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:17"},"nodeType":"YulFunctionCall","src":"1272:32:17"},"nodeType":"YulIf","src":"1269:119:17"},{"nodeType":"YulBlock","src":"1398:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:17"},"nodeType":"YulFunctionCall","src":"1473:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:17"},"nodeType":"YulFunctionCall","src":"1452:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:17","type":""}],"src":"1193:329:17"},{"body":{"nodeType":"YulBlock","src":"1617:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1634:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1637:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1627:6:17"},"nodeType":"YulFunctionCall","src":"1627:12:17"},"nodeType":"YulExpressionStatement","src":"1627:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1528:117:17"},{"body":{"nodeType":"YulBlock","src":"1740:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1757:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1760:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1750:6:17"},"nodeType":"YulFunctionCall","src":"1750:12:17"},"nodeType":"YulExpressionStatement","src":"1750:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1651:117:17"},{"body":{"nodeType":"YulBlock","src":"1822:54:17","statements":[{"nodeType":"YulAssignment","src":"1832:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1850:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1857:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1846:3:17"},"nodeType":"YulFunctionCall","src":"1846:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1866:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1862:3:17"},"nodeType":"YulFunctionCall","src":"1862:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1842:3:17"},"nodeType":"YulFunctionCall","src":"1842:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1832:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1805:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1815:6:17","type":""}],"src":"1774:102:17"},{"body":{"nodeType":"YulBlock","src":"1910:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1927:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1930:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1920:6:17"},"nodeType":"YulFunctionCall","src":"1920:88:17"},"nodeType":"YulExpressionStatement","src":"1920:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2024:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2027:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2017:6:17"},"nodeType":"YulFunctionCall","src":"2017:15:17"},"nodeType":"YulExpressionStatement","src":"2017:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2048:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2051:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2041:6:17"},"nodeType":"YulFunctionCall","src":"2041:15:17"},"nodeType":"YulExpressionStatement","src":"2041:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1882:180:17"},{"body":{"nodeType":"YulBlock","src":"2111:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2121:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2143:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2173:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2151:21:17"},"nodeType":"YulFunctionCall","src":"2151:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2139:3:17"},"nodeType":"YulFunctionCall","src":"2139:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2125:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2290:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2292:16:17"},"nodeType":"YulFunctionCall","src":"2292:18:17"},"nodeType":"YulExpressionStatement","src":"2292:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2233:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"2245:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2230:2:17"},"nodeType":"YulFunctionCall","src":"2230:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2269:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2281:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2266:2:17"},"nodeType":"YulFunctionCall","src":"2266:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2227:2:17"},"nodeType":"YulFunctionCall","src":"2227:62:17"},"nodeType":"YulIf","src":"2224:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2332:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2321:6:17"},"nodeType":"YulFunctionCall","src":"2321:22:17"},"nodeType":"YulExpressionStatement","src":"2321:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2097:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"2105:4:17","type":""}],"src":"2068:281:17"},{"body":{"nodeType":"YulBlock","src":"2396:88:17","statements":[{"nodeType":"YulAssignment","src":"2406:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2416:18:17"},"nodeType":"YulFunctionCall","src":"2416:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2406:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2465:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"2473:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2445:19:17"},"nodeType":"YulFunctionCall","src":"2445:33:17"},"nodeType":"YulExpressionStatement","src":"2445:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2380:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2389:6:17","type":""}],"src":"2355:129:17"},{"body":{"nodeType":"YulBlock","src":"2557:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"2662:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2664:16:17"},"nodeType":"YulFunctionCall","src":"2664:18:17"},"nodeType":"YulExpressionStatement","src":"2664:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2634:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2642:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2631:2:17"},"nodeType":"YulFunctionCall","src":"2631:30:17"},"nodeType":"YulIf","src":"2628:56:17"},{"nodeType":"YulAssignment","src":"2694:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2724:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2702:21:17"},"nodeType":"YulFunctionCall","src":"2702:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2694:4:17"}]},{"nodeType":"YulAssignment","src":"2768:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2780:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"2786:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2776:3:17"},"nodeType":"YulFunctionCall","src":"2776:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2768:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2541:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2552:4:17","type":""}],"src":"2490:308:17"},{"body":{"nodeType":"YulBlock","src":"2868:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2891:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"2896:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2901:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2878:12:17"},"nodeType":"YulFunctionCall","src":"2878:30:17"},"nodeType":"YulExpressionStatement","src":"2878:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2928:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2933:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2924:3:17"},"nodeType":"YulFunctionCall","src":"2924:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"2942:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2917:6:17"},"nodeType":"YulFunctionCall","src":"2917:27:17"},"nodeType":"YulExpressionStatement","src":"2917:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2850:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2855:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2860:6:17","type":""}],"src":"2804:146:17"},{"body":{"nodeType":"YulBlock","src":"3040:341:17","statements":[{"nodeType":"YulAssignment","src":"3050:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3117:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3075:41:17"},"nodeType":"YulFunctionCall","src":"3075:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3059:15:17"},"nodeType":"YulFunctionCall","src":"3059:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3050:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3141:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"3148:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3134:6:17"},"nodeType":"YulFunctionCall","src":"3134:21:17"},"nodeType":"YulExpressionStatement","src":"3134:21:17"},{"nodeType":"YulVariableDeclaration","src":"3164:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3179:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3186:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:17"},"nodeType":"YulFunctionCall","src":"3175:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3168:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3229:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"3231:77:17"},"nodeType":"YulFunctionCall","src":"3231:79:17"},"nodeType":"YulExpressionStatement","src":"3231:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3210:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"3215:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3206:3:17"},"nodeType":"YulFunctionCall","src":"3206:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"3224:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3203:2:17"},"nodeType":"YulFunctionCall","src":"3203:25:17"},"nodeType":"YulIf","src":"3200:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3358:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"3363:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"3368:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3321:36:17"},"nodeType":"YulFunctionCall","src":"3321:54:17"},"nodeType":"YulExpressionStatement","src":"3321:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3013:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"3018:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3026:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3034:5:17","type":""}],"src":"2956:425:17"},{"body":{"nodeType":"YulBlock","src":"3463:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"3512:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3514:77:17"},"nodeType":"YulFunctionCall","src":"3514:79:17"},"nodeType":"YulExpressionStatement","src":"3514:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3491:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3499:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3487:3:17"},"nodeType":"YulFunctionCall","src":"3487:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"3506:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3483:3:17"},"nodeType":"YulFunctionCall","src":"3483:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3476:6:17"},"nodeType":"YulFunctionCall","src":"3476:35:17"},"nodeType":"YulIf","src":"3473:122:17"},{"nodeType":"YulVariableDeclaration","src":"3604:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3631:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3618:12:17"},"nodeType":"YulFunctionCall","src":"3618:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3608:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3647:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3708:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3716:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3704:3:17"},"nodeType":"YulFunctionCall","src":"3704:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"3723:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"3731:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3656:47:17"},"nodeType":"YulFunctionCall","src":"3656:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3647:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3441:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3449:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3457:5:17","type":""}],"src":"3401:340:17"},{"body":{"nodeType":"YulBlock","src":"3792:32:17","statements":[{"nodeType":"YulAssignment","src":"3802:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"3813:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3802:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3774:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3784:7:17","type":""}],"src":"3747:77:17"},{"body":{"nodeType":"YulBlock","src":"3873:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"3930:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3939:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3942:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3932:6:17"},"nodeType":"YulFunctionCall","src":"3932:12:17"},"nodeType":"YulExpressionStatement","src":"3932:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3896:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3921:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3903:17:17"},"nodeType":"YulFunctionCall","src":"3903:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3893:2:17"},"nodeType":"YulFunctionCall","src":"3893:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3886:6:17"},"nodeType":"YulFunctionCall","src":"3886:43:17"},"nodeType":"YulIf","src":"3883:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3866:5:17","type":""}],"src":"3830:122:17"},{"body":{"nodeType":"YulBlock","src":"4010:87:17","statements":[{"nodeType":"YulAssignment","src":"4020:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4042:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4029:12:17"},"nodeType":"YulFunctionCall","src":"4029:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4020:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4085:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4058:26:17"},"nodeType":"YulFunctionCall","src":"4058:33:17"},"nodeType":"YulExpressionStatement","src":"4058:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3988:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3996:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4004:5:17","type":""}],"src":"3958:139:17"},{"body":{"nodeType":"YulBlock","src":"4264:1076:17","statements":[{"body":{"nodeType":"YulBlock","src":"4311:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4313:77:17"},"nodeType":"YulFunctionCall","src":"4313:79:17"},"nodeType":"YulExpressionStatement","src":"4313:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4285:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4294:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4281:3:17"},"nodeType":"YulFunctionCall","src":"4281:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4306:3:17","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4277:3:17"},"nodeType":"YulFunctionCall","src":"4277:33:17"},"nodeType":"YulIf","src":"4274:120:17"},{"nodeType":"YulBlock","src":"4404:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4419:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4433:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4423:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4448:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4483:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4494:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4479:3:17"},"nodeType":"YulFunctionCall","src":"4479:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4503:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4458:20:17"},"nodeType":"YulFunctionCall","src":"4458:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4448:6:17"}]}]},{"nodeType":"YulBlock","src":"4531:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4546:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4577:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4588:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4573:3:17"},"nodeType":"YulFunctionCall","src":"4573:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4560:12:17"},"nodeType":"YulFunctionCall","src":"4560:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4550:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4639:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4641:77:17"},"nodeType":"YulFunctionCall","src":"4641:79:17"},"nodeType":"YulExpressionStatement","src":"4641:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4611:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4619:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4608:2:17"},"nodeType":"YulFunctionCall","src":"4608:30:17"},"nodeType":"YulIf","src":"4605:117:17"},{"nodeType":"YulAssignment","src":"4736:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4781:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4792:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4777:3:17"},"nodeType":"YulFunctionCall","src":"4777:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4801:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4746:30:17"},"nodeType":"YulFunctionCall","src":"4746:63:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4736:6:17"}]}]},{"nodeType":"YulBlock","src":"4829:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4844:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4858:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4848:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4874:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4909:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4920:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4905:3:17"},"nodeType":"YulFunctionCall","src":"4905:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4929:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4884:20:17"},"nodeType":"YulFunctionCall","src":"4884:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4874:6:17"}]}]},{"nodeType":"YulBlock","src":"4957:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4972:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4986:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4976:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5002:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5037:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5048:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5033:3:17"},"nodeType":"YulFunctionCall","src":"5033:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5057:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5012:20:17"},"nodeType":"YulFunctionCall","src":"5012:53:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5002:6:17"}]}]},{"nodeType":"YulBlock","src":"5085:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5100:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5114:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5104:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5131:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5166:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5177:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5162:3:17"},"nodeType":"YulFunctionCall","src":"5162:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5186:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5141:20:17"},"nodeType":"YulFunctionCall","src":"5141:53:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5131:6:17"}]}]},{"nodeType":"YulBlock","src":"5214:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5229:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5243:3:17","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5233:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5260:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5295:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5306:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5291:3:17"},"nodeType":"YulFunctionCall","src":"5291:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5315:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5270:20:17"},"nodeType":"YulFunctionCall","src":"5270:53:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5260:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4194:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4205:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4217:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4225:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4233:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4241:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4249:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4257:6:17","type":""}],"src":"4103:1237:17"},{"body":{"nodeType":"YulBlock","src":"5405:40:17","statements":[{"nodeType":"YulAssignment","src":"5416:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5432:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5426:5:17"},"nodeType":"YulFunctionCall","src":"5426:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5416:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5388:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5398:6:17","type":""}],"src":"5346:99:17"},{"body":{"nodeType":"YulBlock","src":"5547:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5564:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5569:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5557:6:17"},"nodeType":"YulFunctionCall","src":"5557:19:17"},"nodeType":"YulExpressionStatement","src":"5557:19:17"},{"nodeType":"YulAssignment","src":"5585:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5604:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5609:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5600:3:17"},"nodeType":"YulFunctionCall","src":"5600:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5585:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5519:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5524:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5535:11:17","type":""}],"src":"5451:169:17"},{"body":{"nodeType":"YulBlock","src":"5688:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5698:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5707:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5702:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5767:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5792:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"5797:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5788:3:17"},"nodeType":"YulFunctionCall","src":"5788:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5811:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"5816:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5807:3:17"},"nodeType":"YulFunctionCall","src":"5807:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5801:5:17"},"nodeType":"YulFunctionCall","src":"5801:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5781:6:17"},"nodeType":"YulFunctionCall","src":"5781:39:17"},"nodeType":"YulExpressionStatement","src":"5781:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5728:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"5731:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5725:2:17"},"nodeType":"YulFunctionCall","src":"5725:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5739:19:17","statements":[{"nodeType":"YulAssignment","src":"5741:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5750:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"5753:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5746:3:17"},"nodeType":"YulFunctionCall","src":"5746:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5741:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"5721:3:17","statements":[]},"src":"5717:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5850:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5855:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5846:3:17"},"nodeType":"YulFunctionCall","src":"5846:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"5864:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5839:6:17"},"nodeType":"YulFunctionCall","src":"5839:27:17"},"nodeType":"YulExpressionStatement","src":"5839:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5670:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5675:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5680:6:17","type":""}],"src":"5626:246:17"},{"body":{"nodeType":"YulBlock","src":"5970:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5980:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6027:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5994:32:17"},"nodeType":"YulFunctionCall","src":"5994:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5984:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6042:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6108:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6113:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6049:58:17"},"nodeType":"YulFunctionCall","src":"6049:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6042:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6168:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6175:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6164:3:17"},"nodeType":"YulFunctionCall","src":"6164:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"6182:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6187:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6129:34:17"},"nodeType":"YulFunctionCall","src":"6129:65:17"},"nodeType":"YulExpressionStatement","src":"6129:65:17"},{"nodeType":"YulAssignment","src":"6203:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6214:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6241:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6219:21:17"},"nodeType":"YulFunctionCall","src":"6219:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6210:3:17"},"nodeType":"YulFunctionCall","src":"6210:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6203:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5966:3:17","type":""}],"src":"5878:377:17"},{"body":{"nodeType":"YulBlock","src":"6326:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6343:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6366:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6348:17:17"},"nodeType":"YulFunctionCall","src":"6348:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6336:6:17"},"nodeType":"YulFunctionCall","src":"6336:37:17"},"nodeType":"YulExpressionStatement","src":"6336:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6314:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6321:3:17","type":""}],"src":"6261:118:17"},{"body":{"nodeType":"YulBlock","src":"6615:525:17","statements":[{"nodeType":"YulAssignment","src":"6625:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6637:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6648:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6633:3:17"},"nodeType":"YulFunctionCall","src":"6633:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6625:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6673:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6684:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:17"},"nodeType":"YulFunctionCall","src":"6669:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6692:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6698:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6688:3:17"},"nodeType":"YulFunctionCall","src":"6688:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6662:6:17"},"nodeType":"YulFunctionCall","src":"6662:47:17"},"nodeType":"YulExpressionStatement","src":"6662:47:17"},{"nodeType":"YulAssignment","src":"6718:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6790:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"6799:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6726:63:17"},"nodeType":"YulFunctionCall","src":"6726:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6718:4:17"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6858:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6871:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6882:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6867:3:17"},"nodeType":"YulFunctionCall","src":"6867:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6814:43:17"},"nodeType":"YulFunctionCall","src":"6814:72:17"},"nodeType":"YulExpressionStatement","src":"6814:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6940:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6953:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6964:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:17"},"nodeType":"YulFunctionCall","src":"6949:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6896:43:17"},"nodeType":"YulFunctionCall","src":"6896:72:17"},"nodeType":"YulExpressionStatement","src":"6896:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7022:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7035:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7046:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7031:3:17"},"nodeType":"YulFunctionCall","src":"7031:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6978:43:17"},"nodeType":"YulFunctionCall","src":"6978:72:17"},"nodeType":"YulExpressionStatement","src":"6978:72:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"7104:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7117:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7128:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7113:3:17"},"nodeType":"YulFunctionCall","src":"7113:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7060:43:17"},"nodeType":"YulFunctionCall","src":"7060:73:17"},"nodeType":"YulExpressionStatement","src":"7060:73:17"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6555:9:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6567:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6575:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6583:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6591:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6599:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6610:4:17","type":""}],"src":"6385:755:17"}]},"contents":"{\\n\\n    function cleanup_t_uint160(value) -> cleaned {\\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\\n    }\\n\\n    function cleanup_t_address(value) -> cleaned {\\n        cleaned := cleanup_t_uint160(value)\\n    }\\n\\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function validator_revert_t_address(value) {\\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_address(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_address(value)\\n    }\\n\\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\\n        calldatacopy(dst, src, length)\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := calldataload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function validator_revert_t_uint256(value) {\\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint256(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint256(value)\\n    }\\n\\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 32))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 64\\n\\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 96\\n\\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 128\\n\\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 160\\n\\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\\n        let length := array_length_t_string_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\\n        end := add(pos, round_up_to_mul_of_32(length))\\n    }\\n\\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_uint256(value))\\n    }\\n\\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\\n        tail := add(headStart, 160)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\\n\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"sourceMap":"81:768:7:-:0;;;;;;;;;;;;;;;;;;;","deployedSourceMap":"81:768:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;613:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;175:432;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;757:90;801:7;835:4;820:20;;757:90;:::o;613:138::-;683:7;709:21;:35;731:12;709:35;;;;;;;;;;;;;;;;;;;;;;;;;702:42;;613:138;;;:::o;175:432::-;396:13;436:4;454:3;471:9;494:10;518:8;412:124;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;396:140;;593:6;547:21;:35;569:12;547:35;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;386:221;175:432;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:17:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:117::-;1637:1;1634;1627:12;1651:117;1760:1;1757;1750:12;1774:102;1815:6;1866:2;1862:7;1857:2;1850:5;1846:14;1842:28;1832:38;;1774:102;;;:::o;1882:180::-;1930:77;1927:1;1920:88;2027:4;2024:1;2017:15;2051:4;2048:1;2041:15;2068:281;2151:27;2173:4;2151:27;:::i;:::-;2143:6;2139:40;2281:6;2269:10;2266:22;2245:18;2233:10;2230:34;2227:62;2224:88;;;2292:18;;:::i;:::-;2224:88;2332:10;2328:2;2321:22;2111:238;2068:281;;:::o;2355:129::-;2389:6;2416:20;;:::i;:::-;2406:30;;2445:33;2473:4;2465:6;2445:33;:::i;:::-;2355:129;;;:::o;2490:308::-;2552:4;2642:18;2634:6;2631:30;2628:56;;;2664:18;;:::i;:::-;2628:56;2702:29;2724:6;2702:29;:::i;:::-;2694:37;;2786:4;2780;2776:15;2768:23;;2490:308;;;:::o;2804:146::-;2901:6;2896:3;2891;2878:30;2942:1;2933:6;2928:3;2924:16;2917:27;2804:146;;;:::o;2956:425::-;3034:5;3059:66;3075:49;3117:6;3075:49;:::i;:::-;3059:66;:::i;:::-;3050:75;;3148:6;3141:5;3134:21;3186:4;3179:5;3175:16;3224:3;3215:6;3210:3;3206:16;3203:25;3200:112;;;3231:79;;:::i;:::-;3200:112;3321:54;3368:6;3363:3;3358;3321:54;:::i;:::-;3040:341;2956:425;;;;;:::o;3401:340::-;3457:5;3506:3;3499:4;3491:6;3487:17;3483:27;3473:122;;3514:79;;:::i;:::-;3473:122;3631:6;3618:20;3656:79;3731:3;3723:6;3716:4;3708:6;3704:17;3656:79;:::i;:::-;3647:88;;3463:278;3401:340;;;;:::o;3747:77::-;3784:7;3813:5;3802:16;;3747:77;;;:::o;3830:122::-;3903:24;3921:5;3903:24;:::i;:::-;3896:5;3893:35;3883:63;;3942:1;3939;3932:12;3883:63;3830:122;:::o;3958:139::-;4004:5;4042:6;4029:20;4020:29;;4058:33;4085:5;4058:33;:::i;:::-;3958:139;;;;:::o;4103:1237::-;4217:6;4225;4233;4241;4249;4257;4306:3;4294:9;4285:7;4281:23;4277:33;4274:120;;;4313:79;;:::i;:::-;4274:120;4433:1;4458:53;4503:7;4494:6;4483:9;4479:22;4458:53;:::i;:::-;4448:63;;4404:117;4588:2;4577:9;4573:18;4560:32;4619:18;4611:6;4608:30;4605:117;;;4641:79;;:::i;:::-;4605:117;4746:63;4801:7;4792:6;4781:9;4777:22;4746:63;:::i;:::-;4736:73;;4531:288;4858:2;4884:53;4929:7;4920:6;4909:9;4905:22;4884:53;:::i;:::-;4874:63;;4829:118;4986:2;5012:53;5057:7;5048:6;5037:9;5033:22;5012:53;:::i;:::-;5002:63;;4957:118;5114:3;5141:53;5186:7;5177:6;5166:9;5162:22;5141:53;:::i;:::-;5131:63;;5085:119;5243:3;5270:53;5315:7;5306:6;5295:9;5291:22;5270:53;:::i;:::-;5260:63;;5214:119;4103:1237;;;;;;;;:::o;5346:99::-;5398:6;5432:5;5426:12;5416:22;;5346:99;;;:::o;5451:169::-;5535:11;5569:6;5564:3;5557:19;5609:4;5604:3;5600:14;5585:29;;5451:169;;;;:::o;5626:246::-;5707:1;5717:113;5731:6;5728:1;5725:13;5717:113;;;5816:1;5811:3;5807:11;5801:18;5797:1;5792:3;5788:11;5781:39;5753:2;5750:1;5746:10;5741:15;;5717:113;;;5864:1;5855:6;5850:3;5846:16;5839:27;5688:184;5626:246;;;:::o;5878:377::-;5966:3;5994:39;6027:5;5994:39;:::i;:::-;6049:71;6113:6;6108:3;6049:71;:::i;:::-;6042:78;;6129:65;6187:6;6182:3;6175:4;6168:5;6164:16;6129:65;:::i;:::-;6219:29;6241:6;6219:29;:::i;:::-;6214:3;6210:39;6203:46;;5970:285;5878:377;;;;:::o;6261:118::-;6348:24;6366:5;6348:24;:::i;:::-;6343:3;6336:37;6261:118;;:::o;6385:755::-;6610:4;6648:3;6637:9;6633:19;6625:27;;6698:9;6692:4;6688:20;6684:1;6673:9;6669:17;6662:47;6726:78;6799:4;6790:6;6726:78;:::i;:::-;6718:86;;6814:72;6882:2;6871:9;6867:18;6858:6;6814:72;:::i;:::-;6896;6964:2;6953:9;6949:18;6940:6;6896:72;:::i;:::-;6978;7046:2;7035:9;7031:18;7022:6;6978:72;:::i;:::-;7060:73;7128:3;7117:9;7113:19;7104:6;7060:73;:::i;:::-;6385:755;;;;;;;;:::o","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\"./Driver.sol\\";\\n\\ncontract DriverFactory {\\n\\n    mapping(address => address) private driverWalletToProfile;\\n\\n    function createNewDriverProfile(\\n        address driverWallet,\\n        string memory name,\\n        uint256 nid,\\n        uint256 licenseNo,\\n        uint256 issue_date,\\n        uint256 exp_date\\n    ) external\\n    {\\n        Driver driver = new Driver(\\n            name,\\n            nid,\\n            licenseNo,\\n            issue_date,\\n            exp_date\\n        );\\n\\n        driverWalletToProfile[driverWallet] = address(driver);\\n    }\\n\\n    function getDriverProfile(address driverWallet) external view returns(address) {\\n        return driverWalletToProfile[driverWallet];\\n    }\\n\\n    function getAddress() external view returns(address) {\\n        return address(this);\\n    }\\n}\\n","sourcePath":"C:\\\\Users\\\\samin\\\\Documents\\\\Projects\\\\AWT\\\\TraffiChain\\\\contracts\\\\DriverFactory.sol","ast":{"absolutePath":"project:/contracts/DriverFactory.sol","exportedSymbols":{"Driver":[827],"DriverFactory":[896]},"id":897,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":829,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:7"},{"absolutePath":"project:/contracts/Driver.sol","file":"./Driver.sol","id":830,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":897,"sourceUnit":828,"src":"57:22:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"DriverFactory","contractDependencies":[827],"contractKind":"contract","fullyImplemented":true,"id":896,"linearizedBaseContracts":[896],"name":"DriverFactory","nameLocation":"90:13:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":834,"mutability":"mutable","name":"driverWalletToProfile","nameLocation":"147:21:7","nodeType":"VariableDeclaration","scope":896,"src":"111:57:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":833,"keyType":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"119:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"111:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"130:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"body":{"id":871,"nodeType":"Block","src":"386:221:7","statements":[{"assignments":[851],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"driver","nameLocation":"403:6:7","nodeType":"VariableDeclaration","scope":871,"src":"396:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Driver_$827","typeString":"contract Driver"},"typeName":{"id":850,"nodeType":"UserDefinedTypeName","pathNode":{"id":849,"name":"Driver","nameLocations":["396:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"396:6:7"},"referencedDeclaration":827,"src":"396:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Driver_$827","typeString":"contract Driver"}},"visibility":"internal"}],"id":861,"initialValue":{"arguments":[{"id":855,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"436:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":856,"name":"nid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"454:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":857,"name":"licenseNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"471:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":858,"name":"issue_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"494:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":859,"name":"exp_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"518:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"412:10:7","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_Driver_$827_$","typeString":"function (string memory,uint256,uint256,uint256,uint256) returns (contract Driver)"},"typeName":{"id":853,"nodeType":"UserDefinedTypeName","pathNode":{"id":852,"name":"Driver","nameLocations":["416:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"416:6:7"},"referencedDeclaration":827,"src":"416:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Driver_$827","typeString":"contract Driver"}}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"412:124:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Driver_$827","typeString":"contract Driver"}},"nodeType":"VariableDeclarationStatement","src":"396:140:7"},{"expression":{"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":862,"name":"driverWalletToProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"547:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":864,"indexExpression":{"id":863,"name":"driverWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"569:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"547:35:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":867,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"593:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Driver_$827","typeString":"contract Driver"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Driver_$827","typeString":"contract Driver"}],"id":866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"585:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:7","typeDescriptions":{}}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"585:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"547:53:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":870,"nodeType":"ExpressionStatement","src":"547:53:7"}]},"functionSelector":"d10a3096","id":872,"implemented":true,"kind":"function","modifiers":[],"name":"createNewDriverProfile","nameLocation":"184:22:7","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"driverWallet","nameLocation":"224:12:7","nodeType":"VariableDeclaration","scope":872,"src":"216:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"name","nameLocation":"260:4:7","nodeType":"VariableDeclaration","scope":872,"src":"246:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":837,"name":"string","nodeType":"ElementaryTypeName","src":"246:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":840,"mutability":"mutable","name":"nid","nameLocation":"282:3:7","nodeType":"VariableDeclaration","scope":872,"src":"274:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"274:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"licenseNo","nameLocation":"303:9:7","nodeType":"VariableDeclaration","scope":872,"src":"295:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"295:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"issue_date","nameLocation":"330:10:7","nodeType":"VariableDeclaration","scope":872,"src":"322:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"322:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"exp_date","nameLocation":"358:8:7","nodeType":"VariableDeclaration","scope":872,"src":"350:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"206:166:7"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[],"src":"386:0:7"},"scope":896,"src":"175:432:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":883,"nodeType":"Block","src":"692:59:7","statements":[{"expression":{"baseExpression":{"id":879,"name":"driverWalletToProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"709:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":881,"indexExpression":{"id":880,"name":"driverWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"731:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"709:35:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":878,"id":882,"nodeType":"Return","src":"702:42:7"}]},"functionSelector":"722c7310","id":884,"implemented":true,"kind":"function","modifiers":[],"name":"getDriverProfile","nameLocation":"622:16:7","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"driverWallet","nameLocation":"647:12:7","nodeType":"VariableDeclaration","scope":884,"src":"639:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"639:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"638:22:7"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"683:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"683:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"682:9:7"},"scope":896,"src":"613:138:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":894,"nodeType":"Block","src":"810:37:7","statements":[{"expression":{"arguments":[{"id":891,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"835:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_DriverFactory_$896","typeString":"contract DriverFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DriverFactory_$896","typeString":"contract DriverFactory"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"827:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:7","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"827:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":888,"id":893,"nodeType":"Return","src":"820:20:7"}]},"functionSelector":"38cc4831","id":895,"implemented":true,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"766:10:7","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"776:2:7"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":895,"src":"801:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"801:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"800:9:7"},"scope":896,"src":"757:90:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":897,"src":"81:768:7","usedErrors":[]}],"src":"32:818:7"},"compiler":{"name":"solc","version":"0.8.17+commit.8df45f5f.Emscripten.clang"},"networks":{"5777":{"events":{},"links":{},"address":"0x2C8A42f734301afB2393529E115B9e5189909D62","transactionHash":"0x0e57eaa2df9d024f1431e08d9af15d1b01e083fd3ef5af5dbe087632b196ecc0"}},"schemaVersion":"3.4.10","updatedAt":"2022-11-28T05:49:25.953Z","networkType":"ethereum","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}}');

/***/ }),

/***/ "./build/contracts/Infractions.json":
/*!******************************************!*\
  !*** ./build/contracts/Infractions.json ***!
  \******************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"Infractions","abi":[{"inputs":[{"internalType":"uint16","name":"infraction","type":"uint16"},{"internalType":"uint256","name":"fine","type":"uint256"},{"internalType":"string","name":"description","type":"string"}],"name":"addInfraction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"infraction","type":"uint16"}],"name":"getInfractionFine","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"uint16","name":"infraction","type":"uint16"}],"name":"getInfractionDescription","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"uint16[]","name":"infractionList","type":"uint16[]"}],"name":"calculateTotalFine","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","constant":true}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.17+commit.8df45f5f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"uint16\\",\\"name\\":\\"infraction\\",\\"type\\":\\"uint16\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"fine\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"description\\",\\"type\\":\\"string\\"}],\\"name\\":\\"addInfraction\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint16[]\\",\\"name\\":\\"infractionList\\",\\"type\\":\\"uint16[]\\"}],\\"name\\":\\"calculateTotalFine\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint16\\",\\"name\\":\\"infraction\\",\\"type\\":\\"uint16\\"}],\\"name\\":\\"getInfractionDescription\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint16\\",\\"name\\":\\"infraction\\",\\"type\\":\\"uint16\\"}],\\"name\\":\\"getInfractionFine\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"author\\":\\"Samin Yaser\\",\\"kind\\":\\"dev\\",\\"methods\\":{},\\"title\\":\\"Infractions\\",\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"notice\\":\\"Infraction database\\",\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/Infractions.sol\\":\\"Infractions\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"project:/contracts/Infractions.sol\\":{\\"keccak256\\":\\"0x6603c4d037fff022a5618c3e25ae4a8e9b360f2196a81849debcfa41ed9fb7fc\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://2069e1d82d21be68bc125593ce7efbeed39aaed39babfa18337c1f87aedd5afb\\",\\"dweb:/ipfs/Qma1SUgZaNw84neNGavpRguFUBsnCz2CBbWsLsN9gVXRJT\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b50610ac3806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630de637a5146100515780635af5f529146100815780635cbcd4c1146100b1578063ad97bbef146100e1575b600080fd5b61006b600480360381019061006691906102e1565b6100fd565b604051610078919061039e565b60405180910390f35b61009b600480360381019061009691906102e1565b6101aa565b6040516100a891906103d9565b60405180910390f35b6100cb60048036038101906100c6919061053c565b6101ce565b6040516100d891906103d9565b60405180910390f35b6100fb60048036038101906100f69190610666565b610246565b005b6060600160008361ffff1661ffff168152602001908152602001600020805461012590610704565b80601f016020809104026020016040519081016040528092919081815260200182805461015190610704565b801561019e5780601f106101735761010080835404028352916020019161019e565b820191906000526020600020905b81548152906001019060200180831161018157829003601f168201915b50505050509050919050565b60008060008361ffff1661ffff168152602001908152602001600020549050919050565b6000806000905060008351905060005b8181101561023b576000808683815181106101fc576101fb610735565b5b602002602001015161ffff1661ffff16815260200190815260200160002054836102269190610793565b92508080610233906107c7565b9150506101de565b508192505050919050565b816000808561ffff1661ffff1681526020019081526020016000208190555080600160008561ffff1661ffff168152602001908152602001600020908161028d91906109bb565b50505050565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6102be816102a7565b81146102c957600080fd5b50565b6000813590506102db816102b5565b92915050565b6000602082840312156102f7576102f661029d565b5b6000610305848285016102cc565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561034857808201518184015260208101905061032d565b60008484015250505050565b6000601f19601f8301169050919050565b60006103708261030e565b61037a8185610319565b935061038a81856020860161032a565b61039381610354565b840191505092915050565b600060208201905081810360008301526103b88184610365565b905092915050565b6000819050919050565b6103d3816103c0565b82525050565b60006020820190506103ee60008301846103ca565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61043182610354565b810181811067ffffffffffffffff821117156104505761044f6103f9565b5b80604052505050565b6000610463610293565b905061046f8282610428565b919050565b600067ffffffffffffffff82111561048f5761048e6103f9565b5b602082029050602081019050919050565b600080fd5b60006104b86104b384610474565b610459565b905080838252602082019050602084028301858111156104db576104da6104a0565b5b835b8181101561050457806104f088826102cc565b8452602084019350506020810190506104dd565b5050509392505050565b600082601f830112610523576105226103f4565b5b81356105338482602086016104a5565b91505092915050565b6000602082840312156105525761055161029d565b5b600082013567ffffffffffffffff8111156105705761056f6102a2565b5b61057c8482850161050e565b91505092915050565b61058e816103c0565b811461059957600080fd5b50565b6000813590506105ab81610585565b92915050565b600080fd5b600067ffffffffffffffff8211156105d1576105d06103f9565b5b6105da82610354565b9050602081019050919050565b82818337600083830152505050565b6000610609610604846105b6565b610459565b905082815260208101848484011115610625576106246105b1565b5b6106308482856105e7565b509392505050565b600082601f83011261064d5761064c6103f4565b5b813561065d8482602086016105f6565b91505092915050565b60008060006060848603121561067f5761067e61029d565b5b600061068d868287016102cc565b935050602061069e8682870161059c565b925050604084013567ffffffffffffffff8111156106bf576106be6102a2565b5b6106cb86828701610638565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061071c57607f821691505b60208210810361072f5761072e6106d5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061079e826103c0565b91506107a9836103c0565b92508282019050808211156107c1576107c0610764565b5b92915050565b60006107d2826103c0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361080457610803610764565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108717fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610834565b61087b8683610834565b95508019841693508086168417925050509392505050565b6000819050919050565b60006108b86108b36108ae846103c0565b610893565b6103c0565b9050919050565b6000819050919050565b6108d28361089d565b6108e66108de826108bf565b848454610841565b825550505050565b600090565b6108fb6108ee565b6109068184846108c9565b505050565b5b8181101561092a5761091f6000826108f3565b60018101905061090c565b5050565b601f82111561096f576109408161080f565b61094984610824565b81016020851015610958578190505b61096c61096485610824565b83018261090b565b50505b505050565b600082821c905092915050565b600061099260001984600802610974565b1980831691505092915050565b60006109ab8383610981565b9150826002028217905092915050565b6109c48261030e565b67ffffffffffffffff8111156109dd576109dc6103f9565b5b6109e78254610704565b6109f282828561092e565b600060209050601f831160018114610a255760008415610a13578287015190505b610a1d858261099f565b865550610a85565b601f198416610a338661080f565b60005b82811015610a5b57848901518255600182019150602085019450602081019050610a36565b86831015610a785784890151610a74601f891682610981565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220dc2075543ad8015d3d863288513acf1642da37176b7cfdb6b2ad05cf91127c6564736f6c63430008110033","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630de637a5146100515780635af5f529146100815780635cbcd4c1146100b1578063ad97bbef146100e1575b600080fd5b61006b600480360381019061006691906102e1565b6100fd565b604051610078919061039e565b60405180910390f35b61009b600480360381019061009691906102e1565b6101aa565b6040516100a891906103d9565b60405180910390f35b6100cb60048036038101906100c6919061053c565b6101ce565b6040516100d891906103d9565b60405180910390f35b6100fb60048036038101906100f69190610666565b610246565b005b6060600160008361ffff1661ffff168152602001908152602001600020805461012590610704565b80601f016020809104026020016040519081016040528092919081815260200182805461015190610704565b801561019e5780601f106101735761010080835404028352916020019161019e565b820191906000526020600020905b81548152906001019060200180831161018157829003601f168201915b50505050509050919050565b60008060008361ffff1661ffff168152602001908152602001600020549050919050565b6000806000905060008351905060005b8181101561023b576000808683815181106101fc576101fb610735565b5b602002602001015161ffff1661ffff16815260200190815260200160002054836102269190610793565b92508080610233906107c7565b9150506101de565b508192505050919050565b816000808561ffff1661ffff1681526020019081526020016000208190555080600160008561ffff1661ffff168152602001908152602001600020908161028d91906109bb565b50505050565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6102be816102a7565b81146102c957600080fd5b50565b6000813590506102db816102b5565b92915050565b6000602082840312156102f7576102f661029d565b5b6000610305848285016102cc565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561034857808201518184015260208101905061032d565b60008484015250505050565b6000601f19601f8301169050919050565b60006103708261030e565b61037a8185610319565b935061038a81856020860161032a565b61039381610354565b840191505092915050565b600060208201905081810360008301526103b88184610365565b905092915050565b6000819050919050565b6103d3816103c0565b82525050565b60006020820190506103ee60008301846103ca565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61043182610354565b810181811067ffffffffffffffff821117156104505761044f6103f9565b5b80604052505050565b6000610463610293565b905061046f8282610428565b919050565b600067ffffffffffffffff82111561048f5761048e6103f9565b5b602082029050602081019050919050565b600080fd5b60006104b86104b384610474565b610459565b905080838252602082019050602084028301858111156104db576104da6104a0565b5b835b8181101561050457806104f088826102cc565b8452602084019350506020810190506104dd565b5050509392505050565b600082601f830112610523576105226103f4565b5b81356105338482602086016104a5565b91505092915050565b6000602082840312156105525761055161029d565b5b600082013567ffffffffffffffff8111156105705761056f6102a2565b5b61057c8482850161050e565b91505092915050565b61058e816103c0565b811461059957600080fd5b50565b6000813590506105ab81610585565b92915050565b600080fd5b600067ffffffffffffffff8211156105d1576105d06103f9565b5b6105da82610354565b9050602081019050919050565b82818337600083830152505050565b6000610609610604846105b6565b610459565b905082815260208101848484011115610625576106246105b1565b5b6106308482856105e7565b509392505050565b600082601f83011261064d5761064c6103f4565b5b813561065d8482602086016105f6565b91505092915050565b60008060006060848603121561067f5761067e61029d565b5b600061068d868287016102cc565b935050602061069e8682870161059c565b925050604084013567ffffffffffffffff8111156106bf576106be6102a2565b5b6106cb86828701610638565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061071c57607f821691505b60208210810361072f5761072e6106d5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061079e826103c0565b91506107a9836103c0565b92508282019050808211156107c1576107c0610764565b5b92915050565b60006107d2826103c0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361080457610803610764565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108717fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610834565b61087b8683610834565b95508019841693508086168417925050509392505050565b6000819050919050565b60006108b86108b36108ae846103c0565b610893565b6103c0565b9050919050565b6000819050919050565b6108d28361089d565b6108e66108de826108bf565b848454610841565b825550505050565b600090565b6108fb6108ee565b6109068184846108c9565b505050565b5b8181101561092a5761091f6000826108f3565b60018101905061090c565b5050565b601f82111561096f576109408161080f565b61094984610824565b81016020851015610958578190505b61096c61096485610824565b83018261090b565b50505b505050565b600082821c905092915050565b600061099260001984600802610974565b1980831691505092915050565b60006109ab8383610981565b9150826002028217905092915050565b6109c48261030e565b67ffffffffffffffff8111156109dd576109dc6103f9565b5b6109e78254610704565b6109f282828561092e565b600060209050601f831160018114610a255760008415610a13578287015190505b610a1d858261099f565b865550610a85565b601f198416610a338661080f565b60005b82811015610a5b57848901518255600182019150602085019450602081019050610a36565b86831015610a785784890151610a74601f891682610981565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220dc2075543ad8015d3d863288513acf1642da37176b7cfdb6b2ad05cf91127c6564736f6c63430008110033","immutableReferences":{},"generatedSources":[],"deployedGeneratedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13754:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:45:17","statements":[{"nodeType":"YulAssignment","src":"388:29:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:6:17","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:18:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:89:17"},{"body":{"nodeType":"YulBlock","src":"471:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"527:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"536:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"539:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"529:6:17"},"nodeType":"YulFunctionCall","src":"529:12:17"},"nodeType":"YulExpressionStatement","src":"529:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"494:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"518:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"501:16:17"},"nodeType":"YulFunctionCall","src":"501:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"491:2:17"},"nodeType":"YulFunctionCall","src":"491:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"484:6:17"},"nodeType":"YulFunctionCall","src":"484:42:17"},"nodeType":"YulIf","src":"481:62:17"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"464:5:17","type":""}],"src":"429:120:17"},{"body":{"nodeType":"YulBlock","src":"606:86:17","statements":[{"nodeType":"YulAssignment","src":"616:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"638:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"625:12:17"},"nodeType":"YulFunctionCall","src":"625:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"616:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"680:5:17"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"654:25:17"},"nodeType":"YulFunctionCall","src":"654:32:17"},"nodeType":"YulExpressionStatement","src":"654:32:17"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"584:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"592:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"600:5:17","type":""}],"src":"555:137:17"},{"body":{"nodeType":"YulBlock","src":"763:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"809:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"811:77:17"},"nodeType":"YulFunctionCall","src":"811:79:17"},"nodeType":"YulExpressionStatement","src":"811:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"784:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"793:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"780:3:17"},"nodeType":"YulFunctionCall","src":"780:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"805:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"776:3:17"},"nodeType":"YulFunctionCall","src":"776:32:17"},"nodeType":"YulIf","src":"773:119:17"},{"nodeType":"YulBlock","src":"902:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"917:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"931:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"921:6:17","type":""}]},{"nodeType":"YulAssignment","src":"946:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"980:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"991:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"976:3:17"},"nodeType":"YulFunctionCall","src":"976:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1000:7:17"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"956:19:17"},"nodeType":"YulFunctionCall","src":"956:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"946:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"733:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"744:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"756:6:17","type":""}],"src":"698:327:17"},{"body":{"nodeType":"YulBlock","src":"1090:40:17","statements":[{"nodeType":"YulAssignment","src":"1101:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1117:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1111:5:17"},"nodeType":"YulFunctionCall","src":"1111:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1101:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1073:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1083:6:17","type":""}],"src":"1031:99:17"},{"body":{"nodeType":"YulBlock","src":"1232:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1249:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1254:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:17"},"nodeType":"YulFunctionCall","src":"1242:19:17"},"nodeType":"YulExpressionStatement","src":"1242:19:17"},{"nodeType":"YulAssignment","src":"1270:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1289:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1294:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1285:3:17"},"nodeType":"YulFunctionCall","src":"1285:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1270:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1204:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1209:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1220:11:17","type":""}],"src":"1136:169:17"},{"body":{"nodeType":"YulBlock","src":"1373:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1383:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1392:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1387:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1452:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1477:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1482:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:17"},"nodeType":"YulFunctionCall","src":"1473:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1496:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1501:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1492:3:17"},"nodeType":"YulFunctionCall","src":"1492:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1486:5:17"},"nodeType":"YulFunctionCall","src":"1486:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1466:6:17"},"nodeType":"YulFunctionCall","src":"1466:39:17"},"nodeType":"YulExpressionStatement","src":"1466:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1413:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1416:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1410:2:17"},"nodeType":"YulFunctionCall","src":"1410:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1424:19:17","statements":[{"nodeType":"YulAssignment","src":"1426:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1435:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1438:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1431:3:17"},"nodeType":"YulFunctionCall","src":"1431:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1426:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1406:3:17","statements":[]},"src":"1402:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1535:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1540:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1531:3:17"},"nodeType":"YulFunctionCall","src":"1531:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"1549:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1524:6:17"},"nodeType":"YulFunctionCall","src":"1524:27:17"},"nodeType":"YulExpressionStatement","src":"1524:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1355:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1360:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1365:6:17","type":""}],"src":"1311:246:17"},{"body":{"nodeType":"YulBlock","src":"1611:54:17","statements":[{"nodeType":"YulAssignment","src":"1621:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1639:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1646:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1635:3:17"},"nodeType":"YulFunctionCall","src":"1635:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1655:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1651:3:17"},"nodeType":"YulFunctionCall","src":"1651:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1631:3:17"},"nodeType":"YulFunctionCall","src":"1631:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1621:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1594:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1604:6:17","type":""}],"src":"1563:102:17"},{"body":{"nodeType":"YulBlock","src":"1763:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1773:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1820:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1787:32:17"},"nodeType":"YulFunctionCall","src":"1787:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1777:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1835:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1901:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1906:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1842:58:17"},"nodeType":"YulFunctionCall","src":"1842:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1835:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1961:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1968:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1957:3:17"},"nodeType":"YulFunctionCall","src":"1957:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"1975:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1980:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1922:34:17"},"nodeType":"YulFunctionCall","src":"1922:65:17"},"nodeType":"YulExpressionStatement","src":"1922:65:17"},{"nodeType":"YulAssignment","src":"1996:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2007:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2012:21:17"},"nodeType":"YulFunctionCall","src":"2012:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2003:3:17"},"nodeType":"YulFunctionCall","src":"2003:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1996:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1744:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1751:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1759:3:17","type":""}],"src":"1671:377:17"},{"body":{"nodeType":"YulBlock","src":"2172:195:17","statements":[{"nodeType":"YulAssignment","src":"2182:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2194:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2205:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2190:3:17"},"nodeType":"YulFunctionCall","src":"2190:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2182:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2229:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2240:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2225:3:17"},"nodeType":"YulFunctionCall","src":"2225:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2248:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2254:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2244:3:17"},"nodeType":"YulFunctionCall","src":"2244:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2218:6:17"},"nodeType":"YulFunctionCall","src":"2218:47:17"},"nodeType":"YulExpressionStatement","src":"2218:47:17"},{"nodeType":"YulAssignment","src":"2274:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2346:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"2355:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2282:63:17"},"nodeType":"YulFunctionCall","src":"2282:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2274:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2144:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2156:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2167:4:17","type":""}],"src":"2054:313:17"},{"body":{"nodeType":"YulBlock","src":"2418:32:17","statements":[{"nodeType":"YulAssignment","src":"2428:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2439:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2428:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2400:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2410:7:17","type":""}],"src":"2373:77:17"},{"body":{"nodeType":"YulBlock","src":"2521:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2538:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2561:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2543:17:17"},"nodeType":"YulFunctionCall","src":"2543:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2531:6:17"},"nodeType":"YulFunctionCall","src":"2531:37:17"},"nodeType":"YulExpressionStatement","src":"2531:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2509:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2516:3:17","type":""}],"src":"2456:118:17"},{"body":{"nodeType":"YulBlock","src":"2678:124:17","statements":[{"nodeType":"YulAssignment","src":"2688:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2711:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2696:3:17"},"nodeType":"YulFunctionCall","src":"2696:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2688:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2768:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2781:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2792:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2777:3:17"},"nodeType":"YulFunctionCall","src":"2777:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2724:43:17"},"nodeType":"YulFunctionCall","src":"2724:71:17"},"nodeType":"YulExpressionStatement","src":"2724:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2650:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2662:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2673:4:17","type":""}],"src":"2580:222:17"},{"body":{"nodeType":"YulBlock","src":"2897:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2914:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2917:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2907:6:17"},"nodeType":"YulFunctionCall","src":"2907:12:17"},"nodeType":"YulExpressionStatement","src":"2907:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2808:117:17"},{"body":{"nodeType":"YulBlock","src":"2959:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2976:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2979:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2969:6:17"},"nodeType":"YulFunctionCall","src":"2969:88:17"},"nodeType":"YulExpressionStatement","src":"2969:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3073:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3076:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3066:6:17"},"nodeType":"YulFunctionCall","src":"3066:15:17"},"nodeType":"YulExpressionStatement","src":"3066:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3100:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3090:6:17"},"nodeType":"YulFunctionCall","src":"3090:15:17"},"nodeType":"YulExpressionStatement","src":"3090:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2931:180:17"},{"body":{"nodeType":"YulBlock","src":"3160:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3170:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3192:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3222:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3200:21:17"},"nodeType":"YulFunctionCall","src":"3200:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3188:3:17"},"nodeType":"YulFunctionCall","src":"3188:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3174:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3339:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3341:16:17"},"nodeType":"YulFunctionCall","src":"3341:18:17"},"nodeType":"YulExpressionStatement","src":"3341:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3282:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3294:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3279:2:17"},"nodeType":"YulFunctionCall","src":"3279:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3318:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3330:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3315:2:17"},"nodeType":"YulFunctionCall","src":"3315:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3276:2:17"},"nodeType":"YulFunctionCall","src":"3276:62:17"},"nodeType":"YulIf","src":"3273:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3377:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3381:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3370:6:17"},"nodeType":"YulFunctionCall","src":"3370:22:17"},"nodeType":"YulExpressionStatement","src":"3370:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3146:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"3154:4:17","type":""}],"src":"3117:281:17"},{"body":{"nodeType":"YulBlock","src":"3445:88:17","statements":[{"nodeType":"YulAssignment","src":"3455:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3465:18:17"},"nodeType":"YulFunctionCall","src":"3465:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3455:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3514:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"3522:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3494:19:17"},"nodeType":"YulFunctionCall","src":"3494:33:17"},"nodeType":"YulExpressionStatement","src":"3494:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3429:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3438:6:17","type":""}],"src":"3404:129:17"},{"body":{"nodeType":"YulBlock","src":"3620:229:17","statements":[{"body":{"nodeType":"YulBlock","src":"3725:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3727:16:17"},"nodeType":"YulFunctionCall","src":"3727:18:17"},"nodeType":"YulExpressionStatement","src":"3727:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3697:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3705:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3694:2:17"},"nodeType":"YulFunctionCall","src":"3694:30:17"},"nodeType":"YulIf","src":"3691:56:17"},{"nodeType":"YulAssignment","src":"3757:25:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3769:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3777:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3765:3:17"},"nodeType":"YulFunctionCall","src":"3765:17:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3757:4:17"}]},{"nodeType":"YulAssignment","src":"3819:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3831:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3837:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3827:3:17"},"nodeType":"YulFunctionCall","src":"3827:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3819:4:17"}]}]},"name":"array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3604:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3615:4:17","type":""}],"src":"3539:310:17"},{"body":{"nodeType":"YulBlock","src":"3944:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3961:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3964:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3954:6:17"},"nodeType":"YulFunctionCall","src":"3954:12:17"},"nodeType":"YulExpressionStatement","src":"3954:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3855:117:17"},{"body":{"nodeType":"YulBlock","src":"4095:606:17","statements":[{"nodeType":"YulAssignment","src":"4105:89:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4186:6:17"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4130:55:17"},"nodeType":"YulFunctionCall","src":"4130:63:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4114:15:17"},"nodeType":"YulFunctionCall","src":"4114:80:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4105:5:17"}]},{"nodeType":"YulVariableDeclaration","src":"4203:16:17","value":{"name":"array","nodeType":"YulIdentifier","src":"4214:5:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4207:3:17","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4236:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"4243:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4229:6:17"},"nodeType":"YulFunctionCall","src":"4229:21:17"},"nodeType":"YulExpressionStatement","src":"4229:21:17"},{"nodeType":"YulAssignment","src":"4259:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4270:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4277:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4266:3:17"},"nodeType":"YulFunctionCall","src":"4266:16:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4259:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"4292:44:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4310:6:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4322:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4330:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4318:3:17"},"nodeType":"YulFunctionCall","src":"4318:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4306:3:17"},"nodeType":"YulFunctionCall","src":"4306:30:17"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4296:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4364:103:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4378:77:17"},"nodeType":"YulFunctionCall","src":"4378:79:17"},"nodeType":"YulExpressionStatement","src":"4378:79:17"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4351:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"4359:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4348:2:17"},"nodeType":"YulFunctionCall","src":"4348:15:17"},"nodeType":"YulIf","src":"4345:122:17"},{"body":{"nodeType":"YulBlock","src":"4552:143:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4567:21:17","value":{"name":"src","nodeType":"YulIdentifier","src":"4585:3:17"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"4571:10:17","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4609:3:17"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"4634:10:17"},{"name":"end","nodeType":"YulIdentifier","src":"4646:3:17"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"4614:19:17"},"nodeType":"YulFunctionCall","src":"4614:36:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4602:6:17"},"nodeType":"YulFunctionCall","src":"4602:49:17"},"nodeType":"YulExpressionStatement","src":"4602:49:17"},{"nodeType":"YulAssignment","src":"4664:21:17","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4675:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4680:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4671:3:17"},"nodeType":"YulFunctionCall","src":"4671:14:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4664:3:17"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4505:3:17"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4510:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4502:2:17"},"nodeType":"YulFunctionCall","src":"4502:15:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4518:25:17","statements":[{"nodeType":"YulAssignment","src":"4520:21:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4531:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4536:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4527:3:17"},"nodeType":"YulFunctionCall","src":"4527:14:17"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4520:3:17"}]}]},"pre":{"nodeType":"YulBlock","src":"4480:21:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4482:17:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"4493:6:17"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4486:3:17","type":""}]}]},"src":"4476:219:17"}]},"name":"abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4065:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4073:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4081:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4089:5:17","type":""}],"src":"3994:707:17"},{"body":{"nodeType":"YulBlock","src":"4799:292:17","statements":[{"body":{"nodeType":"YulBlock","src":"4848:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4850:77:17"},"nodeType":"YulFunctionCall","src":"4850:79:17"},"nodeType":"YulExpressionStatement","src":"4850:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4827:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4835:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4823:3:17"},"nodeType":"YulFunctionCall","src":"4823:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"4842:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4819:3:17"},"nodeType":"YulFunctionCall","src":"4819:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4812:6:17"},"nodeType":"YulFunctionCall","src":"4812:35:17"},"nodeType":"YulIf","src":"4809:122:17"},{"nodeType":"YulVariableDeclaration","src":"4940:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4967:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4954:12:17"},"nodeType":"YulFunctionCall","src":"4954:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4944:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4983:102:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5058:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5066:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5054:3:17"},"nodeType":"YulFunctionCall","src":"5054:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"5073:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"5081:3:17"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4992:61:17"},"nodeType":"YulFunctionCall","src":"4992:93:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4983:5:17"}]}]},"name":"abi_decode_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4777:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4785:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4793:5:17","type":""}],"src":"4723:368:17"},{"body":{"nodeType":"YulBlock","src":"5187:447:17","statements":[{"body":{"nodeType":"YulBlock","src":"5233:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5235:77:17"},"nodeType":"YulFunctionCall","src":"5235:79:17"},"nodeType":"YulExpressionStatement","src":"5235:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5208:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5217:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5204:3:17"},"nodeType":"YulFunctionCall","src":"5204:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5229:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5200:3:17"},"nodeType":"YulFunctionCall","src":"5200:32:17"},"nodeType":"YulIf","src":"5197:119:17"},{"nodeType":"YulBlock","src":"5326:301:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5341:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5372:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5383:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5368:3:17"},"nodeType":"YulFunctionCall","src":"5368:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5355:12:17"},"nodeType":"YulFunctionCall","src":"5355:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5345:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5433:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5435:77:17"},"nodeType":"YulFunctionCall","src":"5435:79:17"},"nodeType":"YulExpressionStatement","src":"5435:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5405:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5413:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5402:2:17"},"nodeType":"YulFunctionCall","src":"5402:30:17"},"nodeType":"YulIf","src":"5399:117:17"},{"nodeType":"YulAssignment","src":"5530:87:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5589:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5600:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5585:3:17"},"nodeType":"YulFunctionCall","src":"5585:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5609:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5540:44:17"},"nodeType":"YulFunctionCall","src":"5540:77:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5530:6:17"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5157:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5168:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5180:6:17","type":""}],"src":"5097:537:17"},{"body":{"nodeType":"YulBlock","src":"5683:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"5740:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5749:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5752:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5742:6:17"},"nodeType":"YulFunctionCall","src":"5742:12:17"},"nodeType":"YulExpressionStatement","src":"5742:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5706:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5731:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5713:17:17"},"nodeType":"YulFunctionCall","src":"5713:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5703:2:17"},"nodeType":"YulFunctionCall","src":"5703:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5696:6:17"},"nodeType":"YulFunctionCall","src":"5696:43:17"},"nodeType":"YulIf","src":"5693:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5676:5:17","type":""}],"src":"5640:122:17"},{"body":{"nodeType":"YulBlock","src":"5820:87:17","statements":[{"nodeType":"YulAssignment","src":"5830:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5852:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5839:12:17"},"nodeType":"YulFunctionCall","src":"5839:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5830:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5895:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"5868:26:17"},"nodeType":"YulFunctionCall","src":"5868:33:17"},"nodeType":"YulExpressionStatement","src":"5868:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5798:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5806:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5814:5:17","type":""}],"src":"5768:139:17"},{"body":{"nodeType":"YulBlock","src":"6002:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6019:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6022:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6012:6:17"},"nodeType":"YulFunctionCall","src":"6012:12:17"},"nodeType":"YulExpressionStatement","src":"6012:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5913:117:17"},{"body":{"nodeType":"YulBlock","src":"6103:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"6208:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6210:16:17"},"nodeType":"YulFunctionCall","src":"6210:18:17"},"nodeType":"YulExpressionStatement","src":"6210:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6180:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6188:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6177:2:17"},"nodeType":"YulFunctionCall","src":"6177:30:17"},"nodeType":"YulIf","src":"6174:56:17"},{"nodeType":"YulAssignment","src":"6240:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6270:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6248:21:17"},"nodeType":"YulFunctionCall","src":"6248:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6240:4:17"}]},{"nodeType":"YulAssignment","src":"6314:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6326:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"6332:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6322:3:17"},"nodeType":"YulFunctionCall","src":"6322:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6314:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6087:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6098:4:17","type":""}],"src":"6036:308:17"},{"body":{"nodeType":"YulBlock","src":"6414:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6437:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"6442:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6447:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6424:12:17"},"nodeType":"YulFunctionCall","src":"6424:30:17"},"nodeType":"YulExpressionStatement","src":"6424:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6474:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6479:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6470:3:17"},"nodeType":"YulFunctionCall","src":"6470:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"6488:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6463:6:17"},"nodeType":"YulFunctionCall","src":"6463:27:17"},"nodeType":"YulExpressionStatement","src":"6463:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6396:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6401:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"6406:6:17","type":""}],"src":"6350:146:17"},{"body":{"nodeType":"YulBlock","src":"6586:341:17","statements":[{"nodeType":"YulAssignment","src":"6596:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6663:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6621:41:17"},"nodeType":"YulFunctionCall","src":"6621:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6605:15:17"},"nodeType":"YulFunctionCall","src":"6605:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6596:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6687:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"6694:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:17"},"nodeType":"YulFunctionCall","src":"6680:21:17"},"nodeType":"YulExpressionStatement","src":"6680:21:17"},{"nodeType":"YulVariableDeclaration","src":"6710:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6725:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6732:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6721:3:17"},"nodeType":"YulFunctionCall","src":"6721:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6714:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6775:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"6777:77:17"},"nodeType":"YulFunctionCall","src":"6777:79:17"},"nodeType":"YulExpressionStatement","src":"6777:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6756:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6761:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6752:3:17"},"nodeType":"YulFunctionCall","src":"6752:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"6770:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6749:2:17"},"nodeType":"YulFunctionCall","src":"6749:25:17"},"nodeType":"YulIf","src":"6746:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6904:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"6909:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6914:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6867:36:17"},"nodeType":"YulFunctionCall","src":"6867:54:17"},"nodeType":"YulExpressionStatement","src":"6867:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6559:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"6564:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6572:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6580:5:17","type":""}],"src":"6502:425:17"},{"body":{"nodeType":"YulBlock","src":"7009:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"7058:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7060:77:17"},"nodeType":"YulFunctionCall","src":"7060:79:17"},"nodeType":"YulExpressionStatement","src":"7060:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7037:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7045:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7033:3:17"},"nodeType":"YulFunctionCall","src":"7033:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"7052:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7029:3:17"},"nodeType":"YulFunctionCall","src":"7029:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7022:6:17"},"nodeType":"YulFunctionCall","src":"7022:35:17"},"nodeType":"YulIf","src":"7019:122:17"},{"nodeType":"YulVariableDeclaration","src":"7150:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7177:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7164:12:17"},"nodeType":"YulFunctionCall","src":"7164:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7154:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7193:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7254:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7262:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7250:3:17"},"nodeType":"YulFunctionCall","src":"7250:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"7269:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"7277:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7202:47:17"},"nodeType":"YulFunctionCall","src":"7202:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7193:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6987:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6995:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7003:5:17","type":""}],"src":"6947:340:17"},{"body":{"nodeType":"YulBlock","src":"7402:688:17","statements":[{"body":{"nodeType":"YulBlock","src":"7448:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7450:77:17"},"nodeType":"YulFunctionCall","src":"7450:79:17"},"nodeType":"YulExpressionStatement","src":"7450:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7423:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7432:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7419:3:17"},"nodeType":"YulFunctionCall","src":"7419:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7444:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7415:3:17"},"nodeType":"YulFunctionCall","src":"7415:32:17"},"nodeType":"YulIf","src":"7412:119:17"},{"nodeType":"YulBlock","src":"7541:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7556:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7570:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7560:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7585:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7619:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7630:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7615:3:17"},"nodeType":"YulFunctionCall","src":"7615:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7639:7:17"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"7595:19:17"},"nodeType":"YulFunctionCall","src":"7595:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7585:6:17"}]}]},{"nodeType":"YulBlock","src":"7667:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7682:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7696:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7686:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7712:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7747:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7758:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:17"},"nodeType":"YulFunctionCall","src":"7743:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7767:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7722:20:17"},"nodeType":"YulFunctionCall","src":"7722:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7712:6:17"}]}]},{"nodeType":"YulBlock","src":"7795:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7810:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7841:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7852:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7837:3:17"},"nodeType":"YulFunctionCall","src":"7837:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7824:12:17"},"nodeType":"YulFunctionCall","src":"7824:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7814:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7903:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7905:77:17"},"nodeType":"YulFunctionCall","src":"7905:79:17"},"nodeType":"YulExpressionStatement","src":"7905:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7875:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7883:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7872:2:17"},"nodeType":"YulFunctionCall","src":"7872:30:17"},"nodeType":"YulIf","src":"7869:117:17"},{"nodeType":"YulAssignment","src":"8000:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8045:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8056:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8041:3:17"},"nodeType":"YulFunctionCall","src":"8041:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8065:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8010:30:17"},"nodeType":"YulFunctionCall","src":"8010:63:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8000:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint16t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7356:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7367:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7379:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7387:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7395:6:17","type":""}],"src":"7293:797:17"},{"body":{"nodeType":"YulBlock","src":"8124:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8141:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8144:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8134:6:17"},"nodeType":"YulFunctionCall","src":"8134:88:17"},"nodeType":"YulExpressionStatement","src":"8134:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8238:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8241:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8231:6:17"},"nodeType":"YulFunctionCall","src":"8231:15:17"},"nodeType":"YulExpressionStatement","src":"8231:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8262:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8265:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8255:6:17"},"nodeType":"YulFunctionCall","src":"8255:15:17"},"nodeType":"YulExpressionStatement","src":"8255:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"8096:180:17"},{"body":{"nodeType":"YulBlock","src":"8333:269:17","statements":[{"nodeType":"YulAssignment","src":"8343:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8357:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8363:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8353:3:17"},"nodeType":"YulFunctionCall","src":"8353:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8343:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"8374:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8404:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8410:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8400:3:17"},"nodeType":"YulFunctionCall","src":"8400:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8378:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8451:51:17","statements":[{"nodeType":"YulAssignment","src":"8465:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8479:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8487:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8475:3:17"},"nodeType":"YulFunctionCall","src":"8475:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8465:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8431:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8424:6:17"},"nodeType":"YulFunctionCall","src":"8424:26:17"},"nodeType":"YulIf","src":"8421:81:17"},{"body":{"nodeType":"YulBlock","src":"8554:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8568:16:17"},"nodeType":"YulFunctionCall","src":"8568:18:17"},"nodeType":"YulExpressionStatement","src":"8568:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8518:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8541:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8549:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8538:2:17"},"nodeType":"YulFunctionCall","src":"8538:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8515:2:17"},"nodeType":"YulFunctionCall","src":"8515:38:17"},"nodeType":"YulIf","src":"8512:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8317:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8326:6:17","type":""}],"src":"8282:320:17"},{"body":{"nodeType":"YulBlock","src":"8636:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8653:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8656:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8646:6:17"},"nodeType":"YulFunctionCall","src":"8646:88:17"},"nodeType":"YulExpressionStatement","src":"8646:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8750:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8753:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8743:6:17"},"nodeType":"YulFunctionCall","src":"8743:15:17"},"nodeType":"YulExpressionStatement","src":"8743:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8774:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8777:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8767:6:17"},"nodeType":"YulFunctionCall","src":"8767:15:17"},"nodeType":"YulExpressionStatement","src":"8767:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8608:180:17"},{"body":{"nodeType":"YulBlock","src":"8822:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8839:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8842:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8832:6:17"},"nodeType":"YulFunctionCall","src":"8832:88:17"},"nodeType":"YulExpressionStatement","src":"8832:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8936:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8939:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8929:6:17"},"nodeType":"YulFunctionCall","src":"8929:15:17"},"nodeType":"YulExpressionStatement","src":"8929:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8960:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8963:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8953:6:17"},"nodeType":"YulFunctionCall","src":"8953:15:17"},"nodeType":"YulExpressionStatement","src":"8953:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8794:180:17"},{"body":{"nodeType":"YulBlock","src":"9024:147:17","statements":[{"nodeType":"YulAssignment","src":"9034:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9057:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9039:17:17"},"nodeType":"YulFunctionCall","src":"9039:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9034:1:17"}]},{"nodeType":"YulAssignment","src":"9068:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9091:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9073:17:17"},"nodeType":"YulFunctionCall","src":"9073:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9068:1:17"}]},{"nodeType":"YulAssignment","src":"9102:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9113:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"9116:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9109:3:17"},"nodeType":"YulFunctionCall","src":"9109:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9102:3:17"}]},{"body":{"nodeType":"YulBlock","src":"9142:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9144:16:17"},"nodeType":"YulFunctionCall","src":"9144:18:17"},"nodeType":"YulExpressionStatement","src":"9144:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9134:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"9137:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9131:2:17"},"nodeType":"YulFunctionCall","src":"9131:10:17"},"nodeType":"YulIf","src":"9128:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9011:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"9014:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9020:3:17","type":""}],"src":"8980:191:17"},{"body":{"nodeType":"YulBlock","src":"9220:190:17","statements":[{"nodeType":"YulAssignment","src":"9230:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9257:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9239:17:17"},"nodeType":"YulFunctionCall","src":"9239:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9230:5:17"}]},{"body":{"nodeType":"YulBlock","src":"9353:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9355:16:17"},"nodeType":"YulFunctionCall","src":"9355:18:17"},"nodeType":"YulExpressionStatement","src":"9355:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9278:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9285:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9275:2:17"},"nodeType":"YulFunctionCall","src":"9275:77:17"},"nodeType":"YulIf","src":"9272:103:17"},{"nodeType":"YulAssignment","src":"9384:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9395:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9402:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9391:3:17"},"nodeType":"YulFunctionCall","src":"9391:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9384:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9206:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9216:3:17","type":""}],"src":"9177:233:17"},{"body":{"nodeType":"YulBlock","src":"9470:87:17","statements":[{"nodeType":"YulAssignment","src":"9480:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9488:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9480:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9508:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"9511:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9501:6:17"},"nodeType":"YulFunctionCall","src":"9501:14:17"},"nodeType":"YulExpressionStatement","src":"9501:14:17"},{"nodeType":"YulAssignment","src":"9524:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9542:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9545:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9532:9:17"},"nodeType":"YulFunctionCall","src":"9532:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9524:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9457:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9465:4:17","type":""}],"src":"9416:141:17"},{"body":{"nodeType":"YulBlock","src":"9607:49:17","statements":[{"nodeType":"YulAssignment","src":"9617:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9635:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9642:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9631:3:17"},"nodeType":"YulFunctionCall","src":"9631:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"9647:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9627:3:17"},"nodeType":"YulFunctionCall","src":"9627:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9617:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9590:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9600:6:17","type":""}],"src":"9563:93:17"},{"body":{"nodeType":"YulBlock","src":"9715:54:17","statements":[{"nodeType":"YulAssignment","src":"9725:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"9750:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"9756:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9746:3:17"},"nodeType":"YulFunctionCall","src":"9746:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"9725:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"9690:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"9696:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"9706:8:17","type":""}],"src":"9662:107:17"},{"body":{"nodeType":"YulBlock","src":"9851:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9861:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"9882:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"9894:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9878:3:17"},"nodeType":"YulFunctionCall","src":"9878:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"9865:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9905:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"9936:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9947:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"9917:18:17"},"nodeType":"YulFunctionCall","src":"9917:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"9909:4:17","type":""}]},{"nodeType":"YulAssignment","src":"10023:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"10054:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"10065:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"10035:18:17"},"nodeType":"YulFunctionCall","src":"10035:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"10023:8:17"}]},{"nodeType":"YulAssignment","src":"10083:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10096:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"10107:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10103:3:17"},"nodeType":"YulFunctionCall","src":"10103:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10092:3:17"},"nodeType":"YulFunctionCall","src":"10092:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10083:5:17"}]},{"nodeType":"YulAssignment","src":"10122:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10135:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"10146:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"10156:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10142:3:17"},"nodeType":"YulFunctionCall","src":"10142:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10132:2:17"},"nodeType":"YulFunctionCall","src":"10132:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10122:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9812:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"9819:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"9831:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9844:6:17","type":""}],"src":"9775:393:17"},{"body":{"nodeType":"YulBlock","src":"10206:28:17","statements":[{"nodeType":"YulAssignment","src":"10216:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"10223:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10216:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10192:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10202:3:17","type":""}],"src":"10174:60:17"},{"body":{"nodeType":"YulBlock","src":"10300:82:17","statements":[{"nodeType":"YulAssignment","src":"10310:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10368:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10350:17:17"},"nodeType":"YulFunctionCall","src":"10350:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"10341:8:17"},"nodeType":"YulFunctionCall","src":"10341:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10323:17:17"},"nodeType":"YulFunctionCall","src":"10323:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10310:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10280:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10290:9:17","type":""}],"src":"10240:142:17"},{"body":{"nodeType":"YulBlock","src":"10435:28:17","statements":[{"nodeType":"YulAssignment","src":"10445:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"10452:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10445:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10421:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10431:3:17","type":""}],"src":"10388:75:17"},{"body":{"nodeType":"YulBlock","src":"10545:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10555:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"10610:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10579:30:17"},"nodeType":"YulFunctionCall","src":"10579:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"10559:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10634:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10674:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10668:5:17"},"nodeType":"YulFunctionCall","src":"10668:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10681:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"10713:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"10689:23:17"},"nodeType":"YulFunctionCall","src":"10689:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"10640:27:17"},"nodeType":"YulFunctionCall","src":"10640:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10627:6:17"},"nodeType":"YulFunctionCall","src":"10627:105:17"},"nodeType":"YulExpressionStatement","src":"10627:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"10522:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"10528:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"10536:7:17","type":""}],"src":"10469:269:17"},{"body":{"nodeType":"YulBlock","src":"10793:24:17","statements":[{"nodeType":"YulAssignment","src":"10803:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10810:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10803:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10789:3:17","type":""}],"src":"10744:73:17"},{"body":{"nodeType":"YulBlock","src":"10876:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10886:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"10900:30:17"},"nodeType":"YulFunctionCall","src":"10900:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"10890:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10985:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10991:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"10999:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10941:43:17"},"nodeType":"YulFunctionCall","src":"10941:65:17"},"nodeType":"YulExpressionStatement","src":"10941:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"10862:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"10868:6:17","type":""}],"src":"10823:189:17"},{"body":{"nodeType":"YulBlock","src":"11068:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"11135:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11179:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11186:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"11149:29:17"},"nodeType":"YulFunctionCall","src":"11149:39:17"},"nodeType":"YulExpressionStatement","src":"11149:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11088:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"11095:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11085:2:17"},"nodeType":"YulFunctionCall","src":"11085:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11100:26:17","statements":[{"nodeType":"YulAssignment","src":"11102:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11115:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11122:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11111:3:17"},"nodeType":"YulFunctionCall","src":"11111:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"11102:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"11082:2:17","statements":[]},"src":"11078:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"11056:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"11063:3:17","type":""}],"src":"11018:186:17"},{"body":{"nodeType":"YulBlock","src":"11289:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"11315:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11329:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11377:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"11345:31:17"},"nodeType":"YulFunctionCall","src":"11345:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"11333:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11396:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"11419:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11447:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"11429:17:17"},"nodeType":"YulFunctionCall","src":"11429:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11415:3:17"},"nodeType":"YulFunctionCall","src":"11415:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"11400:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11616:27:17","statements":[{"nodeType":"YulAssignment","src":"11618:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"11633:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11618:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11600:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"11612:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11597:2:17"},"nodeType":"YulFunctionCall","src":"11597:18:17"},"nodeType":"YulIf","src":"11594:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11685:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"11702:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11730:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"11712:17:17"},"nodeType":"YulFunctionCall","src":"11712:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11698:3:17"},"nodeType":"YulFunctionCall","src":"11698:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"11656:28:17"},"nodeType":"YulFunctionCall","src":"11656:80:17"},"nodeType":"YulExpressionStatement","src":"11656:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11306:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11311:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11303:2:17"},"nodeType":"YulFunctionCall","src":"11303:11:17"},"nodeType":"YulIf","src":"11300:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"11265:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"11272:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"11277:10:17","type":""}],"src":"11210:543:17"},{"body":{"nodeType":"YulBlock","src":"11822:54:17","statements":[{"nodeType":"YulAssignment","src":"11832:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"11857:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"11863:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11853:3:17"},"nodeType":"YulFunctionCall","src":"11853:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"11832:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"11797:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"11803:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"11813:8:17","type":""}],"src":"11759:117:17"},{"body":{"nodeType":"YulBlock","src":"11933:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11943:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11992:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"11995:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11988:3:17"},"nodeType":"YulFunctionCall","src":"11988:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12007:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12003:3:17"},"nodeType":"YulFunctionCall","src":"12003:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"11959:28:17"},"nodeType":"YulFunctionCall","src":"11959:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11955:3:17"},"nodeType":"YulFunctionCall","src":"11955:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"11947:4:17","type":""}]},{"nodeType":"YulAssignment","src":"12020:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12034:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"12040:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12030:3:17"},"nodeType":"YulFunctionCall","src":"12030:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12020:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11910:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"11916:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11926:6:17","type":""}],"src":"11882:169:17"},{"body":{"nodeType":"YulBlock","src":"12137:214:17","statements":[{"nodeType":"YulAssignment","src":"12270:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12297:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"12303:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"12278:18:17"},"nodeType":"YulFunctionCall","src":"12278:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12270:4:17"}]},{"nodeType":"YulAssignment","src":"12316:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12327:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12337:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"12340:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12333:3:17"},"nodeType":"YulFunctionCall","src":"12333:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12324:2:17"},"nodeType":"YulFunctionCall","src":"12324:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"12316:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12118:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"12124:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"12132:4:17","type":""}],"src":"12056:295:17"},{"body":{"nodeType":"YulBlock","src":"12448:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12459:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12506:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12473:32:17"},"nodeType":"YulFunctionCall","src":"12473:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"12463:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"12595:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12597:16:17"},"nodeType":"YulFunctionCall","src":"12597:18:17"},"nodeType":"YulExpressionStatement","src":"12597:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12567:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12575:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12564:2:17"},"nodeType":"YulFunctionCall","src":"12564:30:17"},"nodeType":"YulIf","src":"12561:56:17"},{"nodeType":"YulVariableDeclaration","src":"12627:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12673:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12667:5:17"},"nodeType":"YulFunctionCall","src":"12667:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12641:25:17"},"nodeType":"YulFunctionCall","src":"12641:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"12631:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12772:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"12778:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"12786:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"12726:45:17"},"nodeType":"YulFunctionCall","src":"12726:67:17"},"nodeType":"YulExpressionStatement","src":"12726:67:17"},{"nodeType":"YulVariableDeclaration","src":"12803:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12820:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"12807:9:17","type":""}]},{"nodeType":"YulAssignment","src":"12831:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12844:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12831:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"12895:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12909:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12928:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12940:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12936:3:17"},"nodeType":"YulFunctionCall","src":"12936:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12924:3:17"},"nodeType":"YulFunctionCall","src":"12924:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"12913:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12960:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13006:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"12974:31:17"},"nodeType":"YulFunctionCall","src":"12974:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"12964:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13024:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13033:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13028:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13092:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13117:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13135:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13140:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13131:3:17"},"nodeType":"YulFunctionCall","src":"13131:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13125:5:17"},"nodeType":"YulFunctionCall","src":"13125:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13110:6:17"},"nodeType":"YulFunctionCall","src":"13110:42:17"},"nodeType":"YulExpressionStatement","src":"13110:42:17"},{"nodeType":"YulAssignment","src":"13169:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13183:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13191:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13179:3:17"},"nodeType":"YulFunctionCall","src":"13179:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13169:6:17"}]},{"nodeType":"YulAssignment","src":"13210:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13227:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13238:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13223:3:17"},"nodeType":"YulFunctionCall","src":"13223:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13210:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13058:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"13061:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13055:2:17"},"nodeType":"YulFunctionCall","src":"13055:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13070:21:17","statements":[{"nodeType":"YulAssignment","src":"13072:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13081:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"13084:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13077:3:17"},"nodeType":"YulFunctionCall","src":"13077:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13072:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"13051:3:17","statements":[]},"src":"13047:208:17"},{"body":{"nodeType":"YulBlock","src":"13291:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13309:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13336:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13341:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13332:3:17"},"nodeType":"YulFunctionCall","src":"13332:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13326:5:17"},"nodeType":"YulFunctionCall","src":"13326:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"13313:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13376:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"13403:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13418:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13426:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13414:3:17"},"nodeType":"YulFunctionCall","src":"13414:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"13384:18:17"},"nodeType":"YulFunctionCall","src":"13384:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13369:6:17"},"nodeType":"YulFunctionCall","src":"13369:64:17"},"nodeType":"YulExpressionStatement","src":"13369:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"13274:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"13283:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13271:2:17"},"nodeType":"YulFunctionCall","src":"13271:19:17"},"nodeType":"YulIf","src":"13268:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13467:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13481:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13489:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13477:3:17"},"nodeType":"YulFunctionCall","src":"13477:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"13493:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13473:3:17"},"nodeType":"YulFunctionCall","src":"13473:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13460:6:17"},"nodeType":"YulFunctionCall","src":"13460:36:17"},"nodeType":"YulExpressionStatement","src":"13460:36:17"}]},"nodeType":"YulCase","src":"12888:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12893:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"13523:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13537:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13550:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13541:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13574:67:17","statements":[{"nodeType":"YulAssignment","src":"13592:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13611:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13616:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13607:3:17"},"nodeType":"YulFunctionCall","src":"13607:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13601:5:17"},"nodeType":"YulFunctionCall","src":"13601:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13592:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"13567:6:17"},"nodeType":"YulIf","src":"13564:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13661:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13720:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"13727:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"13667:52:17"},"nodeType":"YulFunctionCall","src":"13667:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13654:6:17"},"nodeType":"YulFunctionCall","src":"13654:81:17"},"nodeType":"YulExpressionStatement","src":"13654:81:17"}]},"nodeType":"YulCase","src":"13515:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12868:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12876:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12865:2:17"},"nodeType":"YulFunctionCall","src":"12865:14:17"},"nodeType":"YulSwitch","src":"12858:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12437:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"12443:3:17","type":""}],"src":"12356:1395:17"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_uint16(value) -> cleaned {\\n        cleaned := and(value, 0xffff)\\n    }\\n\\n    function validator_revert_t_uint16(value) {\\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint16(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint16(value)\\n    }\\n\\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\\n        let length := array_length_t_string_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\\n        end := add(pos, round_up_to_mul_of_32(length))\\n    }\\n\\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_uint256(value))\\n    }\\n\\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := mul(length, 0x20)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\\n        revert(0, 0)\\n    }\\n\\n    // uint16[]\\n    function abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr(offset, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr(length))\\n        let dst := array\\n\\n        mstore(array, length)\\n        dst := add(array, 0x20)\\n\\n        let srcEnd := add(offset, mul(length, 0x20))\\n        if gt(srcEnd, end) {\\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\\n        }\\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\\n        {\\n\\n            let elementPos := src\\n\\n            mstore(dst, abi_decode_t_uint16(elementPos, end))\\n            dst := add(dst, 0x20)\\n        }\\n    }\\n\\n    // uint16[]\\n    function abi_decode_t_array$_t_uint16_$dyn_memory_ptr(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := calldataload(offset)\\n        array := abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr(add(offset, 0x20), length, end)\\n    }\\n\\n    function abi_decode_tuple_t_array$_t_uint16_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 0))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value0 := abi_decode_t_array$_t_uint16_$dyn_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function validator_revert_t_uint256(value) {\\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint256(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint256(value)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\\n        calldatacopy(dst, src, length)\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := calldataload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\\n    }\\n\\n    function abi_decode_tuple_t_uint16t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 32\\n\\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 64))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function panic_error_0x22() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x22)\\n        revert(0, 0x24)\\n    }\\n\\n    function extract_byte_array_length(data) -> length {\\n        length := div(data, 2)\\n        let outOfPlaceEncoding := and(data, 1)\\n        if iszero(outOfPlaceEncoding) {\\n            length := and(length, 0x7f)\\n        }\\n\\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\\n            panic_error_0x22()\\n        }\\n    }\\n\\n    function panic_error_0x32() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x32)\\n        revert(0, 0x24)\\n    }\\n\\n    function panic_error_0x11() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x11)\\n        revert(0, 0x24)\\n    }\\n\\n    function checked_add_t_uint256(x, y) -> sum {\\n        x := cleanup_t_uint256(x)\\n        y := cleanup_t_uint256(y)\\n        sum := add(x, y)\\n\\n        if gt(x, sum) { panic_error_0x11() }\\n\\n    }\\n\\n    function increment_t_uint256(value) -> ret {\\n        value := cleanup_t_uint256(value)\\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\\n        ret := add(value, 1)\\n    }\\n\\n    function array_dataslot_t_string_storage(ptr) -> data {\\n        data := ptr\\n\\n        mstore(0, ptr)\\n        data := keccak256(0, 0x20)\\n\\n    }\\n\\n    function divide_by_32_ceil(value) -> result {\\n        result := div(add(value, 31), 32)\\n    }\\n\\n    function shift_left_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shl(bits, value)\\n\\n    }\\n\\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\\n        let shiftBits := mul(shiftBytes, 8)\\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\\n        value := and(value, not(mask))\\n        result := or(value, and(toInsert, mask))\\n    }\\n\\n    function identity(value) -> ret {\\n        ret := value\\n    }\\n\\n    function convert_t_uint256_to_t_uint256(value) -> converted {\\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\\n    }\\n\\n    function prepare_store_t_uint256(value) -> ret {\\n        ret := value\\n    }\\n\\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\\n    }\\n\\n    function zero_value_for_split_t_uint256() -> ret {\\n        ret := 0\\n    }\\n\\n    function storage_set_to_zero_t_uint256(slot, offset) {\\n        let zero_0 := zero_value_for_split_t_uint256()\\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\\n    }\\n\\n    function clear_storage_range_t_bytes1(start, end) {\\n        for {} lt(start, end) { start := add(start, 1) }\\n        {\\n            storage_set_to_zero_t_uint256(start, 0)\\n        }\\n    }\\n\\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\\n\\n        if gt(len, 31) {\\n            let dataArea := array_dataslot_t_string_storage(array)\\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\\n            if lt(startIndex, 32) { deleteStart := dataArea }\\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\\n        }\\n\\n    }\\n\\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shr(bits, value)\\n\\n    }\\n\\n    function mask_bytes_dynamic(data, bytes) -> result {\\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\\n        result := and(data, mask)\\n    }\\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\\n        // we want to save only elements that are part of the array after resizing\\n        // others should be set to zero\\n        data := mask_bytes_dynamic(data, len)\\n        used := or(data, mul(2, len))\\n    }\\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\\n\\n        let newLen := array_length_t_string_memory_ptr(src)\\n        // Make sure array length is sane\\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        let oldLen := extract_byte_array_length(sload(slot))\\n\\n        // potentially truncate data\\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\\n\\n        let srcOffset := 0\\n\\n        srcOffset := 0x20\\n\\n        switch gt(newLen, 31)\\n        case 1 {\\n            let loopEnd := and(newLen, not(0x1f))\\n\\n            let dstPtr := array_dataslot_t_string_storage(slot)\\n            let i := 0\\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\\n                sstore(dstPtr, mload(add(src, srcOffset)))\\n                dstPtr := add(dstPtr, 1)\\n                srcOffset := add(srcOffset, 32)\\n            }\\n            if lt(loopEnd, newLen) {\\n                let lastValue := mload(add(src, srcOffset))\\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\\n            }\\n            sstore(slot, add(mul(newLen, 2), 1))\\n        }\\n        default {\\n            let value := 0\\n            if newLen {\\n                value := mload(add(src, srcOffset))\\n            }\\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\\n        }\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"sourceMap":"258:968:8:-:0;;;;;;;;;;;;;;;;;;;","deployedSourceMap":"258:968:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;753:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;618:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;908:316;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;409:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;753:149;828:13;860:23;:35;884:10;860:35;;;;;;;;;;;;;;;853:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;753:149;;;:::o;618:129::-;686:7;712:16;:28;729:10;712:28;;;;;;;;;;;;;;;;705:35;;618:129;;;:::o;908:316::-;990:7;1009:17;1029:1;1009:21;;1040:11;1054:14;:21;1040:35;;1090:9;1085:107;1109:3;1105:1;:7;1085:107;;;1146:16;:35;1163:14;1178:1;1163:17;;;;;;;;:::i;:::-;;;;;;;;1146:35;;;;;;;;;;;;;;;;1133:48;;;;;:::i;:::-;;;1114:3;;;;;:::i;:::-;;;;1085:107;;;;1208:9;1201:16;;;;908:316;;;:::o;409:203::-;542:4;511:16;:28;528:10;511:28;;;;;;;;;;;;;;;:35;;;;594:11;556:23;:35;580:10;556:35;;;;;;;;;;;;;;;:49;;;;;;:::i;:::-;;409:203;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:89;370:7;410:6;403:5;399:18;388:29;;334:89;;;:::o;429:120::-;501:23;518:5;501:23;:::i;:::-;494:5;491:34;481:62;;539:1;536;529:12;481:62;429:120;:::o;555:137::-;600:5;638:6;625:20;616:29;;654:32;680:5;654:32;:::i;:::-;555:137;;;;:::o;698:327::-;756:6;805:2;793:9;784:7;780:23;776:32;773:119;;;811:79;;:::i;:::-;773:119;931:1;956:52;1000:7;991:6;980:9;976:22;956:52;:::i;:::-;946:62;;902:116;698:327;;;;:::o;1031:99::-;1083:6;1117:5;1111:12;1101:22;;1031:99;;;:::o;1136:169::-;1220:11;1254:6;1249:3;1242:19;1294:4;1289:3;1285:14;1270:29;;1136:169;;;;:::o;1311:246::-;1392:1;1402:113;1416:6;1413:1;1410:13;1402:113;;;1501:1;1496:3;1492:11;1486:18;1482:1;1477:3;1473:11;1466:39;1438:2;1435:1;1431:10;1426:15;;1402:113;;;1549:1;1540:6;1535:3;1531:16;1524:27;1373:184;1311:246;;;:::o;1563:102::-;1604:6;1655:2;1651:7;1646:2;1639:5;1635:14;1631:28;1621:38;;1563:102;;;:::o;1671:377::-;1759:3;1787:39;1820:5;1787:39;:::i;:::-;1842:71;1906:6;1901:3;1842:71;:::i;:::-;1835:78;;1922:65;1980:6;1975:3;1968:4;1961:5;1957:16;1922:65;:::i;:::-;2012:29;2034:6;2012:29;:::i;:::-;2007:3;2003:39;1996:46;;1763:285;1671:377;;;;:::o;2054:313::-;2167:4;2205:2;2194:9;2190:18;2182:26;;2254:9;2248:4;2244:20;2240:1;2229:9;2225:17;2218:47;2282:78;2355:4;2346:6;2282:78;:::i;:::-;2274:86;;2054:313;;;;:::o;2373:77::-;2410:7;2439:5;2428:16;;2373:77;;;:::o;2456:118::-;2543:24;2561:5;2543:24;:::i;:::-;2538:3;2531:37;2456:118;;:::o;2580:222::-;2673:4;2711:2;2700:9;2696:18;2688:26;;2724:71;2792:1;2781:9;2777:17;2768:6;2724:71;:::i;:::-;2580:222;;;;:::o;2808:117::-;2917:1;2914;2907:12;2931:180;2979:77;2976:1;2969:88;3076:4;3073:1;3066:15;3100:4;3097:1;3090:15;3117:281;3200:27;3222:4;3200:27;:::i;:::-;3192:6;3188:40;3330:6;3318:10;3315:22;3294:18;3282:10;3279:34;3276:62;3273:88;;;3341:18;;:::i;:::-;3273:88;3381:10;3377:2;3370:22;3160:238;3117:281;;:::o;3404:129::-;3438:6;3465:20;;:::i;:::-;3455:30;;3494:33;3522:4;3514:6;3494:33;:::i;:::-;3404:129;;;:::o;3539:310::-;3615:4;3705:18;3697:6;3694:30;3691:56;;;3727:18;;:::i;:::-;3691:56;3777:4;3769:6;3765:17;3757:25;;3837:4;3831;3827:15;3819:23;;3539:310;;;:::o;3855:117::-;3964:1;3961;3954:12;3994:707;4089:5;4114:80;4130:63;4186:6;4130:63;:::i;:::-;4114:80;:::i;:::-;4105:89;;4214:5;4243:6;4236:5;4229:21;4277:4;4270:5;4266:16;4259:23;;4330:4;4322:6;4318:17;4310:6;4306:30;4359:3;4351:6;4348:15;4345:122;;;4378:79;;:::i;:::-;4345:122;4493:6;4476:219;4510:6;4505:3;4502:15;4476:219;;;4585:3;4614:36;4646:3;4634:10;4614:36;:::i;:::-;4609:3;4602:49;4680:4;4675:3;4671:14;4664:21;;4552:143;4536:4;4531:3;4527:14;4520:21;;4476:219;;;4480:21;4095:606;;3994:707;;;;;:::o;4723:368::-;4793:5;4842:3;4835:4;4827:6;4823:17;4819:27;4809:122;;4850:79;;:::i;:::-;4809:122;4967:6;4954:20;4992:93;5081:3;5073:6;5066:4;5058:6;5054:17;4992:93;:::i;:::-;4983:102;;4799:292;4723:368;;;;:::o;5097:537::-;5180:6;5229:2;5217:9;5208:7;5204:23;5200:32;5197:119;;;5235:79;;:::i;:::-;5197:119;5383:1;5372:9;5368:17;5355:31;5413:18;5405:6;5402:30;5399:117;;;5435:79;;:::i;:::-;5399:117;5540:77;5609:7;5600:6;5589:9;5585:22;5540:77;:::i;:::-;5530:87;;5326:301;5097:537;;;;:::o;5640:122::-;5713:24;5731:5;5713:24;:::i;:::-;5706:5;5703:35;5693:63;;5752:1;5749;5742:12;5693:63;5640:122;:::o;5768:139::-;5814:5;5852:6;5839:20;5830:29;;5868:33;5895:5;5868:33;:::i;:::-;5768:139;;;;:::o;5913:117::-;6022:1;6019;6012:12;6036:308;6098:4;6188:18;6180:6;6177:30;6174:56;;;6210:18;;:::i;:::-;6174:56;6248:29;6270:6;6248:29;:::i;:::-;6240:37;;6332:4;6326;6322:15;6314:23;;6036:308;;;:::o;6350:146::-;6447:6;6442:3;6437;6424:30;6488:1;6479:6;6474:3;6470:16;6463:27;6350:146;;;:::o;6502:425::-;6580:5;6605:66;6621:49;6663:6;6621:49;:::i;:::-;6605:66;:::i;:::-;6596:75;;6694:6;6687:5;6680:21;6732:4;6725:5;6721:16;6770:3;6761:6;6756:3;6752:16;6749:25;6746:112;;;6777:79;;:::i;:::-;6746:112;6867:54;6914:6;6909:3;6904;6867:54;:::i;:::-;6586:341;6502:425;;;;;:::o;6947:340::-;7003:5;7052:3;7045:4;7037:6;7033:17;7029:27;7019:122;;7060:79;;:::i;:::-;7019:122;7177:6;7164:20;7202:79;7277:3;7269:6;7262:4;7254:6;7250:17;7202:79;:::i;:::-;7193:88;;7009:278;6947:340;;;;:::o;7293:797::-;7379:6;7387;7395;7444:2;7432:9;7423:7;7419:23;7415:32;7412:119;;;7450:79;;:::i;:::-;7412:119;7570:1;7595:52;7639:7;7630:6;7619:9;7615:22;7595:52;:::i;:::-;7585:62;;7541:116;7696:2;7722:53;7767:7;7758:6;7747:9;7743:22;7722:53;:::i;:::-;7712:63;;7667:118;7852:2;7841:9;7837:18;7824:32;7883:18;7875:6;7872:30;7869:117;;;7905:79;;:::i;:::-;7869:117;8010:63;8065:7;8056:6;8045:9;8041:22;8010:63;:::i;:::-;8000:73;;7795:288;7293:797;;;;;:::o;8096:180::-;8144:77;8141:1;8134:88;8241:4;8238:1;8231:15;8265:4;8262:1;8255:15;8282:320;8326:6;8363:1;8357:4;8353:12;8343:22;;8410:1;8404:4;8400:12;8431:18;8421:81;;8487:4;8479:6;8475:17;8465:27;;8421:81;8549:2;8541:6;8538:14;8518:18;8515:38;8512:84;;8568:18;;:::i;:::-;8512:84;8333:269;8282:320;;;:::o;8608:180::-;8656:77;8653:1;8646:88;8753:4;8750:1;8743:15;8777:4;8774:1;8767:15;8794:180;8842:77;8839:1;8832:88;8939:4;8936:1;8929:15;8963:4;8960:1;8953:15;8980:191;9020:3;9039:20;9057:1;9039:20;:::i;:::-;9034:25;;9073:20;9091:1;9073:20;:::i;:::-;9068:25;;9116:1;9113;9109:9;9102:16;;9137:3;9134:1;9131:10;9128:36;;;9144:18;;:::i;:::-;9128:36;8980:191;;;;:::o;9177:233::-;9216:3;9239:24;9257:5;9239:24;:::i;:::-;9230:33;;9285:66;9278:5;9275:77;9272:103;;9355:18;;:::i;:::-;9272:103;9402:1;9395:5;9391:13;9384:20;;9177:233;;;:::o;9416:141::-;9465:4;9488:3;9480:11;;9511:3;9508:1;9501:14;9545:4;9542:1;9532:18;9524:26;;9416:141;;;:::o;9563:93::-;9600:6;9647:2;9642;9635:5;9631:14;9627:23;9617:33;;9563:93;;;:::o;9662:107::-;9706:8;9756:5;9750:4;9746:16;9725:37;;9662:107;;;;:::o;9775:393::-;9844:6;9894:1;9882:10;9878:18;9917:97;9947:66;9936:9;9917:97;:::i;:::-;10035:39;10065:8;10054:9;10035:39;:::i;:::-;10023:51;;10107:4;10103:9;10096:5;10092:21;10083:30;;10156:4;10146:8;10142:19;10135:5;10132:30;10122:40;;9851:317;;9775:393;;;;;:::o;10174:60::-;10202:3;10223:5;10216:12;;10174:60;;;:::o;10240:142::-;10290:9;10323:53;10341:34;10350:24;10368:5;10350:24;:::i;:::-;10341:34;:::i;:::-;10323:53;:::i;:::-;10310:66;;10240:142;;;:::o;10388:75::-;10431:3;10452:5;10445:12;;10388:75;;;:::o;10469:269::-;10579:39;10610:7;10579:39;:::i;:::-;10640:91;10689:41;10713:16;10689:41;:::i;:::-;10681:6;10674:4;10668:11;10640:91;:::i;:::-;10634:4;10627:105;10545:193;10469:269;;;:::o;10744:73::-;10789:3;10744:73;:::o;10823:189::-;10900:32;;:::i;:::-;10941:65;10999:6;10991;10985:4;10941:65;:::i;:::-;10876:136;10823:189;;:::o;11018:186::-;11078:120;11095:3;11088:5;11085:14;11078:120;;;11149:39;11186:1;11179:5;11149:39;:::i;:::-;11122:1;11115:5;11111:13;11102:22;;11078:120;;;11018:186;;:::o;11210:543::-;11311:2;11306:3;11303:11;11300:446;;;11345:38;11377:5;11345:38;:::i;:::-;11429:29;11447:10;11429:29;:::i;:::-;11419:8;11415:44;11612:2;11600:10;11597:18;11594:49;;;11633:8;11618:23;;11594:49;11656:80;11712:22;11730:3;11712:22;:::i;:::-;11702:8;11698:37;11685:11;11656:80;:::i;:::-;11315:431;;11300:446;11210:543;;;:::o;11759:117::-;11813:8;11863:5;11857:4;11853:16;11832:37;;11759:117;;;;:::o;11882:169::-;11926:6;11959:51;12007:1;12003:6;11995:5;11992:1;11988:13;11959:51;:::i;:::-;11955:56;12040:4;12034;12030:15;12020:25;;11933:118;11882:169;;;;:::o;12056:295::-;12132:4;12278:29;12303:3;12297:4;12278:29;:::i;:::-;12270:37;;12340:3;12337:1;12333:11;12327:4;12324:21;12316:29;;12056:295;;;;:::o;12356:1395::-;12473:37;12506:3;12473:37;:::i;:::-;12575:18;12567:6;12564:30;12561:56;;;12597:18;;:::i;:::-;12561:56;12641:38;12673:4;12667:11;12641:38;:::i;:::-;12726:67;12786:6;12778;12772:4;12726:67;:::i;:::-;12820:1;12844:4;12831:17;;12876:2;12868:6;12865:14;12893:1;12888:618;;;;13550:1;13567:6;13564:77;;;13616:9;13611:3;13607:19;13601:26;13592:35;;13564:77;13667:67;13727:6;13720:5;13667:67;:::i;:::-;13661:4;13654:81;13523:222;12858:887;;12888:618;12940:4;12936:9;12928:6;12924:22;12974:37;13006:4;12974:37;:::i;:::-;13033:1;13047:208;13061:7;13058:1;13055:14;13047:208;;;13140:9;13135:3;13131:19;13125:26;13117:6;13110:42;13191:1;13183:6;13179:14;13169:24;;13238:2;13227:9;13223:18;13210:31;;13084:4;13081:1;13077:12;13072:17;;13047:208;;;13283:6;13274:7;13271:19;13268:179;;;13341:9;13336:3;13332:19;13326:26;13384:48;13426:4;13418:6;13414:17;13403:9;13384:48;:::i;:::-;13376:6;13369:64;13291:156;13268:179;13493:1;13489;13481:6;13477:14;13473:22;13467:4;13460:36;12895:611;;;12858:887;;12448:1303;;;12356:1395;;:::o","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n// errors\\n// error Ticket__inactive();\\n// error Ticket__NoJudgeAssigned();\\n\\n// TODO: Implement access control and errors\\n\\n/// @title Infractions\\n/// @author Samin Yaser\\n/// @notice Infraction database\\ncontract Infractions {\\n\\n    mapping (uint16 => uint256) private infractionToFine;\\n    mapping (uint16 => string) private infractionToDescription;\\n\\n    function addInfraction(uint16 infraction, uint256 fine, string memory description) external {\\n        infractionToFine[infraction] = fine;\\n        infractionToDescription[infraction] = description;\\n    }\\n\\n    function getInfractionFine(uint16 infraction) external view returns(uint256) {\\n        return infractionToFine[infraction];\\n    }\\n\\n    function getInfractionDescription(uint16 infraction) external view returns(string memory) {\\n        return infractionToDescription[infraction];\\n    }\\n\\n    function calculateTotalFine(uint16[] memory infractionList) external view returns(uint256) {\\n        uint256 totalFine = 0;\\n        uint256 len = infractionList.length;\\n        for (uint256 i = 0; i < len; i++) {\\n            totalFine += infractionToFine[infractionList[i]];\\n        }\\n        return totalFine;\\n    }\\n}\\n","sourcePath":"C:\\\\Users\\\\samin\\\\Documents\\\\Projects\\\\AWT\\\\TraffiChain\\\\contracts\\\\Infractions.sol","ast":{"absolutePath":"project:/contracts/Infractions.sol","exportedSymbols":{"Infractions":[994]},"id":995,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":898,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Infractions","contractDependencies":[],"contractKind":"contract","documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"179:79:8","text":"@title Infractions\\n @author Samin Yaser\\n @notice Infraction database"},"fullyImplemented":true,"id":994,"linearizedBaseContracts":[994],"name":"Infractions","nameLocation":"267:11:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":903,"mutability":"mutable","name":"infractionToFine","nameLocation":"322:16:8","nodeType":"VariableDeclaration","scope":994,"src":"286:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"typeName":{"id":902,"keyType":{"id":900,"name":"uint16","nodeType":"ElementaryTypeName","src":"295:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"286:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueType":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"305:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":907,"mutability":"mutable","name":"infractionToDescription","nameLocation":"379:23:8","nodeType":"VariableDeclaration","scope":994,"src":"344:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_string_storage_$","typeString":"mapping(uint16 => string)"},"typeName":{"id":906,"keyType":{"id":904,"name":"uint16","nodeType":"ElementaryTypeName","src":"353:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"344:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_string_storage_$","typeString":"mapping(uint16 => string)"},"valueType":{"id":905,"name":"string","nodeType":"ElementaryTypeName","src":"363:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"body":{"id":928,"nodeType":"Block","src":"501:111:8","statements":[{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":916,"name":"infractionToFine","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"511:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":918,"indexExpression":{"id":917,"name":"infraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"528:10:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"511:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":919,"name":"fine","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"542:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"511:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ExpressionStatement","src":"511:35:8"},{"expression":{"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":922,"name":"infractionToDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"556:23:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_string_storage_$","typeString":"mapping(uint16 => string storage ref)"}},"id":924,"indexExpression":{"id":923,"name":"infraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"580:10:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"556:35:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":925,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"594:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"556:49:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":927,"nodeType":"ExpressionStatement","src":"556:49:8"}]},"functionSelector":"ad97bbef","id":929,"implemented":true,"kind":"function","modifiers":[],"name":"addInfraction","nameLocation":"418:13:8","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"infraction","nameLocation":"439:10:8","nodeType":"VariableDeclaration","scope":929,"src":"432:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":908,"name":"uint16","nodeType":"ElementaryTypeName","src":"432:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"fine","nameLocation":"459:4:8","nodeType":"VariableDeclaration","scope":929,"src":"451:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"description","nameLocation":"479:11:8","nodeType":"VariableDeclaration","scope":929,"src":"465:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":912,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"431:60:8"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[],"src":"501:0:8"},"scope":994,"src":"409:203:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":940,"nodeType":"Block","src":"695:52:8","statements":[{"expression":{"baseExpression":{"id":936,"name":"infractionToFine","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"712:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":938,"indexExpression":{"id":937,"name":"infraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"729:10:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"712:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":935,"id":939,"nodeType":"Return","src":"705:35:8"}]},"functionSelector":"5af5f529","id":941,"implemented":true,"kind":"function","modifiers":[],"name":"getInfractionFine","nameLocation":"627:17:8","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"infraction","nameLocation":"652:10:8","nodeType":"VariableDeclaration","scope":941,"src":"645:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":930,"name":"uint16","nodeType":"ElementaryTypeName","src":"645:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"644:19:8"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"686:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"686:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"685:9:8"},"scope":994,"src":"618:129:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":952,"nodeType":"Block","src":"843:59:8","statements":[{"expression":{"baseExpression":{"id":948,"name":"infractionToDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"860:23:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_string_storage_$","typeString":"mapping(uint16 => string storage ref)"}},"id":950,"indexExpression":{"id":949,"name":"infraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"884:10:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"860:35:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":947,"id":951,"nodeType":"Return","src":"853:42:8"}]},"functionSelector":"0de637a5","id":953,"implemented":true,"kind":"function","modifiers":[],"name":"getInfractionDescription","nameLocation":"762:24:8","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"infraction","nameLocation":"794:10:8","nodeType":"VariableDeclaration","scope":953,"src":"787:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":942,"name":"uint16","nodeType":"ElementaryTypeName","src":"787:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"786:19:8"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":953,"src":"828:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":945,"name":"string","nodeType":"ElementaryTypeName","src":"828:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"827:15:8"},"scope":994,"src":"753:149:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":992,"nodeType":"Block","src":"999:225:8","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"totalFine","nameLocation":"1017:9:8","nodeType":"VariableDeclaration","scope":992,"src":"1009:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1009:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":964,"initialValue":{"hexValue":"30","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1029:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1009:21:8"},{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"len","nameLocation":"1048:3:8","nodeType":"VariableDeclaration","scope":992,"src":"1040:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":969,"initialValue":{"expression":{"id":967,"name":"infractionList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"1054:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1069:6:8","memberName":"length","nodeType":"MemberAccess","src":"1054:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1040:35:8"},{"body":{"id":988,"nodeType":"Block","src":"1119:73:8","statements":[{"expression":{"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":980,"name":"totalFine","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1133:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":981,"name":"infractionToFine","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1146:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":985,"indexExpression":{"baseExpression":{"id":982,"name":"infractionList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"1163:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"}},"id":984,"indexExpression":{"id":983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"1178:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1163:17:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1146:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1133:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":987,"nodeType":"ExpressionStatement","src":"1133:48:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"1105:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":975,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"1109:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1105:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":989,"initializationExpression":{"assignments":[971],"declarations":[{"constant":false,"id":971,"mutability":"mutable","name":"i","nameLocation":"1098:1:8","nodeType":"VariableDeclaration","scope":989,"src":"1090:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1090:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":973,"initialValue":{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1102:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1090:13:8"},"loopExpression":{"expression":{"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1114:3:8","subExpression":{"id":977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"1114:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":979,"nodeType":"ExpressionStatement","src":"1114:3:8"},"nodeType":"ForStatement","src":"1085:107:8"},{"expression":{"id":990,"name":"totalFine","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1208:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":960,"id":991,"nodeType":"Return","src":"1201:16:8"}]},"functionSelector":"5cbcd4c1","id":993,"implemented":true,"kind":"function","modifiers":[],"name":"calculateTotalFine","nameLocation":"917:18:8","nodeType":"FunctionDefinition","parameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"infractionList","nameLocation":"952:14:8","nodeType":"VariableDeclaration","scope":993,"src":"936:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[]"},"typeName":{"baseType":{"id":954,"name":"uint16","nodeType":"ElementaryTypeName","src":"936:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":955,"nodeType":"ArrayTypeName","src":"936:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"internal"}],"src":"935:32:8"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":993,"src":"990:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"989:9:8"},"scope":994,"src":"908:316:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":995,"src":"258:968:8","usedErrors":[]}],"src":"32:1195:8"},"compiler":{"name":"solc","version":"0.8.17+commit.8df45f5f.Emscripten.clang"},"networks":{"5777":{"events":{},"links":{},"address":"0x5d24452BEb4dbF4D011691dF89DAAE22FDBB52aA","transactionHash":"0xd8aff81147e73bc133111164933535ebc2d59fbebc68c6ea9949424249af69b2"}},"schemaVersion":"3.4.10","updatedAt":"2022-11-28T05:49:24.181Z","networkType":"ethereum","devdoc":{"author":"Samin Yaser","kind":"dev","methods":{},"title":"Infractions","version":1},"userdoc":{"kind":"user","methods":{},"notice":"Infraction database","version":1}}');

/***/ }),

/***/ "./build/contracts/Judge.json":
/*!************************************!*\
  !*** ./build/contracts/Judge.json ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"Judge","abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.17+commit.8df45f5f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"name_\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"}],\\"devdoc\\":{\\"author\\":\\"Samin Yaser\\",\\"kind\\":\\"dev\\",\\"methods\\":{},\\"title\\":\\"Judge\\",\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"notice\\":\\"Profile of a judge\\",\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/Judge.sol\\":\\"Judge\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"project:/contracts/Judge.sol\\":{\\"keccak256\\":\\"0x837525b35b4f6e7f7ed08188a458ebd6273d24a812805611059765315cffcb51\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://d30d833985fc172e0fb2ddeeebfc209ef2dadcca375d80ff304f364d383992de\\",\\"dweb:/ipfs/QmWxpPSFVw5qaSHSjugtD4oNvcj3aCFgP1X9BMFnF1mMxK\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b50604051610546380380610546833981810160405281019061003291906101bd565b80600090816100419190610427565b50506104f9565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100af82610066565b810181811067ffffffffffffffff821117156100ce576100cd610077565b5b80604052505050565b60006100e1610048565b90506100ed82826100a6565b919050565b600067ffffffffffffffff82111561010d5761010c610077565b5b61011682610066565b9050602081019050919050565b60005b83811015610141578082015181840152602081019050610126565b60008484015250505050565b600061016061015b846100f2565b6100d7565b90508281526020810184848401111561017c5761017b610061565b5b610187848285610123565b509392505050565b600082601f8301126101a4576101a361005c565b5b81516101b484826020860161014d565b91505092915050565b6000602082840312156101d3576101d2610052565b5b600082015167ffffffffffffffff8111156101f1576101f0610057565b5b6101fd8482850161018f565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061025857607f821691505b60208210810361026b5761026a610211565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102d37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610296565b6102dd8683610296565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061032461031f61031a846102f5565b6102ff565b6102f5565b9050919050565b6000819050919050565b61033e83610309565b61035261034a8261032b565b8484546102a3565b825550505050565b600090565b61036761035a565b610372818484610335565b505050565b5b818110156103965761038b60008261035f565b600181019050610378565b5050565b601f8211156103db576103ac81610271565b6103b584610286565b810160208510156103c4578190505b6103d86103d085610286565b830182610377565b50505b505050565b600082821c905092915050565b60006103fe600019846008026103e0565b1980831691505092915050565b600061041783836103ed565b9150826002028217905092915050565b61043082610206565b67ffffffffffffffff81111561044957610448610077565b5b6104538254610240565b61045e82828561039a565b600060209050601f831160018114610491576000841561047f578287015190505b610489858261040b565b8655506104f1565b601f19841661049f86610271565b60005b828110156104c7578489015182556001820191506020850194506020810190506104a2565b868310156104e457848901516104e0601f8916826103ed565b8355505b6001600288020188555050505b505050505050565b603f806105076000396000f3fe6080604052600080fdfea264697066735822122031846e87d0e16c4128efaa2fd042c897596398dd7ab02515c18d76951d18006d64736f6c63430008110033","deployedBytecode":"0x6080604052600080fdfea264697066735822122031846e87d0e16c4128efaa2fd042c897596398dd7ab02515c18d76951d18006d64736f6c63430008110033","immutableReferences":{},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8245:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"423:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:12:17"},"nodeType":"YulExpressionStatement","src":"433:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:17"},{"body":{"nodeType":"YulBlock","src":"546:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:17"},"nodeType":"YulFunctionCall","src":"556:12:17"},"nodeType":"YulExpressionStatement","src":"556:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:17"},{"body":{"nodeType":"YulBlock","src":"628:54:17","statements":[{"nodeType":"YulAssignment","src":"638:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:17"},"nodeType":"YulFunctionCall","src":"652:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:17"},"nodeType":"YulFunctionCall","src":"648:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:17","type":""}],"src":"580:102:17"},{"body":{"nodeType":"YulBlock","src":"716:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:17"},"nodeType":"YulFunctionCall","src":"726:88:17"},"nodeType":"YulExpressionStatement","src":"726:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:17"},"nodeType":"YulFunctionCall","src":"823:15:17"},"nodeType":"YulExpressionStatement","src":"823:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:17"},"nodeType":"YulFunctionCall","src":"847:15:17"},"nodeType":"YulExpressionStatement","src":"847:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:17"},{"body":{"nodeType":"YulBlock","src":"917:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:17"},"nodeType":"YulFunctionCall","src":"957:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:17"},"nodeType":"YulFunctionCall","src":"945:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:17"},"nodeType":"YulFunctionCall","src":"1098:18:17"},"nodeType":"YulExpressionStatement","src":"1098:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:17"},"nodeType":"YulFunctionCall","src":"1036:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:17"},"nodeType":"YulFunctionCall","src":"1072:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:17"},"nodeType":"YulFunctionCall","src":"1033:62:17"},"nodeType":"YulIf","src":"1030:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:17"},"nodeType":"YulFunctionCall","src":"1127:22:17"},"nodeType":"YulExpressionStatement","src":"1127:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:17","type":""}],"src":"874:281:17"},{"body":{"nodeType":"YulBlock","src":"1202:88:17","statements":[{"nodeType":"YulAssignment","src":"1212:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:17"},"nodeType":"YulFunctionCall","src":"1222:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:17"},"nodeType":"YulFunctionCall","src":"1251:33:17"},"nodeType":"YulExpressionStatement","src":"1251:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:17","type":""}],"src":"1161:129:17"},{"body":{"nodeType":"YulBlock","src":"1363:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:17"},"nodeType":"YulFunctionCall","src":"1470:18:17"},"nodeType":"YulExpressionStatement","src":"1470:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:17"},"nodeType":"YulFunctionCall","src":"1437:30:17"},"nodeType":"YulIf","src":"1434:56:17"},{"nodeType":"YulAssignment","src":"1500:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:17"},"nodeType":"YulFunctionCall","src":"1508:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:17"}]},{"nodeType":"YulAssignment","src":"1574:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:17"},"nodeType":"YulFunctionCall","src":"1582:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:17","type":""}],"src":"1296:308:17"},{"body":{"nodeType":"YulBlock","src":"1672:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:17"},"nodeType":"YulFunctionCall","src":"1772:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:17"},"nodeType":"YulFunctionCall","src":"1791:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:17"},"nodeType":"YulFunctionCall","src":"1785:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:17"},"nodeType":"YulFunctionCall","src":"1765:39:17"},"nodeType":"YulExpressionStatement","src":"1765:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:17"},"nodeType":"YulFunctionCall","src":"1709:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:17","statements":[{"nodeType":"YulAssignment","src":"1725:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:17"},"nodeType":"YulFunctionCall","src":"1730:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:17","statements":[]},"src":"1701:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:17"},"nodeType":"YulFunctionCall","src":"1830:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:17"},"nodeType":"YulFunctionCall","src":"1823:27:17"},"nodeType":"YulExpressionStatement","src":"1823:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:17","type":""}],"src":"1610:246:17"},{"body":{"nodeType":"YulBlock","src":"1957:339:17","statements":[{"nodeType":"YulAssignment","src":"1967:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:17"},"nodeType":"YulFunctionCall","src":"1992:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:17"},"nodeType":"YulFunctionCall","src":"1976:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:17"},"nodeType":"YulFunctionCall","src":"2051:21:17"},"nodeType":"YulExpressionStatement","src":"2051:21:17"},{"nodeType":"YulVariableDeclaration","src":"2081:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:17"},"nodeType":"YulFunctionCall","src":"2092:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:17"},"nodeType":"YulFunctionCall","src":"2148:79:17"},"nodeType":"YulExpressionStatement","src":"2148:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:17"},"nodeType":"YulFunctionCall","src":"2123:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:17"},"nodeType":"YulFunctionCall","src":"2120:25:17"},"nodeType":"YulIf","src":"2117:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:17"},"nodeType":"YulFunctionCall","src":"2238:52:17"},"nodeType":"YulExpressionStatement","src":"2238:52:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:17","type":""}],"src":"1862:434:17"},{"body":{"nodeType":"YulBlock","src":"2389:282:17","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:17"},"nodeType":"YulFunctionCall","src":"2440:79:17"},"nodeType":"YulExpressionStatement","src":"2440:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:17"},"nodeType":"YulFunctionCall","src":"2413:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:17"},"nodeType":"YulFunctionCall","src":"2409:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:17"},"nodeType":"YulFunctionCall","src":"2402:35:17"},"nodeType":"YulIf","src":"2399:122:17"},{"nodeType":"YulVariableDeclaration","src":"2530:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:17"},"nodeType":"YulFunctionCall","src":"2544:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:17"},"nodeType":"YulFunctionCall","src":"2634:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:17"},"nodeType":"YulFunctionCall","src":"2575:90:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:17","type":""}],"src":"2316:355:17"},{"body":{"nodeType":"YulBlock","src":"2764:437:17","statements":[{"body":{"nodeType":"YulBlock","src":"2810:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2812:77:17"},"nodeType":"YulFunctionCall","src":"2812:79:17"},"nodeType":"YulExpressionStatement","src":"2812:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2785:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2794:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2781:3:17"},"nodeType":"YulFunctionCall","src":"2781:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2806:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2777:3:17"},"nodeType":"YulFunctionCall","src":"2777:32:17"},"nodeType":"YulIf","src":"2774:119:17"},{"nodeType":"YulBlock","src":"2903:291:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2918:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2953:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:17"},"nodeType":"YulFunctionCall","src":"2938:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2932:5:17"},"nodeType":"YulFunctionCall","src":"2932:24:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2922:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3003:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3005:77:17"},"nodeType":"YulFunctionCall","src":"3005:79:17"},"nodeType":"YulExpressionStatement","src":"3005:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2975:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2983:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2972:2:17"},"nodeType":"YulFunctionCall","src":"2972:30:17"},"nodeType":"YulIf","src":"2969:117:17"},{"nodeType":"YulAssignment","src":"3100:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3156:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3167:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3152:3:17"},"nodeType":"YulFunctionCall","src":"3152:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3176:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3110:41:17"},"nodeType":"YulFunctionCall","src":"3110:74:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3100:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2734:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2745:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2757:6:17","type":""}],"src":"2677:524:17"},{"body":{"nodeType":"YulBlock","src":"3266:40:17","statements":[{"nodeType":"YulAssignment","src":"3277:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3293:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3287:5:17"},"nodeType":"YulFunctionCall","src":"3287:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3277:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3249:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3259:6:17","type":""}],"src":"3207:99:17"},{"body":{"nodeType":"YulBlock","src":"3340:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3357:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3360:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3350:6:17"},"nodeType":"YulFunctionCall","src":"3350:88:17"},"nodeType":"YulExpressionStatement","src":"3350:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3454:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3457:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3447:6:17"},"nodeType":"YulFunctionCall","src":"3447:15:17"},"nodeType":"YulExpressionStatement","src":"3447:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3478:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3481:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3471:6:17"},"nodeType":"YulFunctionCall","src":"3471:15:17"},"nodeType":"YulExpressionStatement","src":"3471:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3312:180:17"},{"body":{"nodeType":"YulBlock","src":"3549:269:17","statements":[{"nodeType":"YulAssignment","src":"3559:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3573:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3579:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3569:3:17"},"nodeType":"YulFunctionCall","src":"3569:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3559:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"3590:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3620:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3626:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3616:3:17"},"nodeType":"YulFunctionCall","src":"3616:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3594:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3667:51:17","statements":[{"nodeType":"YulAssignment","src":"3681:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3695:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3703:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3691:3:17"},"nodeType":"YulFunctionCall","src":"3691:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3681:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3647:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3640:6:17"},"nodeType":"YulFunctionCall","src":"3640:26:17"},"nodeType":"YulIf","src":"3637:81:17"},{"body":{"nodeType":"YulBlock","src":"3770:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"3784:16:17"},"nodeType":"YulFunctionCall","src":"3784:18:17"},"nodeType":"YulExpressionStatement","src":"3784:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3734:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3757:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3765:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3754:2:17"},"nodeType":"YulFunctionCall","src":"3754:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3731:2:17"},"nodeType":"YulFunctionCall","src":"3731:38:17"},"nodeType":"YulIf","src":"3728:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3533:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3542:6:17","type":""}],"src":"3498:320:17"},{"body":{"nodeType":"YulBlock","src":"3878:87:17","statements":[{"nodeType":"YulAssignment","src":"3888:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3896:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3888:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3916:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"3919:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3909:6:17"},"nodeType":"YulFunctionCall","src":"3909:14:17"},"nodeType":"YulExpressionStatement","src":"3909:14:17"},{"nodeType":"YulAssignment","src":"3932:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3950:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3953:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3940:9:17"},"nodeType":"YulFunctionCall","src":"3940:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3932:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3865:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3873:4:17","type":""}],"src":"3824:141:17"},{"body":{"nodeType":"YulBlock","src":"4015:49:17","statements":[{"nodeType":"YulAssignment","src":"4025:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4043:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4050:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:17"},"nodeType":"YulFunctionCall","src":"4039:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"4055:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4035:3:17"},"nodeType":"YulFunctionCall","src":"4035:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4025:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3998:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4008:6:17","type":""}],"src":"3971:93:17"},{"body":{"nodeType":"YulBlock","src":"4123:54:17","statements":[{"nodeType":"YulAssignment","src":"4133:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4158:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"4164:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4154:3:17"},"nodeType":"YulFunctionCall","src":"4154:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4133:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4098:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"4104:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4114:8:17","type":""}],"src":"4070:107:17"},{"body":{"nodeType":"YulBlock","src":"4259:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4269:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4290:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"4302:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4286:3:17"},"nodeType":"YulFunctionCall","src":"4286:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4273:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4313:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4344:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4355:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4325:18:17"},"nodeType":"YulFunctionCall","src":"4325:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4317:4:17","type":""}]},{"nodeType":"YulAssignment","src":"4431:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4462:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4473:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4443:18:17"},"nodeType":"YulFunctionCall","src":"4443:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4431:8:17"}]},{"nodeType":"YulAssignment","src":"4491:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4504:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4515:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4511:3:17"},"nodeType":"YulFunctionCall","src":"4511:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4500:3:17"},"nodeType":"YulFunctionCall","src":"4500:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:17"}]},{"nodeType":"YulAssignment","src":"4530:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4543:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4554:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"4564:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4550:3:17"},"nodeType":"YulFunctionCall","src":"4550:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4540:2:17"},"nodeType":"YulFunctionCall","src":"4540:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4530:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4220:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4227:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4239:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4252:6:17","type":""}],"src":"4183:393:17"},{"body":{"nodeType":"YulBlock","src":"4627:32:17","statements":[{"nodeType":"YulAssignment","src":"4637:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4648:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4637:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4609:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4619:7:17","type":""}],"src":"4582:77:17"},{"body":{"nodeType":"YulBlock","src":"4697:28:17","statements":[{"nodeType":"YulAssignment","src":"4707:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4714:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4707:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4683:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4693:3:17","type":""}],"src":"4665:60:17"},{"body":{"nodeType":"YulBlock","src":"4791:82:17","statements":[{"nodeType":"YulAssignment","src":"4801:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4859:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4841:17:17"},"nodeType":"YulFunctionCall","src":"4841:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4832:8:17"},"nodeType":"YulFunctionCall","src":"4832:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4814:17:17"},"nodeType":"YulFunctionCall","src":"4814:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4801:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4771:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4781:9:17","type":""}],"src":"4731:142:17"},{"body":{"nodeType":"YulBlock","src":"4926:28:17","statements":[{"nodeType":"YulAssignment","src":"4936:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4943:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4936:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4912:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4922:3:17","type":""}],"src":"4879:75:17"},{"body":{"nodeType":"YulBlock","src":"5036:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5046:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5101:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5070:30:17"},"nodeType":"YulFunctionCall","src":"5070:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5050:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5125:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5165:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5159:5:17"},"nodeType":"YulFunctionCall","src":"5159:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5172:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5204:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5180:23:17"},"nodeType":"YulFunctionCall","src":"5180:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5131:27:17"},"nodeType":"YulFunctionCall","src":"5131:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5118:6:17"},"nodeType":"YulFunctionCall","src":"5118:105:17"},"nodeType":"YulExpressionStatement","src":"5118:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5013:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5019:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5027:7:17","type":""}],"src":"4960:269:17"},{"body":{"nodeType":"YulBlock","src":"5284:24:17","statements":[{"nodeType":"YulAssignment","src":"5294:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5301:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5294:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5280:3:17","type":""}],"src":"5235:73:17"},{"body":{"nodeType":"YulBlock","src":"5367:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5377:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5391:30:17"},"nodeType":"YulFunctionCall","src":"5391:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5381:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5476:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5482:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5490:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5432:43:17"},"nodeType":"YulFunctionCall","src":"5432:65:17"},"nodeType":"YulExpressionStatement","src":"5432:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5353:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5359:6:17","type":""}],"src":"5314:189:17"},{"body":{"nodeType":"YulBlock","src":"5559:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"5626:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5670:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5677:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5640:29:17"},"nodeType":"YulFunctionCall","src":"5640:39:17"},"nodeType":"YulExpressionStatement","src":"5640:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5579:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"5586:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5576:2:17"},"nodeType":"YulFunctionCall","src":"5576:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5591:26:17","statements":[{"nodeType":"YulAssignment","src":"5593:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5606:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5613:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5602:3:17"},"nodeType":"YulFunctionCall","src":"5602:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5593:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"5573:2:17","statements":[]},"src":"5569:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5547:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5554:3:17","type":""}],"src":"5509:186:17"},{"body":{"nodeType":"YulBlock","src":"5780:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"5806:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5820:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5868:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5836:31:17"},"nodeType":"YulFunctionCall","src":"5836:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"5824:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5887:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"5910:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5938:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"5920:17:17"},"nodeType":"YulFunctionCall","src":"5920:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5906:3:17"},"nodeType":"YulFunctionCall","src":"5906:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"5891:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6107:27:17","statements":[{"nodeType":"YulAssignment","src":"6109:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6124:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6109:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6091:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6088:2:17"},"nodeType":"YulFunctionCall","src":"6088:18:17"},"nodeType":"YulIf","src":"6085:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6176:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6193:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6221:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6203:17:17"},"nodeType":"YulFunctionCall","src":"6203:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6189:3:17"},"nodeType":"YulFunctionCall","src":"6189:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6147:28:17"},"nodeType":"YulFunctionCall","src":"6147:80:17"},"nodeType":"YulExpressionStatement","src":"6147:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"5797:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5802:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5794:2:17"},"nodeType":"YulFunctionCall","src":"5794:11:17"},"nodeType":"YulIf","src":"5791:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"5756:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"5763:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"5768:10:17","type":""}],"src":"5701:543:17"},{"body":{"nodeType":"YulBlock","src":"6313:54:17","statements":[{"nodeType":"YulAssignment","src":"6323:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6348:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"6354:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6344:3:17"},"nodeType":"YulFunctionCall","src":"6344:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6323:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6288:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"6294:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6304:8:17","type":""}],"src":"6250:117:17"},{"body":{"nodeType":"YulBlock","src":"6424:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6434:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6483:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6486:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6479:3:17"},"nodeType":"YulFunctionCall","src":"6479:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6498:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6494:3:17"},"nodeType":"YulFunctionCall","src":"6494:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6450:28:17"},"nodeType":"YulFunctionCall","src":"6450:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6446:3:17"},"nodeType":"YulFunctionCall","src":"6446:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6438:4:17","type":""}]},{"nodeType":"YulAssignment","src":"6511:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6525:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"6531:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6521:3:17"},"nodeType":"YulFunctionCall","src":"6521:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6511:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6401:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6407:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6417:6:17","type":""}],"src":"6373:169:17"},{"body":{"nodeType":"YulBlock","src":"6628:214:17","statements":[{"nodeType":"YulAssignment","src":"6761:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6788:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"6794:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6769:18:17"},"nodeType":"YulFunctionCall","src":"6769:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6761:4:17"}]},{"nodeType":"YulAssignment","src":"6807:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6818:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6828:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"6831:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6824:3:17"},"nodeType":"YulFunctionCall","src":"6824:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6815:2:17"},"nodeType":"YulFunctionCall","src":"6815:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"6807:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6609:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"6615:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6623:4:17","type":""}],"src":"6547:295:17"},{"body":{"nodeType":"YulBlock","src":"6939:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6950:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6997:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6964:32:17"},"nodeType":"YulFunctionCall","src":"6964:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"6954:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7086:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7088:16:17"},"nodeType":"YulFunctionCall","src":"7088:18:17"},"nodeType":"YulExpressionStatement","src":"7088:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7058:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7066:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7055:2:17"},"nodeType":"YulFunctionCall","src":"7055:30:17"},"nodeType":"YulIf","src":"7052:56:17"},{"nodeType":"YulVariableDeclaration","src":"7118:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7164:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7158:5:17"},"nodeType":"YulFunctionCall","src":"7158:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7132:25:17"},"nodeType":"YulFunctionCall","src":"7132:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7122:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7263:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7269:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"7277:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7217:45:17"},"nodeType":"YulFunctionCall","src":"7217:67:17"},"nodeType":"YulExpressionStatement","src":"7217:67:17"},{"nodeType":"YulVariableDeclaration","src":"7294:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7311:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7298:9:17","type":""}]},{"nodeType":"YulAssignment","src":"7322:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7335:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7322:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7386:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7400:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7419:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7431:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7427:3:17"},"nodeType":"YulFunctionCall","src":"7427:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7415:3:17"},"nodeType":"YulFunctionCall","src":"7415:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7404:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7451:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7497:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7465:31:17"},"nodeType":"YulFunctionCall","src":"7465:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7455:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7515:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7524:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7519:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7583:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7608:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7626:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7631:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7622:3:17"},"nodeType":"YulFunctionCall","src":"7622:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7616:5:17"},"nodeType":"YulFunctionCall","src":"7616:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7601:6:17"},"nodeType":"YulFunctionCall","src":"7601:42:17"},"nodeType":"YulExpressionStatement","src":"7601:42:17"},{"nodeType":"YulAssignment","src":"7660:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7674:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7682:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7670:3:17"},"nodeType":"YulFunctionCall","src":"7670:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7660:6:17"}]},{"nodeType":"YulAssignment","src":"7701:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7718:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7729:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:17"},"nodeType":"YulFunctionCall","src":"7714:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7701:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7549:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7552:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7546:2:17"},"nodeType":"YulFunctionCall","src":"7546:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7561:21:17","statements":[{"nodeType":"YulAssignment","src":"7563:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7572:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"7575:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7568:3:17"},"nodeType":"YulFunctionCall","src":"7568:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7563:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"7542:3:17","statements":[]},"src":"7538:208:17"},{"body":{"nodeType":"YulBlock","src":"7782:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7800:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7827:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7832:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7823:3:17"},"nodeType":"YulFunctionCall","src":"7823:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7817:5:17"},"nodeType":"YulFunctionCall","src":"7817:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"7804:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7867:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"7894:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7909:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7917:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7905:3:17"},"nodeType":"YulFunctionCall","src":"7905:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7875:18:17"},"nodeType":"YulFunctionCall","src":"7875:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7860:6:17"},"nodeType":"YulFunctionCall","src":"7860:64:17"},"nodeType":"YulExpressionStatement","src":"7860:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"7765:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"7774:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7762:2:17"},"nodeType":"YulFunctionCall","src":"7762:19:17"},"nodeType":"YulIf","src":"7759:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7958:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7972:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7980:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7968:3:17"},"nodeType":"YulFunctionCall","src":"7968:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"7984:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7964:3:17"},"nodeType":"YulFunctionCall","src":"7964:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7951:6:17"},"nodeType":"YulFunctionCall","src":"7951:36:17"},"nodeType":"YulExpressionStatement","src":"7951:36:17"}]},"nodeType":"YulCase","src":"7379:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7384:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8014:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8028:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8041:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8032:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8065:67:17","statements":[{"nodeType":"YulAssignment","src":"8083:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8102:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8107:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8098:3:17"},"nodeType":"YulFunctionCall","src":"8098:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8092:5:17"},"nodeType":"YulFunctionCall","src":"8092:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8083:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8058:6:17"},"nodeType":"YulIf","src":"8055:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8152:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8211:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8218:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8158:52:17"},"nodeType":"YulFunctionCall","src":"8158:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8145:6:17"},"nodeType":"YulFunctionCall","src":"8145:81:17"},"nodeType":"YulExpressionStatement","src":"8145:81:17"}]},"nodeType":"YulCase","src":"8006:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7359:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7356:2:17"},"nodeType":"YulFunctionCall","src":"7356:14:17"},"nodeType":"YulSwitch","src":"7349:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6928:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"6934:3:17","type":""}],"src":"6847:1395:17"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_memory_to_memory_with_cleanup(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := mload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\\n    }\\n\\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := mload(add(headStart, 0))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function panic_error_0x22() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x22)\\n        revert(0, 0x24)\\n    }\\n\\n    function extract_byte_array_length(data) -> length {\\n        length := div(data, 2)\\n        let outOfPlaceEncoding := and(data, 1)\\n        if iszero(outOfPlaceEncoding) {\\n            length := and(length, 0x7f)\\n        }\\n\\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\\n            panic_error_0x22()\\n        }\\n    }\\n\\n    function array_dataslot_t_string_storage(ptr) -> data {\\n        data := ptr\\n\\n        mstore(0, ptr)\\n        data := keccak256(0, 0x20)\\n\\n    }\\n\\n    function divide_by_32_ceil(value) -> result {\\n        result := div(add(value, 31), 32)\\n    }\\n\\n    function shift_left_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shl(bits, value)\\n\\n    }\\n\\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\\n        let shiftBits := mul(shiftBytes, 8)\\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\\n        value := and(value, not(mask))\\n        result := or(value, and(toInsert, mask))\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function identity(value) -> ret {\\n        ret := value\\n    }\\n\\n    function convert_t_uint256_to_t_uint256(value) -> converted {\\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\\n    }\\n\\n    function prepare_store_t_uint256(value) -> ret {\\n        ret := value\\n    }\\n\\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\\n    }\\n\\n    function zero_value_for_split_t_uint256() -> ret {\\n        ret := 0\\n    }\\n\\n    function storage_set_to_zero_t_uint256(slot, offset) {\\n        let zero_0 := zero_value_for_split_t_uint256()\\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\\n    }\\n\\n    function clear_storage_range_t_bytes1(start, end) {\\n        for {} lt(start, end) { start := add(start, 1) }\\n        {\\n            storage_set_to_zero_t_uint256(start, 0)\\n        }\\n    }\\n\\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\\n\\n        if gt(len, 31) {\\n            let dataArea := array_dataslot_t_string_storage(array)\\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\\n            if lt(startIndex, 32) { deleteStart := dataArea }\\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\\n        }\\n\\n    }\\n\\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shr(bits, value)\\n\\n    }\\n\\n    function mask_bytes_dynamic(data, bytes) -> result {\\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\\n        result := and(data, mask)\\n    }\\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\\n        // we want to save only elements that are part of the array after resizing\\n        // others should be set to zero\\n        data := mask_bytes_dynamic(data, len)\\n        used := or(data, mul(2, len))\\n    }\\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\\n\\n        let newLen := array_length_t_string_memory_ptr(src)\\n        // Make sure array length is sane\\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        let oldLen := extract_byte_array_length(sload(slot))\\n\\n        // potentially truncate data\\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\\n\\n        let srcOffset := 0\\n\\n        srcOffset := 0x20\\n\\n        switch gt(newLen, 31)\\n        case 1 {\\n            let loopEnd := and(newLen, not(0x1f))\\n\\n            let dstPtr := array_dataslot_t_string_storage(slot)\\n            let i := 0\\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\\n                sstore(dstPtr, mload(add(src, srcOffset)))\\n                dstPtr := add(dstPtr, 1)\\n                srcOffset := add(srcOffset, 32)\\n            }\\n            if lt(loopEnd, newLen) {\\n                let lastValue := mload(add(src, srcOffset))\\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\\n            }\\n            sstore(slot, add(mul(newLen, 2), 1))\\n        }\\n        default {\\n            let value := 0\\n            if newLen {\\n                value := mload(add(src, srcOffset))\\n            }\\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\\n        }\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"deployedGeneratedSources":[],"sourceMap":"241:113:9:-:0;;;289:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;339:5;332:4;:12;;;;;;:::i;:::-;;289:62;241:113;;7:75:17;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:524::-;2757:6;2806:2;2794:9;2785:7;2781:23;2777:32;2774:119;;;2812:79;;:::i;:::-;2774:119;2953:1;2942:9;2938:17;2932:24;2983:18;2975:6;2972:30;2969:117;;;3005:79;;:::i;:::-;2969:117;3110:74;3176:7;3167:6;3156:9;3152:22;3110:74;:::i;:::-;3100:84;;2903:291;2677:524;;;;:::o;3207:99::-;3259:6;3293:5;3287:12;3277:22;;3207:99;;;:::o;3312:180::-;3360:77;3357:1;3350:88;3457:4;3454:1;3447:15;3481:4;3478:1;3471:15;3498:320;3542:6;3579:1;3573:4;3569:12;3559:22;;3626:1;3620:4;3616:12;3647:18;3637:81;;3703:4;3695:6;3691:17;3681:27;;3637:81;3765:2;3757:6;3754:14;3734:18;3731:38;3728:84;;3784:18;;:::i;:::-;3728:84;3549:269;3498:320;;;:::o;3824:141::-;3873:4;3896:3;3888:11;;3919:3;3916:1;3909:14;3953:4;3950:1;3940:18;3932:26;;3824:141;;;:::o;3971:93::-;4008:6;4055:2;4050;4043:5;4039:14;4035:23;4025:33;;3971:93;;;:::o;4070:107::-;4114:8;4164:5;4158:4;4154:16;4133:37;;4070:107;;;;:::o;4183:393::-;4252:6;4302:1;4290:10;4286:18;4325:97;4355:66;4344:9;4325:97;:::i;:::-;4443:39;4473:8;4462:9;4443:39;:::i;:::-;4431:51;;4515:4;4511:9;4504:5;4500:21;4491:30;;4564:4;4554:8;4550:19;4543:5;4540:30;4530:40;;4259:317;;4183:393;;;;;:::o;4582:77::-;4619:7;4648:5;4637:16;;4582:77;;;:::o;4665:60::-;4693:3;4714:5;4707:12;;4665:60;;;:::o;4731:142::-;4781:9;4814:53;4832:34;4841:24;4859:5;4841:24;:::i;:::-;4832:34;:::i;:::-;4814:53;:::i;:::-;4801:66;;4731:142;;;:::o;4879:75::-;4922:3;4943:5;4936:12;;4879:75;;;:::o;4960:269::-;5070:39;5101:7;5070:39;:::i;:::-;5131:91;5180:41;5204:16;5180:41;:::i;:::-;5172:6;5165:4;5159:11;5131:91;:::i;:::-;5125:4;5118:105;5036:193;4960:269;;;:::o;5235:73::-;5280:3;5235:73;:::o;5314:189::-;5391:32;;:::i;:::-;5432:65;5490:6;5482;5476:4;5432:65;:::i;:::-;5367:136;5314:189;;:::o;5509:186::-;5569:120;5586:3;5579:5;5576:14;5569:120;;;5640:39;5677:1;5670:5;5640:39;:::i;:::-;5613:1;5606:5;5602:13;5593:22;;5569:120;;;5509:186;;:::o;5701:543::-;5802:2;5797:3;5794:11;5791:446;;;5836:38;5868:5;5836:38;:::i;:::-;5920:29;5938:10;5920:29;:::i;:::-;5910:8;5906:44;6103:2;6091:10;6088:18;6085:49;;;6124:8;6109:23;;6085:49;6147:80;6203:22;6221:3;6203:22;:::i;:::-;6193:8;6189:37;6176:11;6147:80;:::i;:::-;5806:431;;5791:446;5701:543;;;:::o;6250:117::-;6304:8;6354:5;6348:4;6344:16;6323:37;;6250:117;;;;:::o;6373:169::-;6417:6;6450:51;6498:1;6494:6;6486:5;6483:1;6479:13;6450:51;:::i;:::-;6446:56;6531:4;6525;6521:15;6511:25;;6424:118;6373:169;;;;:::o;6547:295::-;6623:4;6769:29;6794:3;6788:4;6769:29;:::i;:::-;6761:37;;6831:3;6828:1;6824:11;6818:4;6815:21;6807:29;;6547:295;;;;:::o;6847:1395::-;6964:37;6997:3;6964:37;:::i;:::-;7066:18;7058:6;7055:30;7052:56;;;7088:18;;:::i;:::-;7052:56;7132:38;7164:4;7158:11;7132:38;:::i;:::-;7217:67;7277:6;7269;7263:4;7217:67;:::i;:::-;7311:1;7335:4;7322:17;;7367:2;7359:6;7356:14;7384:1;7379:618;;;;8041:1;8058:6;8055:77;;;8107:9;8102:3;8098:19;8092:26;8083:35;;8055:77;8158:67;8218:6;8211:5;8158:67;:::i;:::-;8152:4;8145:81;8014:222;7349:887;;7379:618;7431:4;7427:9;7419:6;7415:22;7465:37;7497:4;7465:37;:::i;:::-;7524:1;7538:208;7552:7;7549:1;7546:14;7538:208;;;7631:9;7626:3;7622:19;7616:26;7608:6;7601:42;7682:1;7674:6;7670:14;7660:24;;7729:2;7718:9;7714:18;7701:31;;7575:4;7572:1;7568:12;7563:17;;7538:208;;;7774:6;7765:7;7762:19;7759:179;;;7832:9;7827:3;7823:19;7817:26;7875:48;7917:4;7909:6;7905:17;7894:9;7875:48;:::i;:::-;7867:6;7860:64;7782:156;7759:179;7984:1;7980;7972:6;7968:14;7964:22;7958:4;7951:36;7386:611;;;7349:887;;6939:1303;;;6847:1395;;:::o;241:113:9:-;;;;;;;","deployedSourceMap":"241:113:9:-:0;;;;;","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n// TODO: Implement access control\\n\\n// errors\\n// error Ticket__inactive();\\n// error Ticket__NoJudgeAssigned();\\n\\n\\n/// @title Judge\\n/// @author Samin Yaser\\n/// @notice Profile of a judge\\ncontract Judge {\\n\\n    string private name;\\n\\n    constructor(string memory name_) {\\n        name = name_;\\n    }\\n\\n}\\n","sourcePath":"C:\\\\Users\\\\samin\\\\Documents\\\\Projects\\\\AWT\\\\TraffiChain\\\\contracts\\\\Judge.sol","ast":{"absolutePath":"project:/contracts/Judge.sol","exportedSymbols":{"Judge":[1010]},"id":1011,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":996,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Judge","contractDependencies":[],"contractKind":"contract","documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"169:72:9","text":"@title Judge\\n @author Samin Yaser\\n @notice Profile of a judge"},"fullyImplemented":true,"id":1010,"linearizedBaseContracts":[1010],"name":"Judge","nameLocation":"250:5:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":999,"mutability":"mutable","name":"name","nameLocation":"278:4:9","nodeType":"VariableDeclaration","scope":1010,"src":"263:19:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":998,"name":"string","nodeType":"ElementaryTypeName","src":"263:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1008,"nodeType":"Block","src":"322:29:9","statements":[{"expression":{"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1004,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"332:4:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1005,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"339:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"332:12:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1007,"nodeType":"ExpressionStatement","src":"332:12:9"}]},"id":1009,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"name_","nameLocation":"315:5:9","nodeType":"VariableDeclaration","scope":1009,"src":"301:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1000,"name":"string","nodeType":"ElementaryTypeName","src":"301:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"300:21:9"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"322:0:9"},"scope":1010,"src":"289:62:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1011,"src":"241:113:9","usedErrors":[]}],"src":"32:323:9"},"compiler":{"name":"solc","version":"0.8.17+commit.8df45f5f.Emscripten.clang"},"networks":{},"schemaVersion":"3.4.10","updatedAt":"2022-11-28T05:49:11.941Z","devdoc":{"author":"Samin Yaser","kind":"dev","methods":{},"title":"Judge","version":1},"userdoc":{"kind":"user","methods":{},"notice":"Profile of a judge","version":1}}');

/***/ }),

/***/ "./build/contracts/JudgeFactory.json":
/*!*******************************************!*\
  !*** ./build/contracts/JudgeFactory.json ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"JudgeFactory","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"_address","type":"address"}],"name":"createNewJudge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getNextJudge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"ticket","type":"address"},{"internalType":"address","name":"judge","type":"address"}],"name":"assignJudgeToTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"judge","type":"address"}],"name":"isValidJudge","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"judge","type":"address"},{"internalType":"address","name":"ticket","type":"address"}],"name":"removeJudgeFromTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"judgeWallet","type":"address"}],"name":"getJudgeProfile","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"judgeWallet","type":"address"}],"name":"getJudgeTickets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"judge","type":"address"}],"name":"getAllTickets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"judgeWallet","type":"address"}],"name":"getActiveTickets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function","constant":true}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.17+commit.8df45f5f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"ticket\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"judge\\",\\"type\\":\\"address\\"}],\\"name\\":\\"assignJudgeToTicket\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"name\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_address\\",\\"type\\":\\"address\\"}],\\"name\\":\\"createNewJudge\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"judgeWallet\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getActiveTickets\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"judge\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getAllTickets\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"judgeWallet\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getJudgeProfile\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"judgeWallet\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getJudgeTickets\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getNextJudge\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"judge\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isValidJudge\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"judge\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"ticket\\",\\"type\\":\\"address\\"}],\\"name\\":\\"removeJudgeFromTicket\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/JudgeFactory.sol\\":\\"JudgeFactory\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@openzeppelin/contracts/access/AccessControl.sol\\":{\\"keccak256\\":\\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\\",\\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\\"]},\\"@openzeppelin/contracts/access/IAccessControl.sol\\":{\\"keccak256\\":\\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\\",\\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\\"]},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"keccak256\\":\\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\\",\\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\\"]},\\"@openzeppelin/contracts/utils/Strings.sol\\":{\\"keccak256\\":\\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\\",\\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\\"]},\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\":{\\"keccak256\\":\\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\\",\\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\\"]},\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\":{\\"keccak256\\":\\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\\",\\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\\"]},\\"project:/contracts/Judge.sol\\":{\\"keccak256\\":\\"0x837525b35b4f6e7f7ed08188a458ebd6273d24a812805611059765315cffcb51\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://d30d833985fc172e0fb2ddeeebfc209ef2dadcca375d80ff304f364d383992de\\",\\"dweb:/ipfs/QmWxpPSFVw5qaSHSjugtD4oNvcj3aCFgP1X9BMFnF1mMxK\\"]},\\"project:/contracts/JudgeFactory.sol\\":{\\"keccak256\\":\\"0x28d59f37a79761319c04ee2572a82aad9613861fc01ba3d1ca52bb5801e0abf2\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://e2847d677558f4ac025eb8a0a877df84230300c4f8b9f062473b759898c3961b\\",\\"dweb:/ipfs/QmVgGyEEYEXKnrF1aK47YaoYdhXL6f8RmjTPkaUFdrKcRd\\"]},\\"project:/contracts/Ticket.sol\\":{\\"keccak256\\":\\"0xec0c82ff2d770fdd771513e52f3344be8501b275ce8da8de02de16ee7d88cb27\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://61962dabb8696b4ceaddb33b9eb92ab9b7063afec37488396df852ea8cec93b3\\",\\"dweb:/ipfs/QmUyHtPW6oMrqwJGKca9Mtx7WAsLNAvbwyjjRBuTqwJgbR\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506000600381905550611a50806100286000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063881d1dc2116200006f578063881d1dc2146200015157806391d18b811462000173578063b84296dd14620001a9578063ce2c5d7914620001df578063f272e236146200021557620000a0565b80630ca20a9f14620000a557806314fa96c814620000db578063750502ba14620001115780638558fe441462000131575b600080fd5b620000c36004803603810190620000bd919062000e72565b62000235565b604051620000d2919062000eb5565b60405180910390f35b620000f96004803603810190620000f3919062000e72565b6200029d565b60405162000108919062000fa0565b60405180910390f35b6200012f600480360381019062000129919062001126565b620005b8565b005b6200014f60048036038101906200014991906200118c565b620006da565b005b6200015b620009b1565b6040516200016a919062000eb5565b60405180910390f35b6200019160048036038101906200018b919062000e72565b620009fc565b604051620001a0919062000fa0565b60405180910390f35b620001c76004803603810190620001c1919062000e72565b62000acb565b604051620001d69190620011f0565b60405180910390f35b620001fd6004803603810190620001f7919062000e72565b62000b62565b6040516200020c919062000fa0565b60405180910390f35b6200023360048036038101906200022d91906200118c565b62000c31565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200036257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000317575b505050505090506000805b825181101562000433578281815181106200038d576200038c6200120d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200040691906200126d565b156200041d5781806200041990620012d8565b9250505b80806200042a90620012d8565b9150506200036d565b5060008167ffffffffffffffff81111562000453576200045262000fdf565b5b604051908082528060200260200182016040528015620004825781602001602082028036833780820191505090505b50905060005b8351811015620005ac57838181518110620004a857620004a76200120d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004fb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200052191906200126d565b1562000596578381815181106200053d576200053c6200120d565b5b60200260200101518282815181106200055b576200055a6200120d565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080620005a390620012d8565b91505062000488565b50809350505050919050565b600082604051620005c99062000deb565b620005d59190620013ae565b604051809103906000f080158015620005f2573d6000803e3d6000fd5b509050806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060005b81811015620009ab578273ffffffffffffffffffffffffffffffffffffffff16600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106200079857620007976200120d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036200099557600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001836200082d9190620013d2565b815481106200084157620008406200120d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110620008c057620008bf6200120d565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806200095a57620009596200140d565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055620009ab565b8080620009a290620012d8565b91505062000724565b50505050565b6000600260035481548110620009cc57620009cb6200120d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801562000abf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000a74575b50505050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801562000c2557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000bda575b50505050509050919050565b600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160362000d01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000cf890620014b2565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160028054905062000db59190620013d2565b6003540362000dcc57600060038190555062000de7565b6003600081548092919062000de190620012d8565b91905055505b5050565b61054680620014d583390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000e3a8262000e0d565b9050919050565b62000e4c8162000e2d565b811462000e5857600080fd5b50565b60008135905062000e6c8162000e41565b92915050565b60006020828403121562000e8b5762000e8a62000e03565b5b600062000e9b8482850162000e5b565b91505092915050565b62000eaf8162000e2d565b82525050565b600060208201905062000ecc600083018462000ea4565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b62000f098162000e2d565b82525050565b600062000f1d838362000efe565b60208301905092915050565b6000602082019050919050565b600062000f438262000ed2565b62000f4f818562000edd565b935062000f5c8362000eee565b8060005b8381101562000f9357815162000f77888262000f0f565b975062000f848362000f29565b92505060018101905062000f60565b5085935050505092915050565b6000602082019050818103600083015262000fbc818462000f36565b905092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620010198262000fce565b810181811067ffffffffffffffff821117156200103b576200103a62000fdf565b5b80604052505050565b60006200105062000df9565b90506200105e82826200100e565b919050565b600067ffffffffffffffff82111562001081576200108062000fdf565b5b6200108c8262000fce565b9050602081019050919050565b82818337600083830152505050565b6000620010bf620010b98462001063565b62001044565b905082815260208101848484011115620010de57620010dd62000fc9565b5b620010eb84828562001099565b509392505050565b600082601f8301126200110b576200110a62000fc4565b5b81356200111d848260208601620010a8565b91505092915050565b6000806040838503121562001140576200113f62000e03565b5b600083013567ffffffffffffffff81111562001161576200116062000e08565b5b6200116f85828601620010f3565b9250506020620011828582860162000e5b565b9150509250929050565b60008060408385031215620011a657620011a562000e03565b5b6000620011b68582860162000e5b565b9250506020620011c98582860162000e5b565b9150509250929050565b60008115159050919050565b620011ea81620011d3565b82525050565b6000602082019050620012076000830184620011df565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6200124781620011d3565b81146200125357600080fd5b50565b60008151905062001267816200123c565b92915050565b60006020828403121562001286576200128562000e03565b5b6000620012968482850162001256565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000620012e582620012ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200131a57620013196200129f565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200136157808201518184015260208101905062001344565b60008484015250505050565b60006200137a8262001325565b62001386818562001330565b93506200139881856020860162001341565b620013a38162000fce565b840191505092915050565b60006020820190508181036000830152620013ca81846200136d565b905092915050565b6000620013df82620012ce565b9150620013ec83620012ce565b92508282039050818111156200140757620014066200129f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4a75646765466163746f72793a204a7564676520646f6573206e6f742065786960008201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b60006200149a60228362001330565b9150620014a7826200143c565b604082019050919050565b60006020820190508181036000830152620014cd816200148b565b905091905056fe608060405234801561001057600080fd5b50604051610546380380610546833981810160405281019061003291906101bd565b80600090816100419190610427565b50506104f9565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100af82610066565b810181811067ffffffffffffffff821117156100ce576100cd610077565b5b80604052505050565b60006100e1610048565b90506100ed82826100a6565b919050565b600067ffffffffffffffff82111561010d5761010c610077565b5b61011682610066565b9050602081019050919050565b60005b83811015610141578082015181840152602081019050610126565b60008484015250505050565b600061016061015b846100f2565b6100d7565b90508281526020810184848401111561017c5761017b610061565b5b610187848285610123565b509392505050565b600082601f8301126101a4576101a361005c565b5b81516101b484826020860161014d565b91505092915050565b6000602082840312156101d3576101d2610052565b5b600082015167ffffffffffffffff8111156101f1576101f0610057565b5b6101fd8482850161018f565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061025857607f821691505b60208210810361026b5761026a610211565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102d37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610296565b6102dd8683610296565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061032461031f61031a846102f5565b6102ff565b6102f5565b9050919050565b6000819050919050565b61033e83610309565b61035261034a8261032b565b8484546102a3565b825550505050565b600090565b61036761035a565b610372818484610335565b505050565b5b818110156103965761038b60008261035f565b600181019050610378565b5050565b601f8211156103db576103ac81610271565b6103b584610286565b810160208510156103c4578190505b6103d86103d085610286565b830182610377565b50505b505050565b600082821c905092915050565b60006103fe600019846008026103e0565b1980831691505092915050565b600061041783836103ed565b9150826002028217905092915050565b61043082610206565b67ffffffffffffffff81111561044957610448610077565b5b6104538254610240565b61045e82828561039a565b600060209050601f831160018114610491576000841561047f578287015190505b610489858261040b565b8655506104f1565b601f19841661049f86610271565b60005b828110156104c7578489015182556001820191506020850194506020810190506104a2565b868310156104e457848901516104e0601f8916826103ed565b8355505b6001600288020188555050505b505050505050565b603f806105076000396000f3fe6080604052600080fdfea264697066735822122031846e87d0e16c4128efaa2fd042c897596398dd7ab02515c18d76951d18006d64736f6c63430008110033a26469706673582212208475889fe4be130c51200d080b723a6279d583af315b54b577dab8ebea3db2e164736f6c63430008110033","deployedBytecode":"0x60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063881d1dc2116200006f578063881d1dc2146200015157806391d18b811462000173578063b84296dd14620001a9578063ce2c5d7914620001df578063f272e236146200021557620000a0565b80630ca20a9f14620000a557806314fa96c814620000db578063750502ba14620001115780638558fe441462000131575b600080fd5b620000c36004803603810190620000bd919062000e72565b62000235565b604051620000d2919062000eb5565b60405180910390f35b620000f96004803603810190620000f3919062000e72565b6200029d565b60405162000108919062000fa0565b60405180910390f35b6200012f600480360381019062000129919062001126565b620005b8565b005b6200014f60048036038101906200014991906200118c565b620006da565b005b6200015b620009b1565b6040516200016a919062000eb5565b60405180910390f35b6200019160048036038101906200018b919062000e72565b620009fc565b604051620001a0919062000fa0565b60405180910390f35b620001c76004803603810190620001c1919062000e72565b62000acb565b604051620001d69190620011f0565b60405180910390f35b620001fd6004803603810190620001f7919062000e72565b62000b62565b6040516200020c919062000fa0565b60405180910390f35b6200023360048036038101906200022d91906200118c565b62000c31565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200036257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000317575b505050505090506000805b825181101562000433578281815181106200038d576200038c6200120d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200040691906200126d565b156200041d5781806200041990620012d8565b9250505b80806200042a90620012d8565b9150506200036d565b5060008167ffffffffffffffff81111562000453576200045262000fdf565b5b604051908082528060200260200182016040528015620004825781602001602082028036833780820191505090505b50905060005b8351811015620005ac57838181518110620004a857620004a76200120d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004fb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200052191906200126d565b1562000596578381815181106200053d576200053c6200120d565b5b60200260200101518282815181106200055b576200055a6200120d565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080620005a390620012d8565b91505062000488565b50809350505050919050565b600082604051620005c99062000deb565b620005d59190620013ae565b604051809103906000f080158015620005f2573d6000803e3d6000fd5b509050806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060005b81811015620009ab578273ffffffffffffffffffffffffffffffffffffffff16600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106200079857620007976200120d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036200099557600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001836200082d9190620013d2565b815481106200084157620008406200120d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110620008c057620008bf6200120d565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806200095a57620009596200140d565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055620009ab565b8080620009a290620012d8565b91505062000724565b50505050565b6000600260035481548110620009cc57620009cb6200120d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801562000abf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000a74575b50505050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801562000c2557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000bda575b50505050509050919050565b600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160362000d01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000cf890620014b2565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160028054905062000db59190620013d2565b6003540362000dcc57600060038190555062000de7565b6003600081548092919062000de190620012d8565b91905055505b5050565b61054680620014d583390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000e3a8262000e0d565b9050919050565b62000e4c8162000e2d565b811462000e5857600080fd5b50565b60008135905062000e6c8162000e41565b92915050565b60006020828403121562000e8b5762000e8a62000e03565b5b600062000e9b8482850162000e5b565b91505092915050565b62000eaf8162000e2d565b82525050565b600060208201905062000ecc600083018462000ea4565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b62000f098162000e2d565b82525050565b600062000f1d838362000efe565b60208301905092915050565b6000602082019050919050565b600062000f438262000ed2565b62000f4f818562000edd565b935062000f5c8362000eee565b8060005b8381101562000f9357815162000f77888262000f0f565b975062000f848362000f29565b92505060018101905062000f60565b5085935050505092915050565b6000602082019050818103600083015262000fbc818462000f36565b905092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620010198262000fce565b810181811067ffffffffffffffff821117156200103b576200103a62000fdf565b5b80604052505050565b60006200105062000df9565b90506200105e82826200100e565b919050565b600067ffffffffffffffff82111562001081576200108062000fdf565b5b6200108c8262000fce565b9050602081019050919050565b82818337600083830152505050565b6000620010bf620010b98462001063565b62001044565b905082815260208101848484011115620010de57620010dd62000fc9565b5b620010eb84828562001099565b509392505050565b600082601f8301126200110b576200110a62000fc4565b5b81356200111d848260208601620010a8565b91505092915050565b6000806040838503121562001140576200113f62000e03565b5b600083013567ffffffffffffffff81111562001161576200116062000e08565b5b6200116f85828601620010f3565b9250506020620011828582860162000e5b565b9150509250929050565b60008060408385031215620011a657620011a562000e03565b5b6000620011b68582860162000e5b565b9250506020620011c98582860162000e5b565b9150509250929050565b60008115159050919050565b620011ea81620011d3565b82525050565b6000602082019050620012076000830184620011df565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6200124781620011d3565b81146200125357600080fd5b50565b60008151905062001267816200123c565b92915050565b60006020828403121562001286576200128562000e03565b5b6000620012968482850162001256565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000620012e582620012ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200131a57620013196200129f565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200136157808201518184015260208101905062001344565b60008484015250505050565b60006200137a8262001325565b62001386818562001330565b93506200139881856020860162001341565b620013a38162000fce565b840191505092915050565b60006020820190508181036000830152620013ca81846200136d565b905092915050565b6000620013df82620012ce565b9150620013ec83620012ce565b92508282039050818111156200140757620014066200129f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4a75646765466163746f72793a204a7564676520646f6573206e6f742065786960008201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b60006200149a60228362001330565b9150620014a7826200143c565b604082019050919050565b60006020820190508181036000830152620014cd816200148b565b905091905056fe608060405234801561001057600080fd5b50604051610546380380610546833981810160405281019061003291906101bd565b80600090816100419190610427565b50506104f9565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100af82610066565b810181811067ffffffffffffffff821117156100ce576100cd610077565b5b80604052505050565b60006100e1610048565b90506100ed82826100a6565b919050565b600067ffffffffffffffff82111561010d5761010c610077565b5b61011682610066565b9050602081019050919050565b60005b83811015610141578082015181840152602081019050610126565b60008484015250505050565b600061016061015b846100f2565b6100d7565b90508281526020810184848401111561017c5761017b610061565b5b610187848285610123565b509392505050565b600082601f8301126101a4576101a361005c565b5b81516101b484826020860161014d565b91505092915050565b6000602082840312156101d3576101d2610052565b5b600082015167ffffffffffffffff8111156101f1576101f0610057565b5b6101fd8482850161018f565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061025857607f821691505b60208210810361026b5761026a610211565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102d37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610296565b6102dd8683610296565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061032461031f61031a846102f5565b6102ff565b6102f5565b9050919050565b6000819050919050565b61033e83610309565b61035261034a8261032b565b8484546102a3565b825550505050565b600090565b61036761035a565b610372818484610335565b505050565b5b818110156103965761038b60008261035f565b600181019050610378565b5050565b601f8211156103db576103ac81610271565b6103b584610286565b810160208510156103c4578190505b6103d86103d085610286565b830182610377565b50505b505050565b600082821c905092915050565b60006103fe600019846008026103e0565b1980831691505092915050565b600061041783836103ed565b9150826002028217905092915050565b61043082610206565b67ffffffffffffffff81111561044957610448610077565b5b6104538254610240565b61045e82828561039a565b600060209050601f831160018114610491576000841561047f578287015190505b610489858261040b565b8655506104f1565b601f19841661049f86610271565b60005b828110156104c7578489015182556001820191506020850194506020810190506104a2565b868310156104e457848901516104e0601f8916826103ed565b8355505b6001600288020188555050505b505050505050565b603f806105076000396000f3fe6080604052600080fdfea264697066735822122031846e87d0e16c4128efaa2fd042c897596398dd7ab02515c18d76951d18006d64736f6c63430008110033a26469706673582212208475889fe4be130c51200d080b723a6279d583af315b54b577dab8ebea3db2e164736f6c63430008110033","immutableReferences":{},"generatedSources":[],"deployedGeneratedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11278:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"748:87:17","statements":[{"nodeType":"YulAssignment","src":"758:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:17"},"nodeType":"YulFunctionCall","src":"767:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:17"},"nodeType":"YulFunctionCall","src":"796:33:17"},"nodeType":"YulExpressionStatement","src":"796:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:17","type":""}],"src":"696:139:17"},{"body":{"nodeType":"YulBlock","src":"907:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:17"},"nodeType":"YulFunctionCall","src":"955:79:17"},"nodeType":"YulExpressionStatement","src":"955:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:17"},"nodeType":"YulFunctionCall","src":"924:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:17"},"nodeType":"YulFunctionCall","src":"920:32:17"},"nodeType":"YulIf","src":"917:119:17"},{"nodeType":"YulBlock","src":"1046:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:17"},"nodeType":"YulFunctionCall","src":"1121:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:17"},"nodeType":"YulFunctionCall","src":"1100:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:17","type":""}],"src":"841:329:17"},{"body":{"nodeType":"YulBlock","src":"1241:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1258:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1281:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1263:17:17"},"nodeType":"YulFunctionCall","src":"1263:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1251:6:17"},"nodeType":"YulFunctionCall","src":"1251:37:17"},"nodeType":"YulExpressionStatement","src":"1251:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1229:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1236:3:17","type":""}],"src":"1176:118:17"},{"body":{"nodeType":"YulBlock","src":"1398:124:17","statements":[{"nodeType":"YulAssignment","src":"1408:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1431:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:17"},"nodeType":"YulFunctionCall","src":"1416:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1408:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1488:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1501:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1512:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1497:3:17"},"nodeType":"YulFunctionCall","src":"1497:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1444:43:17"},"nodeType":"YulFunctionCall","src":"1444:71:17"},"nodeType":"YulExpressionStatement","src":"1444:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1370:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1382:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1393:4:17","type":""}],"src":"1300:222:17"},{"body":{"nodeType":"YulBlock","src":"1602:40:17","statements":[{"nodeType":"YulAssignment","src":"1613:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1629:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1623:5:17"},"nodeType":"YulFunctionCall","src":"1623:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1613:6:17"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1585:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1595:6:17","type":""}],"src":"1528:114:17"},{"body":{"nodeType":"YulBlock","src":"1759:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1781:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1769:6:17"},"nodeType":"YulFunctionCall","src":"1769:19:17"},"nodeType":"YulExpressionStatement","src":"1769:19:17"},{"nodeType":"YulAssignment","src":"1797:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1816:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1821:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:17"},"nodeType":"YulFunctionCall","src":"1812:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1797:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1731:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1736:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1747:11:17","type":""}],"src":"1648:184:17"},{"body":{"nodeType":"YulBlock","src":"1910:60:17","statements":[{"nodeType":"YulAssignment","src":"1920:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1928:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1920:4:17"}]},{"nodeType":"YulAssignment","src":"1941:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1953:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1958:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1949:3:17"},"nodeType":"YulFunctionCall","src":"1949:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1941:4:17"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1897:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1905:4:17","type":""}],"src":"1838:132:17"},{"body":{"nodeType":"YulBlock","src":"2031:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2048:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2071:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2053:17:17"},"nodeType":"YulFunctionCall","src":"2053:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2041:6:17"},"nodeType":"YulFunctionCall","src":"2041:37:17"},"nodeType":"YulExpressionStatement","src":"2041:37:17"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2019:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2026:3:17","type":""}],"src":"1976:108:17"},{"body":{"nodeType":"YulBlock","src":"2170:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2214:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2222:3:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2180:33:17"},"nodeType":"YulFunctionCall","src":"2180:46:17"},"nodeType":"YulExpressionStatement","src":"2180:46:17"},{"nodeType":"YulAssignment","src":"2235:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2253:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2258:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2249:3:17"},"nodeType":"YulFunctionCall","src":"2249:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"2235:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"2143:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2151:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"2159:10:17","type":""}],"src":"2090:179:17"},{"body":{"nodeType":"YulBlock","src":"2350:38:17","statements":[{"nodeType":"YulAssignment","src":"2360:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2372:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2377:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2368:3:17"},"nodeType":"YulFunctionCall","src":"2368:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"2360:4:17"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2337:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"2345:4:17","type":""}],"src":"2275:113:17"},{"body":{"nodeType":"YulBlock","src":"2548:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2558:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2620:5:17"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2572:47:17"},"nodeType":"YulFunctionCall","src":"2572:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2562:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2635:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2716:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2721:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2642:73:17"},"nodeType":"YulFunctionCall","src":"2642:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2635:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"2737:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2802:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2752:49:17"},"nodeType":"YulFunctionCall","src":"2752:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"2741:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2817:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"2831:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2821:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2907:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2921:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2948:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2942:5:17"},"nodeType":"YulFunctionCall","src":"2942:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"2925:13:17","type":""}]},{"nodeType":"YulAssignment","src":"2968:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3019:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"3034:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"2975:43:17"},"nodeType":"YulFunctionCall","src":"2975:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2968:3:17"}]},{"nodeType":"YulAssignment","src":"3051:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3114:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3061:52:17"},"nodeType":"YulFunctionCall","src":"3061:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3051:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2869:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"2872:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2866:2:17"},"nodeType":"YulFunctionCall","src":"2866:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2880:18:17","statements":[{"nodeType":"YulAssignment","src":"2882:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2891:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"2894:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2887:3:17"},"nodeType":"YulFunctionCall","src":"2887:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2882:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2851:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2853:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2862:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2857:1:17","type":""}]}]},"src":"2847:284:17"},{"nodeType":"YulAssignment","src":"3140:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"3147:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3140:3:17"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2527:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2534:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2543:3:17","type":""}],"src":"2424:732:17"},{"body":{"nodeType":"YulBlock","src":"3310:225:17","statements":[{"nodeType":"YulAssignment","src":"3320:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3332:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3343:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3328:3:17"},"nodeType":"YulFunctionCall","src":"3328:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3320:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3367:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3378:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3363:3:17"},"nodeType":"YulFunctionCall","src":"3363:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3386:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3382:3:17"},"nodeType":"YulFunctionCall","src":"3382:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3356:6:17"},"nodeType":"YulFunctionCall","src":"3356:47:17"},"nodeType":"YulExpressionStatement","src":"3356:47:17"},{"nodeType":"YulAssignment","src":"3412:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3514:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"3523:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3420:93:17"},"nodeType":"YulFunctionCall","src":"3420:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3412:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3282:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3294:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3305:4:17","type":""}],"src":"3162:373:17"},{"body":{"nodeType":"YulBlock","src":"3630:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3647:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3650:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3640:6:17"},"nodeType":"YulFunctionCall","src":"3640:12:17"},"nodeType":"YulExpressionStatement","src":"3640:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3541:117:17"},{"body":{"nodeType":"YulBlock","src":"3753:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3770:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3773:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3763:6:17"},"nodeType":"YulFunctionCall","src":"3763:12:17"},"nodeType":"YulExpressionStatement","src":"3763:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3664:117:17"},{"body":{"nodeType":"YulBlock","src":"3835:54:17","statements":[{"nodeType":"YulAssignment","src":"3845:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3863:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3870:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3859:3:17"},"nodeType":"YulFunctionCall","src":"3859:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3879:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3875:3:17"},"nodeType":"YulFunctionCall","src":"3875:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3855:3:17"},"nodeType":"YulFunctionCall","src":"3855:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3845:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3818:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3828:6:17","type":""}],"src":"3787:102:17"},{"body":{"nodeType":"YulBlock","src":"3923:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3943:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3933:6:17"},"nodeType":"YulFunctionCall","src":"3933:88:17"},"nodeType":"YulExpressionStatement","src":"3933:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4037:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4040:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4030:6:17"},"nodeType":"YulFunctionCall","src":"4030:15:17"},"nodeType":"YulExpressionStatement","src":"4030:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4061:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4064:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4054:6:17"},"nodeType":"YulFunctionCall","src":"4054:15:17"},"nodeType":"YulExpressionStatement","src":"4054:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3895:180:17"},{"body":{"nodeType":"YulBlock","src":"4124:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4134:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4156:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4186:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4164:21:17"},"nodeType":"YulFunctionCall","src":"4164:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:17"},"nodeType":"YulFunctionCall","src":"4152:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4138:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4303:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4305:16:17"},"nodeType":"YulFunctionCall","src":"4305:18:17"},"nodeType":"YulExpressionStatement","src":"4305:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4246:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"4258:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4243:2:17"},"nodeType":"YulFunctionCall","src":"4243:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4282:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4294:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4279:2:17"},"nodeType":"YulFunctionCall","src":"4279:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4240:2:17"},"nodeType":"YulFunctionCall","src":"4240:62:17"},"nodeType":"YulIf","src":"4237:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4341:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4345:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4334:6:17"},"nodeType":"YulFunctionCall","src":"4334:22:17"},"nodeType":"YulExpressionStatement","src":"4334:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4110:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"4118:4:17","type":""}],"src":"4081:281:17"},{"body":{"nodeType":"YulBlock","src":"4409:88:17","statements":[{"nodeType":"YulAssignment","src":"4419:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4429:18:17"},"nodeType":"YulFunctionCall","src":"4429:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4419:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4478:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"4486:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4458:19:17"},"nodeType":"YulFunctionCall","src":"4458:33:17"},"nodeType":"YulExpressionStatement","src":"4458:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4393:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4402:6:17","type":""}],"src":"4368:129:17"},{"body":{"nodeType":"YulBlock","src":"4570:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"4675:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4677:16:17"},"nodeType":"YulFunctionCall","src":"4677:18:17"},"nodeType":"YulExpressionStatement","src":"4677:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4647:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4655:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4644:2:17"},"nodeType":"YulFunctionCall","src":"4644:30:17"},"nodeType":"YulIf","src":"4641:56:17"},{"nodeType":"YulAssignment","src":"4707:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4737:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4715:21:17"},"nodeType":"YulFunctionCall","src":"4715:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4707:4:17"}]},{"nodeType":"YulAssignment","src":"4781:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4793:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"4799:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:17"},"nodeType":"YulFunctionCall","src":"4789:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4781:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4554:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4565:4:17","type":""}],"src":"4503:308:17"},{"body":{"nodeType":"YulBlock","src":"4881:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4904:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"4909:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4914:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4891:12:17"},"nodeType":"YulFunctionCall","src":"4891:30:17"},"nodeType":"YulExpressionStatement","src":"4891:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4941:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4946:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4937:3:17"},"nodeType":"YulFunctionCall","src":"4937:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"4955:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4930:6:17"},"nodeType":"YulFunctionCall","src":"4930:27:17"},"nodeType":"YulExpressionStatement","src":"4930:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4863:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4868:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4873:6:17","type":""}],"src":"4817:146:17"},{"body":{"nodeType":"YulBlock","src":"5053:341:17","statements":[{"nodeType":"YulAssignment","src":"5063:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5130:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5088:41:17"},"nodeType":"YulFunctionCall","src":"5088:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5072:15:17"},"nodeType":"YulFunctionCall","src":"5072:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5063:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5154:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"5161:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5147:6:17"},"nodeType":"YulFunctionCall","src":"5147:21:17"},"nodeType":"YulExpressionStatement","src":"5147:21:17"},{"nodeType":"YulVariableDeclaration","src":"5177:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5192:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5199:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5188:3:17"},"nodeType":"YulFunctionCall","src":"5188:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5181:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5242:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"5244:77:17"},"nodeType":"YulFunctionCall","src":"5244:79:17"},"nodeType":"YulExpressionStatement","src":"5244:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5223:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5228:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5219:3:17"},"nodeType":"YulFunctionCall","src":"5219:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"5237:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5216:2:17"},"nodeType":"YulFunctionCall","src":"5216:25:17"},"nodeType":"YulIf","src":"5213:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5371:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"5376:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5381:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5334:36:17"},"nodeType":"YulFunctionCall","src":"5334:54:17"},"nodeType":"YulExpressionStatement","src":"5334:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5026:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5031:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5039:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5047:5:17","type":""}],"src":"4969:425:17"},{"body":{"nodeType":"YulBlock","src":"5476:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"5525:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5527:77:17"},"nodeType":"YulFunctionCall","src":"5527:79:17"},"nodeType":"YulExpressionStatement","src":"5527:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5504:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5512:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5500:3:17"},"nodeType":"YulFunctionCall","src":"5500:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"5519:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5496:3:17"},"nodeType":"YulFunctionCall","src":"5496:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5489:6:17"},"nodeType":"YulFunctionCall","src":"5489:35:17"},"nodeType":"YulIf","src":"5486:122:17"},{"nodeType":"YulVariableDeclaration","src":"5617:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5644:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5631:12:17"},"nodeType":"YulFunctionCall","src":"5631:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5621:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5660:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5721:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5729:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5717:3:17"},"nodeType":"YulFunctionCall","src":"5717:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"5736:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"5744:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5669:47:17"},"nodeType":"YulFunctionCall","src":"5669:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5660:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5454:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5462:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5470:5:17","type":""}],"src":"5414:340:17"},{"body":{"nodeType":"YulBlock","src":"5853:561:17","statements":[{"body":{"nodeType":"YulBlock","src":"5899:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5901:77:17"},"nodeType":"YulFunctionCall","src":"5901:79:17"},"nodeType":"YulExpressionStatement","src":"5901:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5874:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5883:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5870:3:17"},"nodeType":"YulFunctionCall","src":"5870:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5895:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5866:3:17"},"nodeType":"YulFunctionCall","src":"5866:32:17"},"nodeType":"YulIf","src":"5863:119:17"},{"nodeType":"YulBlock","src":"5992:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6007:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6038:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6049:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6034:3:17"},"nodeType":"YulFunctionCall","src":"6034:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6021:12:17"},"nodeType":"YulFunctionCall","src":"6021:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6011:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6099:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6101:77:17"},"nodeType":"YulFunctionCall","src":"6101:79:17"},"nodeType":"YulExpressionStatement","src":"6101:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6071:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6079:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6068:2:17"},"nodeType":"YulFunctionCall","src":"6068:30:17"},"nodeType":"YulIf","src":"6065:117:17"},{"nodeType":"YulAssignment","src":"6196:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6241:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6252:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6237:3:17"},"nodeType":"YulFunctionCall","src":"6237:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6261:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6206:30:17"},"nodeType":"YulFunctionCall","src":"6206:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6196:6:17"}]}]},{"nodeType":"YulBlock","src":"6289:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6304:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6318:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6308:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6334:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6369:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6380:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6365:3:17"},"nodeType":"YulFunctionCall","src":"6365:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6389:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6344:20:17"},"nodeType":"YulFunctionCall","src":"6344:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6334:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5815:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5826:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5838:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5846:6:17","type":""}],"src":"5760:654:17"},{"body":{"nodeType":"YulBlock","src":"6503:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"6549:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6551:77:17"},"nodeType":"YulFunctionCall","src":"6551:79:17"},"nodeType":"YulExpressionStatement","src":"6551:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6524:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6533:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6520:3:17"},"nodeType":"YulFunctionCall","src":"6520:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6545:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6516:3:17"},"nodeType":"YulFunctionCall","src":"6516:32:17"},"nodeType":"YulIf","src":"6513:119:17"},{"nodeType":"YulBlock","src":"6642:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6657:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6671:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6661:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6686:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6721:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6732:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6717:3:17"},"nodeType":"YulFunctionCall","src":"6717:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6741:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6696:20:17"},"nodeType":"YulFunctionCall","src":"6696:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6686:6:17"}]}]},{"nodeType":"YulBlock","src":"6769:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6784:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6798:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6788:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6814:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6849:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6860:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6845:3:17"},"nodeType":"YulFunctionCall","src":"6845:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6869:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6824:20:17"},"nodeType":"YulFunctionCall","src":"6824:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6814:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6465:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6476:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6488:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6496:6:17","type":""}],"src":"6420:474:17"},{"body":{"nodeType":"YulBlock","src":"6942:48:17","statements":[{"nodeType":"YulAssignment","src":"6952:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6977:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6970:6:17"},"nodeType":"YulFunctionCall","src":"6970:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6963:6:17"},"nodeType":"YulFunctionCall","src":"6963:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6952:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6924:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6934:7:17","type":""}],"src":"6900:90:17"},{"body":{"nodeType":"YulBlock","src":"7055:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7072:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7092:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7077:14:17"},"nodeType":"YulFunctionCall","src":"7077:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7065:6:17"},"nodeType":"YulFunctionCall","src":"7065:34:17"},"nodeType":"YulExpressionStatement","src":"7065:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7043:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7050:3:17","type":""}],"src":"6996:109:17"},{"body":{"nodeType":"YulBlock","src":"7203:118:17","statements":[{"nodeType":"YulAssignment","src":"7213:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7225:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7236:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7221:3:17"},"nodeType":"YulFunctionCall","src":"7221:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7213:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7287:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7300:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7311:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7296:3:17"},"nodeType":"YulFunctionCall","src":"7296:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"7249:37:17"},"nodeType":"YulFunctionCall","src":"7249:65:17"},"nodeType":"YulExpressionStatement","src":"7249:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7175:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7187:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7198:4:17","type":""}],"src":"7111:210:17"},{"body":{"nodeType":"YulBlock","src":"7355:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7372:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7375:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7365:6:17"},"nodeType":"YulFunctionCall","src":"7365:88:17"},"nodeType":"YulExpressionStatement","src":"7365:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7469:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7472:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7462:6:17"},"nodeType":"YulFunctionCall","src":"7462:15:17"},"nodeType":"YulExpressionStatement","src":"7462:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7493:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7496:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7486:6:17"},"nodeType":"YulFunctionCall","src":"7486:15:17"},"nodeType":"YulExpressionStatement","src":"7486:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7327:180:17"},{"body":{"nodeType":"YulBlock","src":"7553:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"7607:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7616:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7619:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7609:6:17"},"nodeType":"YulFunctionCall","src":"7609:12:17"},"nodeType":"YulExpressionStatement","src":"7609:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7576:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7598:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7583:14:17"},"nodeType":"YulFunctionCall","src":"7583:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7573:2:17"},"nodeType":"YulFunctionCall","src":"7573:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7566:6:17"},"nodeType":"YulFunctionCall","src":"7566:40:17"},"nodeType":"YulIf","src":"7563:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7546:5:17","type":""}],"src":"7513:116:17"},{"body":{"nodeType":"YulBlock","src":"7695:77:17","statements":[{"nodeType":"YulAssignment","src":"7705:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7720:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7714:5:17"},"nodeType":"YulFunctionCall","src":"7714:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7705:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7760:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"7736:23:17"},"nodeType":"YulFunctionCall","src":"7736:30:17"},"nodeType":"YulExpressionStatement","src":"7736:30:17"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7673:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"7681:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7689:5:17","type":""}],"src":"7635:137:17"},{"body":{"nodeType":"YulBlock","src":"7852:271:17","statements":[{"body":{"nodeType":"YulBlock","src":"7898:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7900:77:17"},"nodeType":"YulFunctionCall","src":"7900:79:17"},"nodeType":"YulExpressionStatement","src":"7900:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7873:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7882:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7869:3:17"},"nodeType":"YulFunctionCall","src":"7869:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7894:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7865:3:17"},"nodeType":"YulFunctionCall","src":"7865:32:17"},"nodeType":"YulIf","src":"7862:119:17"},{"nodeType":"YulBlock","src":"7991:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8006:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8020:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8010:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8035:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8078:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8089:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8074:3:17"},"nodeType":"YulFunctionCall","src":"8074:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8098:7:17"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"8045:28:17"},"nodeType":"YulFunctionCall","src":"8045:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8035:6:17"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7822:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7833:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7845:6:17","type":""}],"src":"7778:345:17"},{"body":{"nodeType":"YulBlock","src":"8157:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8174:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8177:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8167:6:17"},"nodeType":"YulFunctionCall","src":"8167:88:17"},"nodeType":"YulExpressionStatement","src":"8167:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8271:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8274:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8264:6:17"},"nodeType":"YulFunctionCall","src":"8264:15:17"},"nodeType":"YulExpressionStatement","src":"8264:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8295:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8298:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8288:6:17"},"nodeType":"YulFunctionCall","src":"8288:15:17"},"nodeType":"YulExpressionStatement","src":"8288:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8129:180:17"},{"body":{"nodeType":"YulBlock","src":"8360:32:17","statements":[{"nodeType":"YulAssignment","src":"8370:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"8381:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8370:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8342:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8352:7:17","type":""}],"src":"8315:77:17"},{"body":{"nodeType":"YulBlock","src":"8441:190:17","statements":[{"nodeType":"YulAssignment","src":"8451:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8478:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8460:17:17"},"nodeType":"YulFunctionCall","src":"8460:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8451:5:17"}]},{"body":{"nodeType":"YulBlock","src":"8574:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8576:16:17"},"nodeType":"YulFunctionCall","src":"8576:18:17"},"nodeType":"YulExpressionStatement","src":"8576:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8499:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8506:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8496:2:17"},"nodeType":"YulFunctionCall","src":"8496:77:17"},"nodeType":"YulIf","src":"8493:103:17"},{"nodeType":"YulAssignment","src":"8605:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8616:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8623:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8612:3:17"},"nodeType":"YulFunctionCall","src":"8612:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8605:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8427:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8437:3:17","type":""}],"src":"8398:233:17"},{"body":{"nodeType":"YulBlock","src":"8696:40:17","statements":[{"nodeType":"YulAssignment","src":"8707:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8723:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8717:5:17"},"nodeType":"YulFunctionCall","src":"8717:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8707:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8679:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8689:6:17","type":""}],"src":"8637:99:17"},{"body":{"nodeType":"YulBlock","src":"8838:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8855:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8860:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8848:6:17"},"nodeType":"YulFunctionCall","src":"8848:19:17"},"nodeType":"YulExpressionStatement","src":"8848:19:17"},{"nodeType":"YulAssignment","src":"8876:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8895:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8900:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8891:3:17"},"nodeType":"YulFunctionCall","src":"8891:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8876:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8810:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8815:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8826:11:17","type":""}],"src":"8742:169:17"},{"body":{"nodeType":"YulBlock","src":"8979:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8989:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8998:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8993:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9058:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9083:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"9088:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9079:3:17"},"nodeType":"YulFunctionCall","src":"9079:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9102:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"9107:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9098:3:17"},"nodeType":"YulFunctionCall","src":"9098:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9092:5:17"},"nodeType":"YulFunctionCall","src":"9092:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9072:6:17"},"nodeType":"YulFunctionCall","src":"9072:39:17"},"nodeType":"YulExpressionStatement","src":"9072:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9019:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"9022:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9016:2:17"},"nodeType":"YulFunctionCall","src":"9016:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9030:19:17","statements":[{"nodeType":"YulAssignment","src":"9032:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9041:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"9044:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9037:3:17"},"nodeType":"YulFunctionCall","src":"9037:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9032:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"9012:3:17","statements":[]},"src":"9008:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9141:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9146:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9137:3:17"},"nodeType":"YulFunctionCall","src":"9137:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"9155:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9130:6:17"},"nodeType":"YulFunctionCall","src":"9130:27:17"},"nodeType":"YulExpressionStatement","src":"9130:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8961:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8966:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8971:6:17","type":""}],"src":"8917:246:17"},{"body":{"nodeType":"YulBlock","src":"9261:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9271:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9318:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9285:32:17"},"nodeType":"YulFunctionCall","src":"9285:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9275:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9333:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9399:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9404:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9340:58:17"},"nodeType":"YulFunctionCall","src":"9340:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9333:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9459:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9466:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9455:3:17"},"nodeType":"YulFunctionCall","src":"9455:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"9473:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9478:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9420:34:17"},"nodeType":"YulFunctionCall","src":"9420:65:17"},"nodeType":"YulExpressionStatement","src":"9420:65:17"},{"nodeType":"YulAssignment","src":"9494:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9505:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9532:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9510:21:17"},"nodeType":"YulFunctionCall","src":"9510:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9501:3:17"},"nodeType":"YulFunctionCall","src":"9501:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9494:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9242:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9249:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9257:3:17","type":""}],"src":"9169:377:17"},{"body":{"nodeType":"YulBlock","src":"9670:195:17","statements":[{"nodeType":"YulAssignment","src":"9680:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9692:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9703:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9688:3:17"},"nodeType":"YulFunctionCall","src":"9688:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9680:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9727:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9738:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9723:3:17"},"nodeType":"YulFunctionCall","src":"9723:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9746:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9752:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9742:3:17"},"nodeType":"YulFunctionCall","src":"9742:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9716:6:17"},"nodeType":"YulFunctionCall","src":"9716:47:17"},"nodeType":"YulExpressionStatement","src":"9716:47:17"},{"nodeType":"YulAssignment","src":"9772:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9844:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"9853:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9780:63:17"},"nodeType":"YulFunctionCall","src":"9780:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9772:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9642:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9654:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9665:4:17","type":""}],"src":"9552:313:17"},{"body":{"nodeType":"YulBlock","src":"9916:149:17","statements":[{"nodeType":"YulAssignment","src":"9926:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9949:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9931:17:17"},"nodeType":"YulFunctionCall","src":"9931:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9926:1:17"}]},{"nodeType":"YulAssignment","src":"9960:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9983:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9965:17:17"},"nodeType":"YulFunctionCall","src":"9965:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9960:1:17"}]},{"nodeType":"YulAssignment","src":"9994:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10006:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"10009:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10002:3:17"},"nodeType":"YulFunctionCall","src":"10002:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9994:4:17"}]},{"body":{"nodeType":"YulBlock","src":"10036:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10038:16:17"},"nodeType":"YulFunctionCall","src":"10038:18:17"},"nodeType":"YulExpressionStatement","src":"10038:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"10027:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"10033:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10024:2:17"},"nodeType":"YulFunctionCall","src":"10024:11:17"},"nodeType":"YulIf","src":"10021:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9902:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"9905:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9911:4:17","type":""}],"src":"9871:194:17"},{"body":{"nodeType":"YulBlock","src":"10099:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10116:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10119:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10109:6:17"},"nodeType":"YulFunctionCall","src":"10109:88:17"},"nodeType":"YulExpressionStatement","src":"10109:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10213:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10216:4:17","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10206:6:17"},"nodeType":"YulFunctionCall","src":"10206:15:17"},"nodeType":"YulExpressionStatement","src":"10206:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10237:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10240:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10230:6:17"},"nodeType":"YulFunctionCall","src":"10230:15:17"},"nodeType":"YulExpressionStatement","src":"10230:15:17"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"10071:180:17"},{"body":{"nodeType":"YulBlock","src":"10363:115:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10385:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10393:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10381:3:17"},"nodeType":"YulFunctionCall","src":"10381:14:17"},{"hexValue":"4a75646765466163746f72793a204a7564676520646f6573206e6f7420657869","kind":"string","nodeType":"YulLiteral","src":"10397:34:17","type":"","value":"JudgeFactory: Judge does not exi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10374:6:17"},"nodeType":"YulFunctionCall","src":"10374:58:17"},"nodeType":"YulExpressionStatement","src":"10374:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10453:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10461:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10449:3:17"},"nodeType":"YulFunctionCall","src":"10449:15:17"},{"hexValue":"7374","kind":"string","nodeType":"YulLiteral","src":"10466:4:17","type":"","value":"st"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10442:6:17"},"nodeType":"YulFunctionCall","src":"10442:29:17"},"nodeType":"YulExpressionStatement","src":"10442:29:17"}]},"name":"store_literal_in_memory_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10355:6:17","type":""}],"src":"10257:221:17"},{"body":{"nodeType":"YulBlock","src":"10630:220:17","statements":[{"nodeType":"YulAssignment","src":"10640:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10706:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10711:2:17","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10647:58:17"},"nodeType":"YulFunctionCall","src":"10647:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10640:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10812:3:17"}],"functionName":{"name":"store_literal_in_memory_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee","nodeType":"YulIdentifier","src":"10723:88:17"},"nodeType":"YulFunctionCall","src":"10723:93:17"},"nodeType":"YulExpressionStatement","src":"10723:93:17"},{"nodeType":"YulAssignment","src":"10825:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10836:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10841:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10832:3:17"},"nodeType":"YulFunctionCall","src":"10832:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10825:3:17"}]}]},"name":"abi_encode_t_stringliteral_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10618:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10626:3:17","type":""}],"src":"10484:366:17"},{"body":{"nodeType":"YulBlock","src":"11027:248:17","statements":[{"nodeType":"YulAssignment","src":"11037:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11049:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11060:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11045:3:17"},"nodeType":"YulFunctionCall","src":"11045:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11037:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11084:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11095:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11080:3:17"},"nodeType":"YulFunctionCall","src":"11080:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11103:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11109:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11099:3:17"},"nodeType":"YulFunctionCall","src":"11099:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11073:6:17"},"nodeType":"YulFunctionCall","src":"11073:47:17"},"nodeType":"YulExpressionStatement","src":"11073:47:17"},{"nodeType":"YulAssignment","src":"11129:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11263:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11137:124:17"},"nodeType":"YulFunctionCall","src":"11137:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11129:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11007:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11022:4:17","type":""}],"src":"10856:419:17"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_uint160(value) -> cleaned {\\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\\n    }\\n\\n    function cleanup_t_address(value) -> cleaned {\\n        cleaned := cleanup_t_uint160(value)\\n    }\\n\\n    function validator_revert_t_address(value) {\\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_address(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_address(value)\\n    }\\n\\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\\n        data := ptr\\n\\n        data := add(ptr, 0x20)\\n\\n    }\\n\\n    function abi_encode_t_address_to_t_address(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\\n        abi_encode_t_address_to_t_address(value0, pos)\\n        updatedPos := add(pos, 0x20)\\n    }\\n\\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\\n        next := add(ptr, 0x20)\\n    }\\n\\n    // address[] -> address[]\\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\\n        let srcPtr := baseRef\\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\\n        {\\n            let elementValue0 := mload(srcPtr)\\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\\n        }\\n        end := pos\\n    }\\n\\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\\n        calldatacopy(dst, src, length)\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := calldataload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\\n    }\\n\\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1 {\\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 0))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 32\\n\\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 32\\n\\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function cleanup_t_bool(value) -> cleaned {\\n        cleaned := iszero(iszero(value))\\n    }\\n\\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_bool(value))\\n    }\\n\\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function panic_error_0x32() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x32)\\n        revert(0, 0x24)\\n    }\\n\\n    function validator_revert_t_bool(value) {\\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\\n        value := mload(offset)\\n        validator_revert_t_bool(value)\\n    }\\n\\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function panic_error_0x11() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x11)\\n        revert(0, 0x24)\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function increment_t_uint256(value) -> ret {\\n        value := cleanup_t_uint256(value)\\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\\n        ret := add(value, 1)\\n    }\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\\n        let length := array_length_t_string_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\\n        end := add(pos, round_up_to_mul_of_32(length))\\n    }\\n\\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function checked_sub_t_uint256(x, y) -> diff {\\n        x := cleanup_t_uint256(x)\\n        y := cleanup_t_uint256(y)\\n        diff := sub(x, y)\\n\\n        if gt(diff, x) { panic_error_0x11() }\\n\\n    }\\n\\n    function panic_error_0x31() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x31)\\n        revert(0, 0x24)\\n    }\\n\\n    function store_literal_in_memory_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee(memPtr) {\\n\\n        mstore(add(memPtr, 0), \\"JudgeFactory: Judge does not exi\\")\\n\\n        mstore(add(memPtr, 32), \\"st\\")\\n\\n    }\\n\\n    function abi_encode_t_stringliteral_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee_to_t_string_memory_ptr_fromStack(pos) -> end {\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\\n        store_literal_in_memory_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee(pos)\\n        end := add(pos, 64)\\n    }\\n\\n    function abi_encode_tuple_t_stringliteral_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_stringliteral_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee_to_t_string_memory_ptr_fromStack( tail)\\n\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"sourceMap":"103:2729:10:-:0;;;320:44;;;;;;;;;;356:1;344:9;:13;;;;103:2729;;;;;;","deployedSourceMap":"103:2729:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1752:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2164:665;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;370:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1282:464;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;613:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2035:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1146:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1892:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;719:421;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1752:134;1820:7;1846:20;:33;1867:11;1846:33;;;;;;;;;;;;;;;;;;;;;;;;;1839:40;;1752:134;;;:::o;2164:665::-;2233:16;2261:24;2288:14;:27;2303:11;2288:27;;;;;;;;;;;;;;;2261:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2326:27;2373:9;2368:164;2392:7;:14;2388:1;:18;2368:164;;;2438:7;2446:1;2438:10;;;;;;;;:::i;:::-;;;;;;;;2431:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2427:95;;;2486:21;;;;;:::i;:::-;;;;2427:95;2408:3;;;;;:::i;:::-;;;;2368:164;;;;2542:30;2589:19;2575:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2542:67;;2625:9;2620:172;2644:7;:14;2640:1;:18;2620:172;;;2690:7;2698:1;2690:10;;;;;;;;:::i;:::-;;;;;;;;2683:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2679:103;;;2757:7;2765:1;2757:10;;;;;;;;:::i;:::-;;;;;;;;2738:13;2752:1;2738:16;;;;;;;;:::i;:::-;;;;;;;:29;;;;;;;;;;;2679:103;2660:3;;;;;:::i;:::-;;;;2620:172;;;;2809:13;2802:20;;;;;2164:665;;;:::o;370:237::-;477:11;501:4;491:15;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;477:29;;558:5;517:20;:30;538:8;517:30;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;575:10;591:8;575:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:140;370:237;;:::o;1282:464::-;1389:25;1417:14;:21;1432:5;1417:21;;;;;;;;;;;;;;;:28;;;;1389:56;;1461:9;1456:284;1480:17;1476:1;:21;1456:284;;;1550:6;1522:34;;:14;:21;1537:5;1522:21;;;;;;;;;;;;;;;1544:1;1522:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:34;;;1518:212;;1603:14;:21;1618:5;1603:21;;;;;;;;;;;;;;;1645:1;1625:17;:21;;;;:::i;:::-;1603:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1576:14;:21;1591:5;1576:21;;;;;;;;;;;;;;;1598:1;1576:24;;;;;;;;:::i;:::-;;;;;;;;;;:71;;;;;;;;;;;;;;;;;;1665:14;:21;1680:5;1665:21;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:5;;1518:212;1499:3;;;;;:::i;:::-;;;;1456:284;;;;1379:367;1282:464;;:::o;613:100::-;659:7;685:10;696:9;;685:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;678:28;;613:100;:::o;2035:123::-;2095:16;2130:14;:21;2145:5;2130:21;;;;;;;;;;;;;;;2123:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2035:123;;;:::o;1146:130::-;1205:4;1267:1;1228:41;;:20;:27;1249:5;1228:27;;;;;;;;;;;;;;;;;;;;;;;;;:41;;;;1221:48;;1146:130;;;:::o;1892:137::-;1960:16;1995:14;:27;2010:11;1995:27;;;;;;;;;;;;;;;1988:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1892:137;;;:::o;719:421::-;918:1;879:41;;:20;:27;900:5;879:27;;;;;;;;;;;;;;;;;;;;;;;;;:41;;;871:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;970:14;:21;985:5;970:21;;;;;;;;;;;;;;;997:6;970:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:1;1031:10;:17;;;;:21;;;;:::i;:::-;1018:9;;:34;1015:119;;1080:1;1068:9;:13;;;;1015:119;;;1112:9;;:11;;;;;;;;;:::i;:::-;;;;;;1015:119;719:421;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:114::-;1595:6;1629:5;1623:12;1613:22;;1528:114;;;:::o;1648:184::-;1747:11;1781:6;1776:3;1769:19;1821:4;1816:3;1812:14;1797:29;;1648:184;;;;:::o;1838:132::-;1905:4;1928:3;1920:11;;1958:4;1953:3;1949:14;1941:22;;1838:132;;;:::o;1976:108::-;2053:24;2071:5;2053:24;:::i;:::-;2048:3;2041:37;1976:108;;:::o;2090:179::-;2159:10;2180:46;2222:3;2214:6;2180:46;:::i;:::-;2258:4;2253:3;2249:14;2235:28;;2090:179;;;;:::o;2275:113::-;2345:4;2377;2372:3;2368:14;2360:22;;2275:113;;;:::o;2424:732::-;2543:3;2572:54;2620:5;2572:54;:::i;:::-;2642:86;2721:6;2716:3;2642:86;:::i;:::-;2635:93;;2752:56;2802:5;2752:56;:::i;:::-;2831:7;2862:1;2847:284;2872:6;2869:1;2866:13;2847:284;;;2948:6;2942:13;2975:63;3034:3;3019:13;2975:63;:::i;:::-;2968:70;;3061:60;3114:6;3061:60;:::i;:::-;3051:70;;2907:224;2894:1;2891;2887:9;2882:14;;2847:284;;;2851:14;3147:3;3140:10;;2548:608;;;2424:732;;;;:::o;3162:373::-;3305:4;3343:2;3332:9;3328:18;3320:26;;3392:9;3386:4;3382:20;3378:1;3367:9;3363:17;3356:47;3420:108;3523:4;3514:6;3420:108;:::i;:::-;3412:116;;3162:373;;;;:::o;3541:117::-;3650:1;3647;3640:12;3664:117;3773:1;3770;3763:12;3787:102;3828:6;3879:2;3875:7;3870:2;3863:5;3859:14;3855:28;3845:38;;3787:102;;;:::o;3895:180::-;3943:77;3940:1;3933:88;4040:4;4037:1;4030:15;4064:4;4061:1;4054:15;4081:281;4164:27;4186:4;4164:27;:::i;:::-;4156:6;4152:40;4294:6;4282:10;4279:22;4258:18;4246:10;4243:34;4240:62;4237:88;;;4305:18;;:::i;:::-;4237:88;4345:10;4341:2;4334:22;4124:238;4081:281;;:::o;4368:129::-;4402:6;4429:20;;:::i;:::-;4419:30;;4458:33;4486:4;4478:6;4458:33;:::i;:::-;4368:129;;;:::o;4503:308::-;4565:4;4655:18;4647:6;4644:30;4641:56;;;4677:18;;:::i;:::-;4641:56;4715:29;4737:6;4715:29;:::i;:::-;4707:37;;4799:4;4793;4789:15;4781:23;;4503:308;;;:::o;4817:146::-;4914:6;4909:3;4904;4891:30;4955:1;4946:6;4941:3;4937:16;4930:27;4817:146;;;:::o;4969:425::-;5047:5;5072:66;5088:49;5130:6;5088:49;:::i;:::-;5072:66;:::i;:::-;5063:75;;5161:6;5154:5;5147:21;5199:4;5192:5;5188:16;5237:3;5228:6;5223:3;5219:16;5216:25;5213:112;;;5244:79;;:::i;:::-;5213:112;5334:54;5381:6;5376:3;5371;5334:54;:::i;:::-;5053:341;4969:425;;;;;:::o;5414:340::-;5470:5;5519:3;5512:4;5504:6;5500:17;5496:27;5486:122;;5527:79;;:::i;:::-;5486:122;5644:6;5631:20;5669:79;5744:3;5736:6;5729:4;5721:6;5717:17;5669:79;:::i;:::-;5660:88;;5476:278;5414:340;;;;:::o;5760:654::-;5838:6;5846;5895:2;5883:9;5874:7;5870:23;5866:32;5863:119;;;5901:79;;:::i;:::-;5863:119;6049:1;6038:9;6034:17;6021:31;6079:18;6071:6;6068:30;6065:117;;;6101:79;;:::i;:::-;6065:117;6206:63;6261:7;6252:6;6241:9;6237:22;6206:63;:::i;:::-;6196:73;;5992:287;6318:2;6344:53;6389:7;6380:6;6369:9;6365:22;6344:53;:::i;:::-;6334:63;;6289:118;5760:654;;;;;:::o;6420:474::-;6488:6;6496;6545:2;6533:9;6524:7;6520:23;6516:32;6513:119;;;6551:79;;:::i;:::-;6513:119;6671:1;6696:53;6741:7;6732:6;6721:9;6717:22;6696:53;:::i;:::-;6686:63;;6642:117;6798:2;6824:53;6869:7;6860:6;6849:9;6845:22;6824:53;:::i;:::-;6814:63;;6769:118;6420:474;;;;;:::o;6900:90::-;6934:7;6977:5;6970:13;6963:21;6952:32;;6900:90;;;:::o;6996:109::-;7077:21;7092:5;7077:21;:::i;:::-;7072:3;7065:34;6996:109;;:::o;7111:210::-;7198:4;7236:2;7225:9;7221:18;7213:26;;7249:65;7311:1;7300:9;7296:17;7287:6;7249:65;:::i;:::-;7111:210;;;;:::o;7327:180::-;7375:77;7372:1;7365:88;7472:4;7469:1;7462:15;7496:4;7493:1;7486:15;7513:116;7583:21;7598:5;7583:21;:::i;:::-;7576:5;7573:32;7563:60;;7619:1;7616;7609:12;7563:60;7513:116;:::o;7635:137::-;7689:5;7720:6;7714:13;7705:22;;7736:30;7760:5;7736:30;:::i;:::-;7635:137;;;;:::o;7778:345::-;7845:6;7894:2;7882:9;7873:7;7869:23;7865:32;7862:119;;;7900:79;;:::i;:::-;7862:119;8020:1;8045:61;8098:7;8089:6;8078:9;8074:22;8045:61;:::i;:::-;8035:71;;7991:125;7778:345;;;;:::o;8129:180::-;8177:77;8174:1;8167:88;8274:4;8271:1;8264:15;8298:4;8295:1;8288:15;8315:77;8352:7;8381:5;8370:16;;8315:77;;;:::o;8398:233::-;8437:3;8460:24;8478:5;8460:24;:::i;:::-;8451:33;;8506:66;8499:5;8496:77;8493:103;;8576:18;;:::i;:::-;8493:103;8623:1;8616:5;8612:13;8605:20;;8398:233;;;:::o;8637:99::-;8689:6;8723:5;8717:12;8707:22;;8637:99;;;:::o;8742:169::-;8826:11;8860:6;8855:3;8848:19;8900:4;8895:3;8891:14;8876:29;;8742:169;;;;:::o;8917:246::-;8998:1;9008:113;9022:6;9019:1;9016:13;9008:113;;;9107:1;9102:3;9098:11;9092:18;9088:1;9083:3;9079:11;9072:39;9044:2;9041:1;9037:10;9032:15;;9008:113;;;9155:1;9146:6;9141:3;9137:16;9130:27;8979:184;8917:246;;;:::o;9169:377::-;9257:3;9285:39;9318:5;9285:39;:::i;:::-;9340:71;9404:6;9399:3;9340:71;:::i;:::-;9333:78;;9420:65;9478:6;9473:3;9466:4;9459:5;9455:16;9420:65;:::i;:::-;9510:29;9532:6;9510:29;:::i;:::-;9505:3;9501:39;9494:46;;9261:285;9169:377;;;;:::o;9552:313::-;9665:4;9703:2;9692:9;9688:18;9680:26;;9752:9;9746:4;9742:20;9738:1;9727:9;9723:17;9716:47;9780:78;9853:4;9844:6;9780:78;:::i;:::-;9772:86;;9552:313;;;;:::o;9871:194::-;9911:4;9931:20;9949:1;9931:20;:::i;:::-;9926:25;;9965:20;9983:1;9965:20;:::i;:::-;9960:25;;10009:1;10006;10002:9;9994:17;;10033:1;10027:4;10024:11;10021:37;;;10038:18;;:::i;:::-;10021:37;9871:194;;;;:::o;10071:180::-;10119:77;10116:1;10109:88;10216:4;10213:1;10206:15;10240:4;10237:1;10230:15;10257:221;10397:34;10393:1;10385:6;10381:14;10374:58;10466:4;10461:2;10453:6;10449:15;10442:29;10257:221;:::o;10484:366::-;10626:3;10647:67;10711:2;10706:3;10647:67;:::i;:::-;10640:74;;10723:93;10812:3;10723:93;:::i;:::-;10841:2;10836:3;10832:12;10825:19;;10484:366;;;:::o;10856:419::-;11022:4;11060:2;11049:9;11045:18;11037:26;;11109:9;11103:4;11099:20;11095:1;11084:9;11080:17;11073:47;11137:131;11263:4;11137:131;:::i;:::-;11129:139;;10856:419;;;:::o","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\"./Judge.sol\\";\\nimport \\"./Ticket.sol\\";\\n\\ncontract JudgeFactory {\\n\\n    mapping (address => address) private judgeWalletToProfile;\\n    mapping (address => address[]) private JudgeToTickets;\\n    address[] private roundRobin;\\n    uint256 private nextIndex;\\n\\n    constructor() {\\n        nextIndex = 0;\\n    }\\n\\n    function createNewJudge(\\n        string memory name,\\n        address _address\\n    ) external\\n    {\\n        Judge judge = new Judge(name);\\n\\n        judgeWalletToProfile[_address] = address(judge);\\n\\n        roundRobin.push(_address);\\n    }\\n\\n    function getNextJudge() external view returns(address) {\\n        return roundRobin[nextIndex];\\n    }\\n\\n    function assignJudgeToTicket(\\n        address ticket,\\n        address judge\\n    ) external\\n    {\\n\\n        // TODO: Can be optimized with revert\\n        require(judgeWalletToProfile[judge] != address(0), \\"JudgeFactory: Judge does not exist\\");\\n\\n        JudgeToTickets[judge].push(ticket);\\n\\n        if(nextIndex == roundRobin.length - 1) {\\n            nextIndex = 0;\\n        } else {\\n            nextIndex++;\\n        }\\n    }\\n\\n    function isValidJudge(address judge) external view returns(bool) {\\n        return judgeWalletToProfile[judge] != address(0);\\n    }\\n\\n    function removeJudgeFromTicket(\\n        address judge,\\n        address ticket\\n    ) external\\n    {\\n        uint256 judgeTicketLength = JudgeToTickets[judge].length;\\n\\n        for (uint256 i = 0; i < judgeTicketLength; i++) {\\n            if (JudgeToTickets[judge][i] == ticket) {\\n                JudgeToTickets[judge][i] = JudgeToTickets[judge][judgeTicketLength - 1];\\n                JudgeToTickets[judge].pop();\\n                break;\\n            }\\n        }\\n    }\\n\\n    function getJudgeProfile(address judgeWallet) external view returns(address) {\\n        return judgeWalletToProfile[judgeWallet];\\n    }\\n\\n    function getJudgeTickets(address judgeWallet) external view returns(address[] memory) {\\n        return JudgeToTickets[judgeWallet];\\n    }\\n\\n    function getAllTickets(address judge) external view returns(address[] memory) {\\n        return JudgeToTickets[judge];\\n    }\\n\\n    function getActiveTickets(address judgeWallet) external view returns(address[] memory) {\\n        address[] memory tickets = JudgeToTickets[judgeWallet];\\n\\n        uint256 activeTicketsLength = 0;\\n\\n        for (uint256 i = 0; i < tickets.length; i++) {\\n            if (Ticket(tickets[i]).isTicketActive()) {\\n                activeTicketsLength++;\\n            }\\n        }\\n\\n        address[] memory activeTickets = new address[](activeTicketsLength);\\n\\n        for (uint256 i = 0; i < tickets.length; i++) {\\n            if (Ticket(tickets[i]).isTicketActive()) {\\n                activeTickets[i] = tickets[i];\\n            }\\n        }\\n\\n        return activeTickets;\\n    }\\n\\n}\\n","sourcePath":"C:\\\\Users\\\\samin\\\\Documents\\\\Projects\\\\AWT\\\\TraffiChain\\\\contracts\\\\JudgeFactory.sol","ast":{"absolutePath":"project:/contracts/JudgeFactory.sol","exportedSymbols":{"AccessControl":[319],"Context":[414],"ERC165":[664],"IAccessControl":[392],"IERC165":[676],"Judge":[1010],"JudgeFactory":[1324],"Strings":[640],"Ticket":[2112],"Ticket__NoJudgeAssigned":[1641],"Ticket__inactive":[1639]},"id":1325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1012,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:10"},{"absolutePath":"project:/contracts/Judge.sol","file":"./Judge.sol","id":1013,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1325,"sourceUnit":1011,"src":"57:21:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"project:/contracts/Ticket.sol","file":"./Ticket.sol","id":1014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1325,"sourceUnit":2113,"src":"79:22:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"JudgeFactory","contractDependencies":[1010],"contractKind":"contract","fullyImplemented":true,"id":1324,"linearizedBaseContracts":[1324],"name":"JudgeFactory","nameLocation":"112:12:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1018,"mutability":"mutable","name":"judgeWalletToProfile","nameLocation":"169:20:10","nodeType":"VariableDeclaration","scope":1324,"src":"132:57:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1017,"keyType":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"141:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"132:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"152:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1023,"mutability":"mutable","name":"JudgeToTickets","nameLocation":"234:14:10","nodeType":"VariableDeclaration","scope":1324,"src":"195:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":1022,"keyType":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"195:30:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueType":{"baseType":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"215:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1021,"nodeType":"ArrayTypeName","src":"215:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"private"},{"constant":false,"id":1026,"mutability":"mutable","name":"roundRobin","nameLocation":"272:10:10","nodeType":"VariableDeclaration","scope":1324,"src":"254:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"254:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1025,"nodeType":"ArrayTypeName","src":"254:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"constant":false,"id":1028,"mutability":"mutable","name":"nextIndex","nameLocation":"304:9:10","nodeType":"VariableDeclaration","scope":1324,"src":"288:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"288:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1035,"nodeType":"Block","src":"334:30:10","statements":[{"expression":{"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1031,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"344:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"356:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"344:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"nodeType":"ExpressionStatement","src":"344:13:10"}]},"id":1036,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[],"src":"331:2:10"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"334:0:10"},"scope":1324,"src":"320:44:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1067,"nodeType":"Block","src":"467:140:10","statements":[{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"judge","nameLocation":"483:5:10","nodeType":"VariableDeclaration","scope":1067,"src":"477:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Judge_$1010","typeString":"contract Judge"},"typeName":{"id":1044,"nodeType":"UserDefinedTypeName","pathNode":{"id":1043,"name":"Judge","nameLocations":["477:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1010,"src":"477:5:10"},"referencedDeclaration":1010,"src":"477:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_Judge_$1010","typeString":"contract Judge"}},"visibility":"internal"}],"id":1051,"initialValue":{"arguments":[{"id":1049,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"501:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"491:9:10","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$returns$_t_contract$_Judge_$1010_$","typeString":"function (string memory) returns (contract Judge)"},"typeName":{"id":1047,"nodeType":"UserDefinedTypeName","pathNode":{"id":1046,"name":"Judge","nameLocations":["495:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1010,"src":"495:5:10"},"referencedDeclaration":1010,"src":"495:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_Judge_$1010","typeString":"contract Judge"}}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"491:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Judge_$1010","typeString":"contract Judge"}},"nodeType":"VariableDeclarationStatement","src":"477:29:10"},{"expression":{"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1052,"name":"judgeWalletToProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"517:20:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1054,"indexExpression":{"id":1053,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"538:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"517:30:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1057,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"558:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_Judge_$1010","typeString":"contract Judge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Judge_$1010","typeString":"contract Judge"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"550:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:10","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"550:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"517:47:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1060,"nodeType":"ExpressionStatement","src":"517:47:10"},{"expression":{"arguments":[{"id":1064,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"591:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1061,"name":"roundRobin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"575:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"586:4:10","memberName":"push","nodeType":"MemberAccess","src":"575:15:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"575:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"ExpressionStatement","src":"575:25:10"}]},"functionSelector":"750502ba","id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"createNewJudge","nameLocation":"379:14:10","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"name","nameLocation":"417:4:10","nodeType":"VariableDeclaration","scope":1068,"src":"403:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1037,"name":"string","nodeType":"ElementaryTypeName","src":"403:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"_address","nameLocation":"439:8:10","nodeType":"VariableDeclaration","scope":1068,"src":"431:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"393:60:10"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"467:0:10"},"scope":1324,"src":"370:237:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1077,"nodeType":"Block","src":"668:45:10","statements":[{"expression":{"baseExpression":{"id":1073,"name":"roundRobin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"685:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1075,"indexExpression":{"id":1074,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"696:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"685:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1072,"id":1076,"nodeType":"Return","src":"678:28:10"}]},"functionSelector":"881d1dc2","id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"getNextJudge","nameLocation":"622:12:10","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"634:2:10"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1078,"src":"659:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"658:9:10"},"scope":1324,"src":"613:100:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1120,"nodeType":"Block","src":"814:326:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1086,"name":"judgeWalletToProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"879:20:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1088,"indexExpression":{"id":1087,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"900:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"879:27:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"918:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"910:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:10","typeDescriptions":{}}},"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"910:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"879:41:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4a75646765466163746f72793a204a7564676520646f6573206e6f74206578697374","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"922:36:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee","typeString":"literal_string \\"JudgeFactory: Judge does not exist\\""},"value":"JudgeFactory: Judge does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ea539551cee47bc56e665784b38cc04a8ea734b399bc0a64f491c62fcdc500ee","typeString":"literal_string \\"JudgeFactory: Judge does not exist\\""}],"id":1085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"871:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"871:88:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1096,"nodeType":"ExpressionStatement","src":"871:88:10"},{"expression":{"arguments":[{"id":1101,"name":"ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"997:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":1097,"name":"JudgeToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"970:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1099,"indexExpression":{"id":1098,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"985:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"970:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"992:4:10","memberName":"push","nodeType":"MemberAccess","src":"970:26:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"970:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"970:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1104,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"1018:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1105,"name":"roundRobin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"1031:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1042:6:10","memberName":"length","nodeType":"MemberAccess","src":"1031:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1051:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1031:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1018:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1118,"nodeType":"Block","src":"1098:36:10","statements":[{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1112:11:10","subExpression":{"id":1115,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"1112:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1117,"nodeType":"ExpressionStatement","src":"1112:11:10"}]},"id":1119,"nodeType":"IfStatement","src":"1015:119:10","trueBody":{"id":1114,"nodeType":"Block","src":"1054:38:10","statements":[{"expression":{"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1110,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"1068:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1080:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1113,"nodeType":"ExpressionStatement","src":"1068:13:10"}]}}]},"functionSelector":"f272e236","id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"assignJudgeToTicket","nameLocation":"728:19:10","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"ticket","nameLocation":"765:6:10","nodeType":"VariableDeclaration","scope":1121,"src":"757:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"757:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"judge","nameLocation":"789:5:10","nodeType":"VariableDeclaration","scope":1121,"src":"781:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"781:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:53:10"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"814:0:10"},"scope":1324,"src":"719:421:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1137,"nodeType":"Block","src":"1211:65:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1128,"name":"judgeWalletToProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1228:20:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1130,"indexExpression":{"id":1129,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"1249:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1228:27:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1267:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1259:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"1259:7:10","typeDescriptions":{}}},"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1259:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1228:41:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1127,"id":1136,"nodeType":"Return","src":"1221:48:10"}]},"functionSelector":"b84296dd","id":1138,"implemented":true,"kind":"function","modifiers":[],"name":"isValidJudge","nameLocation":"1155:12:10","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"judge","nameLocation":"1176:5:10","nodeType":"VariableDeclaration","scope":1138,"src":"1168:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1167:15:10"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1138,"src":"1205:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1125,"name":"bool","nodeType":"ElementaryTypeName","src":"1205:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1204:6:10"},"scope":1324,"src":"1146:130:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1194,"nodeType":"Block","src":"1379:367:10","statements":[{"assignments":[1146],"declarations":[{"constant":false,"id":1146,"mutability":"mutable","name":"judgeTicketLength","nameLocation":"1397:17:10","nodeType":"VariableDeclaration","scope":1194,"src":"1389:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1151,"initialValue":{"expression":{"baseExpression":{"id":1147,"name":"JudgeToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1417:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1149,"indexExpression":{"id":1148,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"1432:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1417:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1439:6:10","memberName":"length","nodeType":"MemberAccess","src":"1417:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1389:56:10"},{"body":{"id":1192,"nodeType":"Block","src":"1504:236:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":1162,"name":"JudgeToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1522:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1164,"indexExpression":{"id":1163,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"1537:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1522:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1166,"indexExpression":{"id":1165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1544:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1522:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1167,"name":"ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"1550:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1522:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1191,"nodeType":"IfStatement","src":"1518:212:10","trueBody":{"id":1190,"nodeType":"Block","src":"1558:172:10","statements":[{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1169,"name":"JudgeToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1576:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1172,"indexExpression":{"id":1170,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"1591:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1576:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1173,"indexExpression":{"id":1171,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1598:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1576:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":1174,"name":"JudgeToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1603:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1176,"indexExpression":{"id":1175,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"1618:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1603:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1180,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"judgeTicketLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"1625:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1625:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1603:44:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1576:71:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1182,"nodeType":"ExpressionStatement","src":"1576:71:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1183,"name":"JudgeToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1665:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1185,"indexExpression":{"id":1184,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"1680:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1665:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1687:3:10","memberName":"pop","nodeType":"MemberAccess","src":"1665:25:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"ExpressionStatement","src":"1665:27:10"},{"id":1189,"nodeType":"Break","src":"1710:5:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1476:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1157,"name":"judgeTicketLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"1480:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1476:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1193,"initializationExpression":{"assignments":[1153],"declarations":[{"constant":false,"id":1153,"mutability":"mutable","name":"i","nameLocation":"1469:1:10","nodeType":"VariableDeclaration","scope":1193,"src":"1461:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1461:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1155,"initialValue":{"hexValue":"30","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1473:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1461:13:10"},"loopExpression":{"expression":{"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1499:3:10","subExpression":{"id":1159,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1499:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1161,"nodeType":"ExpressionStatement","src":"1499:3:10"},"nodeType":"ForStatement","src":"1456:284:10"}]},"functionSelector":"8558fe44","id":1195,"implemented":true,"kind":"function","modifiers":[],"name":"removeJudgeFromTicket","nameLocation":"1291:21:10","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"judge","nameLocation":"1330:5:10","nodeType":"VariableDeclaration","scope":1195,"src":"1322:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"1322:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"ticket","nameLocation":"1353:6:10","nodeType":"VariableDeclaration","scope":1195,"src":"1345:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1312:53:10"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"1379:0:10"},"scope":1324,"src":"1282:464:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1206,"nodeType":"Block","src":"1829:57:10","statements":[{"expression":{"baseExpression":{"id":1202,"name":"judgeWalletToProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1846:20:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1204,"indexExpression":{"id":1203,"name":"judgeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"1867:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1846:33:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1201,"id":1205,"nodeType":"Return","src":"1839:40:10"}]},"functionSelector":"0ca20a9f","id":1207,"implemented":true,"kind":"function","modifiers":[],"name":"getJudgeProfile","nameLocation":"1761:15:10","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"judgeWallet","nameLocation":"1785:11:10","nodeType":"VariableDeclaration","scope":1207,"src":"1777:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1196,"name":"address","nodeType":"ElementaryTypeName","src":"1777:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1776:21:10"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1207,"src":"1820:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"1820:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1819:9:10"},"scope":1324,"src":"1752:134:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1219,"nodeType":"Block","src":"1978:51:10","statements":[{"expression":{"baseExpression":{"id":1215,"name":"JudgeToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1995:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1217,"indexExpression":{"id":1216,"name":"judgeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"2010:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1995:27:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1214,"id":1218,"nodeType":"Return","src":"1988:34:10"}]},"functionSelector":"ce2c5d79","id":1220,"implemented":true,"kind":"function","modifiers":[],"name":"getJudgeTickets","nameLocation":"1901:15:10","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"judgeWallet","nameLocation":"1925:11:10","nodeType":"VariableDeclaration","scope":1220,"src":"1917:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1916:21:10"},"returnParameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1220,"src":"1960:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"1960:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1212,"nodeType":"ArrayTypeName","src":"1960:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1959:18:10"},"scope":1324,"src":"1892:137:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1232,"nodeType":"Block","src":"2113:45:10","statements":[{"expression":{"baseExpression":{"id":1228,"name":"JudgeToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2130:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1230,"indexExpression":{"id":1229,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"2145:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2130:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1227,"id":1231,"nodeType":"Return","src":"2123:28:10"}]},"functionSelector":"91d18b81","id":1233,"implemented":true,"kind":"function","modifiers":[],"name":"getAllTickets","nameLocation":"2044:13:10","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"judge","nameLocation":"2066:5:10","nodeType":"VariableDeclaration","scope":1233,"src":"2058:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"2058:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2057:15:10"},"returnParameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1233,"src":"2095:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"2095:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1225,"nodeType":"ArrayTypeName","src":"2095:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2094:18:10"},"scope":1324,"src":"2035:123:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1322,"nodeType":"Block","src":"2251:578:10","statements":[{"assignments":[1245],"declarations":[{"constant":false,"id":1245,"mutability":"mutable","name":"tickets","nameLocation":"2278:7:10","nodeType":"VariableDeclaration","scope":1322,"src":"2261:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"2261:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1244,"nodeType":"ArrayTypeName","src":"2261:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1249,"initialValue":{"baseExpression":{"id":1246,"name":"JudgeToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2288:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1248,"indexExpression":{"id":1247,"name":"judgeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2303:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2288:27:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2261:54:10"},{"assignments":[1251],"declarations":[{"constant":false,"id":1251,"mutability":"mutable","name":"activeTicketsLength","nameLocation":"2334:19:10","nodeType":"VariableDeclaration","scope":1322,"src":"2326:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2326:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1253,"initialValue":{"hexValue":"30","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2356:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2326:31:10"},{"body":{"id":1277,"nodeType":"Block","src":"2413:119:10","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":1266,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2438:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1268,"indexExpression":{"id":1267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"2446:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2438:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1265,"name":"Ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2431:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ticket_$2112_$","typeString":"type(contract Ticket)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2431:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:14:10","memberName":"isTicketActive","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"2431:33:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2431:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1276,"nodeType":"IfStatement","src":"2427:95:10","trueBody":{"id":1275,"nodeType":"Block","src":"2468:54:10","statements":[{"expression":{"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2486:21:10","subExpression":{"id":1272,"name":"activeTicketsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"2486:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1274,"nodeType":"ExpressionStatement","src":"2486:21:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"2388:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1259,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2392:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2400:6:10","memberName":"length","nodeType":"MemberAccess","src":"2392:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2388:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1278,"initializationExpression":{"assignments":[1255],"declarations":[{"constant":false,"id":1255,"mutability":"mutable","name":"i","nameLocation":"2381:1:10","nodeType":"VariableDeclaration","scope":1278,"src":"2373:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1257,"initialValue":{"hexValue":"30","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2385:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2373:13:10"},"loopExpression":{"expression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2408:3:10","subExpression":{"id":1262,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"2408:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ExpressionStatement","src":"2408:3:10"},"nodeType":"ForStatement","src":"2368:164:10"},{"assignments":[1283],"declarations":[{"constant":false,"id":1283,"mutability":"mutable","name":"activeTickets","nameLocation":"2559:13:10","nodeType":"VariableDeclaration","scope":1322,"src":"2542:30:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"2542:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1282,"nodeType":"ArrayTypeName","src":"2542:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1289,"initialValue":{"arguments":[{"id":1287,"name":"activeTicketsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"2589:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2575:13:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"2579:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1285,"nodeType":"ArrayTypeName","src":"2579:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2542:67:10"},{"body":{"id":1318,"nodeType":"Block","src":"2665:127:10","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":1302,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2690:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1304,"indexExpression":{"id":1303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2698:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2690:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1301,"name":"Ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2683:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ticket_$2112_$","typeString":"type(contract Ticket)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2702:14:10","memberName":"isTicketActive","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"2683:33:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1317,"nodeType":"IfStatement","src":"2679:103:10","trueBody":{"id":1316,"nodeType":"Block","src":"2720:62:10","statements":[{"expression":{"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1308,"name":"activeTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"2738:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1310,"indexExpression":{"id":1309,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2752:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2738:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1311,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2757:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1313,"indexExpression":{"id":1312,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2765:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2757:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2738:29:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1315,"nodeType":"ExpressionStatement","src":"2738:29:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2640:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1295,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2644:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2652:6:10","memberName":"length","nodeType":"MemberAccess","src":"2644:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2640:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1319,"initializationExpression":{"assignments":[1291],"declarations":[{"constant":false,"id":1291,"mutability":"mutable","name":"i","nameLocation":"2633:1:10","nodeType":"VariableDeclaration","scope":1319,"src":"2625:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1293,"initialValue":{"hexValue":"30","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2637:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2625:13:10"},"loopExpression":{"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2660:3:10","subExpression":{"id":1298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2660:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1300,"nodeType":"ExpressionStatement","src":"2660:3:10"},"nodeType":"ForStatement","src":"2620:172:10"},{"expression":{"id":1320,"name":"activeTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"2809:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1240,"id":1321,"nodeType":"Return","src":"2802:20:10"}]},"functionSelector":"14fa96c8","id":1323,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveTickets","nameLocation":"2173:16:10","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"judgeWallet","nameLocation":"2198:11:10","nodeType":"VariableDeclaration","scope":1323,"src":"2190:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"2190:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2189:21:10"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1323,"src":"2233:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"2233:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1238,"nodeType":"ArrayTypeName","src":"2233:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2232:18:10"},"scope":1324,"src":"2164:665:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1325,"src":"103:2729:10","usedErrors":[]}],"src":"32:2801:10"},"compiler":{"name":"solc","version":"0.8.17+commit.8df45f5f.Emscripten.clang"},"networks":{"5777":{"events":{},"links":{},"address":"0x64f380D8Dc7AE4e1F58f77bba47e7C7303B6b48c","transactionHash":"0x117484d104001407120fdc58d4fec1521a1c04ed7f3754f680c797f37adbd329"}},"schemaVersion":"3.4.10","updatedAt":"2022-11-28T05:49:29.955Z","networkType":"ethereum","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}}');

/***/ }),

/***/ "./build/contracts/Police.json":
/*!*************************************!*\
  !*** ./build/contracts/Police.json ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"Police","abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"station_","type":"string"},{"internalType":"string","name":"rank_","type":"string"},{"internalType":"uint256","name":"badgeNumber_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint16","name":"score_","type":"uint16"}],"name":"updateScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"}],"name":"changeName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"station_","type":"string"}],"name":"changeStation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"rank_","type":"string"}],"name":"changeRank","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"badgeNumber_","type":"uint256"}],"name":"changeBadgeNumber","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStation","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRank","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBadgeNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getScore","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.17+commit.8df45f5f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"name_\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"station_\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"rank_\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"badgeNumber_\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"badgeNumber_\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"changeBadgeNumber\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"name_\\",\\"type\\":\\"string\\"}],\\"name\\":\\"changeName\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"rank_\\",\\"type\\":\\"string\\"}],\\"name\\":\\"changeRank\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"station_\\",\\"type\\":\\"string\\"}],\\"name\\":\\"changeStation\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getBadgeNumber\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getName\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getRank\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getScore\\",\\"outputs\\":[{\\"internalType\\":\\"uint16\\",\\"name\\":\\"\\",\\"type\\":\\"uint16\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getStation\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint16\\",\\"name\\":\\"score_\\",\\"type\\":\\"uint16\\"}],\\"name\\":\\"updateScore\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"author\\":\\"Samin Yaser\\",\\"kind\\":\\"dev\\",\\"methods\\":{},\\"title\\":\\"Police\\",\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"notice\\":\\"Profile of a police officer\\",\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/Police.sol\\":\\"Police\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"project:/contracts/Police.sol\\":{\\"keccak256\\":\\"0xdcb19c00ecc15171a194d20792cfa7964f0bca2abba1b7e115833ecc35e46b94\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://f71bda1b666dc88d54ffd00c6d3c1fb37b65a97f19547857e26f7fb0888e68e8\\",\\"dweb:/ipfs/QmRgXqHpWHYfW1GpHqMDfhhKRNoJj1xSWQ4z1RUV5NFzDZ\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b50604051620010c9380380620010c983398181016040528101906200003791906200024c565b83600090816200004891906200055c565b5082600190816200005a91906200055c565b5081600290816200006c91906200055c565b50806003819055505050505062000643565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e7826200009c565b810181811067ffffffffffffffff82111715620001095762000108620000ad565b5b80604052505050565b60006200011e6200007e565b90506200012c8282620000dc565b919050565b600067ffffffffffffffff8211156200014f576200014e620000ad565b5b6200015a826200009c565b9050602081019050919050565b60005b83811015620001875780820151818401526020810190506200016a565b60008484015250505050565b6000620001aa620001a48462000131565b62000112565b905082815260208101848484011115620001c957620001c862000097565b5b620001d684828562000167565b509392505050565b600082601f830112620001f657620001f562000092565b5b81516200020884826020860162000193565b91505092915050565b6000819050919050565b620002268162000211565b81146200023257600080fd5b50565b60008151905062000246816200021b565b92915050565b6000806000806080858703121562000269576200026862000088565b5b600085015167ffffffffffffffff8111156200028a57620002896200008d565b5b6200029887828801620001de565b945050602085015167ffffffffffffffff811115620002bc57620002bb6200008d565b5b620002ca87828801620001de565b935050604085015167ffffffffffffffff811115620002ee57620002ed6200008d565b5b620002fc87828801620001de565b92505060606200030f8782880162000235565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200036e57607f821691505b60208210810362000384576200038362000326565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003ee7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003af565b620003fa8683620003af565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200043d62000437620004318462000211565b62000412565b62000211565b9050919050565b6000819050919050565b62000459836200041c565b62000471620004688262000444565b848454620003bc565b825550505050565b600090565b6200048862000479565b620004958184846200044e565b505050565b5b81811015620004bd57620004b16000826200047e565b6001810190506200049b565b5050565b601f8211156200050c57620004d6816200038a565b620004e1846200039f565b81016020851015620004f1578190505b6200050962000500856200039f565b8301826200049a565b50505b505050565b600082821c905092915050565b6000620005316000198460080262000511565b1980831691505092915050565b60006200054c83836200051e565b9150826002028217905092915050565b62000567826200031b565b67ffffffffffffffff811115620005835762000582620000ad565b5b6200058f825462000355565b6200059c828285620004c1565b600060209050601f831160018114620005d45760008415620005bf578287015190505b620005cb85826200053e565b8655506200063b565b601f198416620005e4866200038a565b60005b828110156200060e57848901518255600182019150602085019450602081019050620005e7565b868310156200062e57848901516200062a601f8916826200051e565b8355505b6001600288020188555050505b505050505050565b610a7680620006536000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637c8013ea116100665780637c8013ea146101335780639469ae0414610151578063afd820671461016d578063ba005a8b1461018b578063d303e7b2146101a75761009e565b806317d7de7c146100a357806317fd2967146100c15780631f89362d146100dd578063497b7f80146100fb5780635353a2d814610117575b600080fd5b6100ab6101c5565b6040516100b89190610490565b60405180910390f35b6100db60048036038101906100d69190610500565b610257565b005b6100e5610277565b6040516100f29190610546565b60405180910390f35b61011560048036038101906101109190610696565b610281565b005b610131600480360381019061012c9190610696565b610294565b005b61013b6102a7565b6040516101489190610490565b60405180910390f35b61016b6004803603810190610166919061070b565b610339565b005b610175610343565b6040516101829190610747565b60405180910390f35b6101a560048036038101906101a09190610696565b61035b565b005b6101af61036e565b6040516101bc9190610490565b60405180910390f35b6060600080546101d490610791565b80601f016020809104026020016040519081016040528092919081815260200182805461020090610791565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050905090565b80600460006101000a81548161ffff021916908361ffff16021790555050565b6000600354905090565b8060029081610290919061096e565b5050565b80600090816102a3919061096e565b5050565b6060600180546102b690610791565b80601f01602080910402602001604051908101604052809291908181526020018280546102e290610791565b801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b5050505050905090565b8060038190555050565b6000600460009054906101000a900461ffff16905090565b806001908161036a919061096e565b5050565b60606002805461037d90610791565b80601f01602080910402602001604051908101604052809291908181526020018280546103a990610791565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561043a57808201518184015260208101905061041f565b60008484015250505050565b6000601f19601f8301169050919050565b600061046282610400565b61046c818561040b565b935061047c81856020860161041c565b61048581610446565b840191505092915050565b600060208201905081810360008301526104aa8184610457565b905092915050565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6104dd816104c6565b81146104e857600080fd5b50565b6000813590506104fa816104d4565b92915050565b600060208284031215610516576105156104bc565b5b6000610524848285016104eb565b91505092915050565b6000819050919050565b6105408161052d565b82525050565b600060208201905061055b6000830184610537565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105a382610446565b810181811067ffffffffffffffff821117156105c2576105c161056b565b5b80604052505050565b60006105d56104b2565b90506105e1828261059a565b919050565b600067ffffffffffffffff8211156106015761060061056b565b5b61060a82610446565b9050602081019050919050565b82818337600083830152505050565b6000610639610634846105e6565b6105cb565b90508281526020810184848401111561065557610654610566565b5b610660848285610617565b509392505050565b600082601f83011261067d5761067c610561565b5b813561068d848260208601610626565b91505092915050565b6000602082840312156106ac576106ab6104bc565b5b600082013567ffffffffffffffff8111156106ca576106c96104c1565b5b6106d684828501610668565b91505092915050565b6106e88161052d565b81146106f357600080fd5b50565b600081359050610705816106df565b92915050565b600060208284031215610721576107206104bc565b5b600061072f848285016106f6565b91505092915050565b610741816104c6565b82525050565b600060208201905061075c6000830184610738565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107a957607f821691505b6020821081036107bc576107bb610762565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107e7565b61082e86836107e7565b95508019841693508086168417925050509392505050565b6000819050919050565b600061086b6108666108618461052d565b610846565b61052d565b9050919050565b6000819050919050565b61088583610850565b61089961089182610872565b8484546107f4565b825550505050565b600090565b6108ae6108a1565b6108b981848461087c565b505050565b5b818110156108dd576108d26000826108a6565b6001810190506108bf565b5050565b601f821115610922576108f3816107c2565b6108fc846107d7565b8101602085101561090b578190505b61091f610917856107d7565b8301826108be565b50505b505050565b600082821c905092915050565b600061094560001984600802610927565b1980831691505092915050565b600061095e8383610934565b9150826002028217905092915050565b61097782610400565b67ffffffffffffffff8111156109905761098f61056b565b5b61099a8254610791565b6109a58282856108e1565b600060209050601f8311600181146109d857600084156109c6578287015190505b6109d08582610952565b865550610a38565b601f1984166109e6866107c2565b60005b82811015610a0e578489015182556001820191506020850194506020810190506109e9565b86831015610a2b5784890151610a27601f891682610934565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220e7d5dc4d44a12764801d89e3bdf6a1059213b9cedb737bb08009aea129d40ded64736f6c63430008110033","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80637c8013ea116100665780637c8013ea146101335780639469ae0414610151578063afd820671461016d578063ba005a8b1461018b578063d303e7b2146101a75761009e565b806317d7de7c146100a357806317fd2967146100c15780631f89362d146100dd578063497b7f80146100fb5780635353a2d814610117575b600080fd5b6100ab6101c5565b6040516100b89190610490565b60405180910390f35b6100db60048036038101906100d69190610500565b610257565b005b6100e5610277565b6040516100f29190610546565b60405180910390f35b61011560048036038101906101109190610696565b610281565b005b610131600480360381019061012c9190610696565b610294565b005b61013b6102a7565b6040516101489190610490565b60405180910390f35b61016b6004803603810190610166919061070b565b610339565b005b610175610343565b6040516101829190610747565b60405180910390f35b6101a560048036038101906101a09190610696565b61035b565b005b6101af61036e565b6040516101bc9190610490565b60405180910390f35b6060600080546101d490610791565b80601f016020809104026020016040519081016040528092919081815260200182805461020090610791565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050905090565b80600460006101000a81548161ffff021916908361ffff16021790555050565b6000600354905090565b8060029081610290919061096e565b5050565b80600090816102a3919061096e565b5050565b6060600180546102b690610791565b80601f01602080910402602001604051908101604052809291908181526020018280546102e290610791565b801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b5050505050905090565b8060038190555050565b6000600460009054906101000a900461ffff16905090565b806001908161036a919061096e565b5050565b60606002805461037d90610791565b80601f01602080910402602001604051908101604052809291908181526020018280546103a990610791565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561043a57808201518184015260208101905061041f565b60008484015250505050565b6000601f19601f8301169050919050565b600061046282610400565b61046c818561040b565b935061047c81856020860161041c565b61048581610446565b840191505092915050565b600060208201905081810360008301526104aa8184610457565b905092915050565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6104dd816104c6565b81146104e857600080fd5b50565b6000813590506104fa816104d4565b92915050565b600060208284031215610516576105156104bc565b5b6000610524848285016104eb565b91505092915050565b6000819050919050565b6105408161052d565b82525050565b600060208201905061055b6000830184610537565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105a382610446565b810181811067ffffffffffffffff821117156105c2576105c161056b565b5b80604052505050565b60006105d56104b2565b90506105e1828261059a565b919050565b600067ffffffffffffffff8211156106015761060061056b565b5b61060a82610446565b9050602081019050919050565b82818337600083830152505050565b6000610639610634846105e6565b6105cb565b90508281526020810184848401111561065557610654610566565b5b610660848285610617565b509392505050565b600082601f83011261067d5761067c610561565b5b813561068d848260208601610626565b91505092915050565b6000602082840312156106ac576106ab6104bc565b5b600082013567ffffffffffffffff8111156106ca576106c96104c1565b5b6106d684828501610668565b91505092915050565b6106e88161052d565b81146106f357600080fd5b50565b600081359050610705816106df565b92915050565b600060208284031215610721576107206104bc565b5b600061072f848285016106f6565b91505092915050565b610741816104c6565b82525050565b600060208201905061075c6000830184610738565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107a957607f821691505b6020821081036107bc576107bb610762565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107e7565b61082e86836107e7565b95508019841693508086168417925050509392505050565b6000819050919050565b600061086b6108666108618461052d565b610846565b61052d565b9050919050565b6000819050919050565b61088583610850565b61089961089182610872565b8484546107f4565b825550505050565b600090565b6108ae6108a1565b6108b981848461087c565b505050565b5b818110156108dd576108d26000826108a6565b6001810190506108bf565b5050565b601f821115610922576108f3816107c2565b6108fc846107d7565b8101602085101561090b578190505b61091f610917856107d7565b8301826108be565b50505b505050565b600082821c905092915050565b600061094560001984600802610927565b1980831691505092915050565b600061095e8383610934565b9150826002028217905092915050565b61097782610400565b67ffffffffffffffff8111156109905761098f61056b565b5b61099a8254610791565b6109a58282856108e1565b600060209050601f8311600181146109d857600084156109c6578287015190505b6109d08582610952565b865550610a38565b601f1984166109e6866107c2565b60005b82811015610a0e578489015182556001820191506020850194506020810190506109e9565b86831015610a2b5784890151610a27601f891682610934565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220e7d5dc4d44a12764801d89e3bdf6a1059213b9cedb737bb08009aea129d40ded64736f6c63430008110033","immutableReferences":{},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9337:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"423:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:12:17"},"nodeType":"YulExpressionStatement","src":"433:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:17"},{"body":{"nodeType":"YulBlock","src":"546:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:17"},"nodeType":"YulFunctionCall","src":"556:12:17"},"nodeType":"YulExpressionStatement","src":"556:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:17"},{"body":{"nodeType":"YulBlock","src":"628:54:17","statements":[{"nodeType":"YulAssignment","src":"638:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:17"},"nodeType":"YulFunctionCall","src":"652:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:17"},"nodeType":"YulFunctionCall","src":"648:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:17","type":""}],"src":"580:102:17"},{"body":{"nodeType":"YulBlock","src":"716:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:17"},"nodeType":"YulFunctionCall","src":"726:88:17"},"nodeType":"YulExpressionStatement","src":"726:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:17"},"nodeType":"YulFunctionCall","src":"823:15:17"},"nodeType":"YulExpressionStatement","src":"823:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:17"},"nodeType":"YulFunctionCall","src":"847:15:17"},"nodeType":"YulExpressionStatement","src":"847:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:17"},{"body":{"nodeType":"YulBlock","src":"917:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:17"},"nodeType":"YulFunctionCall","src":"957:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:17"},"nodeType":"YulFunctionCall","src":"945:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:17"},"nodeType":"YulFunctionCall","src":"1098:18:17"},"nodeType":"YulExpressionStatement","src":"1098:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:17"},"nodeType":"YulFunctionCall","src":"1036:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:17"},"nodeType":"YulFunctionCall","src":"1072:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:17"},"nodeType":"YulFunctionCall","src":"1033:62:17"},"nodeType":"YulIf","src":"1030:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:17"},"nodeType":"YulFunctionCall","src":"1127:22:17"},"nodeType":"YulExpressionStatement","src":"1127:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:17","type":""}],"src":"874:281:17"},{"body":{"nodeType":"YulBlock","src":"1202:88:17","statements":[{"nodeType":"YulAssignment","src":"1212:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:17"},"nodeType":"YulFunctionCall","src":"1222:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:17"},"nodeType":"YulFunctionCall","src":"1251:33:17"},"nodeType":"YulExpressionStatement","src":"1251:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:17","type":""}],"src":"1161:129:17"},{"body":{"nodeType":"YulBlock","src":"1363:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:17"},"nodeType":"YulFunctionCall","src":"1470:18:17"},"nodeType":"YulExpressionStatement","src":"1470:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:17"},"nodeType":"YulFunctionCall","src":"1437:30:17"},"nodeType":"YulIf","src":"1434:56:17"},{"nodeType":"YulAssignment","src":"1500:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:17"},"nodeType":"YulFunctionCall","src":"1508:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:17"}]},{"nodeType":"YulAssignment","src":"1574:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:17"},"nodeType":"YulFunctionCall","src":"1582:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:17","type":""}],"src":"1296:308:17"},{"body":{"nodeType":"YulBlock","src":"1672:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:17"},"nodeType":"YulFunctionCall","src":"1772:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:17"},"nodeType":"YulFunctionCall","src":"1791:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:17"},"nodeType":"YulFunctionCall","src":"1785:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:17"},"nodeType":"YulFunctionCall","src":"1765:39:17"},"nodeType":"YulExpressionStatement","src":"1765:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:17"},"nodeType":"YulFunctionCall","src":"1709:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:17","statements":[{"nodeType":"YulAssignment","src":"1725:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:17"},"nodeType":"YulFunctionCall","src":"1730:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:17","statements":[]},"src":"1701:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:17"},"nodeType":"YulFunctionCall","src":"1830:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:17"},"nodeType":"YulFunctionCall","src":"1823:27:17"},"nodeType":"YulExpressionStatement","src":"1823:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:17","type":""}],"src":"1610:246:17"},{"body":{"nodeType":"YulBlock","src":"1957:339:17","statements":[{"nodeType":"YulAssignment","src":"1967:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:17"},"nodeType":"YulFunctionCall","src":"1992:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:17"},"nodeType":"YulFunctionCall","src":"1976:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:17"},"nodeType":"YulFunctionCall","src":"2051:21:17"},"nodeType":"YulExpressionStatement","src":"2051:21:17"},{"nodeType":"YulVariableDeclaration","src":"2081:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:17"},"nodeType":"YulFunctionCall","src":"2092:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:17"},"nodeType":"YulFunctionCall","src":"2148:79:17"},"nodeType":"YulExpressionStatement","src":"2148:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:17"},"nodeType":"YulFunctionCall","src":"2123:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:17"},"nodeType":"YulFunctionCall","src":"2120:25:17"},"nodeType":"YulIf","src":"2117:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:17"},"nodeType":"YulFunctionCall","src":"2238:52:17"},"nodeType":"YulExpressionStatement","src":"2238:52:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:17","type":""}],"src":"1862:434:17"},{"body":{"nodeType":"YulBlock","src":"2389:282:17","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:17"},"nodeType":"YulFunctionCall","src":"2440:79:17"},"nodeType":"YulExpressionStatement","src":"2440:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:17"},"nodeType":"YulFunctionCall","src":"2413:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:17"},"nodeType":"YulFunctionCall","src":"2409:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:17"},"nodeType":"YulFunctionCall","src":"2402:35:17"},"nodeType":"YulIf","src":"2399:122:17"},{"nodeType":"YulVariableDeclaration","src":"2530:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:17"},"nodeType":"YulFunctionCall","src":"2544:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:17"},"nodeType":"YulFunctionCall","src":"2634:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:17"},"nodeType":"YulFunctionCall","src":"2575:90:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:17","type":""}],"src":"2316:355:17"},{"body":{"nodeType":"YulBlock","src":"2722:32:17","statements":[{"nodeType":"YulAssignment","src":"2732:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2743:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2732:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2704:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2714:7:17","type":""}],"src":"2677:77:17"},{"body":{"nodeType":"YulBlock","src":"2803:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2860:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2869:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2872:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2862:6:17"},"nodeType":"YulFunctionCall","src":"2862:12:17"},"nodeType":"YulExpressionStatement","src":"2862:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2826:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2851:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2833:17:17"},"nodeType":"YulFunctionCall","src":"2833:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2823:2:17"},"nodeType":"YulFunctionCall","src":"2823:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2816:6:17"},"nodeType":"YulFunctionCall","src":"2816:43:17"},"nodeType":"YulIf","src":"2813:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2796:5:17","type":""}],"src":"2760:122:17"},{"body":{"nodeType":"YulBlock","src":"2951:80:17","statements":[{"nodeType":"YulAssignment","src":"2961:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2976:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2970:5:17"},"nodeType":"YulFunctionCall","src":"2970:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2961:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3019:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2992:26:17"},"nodeType":"YulFunctionCall","src":"2992:33:17"},"nodeType":"YulExpressionStatement","src":"2992:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2929:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2937:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2945:5:17","type":""}],"src":"2888:143:17"},{"body":{"nodeType":"YulBlock","src":"3195:1181:17","statements":[{"body":{"nodeType":"YulBlock","src":"3242:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3244:77:17"},"nodeType":"YulFunctionCall","src":"3244:79:17"},"nodeType":"YulExpressionStatement","src":"3244:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3216:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3225:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3212:3:17"},"nodeType":"YulFunctionCall","src":"3212:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3237:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3208:3:17"},"nodeType":"YulFunctionCall","src":"3208:33:17"},"nodeType":"YulIf","src":"3205:120:17"},{"nodeType":"YulBlock","src":"3335:291:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3350:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3374:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3385:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3370:3:17"},"nodeType":"YulFunctionCall","src":"3370:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3364:5:17"},"nodeType":"YulFunctionCall","src":"3364:24:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3354:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3435:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3437:77:17"},"nodeType":"YulFunctionCall","src":"3437:79:17"},"nodeType":"YulExpressionStatement","src":"3437:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3407:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3415:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3404:2:17"},"nodeType":"YulFunctionCall","src":"3404:30:17"},"nodeType":"YulIf","src":"3401:117:17"},{"nodeType":"YulAssignment","src":"3532:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3588:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3599:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3584:3:17"},"nodeType":"YulFunctionCall","src":"3584:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3608:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3542:41:17"},"nodeType":"YulFunctionCall","src":"3542:74:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3532:6:17"}]}]},{"nodeType":"YulBlock","src":"3636:292:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3651:39:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3675:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3686:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3671:3:17"},"nodeType":"YulFunctionCall","src":"3671:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3665:5:17"},"nodeType":"YulFunctionCall","src":"3665:25:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3655:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3737:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3739:77:17"},"nodeType":"YulFunctionCall","src":"3739:79:17"},"nodeType":"YulExpressionStatement","src":"3739:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3709:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3717:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3706:2:17"},"nodeType":"YulFunctionCall","src":"3706:30:17"},"nodeType":"YulIf","src":"3703:117:17"},{"nodeType":"YulAssignment","src":"3834:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3890:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3901:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3886:3:17"},"nodeType":"YulFunctionCall","src":"3886:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3910:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3844:41:17"},"nodeType":"YulFunctionCall","src":"3844:74:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3834:6:17"}]}]},{"nodeType":"YulBlock","src":"3938:292:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3953:39:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3977:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3973:3:17"},"nodeType":"YulFunctionCall","src":"3973:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3967:5:17"},"nodeType":"YulFunctionCall","src":"3967:25:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3957:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4039:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4041:77:17"},"nodeType":"YulFunctionCall","src":"4041:79:17"},"nodeType":"YulExpressionStatement","src":"4041:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4011:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4019:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4008:2:17"},"nodeType":"YulFunctionCall","src":"4008:30:17"},"nodeType":"YulIf","src":"4005:117:17"},{"nodeType":"YulAssignment","src":"4136:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4192:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4203:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4188:3:17"},"nodeType":"YulFunctionCall","src":"4188:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4212:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4146:41:17"},"nodeType":"YulFunctionCall","src":"4146:74:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4136:6:17"}]}]},{"nodeType":"YulBlock","src":"4240:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4255:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4269:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4259:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4285:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4331:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4342:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4327:3:17"},"nodeType":"YulFunctionCall","src":"4327:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4351:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4295:31:17"},"nodeType":"YulFunctionCall","src":"4295:64:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4285:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3141:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3152:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3164:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3172:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3180:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3188:6:17","type":""}],"src":"3037:1339:17"},{"body":{"nodeType":"YulBlock","src":"4441:40:17","statements":[{"nodeType":"YulAssignment","src":"4452:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4468:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4462:5:17"},"nodeType":"YulFunctionCall","src":"4462:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4452:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4424:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4434:6:17","type":""}],"src":"4382:99:17"},{"body":{"nodeType":"YulBlock","src":"4515:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4532:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4535:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4525:6:17"},"nodeType":"YulFunctionCall","src":"4525:88:17"},"nodeType":"YulExpressionStatement","src":"4525:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4629:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4632:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4622:6:17"},"nodeType":"YulFunctionCall","src":"4622:15:17"},"nodeType":"YulExpressionStatement","src":"4622:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4653:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4656:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4646:6:17"},"nodeType":"YulFunctionCall","src":"4646:15:17"},"nodeType":"YulExpressionStatement","src":"4646:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4487:180:17"},{"body":{"nodeType":"YulBlock","src":"4724:269:17","statements":[{"nodeType":"YulAssignment","src":"4734:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4748:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"4754:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4744:3:17"},"nodeType":"YulFunctionCall","src":"4744:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4734:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"4765:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4795:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"4801:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4791:3:17"},"nodeType":"YulFunctionCall","src":"4791:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4769:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4842:51:17","statements":[{"nodeType":"YulAssignment","src":"4856:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4870:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4878:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4866:3:17"},"nodeType":"YulFunctionCall","src":"4866:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4856:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4822:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4815:6:17"},"nodeType":"YulFunctionCall","src":"4815:26:17"},"nodeType":"YulIf","src":"4812:81:17"},{"body":{"nodeType":"YulBlock","src":"4945:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4959:16:17"},"nodeType":"YulFunctionCall","src":"4959:18:17"},"nodeType":"YulExpressionStatement","src":"4959:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4909:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4932:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4940:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4929:2:17"},"nodeType":"YulFunctionCall","src":"4929:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4906:2:17"},"nodeType":"YulFunctionCall","src":"4906:38:17"},"nodeType":"YulIf","src":"4903:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4708:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4717:6:17","type":""}],"src":"4673:320:17"},{"body":{"nodeType":"YulBlock","src":"5053:87:17","statements":[{"nodeType":"YulAssignment","src":"5063:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5071:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5063:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5091:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"5094:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5084:6:17"},"nodeType":"YulFunctionCall","src":"5084:14:17"},"nodeType":"YulExpressionStatement","src":"5084:14:17"},{"nodeType":"YulAssignment","src":"5107:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5125:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5128:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5115:9:17"},"nodeType":"YulFunctionCall","src":"5115:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5107:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5040:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5048:4:17","type":""}],"src":"4999:141:17"},{"body":{"nodeType":"YulBlock","src":"5190:49:17","statements":[{"nodeType":"YulAssignment","src":"5200:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5218:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5225:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5214:3:17"},"nodeType":"YulFunctionCall","src":"5214:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"5230:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5210:3:17"},"nodeType":"YulFunctionCall","src":"5210:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5200:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5173:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5183:6:17","type":""}],"src":"5146:93:17"},{"body":{"nodeType":"YulBlock","src":"5298:54:17","statements":[{"nodeType":"YulAssignment","src":"5308:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5333:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"5339:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5329:3:17"},"nodeType":"YulFunctionCall","src":"5329:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5308:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5273:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"5279:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5289:8:17","type":""}],"src":"5245:107:17"},{"body":{"nodeType":"YulBlock","src":"5434:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5444:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"5465:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"5477:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5461:3:17"},"nodeType":"YulFunctionCall","src":"5461:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"5448:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5488:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5519:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5530:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5500:18:17"},"nodeType":"YulFunctionCall","src":"5500:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5492:4:17","type":""}]},{"nodeType":"YulAssignment","src":"5606:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5637:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5648:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5618:18:17"},"nodeType":"YulFunctionCall","src":"5618:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5606:8:17"}]},{"nodeType":"YulAssignment","src":"5666:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5679:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5690:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5686:3:17"},"nodeType":"YulFunctionCall","src":"5686:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5675:3:17"},"nodeType":"YulFunctionCall","src":"5675:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5666:5:17"}]},{"nodeType":"YulAssignment","src":"5705:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5718:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5729:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"5739:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5725:3:17"},"nodeType":"YulFunctionCall","src":"5725:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5715:2:17"},"nodeType":"YulFunctionCall","src":"5715:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5705:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5395:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"5402:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"5414:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5427:6:17","type":""}],"src":"5358:393:17"},{"body":{"nodeType":"YulBlock","src":"5789:28:17","statements":[{"nodeType":"YulAssignment","src":"5799:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5806:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5799:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5775:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5785:3:17","type":""}],"src":"5757:60:17"},{"body":{"nodeType":"YulBlock","src":"5883:82:17","statements":[{"nodeType":"YulAssignment","src":"5893:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5951:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5933:17:17"},"nodeType":"YulFunctionCall","src":"5933:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5924:8:17"},"nodeType":"YulFunctionCall","src":"5924:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5906:17:17"},"nodeType":"YulFunctionCall","src":"5906:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5893:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5863:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5873:9:17","type":""}],"src":"5823:142:17"},{"body":{"nodeType":"YulBlock","src":"6018:28:17","statements":[{"nodeType":"YulAssignment","src":"6028:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"6035:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6028:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6004:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6014:3:17","type":""}],"src":"5971:75:17"},{"body":{"nodeType":"YulBlock","src":"6128:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6138:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"6193:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6162:30:17"},"nodeType":"YulFunctionCall","src":"6162:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"6142:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6217:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6257:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6251:5:17"},"nodeType":"YulFunctionCall","src":"6251:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6264:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"6296:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"6272:23:17"},"nodeType":"YulFunctionCall","src":"6272:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"6223:27:17"},"nodeType":"YulFunctionCall","src":"6223:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6210:6:17"},"nodeType":"YulFunctionCall","src":"6210:105:17"},"nodeType":"YulExpressionStatement","src":"6210:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6105:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6111:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"6119:7:17","type":""}],"src":"6052:269:17"},{"body":{"nodeType":"YulBlock","src":"6376:24:17","statements":[{"nodeType":"YulAssignment","src":"6386:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6393:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6386:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6372:3:17","type":""}],"src":"6327:73:17"},{"body":{"nodeType":"YulBlock","src":"6459:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6469:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6483:30:17"},"nodeType":"YulFunctionCall","src":"6483:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6473:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6568:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6574:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6582:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6524:43:17"},"nodeType":"YulFunctionCall","src":"6524:65:17"},"nodeType":"YulExpressionStatement","src":"6524:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6445:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6451:6:17","type":""}],"src":"6406:189:17"},{"body":{"nodeType":"YulBlock","src":"6651:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"6718:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6762:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6769:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6732:29:17"},"nodeType":"YulFunctionCall","src":"6732:39:17"},"nodeType":"YulExpressionStatement","src":"6732:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6671:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"6678:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6668:2:17"},"nodeType":"YulFunctionCall","src":"6668:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6683:26:17","statements":[{"nodeType":"YulAssignment","src":"6685:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6698:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6705:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6694:3:17"},"nodeType":"YulFunctionCall","src":"6694:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6685:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"6665:2:17","statements":[]},"src":"6661:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6639:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6646:3:17","type":""}],"src":"6601:186:17"},{"body":{"nodeType":"YulBlock","src":"6872:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"6898:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6912:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6960:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6928:31:17"},"nodeType":"YulFunctionCall","src":"6928:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6916:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6979:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7002:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7030:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7012:17:17"},"nodeType":"YulFunctionCall","src":"7012:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6998:3:17"},"nodeType":"YulFunctionCall","src":"6998:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6983:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7199:27:17","statements":[{"nodeType":"YulAssignment","src":"7201:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"7216:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7201:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7183:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"7195:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7180:2:17"},"nodeType":"YulFunctionCall","src":"7180:18:17"},"nodeType":"YulIf","src":"7177:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7268:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7285:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7313:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7295:17:17"},"nodeType":"YulFunctionCall","src":"7295:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7281:3:17"},"nodeType":"YulFunctionCall","src":"7281:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"7239:28:17"},"nodeType":"YulFunctionCall","src":"7239:80:17"},"nodeType":"YulExpressionStatement","src":"7239:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6889:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6894:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6886:2:17"},"nodeType":"YulFunctionCall","src":"6886:11:17"},"nodeType":"YulIf","src":"6883:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6848:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"6855:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6860:10:17","type":""}],"src":"6793:543:17"},{"body":{"nodeType":"YulBlock","src":"7405:54:17","statements":[{"nodeType":"YulAssignment","src":"7415:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7440:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"7446:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7436:3:17"},"nodeType":"YulFunctionCall","src":"7436:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7415:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7380:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"7386:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7396:8:17","type":""}],"src":"7342:117:17"},{"body":{"nodeType":"YulBlock","src":"7516:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7526:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7575:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7578:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7571:3:17"},"nodeType":"YulFunctionCall","src":"7571:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7590:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7586:3:17"},"nodeType":"YulFunctionCall","src":"7586:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7542:28:17"},"nodeType":"YulFunctionCall","src":"7542:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7538:3:17"},"nodeType":"YulFunctionCall","src":"7538:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7530:4:17","type":""}]},{"nodeType":"YulAssignment","src":"7603:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7617:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"7623:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7613:3:17"},"nodeType":"YulFunctionCall","src":"7613:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7603:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7493:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7499:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7509:6:17","type":""}],"src":"7465:169:17"},{"body":{"nodeType":"YulBlock","src":"7720:214:17","statements":[{"nodeType":"YulAssignment","src":"7853:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7880:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"7886:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7861:18:17"},"nodeType":"YulFunctionCall","src":"7861:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7853:4:17"}]},{"nodeType":"YulAssignment","src":"7899:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7910:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7920:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7923:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7916:3:17"},"nodeType":"YulFunctionCall","src":"7916:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7907:2:17"},"nodeType":"YulFunctionCall","src":"7907:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7899:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7701:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"7707:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7715:4:17","type":""}],"src":"7639:295:17"},{"body":{"nodeType":"YulBlock","src":"8031:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8042:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8089:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8056:32:17"},"nodeType":"YulFunctionCall","src":"8056:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"8046:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8178:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8180:16:17"},"nodeType":"YulFunctionCall","src":"8180:18:17"},"nodeType":"YulExpressionStatement","src":"8180:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8150:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8158:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8147:2:17"},"nodeType":"YulFunctionCall","src":"8147:30:17"},"nodeType":"YulIf","src":"8144:56:17"},{"nodeType":"YulVariableDeclaration","src":"8210:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8256:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8250:5:17"},"nodeType":"YulFunctionCall","src":"8250:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8224:25:17"},"nodeType":"YulFunctionCall","src":"8224:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"8214:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8355:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"8361:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8369:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"8309:45:17"},"nodeType":"YulFunctionCall","src":"8309:67:17"},"nodeType":"YulExpressionStatement","src":"8309:67:17"},{"nodeType":"YulVariableDeclaration","src":"8386:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8403:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8390:9:17","type":""}]},{"nodeType":"YulAssignment","src":"8414:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8427:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8414:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8478:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8492:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8511:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8523:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8519:3:17"},"nodeType":"YulFunctionCall","src":"8519:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8507:3:17"},"nodeType":"YulFunctionCall","src":"8507:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8496:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8543:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8589:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8557:31:17"},"nodeType":"YulFunctionCall","src":"8557:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8547:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8607:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8616:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8611:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8675:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8700:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8718:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8723:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8714:3:17"},"nodeType":"YulFunctionCall","src":"8714:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8708:5:17"},"nodeType":"YulFunctionCall","src":"8708:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8693:6:17"},"nodeType":"YulFunctionCall","src":"8693:42:17"},"nodeType":"YulExpressionStatement","src":"8693:42:17"},{"nodeType":"YulAssignment","src":"8752:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8766:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8774:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8762:3:17"},"nodeType":"YulFunctionCall","src":"8762:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8752:6:17"}]},{"nodeType":"YulAssignment","src":"8793:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8810:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8821:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8806:3:17"},"nodeType":"YulFunctionCall","src":"8806:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8793:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8641:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8644:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8638:2:17"},"nodeType":"YulFunctionCall","src":"8638:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8653:21:17","statements":[{"nodeType":"YulAssignment","src":"8655:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8664:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"8667:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8660:3:17"},"nodeType":"YulFunctionCall","src":"8660:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8655:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"8634:3:17","statements":[]},"src":"8630:208:17"},{"body":{"nodeType":"YulBlock","src":"8874:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8892:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8919:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8924:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8915:3:17"},"nodeType":"YulFunctionCall","src":"8915:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8909:5:17"},"nodeType":"YulFunctionCall","src":"8909:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8896:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8959:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8986:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9001:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9009:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8997:3:17"},"nodeType":"YulFunctionCall","src":"8997:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8967:18:17"},"nodeType":"YulFunctionCall","src":"8967:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8952:6:17"},"nodeType":"YulFunctionCall","src":"8952:64:17"},"nodeType":"YulExpressionStatement","src":"8952:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8857:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"8866:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8854:2:17"},"nodeType":"YulFunctionCall","src":"8854:19:17"},"nodeType":"YulIf","src":"8851:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9050:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9064:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9072:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9060:3:17"},"nodeType":"YulFunctionCall","src":"9060:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"9076:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9056:3:17"},"nodeType":"YulFunctionCall","src":"9056:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9043:6:17"},"nodeType":"YulFunctionCall","src":"9043:36:17"},"nodeType":"YulExpressionStatement","src":"9043:36:17"}]},"nodeType":"YulCase","src":"8471:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8476:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9106:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9120:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9133:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9124:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9157:67:17","statements":[{"nodeType":"YulAssignment","src":"9175:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9194:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9199:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9190:3:17"},"nodeType":"YulFunctionCall","src":"9190:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9184:5:17"},"nodeType":"YulFunctionCall","src":"9184:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9175:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"9150:6:17"},"nodeType":"YulIf","src":"9147:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9244:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9303:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"9310:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9250:52:17"},"nodeType":"YulFunctionCall","src":"9250:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9237:6:17"},"nodeType":"YulFunctionCall","src":"9237:81:17"},"nodeType":"YulExpressionStatement","src":"9237:81:17"}]},"nodeType":"YulCase","src":"9098:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8451:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8459:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8448:2:17"},"nodeType":"YulFunctionCall","src":"8448:14:17"},"nodeType":"YulSwitch","src":"8441:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8020:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"8026:3:17","type":""}],"src":"7939:1395:17"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_memory_to_memory_with_cleanup(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := mload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function validator_revert_t_uint256(value) {\\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\\n        value := mload(offset)\\n        validator_revert_t_uint256(value)\\n    }\\n\\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := mload(add(headStart, 0))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := mload(add(headStart, 32))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := mload(add(headStart, 64))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 96\\n\\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function panic_error_0x22() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x22)\\n        revert(0, 0x24)\\n    }\\n\\n    function extract_byte_array_length(data) -> length {\\n        length := div(data, 2)\\n        let outOfPlaceEncoding := and(data, 1)\\n        if iszero(outOfPlaceEncoding) {\\n            length := and(length, 0x7f)\\n        }\\n\\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\\n            panic_error_0x22()\\n        }\\n    }\\n\\n    function array_dataslot_t_string_storage(ptr) -> data {\\n        data := ptr\\n\\n        mstore(0, ptr)\\n        data := keccak256(0, 0x20)\\n\\n    }\\n\\n    function divide_by_32_ceil(value) -> result {\\n        result := div(add(value, 31), 32)\\n    }\\n\\n    function shift_left_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shl(bits, value)\\n\\n    }\\n\\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\\n        let shiftBits := mul(shiftBytes, 8)\\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\\n        value := and(value, not(mask))\\n        result := or(value, and(toInsert, mask))\\n    }\\n\\n    function identity(value) -> ret {\\n        ret := value\\n    }\\n\\n    function convert_t_uint256_to_t_uint256(value) -> converted {\\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\\n    }\\n\\n    function prepare_store_t_uint256(value) -> ret {\\n        ret := value\\n    }\\n\\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\\n    }\\n\\n    function zero_value_for_split_t_uint256() -> ret {\\n        ret := 0\\n    }\\n\\n    function storage_set_to_zero_t_uint256(slot, offset) {\\n        let zero_0 := zero_value_for_split_t_uint256()\\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\\n    }\\n\\n    function clear_storage_range_t_bytes1(start, end) {\\n        for {} lt(start, end) { start := add(start, 1) }\\n        {\\n            storage_set_to_zero_t_uint256(start, 0)\\n        }\\n    }\\n\\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\\n\\n        if gt(len, 31) {\\n            let dataArea := array_dataslot_t_string_storage(array)\\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\\n            if lt(startIndex, 32) { deleteStart := dataArea }\\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\\n        }\\n\\n    }\\n\\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shr(bits, value)\\n\\n    }\\n\\n    function mask_bytes_dynamic(data, bytes) -> result {\\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\\n        result := and(data, mask)\\n    }\\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\\n        // we want to save only elements that are part of the array after resizing\\n        // others should be set to zero\\n        data := mask_bytes_dynamic(data, len)\\n        used := or(data, mul(2, len))\\n    }\\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\\n\\n        let newLen := array_length_t_string_memory_ptr(src)\\n        // Make sure array length is sane\\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        let oldLen := extract_byte_array_length(sload(slot))\\n\\n        // potentially truncate data\\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\\n\\n        let srcOffset := 0\\n\\n        srcOffset := 0x20\\n\\n        switch gt(newLen, 31)\\n        case 1 {\\n            let loopEnd := and(newLen, not(0x1f))\\n\\n            let dstPtr := array_dataslot_t_string_storage(slot)\\n            let i := 0\\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\\n                sstore(dstPtr, mload(add(src, srcOffset)))\\n                dstPtr := add(dstPtr, 1)\\n                srcOffset := add(srcOffset, 32)\\n            }\\n            if lt(loopEnd, newLen) {\\n                let lastValue := mload(add(src, srcOffset))\\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\\n            }\\n            sstore(slot, add(mul(newLen, 2), 1))\\n        }\\n        default {\\n            let value := 0\\n            if newLen {\\n                value := mload(add(src, srcOffset))\\n            }\\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\\n        }\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"deployedGeneratedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11237:17","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:17","statements":[{"nodeType":"YulAssignment","src":"77:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:17"},"nodeType":"YulFunctionCall","src":"87:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:17","type":""}],"src":"7:99:17"},{"body":{"nodeType":"YulBlock","src":"208:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:17"},"nodeType":"YulFunctionCall","src":"218:19:17"},"nodeType":"YulExpressionStatement","src":"218:19:17"},{"nodeType":"YulAssignment","src":"246:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:17"},"nodeType":"YulFunctionCall","src":"261:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:17","type":""}],"src":"112:169:17"},{"body":{"nodeType":"YulBlock","src":"349:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:17"},"nodeType":"YulFunctionCall","src":"449:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:17"},"nodeType":"YulFunctionCall","src":"468:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:17"},"nodeType":"YulFunctionCall","src":"462:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:17"},"nodeType":"YulFunctionCall","src":"442:39:17"},"nodeType":"YulExpressionStatement","src":"442:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:17"},"nodeType":"YulFunctionCall","src":"386:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:17","statements":[{"nodeType":"YulAssignment","src":"402:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:17"},"nodeType":"YulFunctionCall","src":"407:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:17","statements":[]},"src":"378:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:17"},"nodeType":"YulFunctionCall","src":"507:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:17"},"nodeType":"YulFunctionCall","src":"500:27:17"},"nodeType":"YulExpressionStatement","src":"500:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:17","type":""}],"src":"287:246:17"},{"body":{"nodeType":"YulBlock","src":"587:54:17","statements":[{"nodeType":"YulAssignment","src":"597:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:17"},"nodeType":"YulFunctionCall","src":"611:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:17"},"nodeType":"YulFunctionCall","src":"627:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:17"},"nodeType":"YulFunctionCall","src":"607:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:17","type":""}],"src":"539:102:17"},{"body":{"nodeType":"YulBlock","src":"739:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:17"},"nodeType":"YulFunctionCall","src":"763:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:17","type":""}]},{"nodeType":"YulAssignment","src":"811:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:17"},"nodeType":"YulFunctionCall","src":"818:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:17"},"nodeType":"YulFunctionCall","src":"933:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:17"},"nodeType":"YulFunctionCall","src":"898:65:17"},"nodeType":"YulExpressionStatement","src":"898:65:17"},{"nodeType":"YulAssignment","src":"972:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:17"},"nodeType":"YulFunctionCall","src":"988:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:17"},"nodeType":"YulFunctionCall","src":"979:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:17","type":""}],"src":"647:377:17"},{"body":{"nodeType":"YulBlock","src":"1148:195:17","statements":[{"nodeType":"YulAssignment","src":"1158:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:17"},"nodeType":"YulFunctionCall","src":"1166:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:17"},"nodeType":"YulFunctionCall","src":"1201:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:17"},"nodeType":"YulFunctionCall","src":"1220:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:17"},"nodeType":"YulFunctionCall","src":"1194:47:17"},"nodeType":"YulExpressionStatement","src":"1194:47:17"},{"nodeType":"YulAssignment","src":"1250:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:17"},"nodeType":"YulFunctionCall","src":"1258:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:17","type":""}],"src":"1030:313:17"},{"body":{"nodeType":"YulBlock","src":"1389:35:17","statements":[{"nodeType":"YulAssignment","src":"1399:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:17"},"nodeType":"YulFunctionCall","src":"1409:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:17","type":""}],"src":"1349:75:17"},{"body":{"nodeType":"YulBlock","src":"1519:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:17"},"nodeType":"YulFunctionCall","src":"1529:12:17"},"nodeType":"YulExpressionStatement","src":"1529:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:17"},{"body":{"nodeType":"YulBlock","src":"1642:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:17"},"nodeType":"YulFunctionCall","src":"1652:12:17"},"nodeType":"YulExpressionStatement","src":"1652:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:17"},{"body":{"nodeType":"YulBlock","src":"1720:45:17","statements":[{"nodeType":"YulAssignment","src":"1730:29:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1745:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1752:6:17","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1741:3:17"},"nodeType":"YulFunctionCall","src":"1741:18:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1730:7:17"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1702:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1712:7:17","type":""}],"src":"1676:89:17"},{"body":{"nodeType":"YulBlock","src":"1813:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"1869:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1878:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1881:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1871:6:17"},"nodeType":"YulFunctionCall","src":"1871:12:17"},"nodeType":"YulExpressionStatement","src":"1871:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1836:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1860:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"1843:16:17"},"nodeType":"YulFunctionCall","src":"1843:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1833:2:17"},"nodeType":"YulFunctionCall","src":"1833:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1826:6:17"},"nodeType":"YulFunctionCall","src":"1826:42:17"},"nodeType":"YulIf","src":"1823:62:17"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1806:5:17","type":""}],"src":"1771:120:17"},{"body":{"nodeType":"YulBlock","src":"1948:86:17","statements":[{"nodeType":"YulAssignment","src":"1958:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1980:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1967:12:17"},"nodeType":"YulFunctionCall","src":"1967:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1958:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2022:5:17"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"1996:25:17"},"nodeType":"YulFunctionCall","src":"1996:32:17"},"nodeType":"YulExpressionStatement","src":"1996:32:17"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1926:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1934:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1942:5:17","type":""}],"src":"1897:137:17"},{"body":{"nodeType":"YulBlock","src":"2105:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"2151:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2153:77:17"},"nodeType":"YulFunctionCall","src":"2153:79:17"},"nodeType":"YulExpressionStatement","src":"2153:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2126:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2122:3:17"},"nodeType":"YulFunctionCall","src":"2122:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2147:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2118:3:17"},"nodeType":"YulFunctionCall","src":"2118:32:17"},"nodeType":"YulIf","src":"2115:119:17"},{"nodeType":"YulBlock","src":"2244:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2259:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2273:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2263:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2288:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2322:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2333:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2318:3:17"},"nodeType":"YulFunctionCall","src":"2318:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2342:7:17"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"2298:19:17"},"nodeType":"YulFunctionCall","src":"2298:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2288:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2075:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2086:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2098:6:17","type":""}],"src":"2040:327:17"},{"body":{"nodeType":"YulBlock","src":"2418:32:17","statements":[{"nodeType":"YulAssignment","src":"2428:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2439:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2428:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2400:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2410:7:17","type":""}],"src":"2373:77:17"},{"body":{"nodeType":"YulBlock","src":"2521:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2538:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2561:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2543:17:17"},"nodeType":"YulFunctionCall","src":"2543:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2531:6:17"},"nodeType":"YulFunctionCall","src":"2531:37:17"},"nodeType":"YulExpressionStatement","src":"2531:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2509:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2516:3:17","type":""}],"src":"2456:118:17"},{"body":{"nodeType":"YulBlock","src":"2678:124:17","statements":[{"nodeType":"YulAssignment","src":"2688:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2711:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2696:3:17"},"nodeType":"YulFunctionCall","src":"2696:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2688:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2768:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2781:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2792:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2777:3:17"},"nodeType":"YulFunctionCall","src":"2777:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2724:43:17"},"nodeType":"YulFunctionCall","src":"2724:71:17"},"nodeType":"YulExpressionStatement","src":"2724:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2650:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2662:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2673:4:17","type":""}],"src":"2580:222:17"},{"body":{"nodeType":"YulBlock","src":"2897:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2914:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2917:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2907:6:17"},"nodeType":"YulFunctionCall","src":"2907:12:17"},"nodeType":"YulExpressionStatement","src":"2907:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2808:117:17"},{"body":{"nodeType":"YulBlock","src":"3020:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3037:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3040:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3030:6:17"},"nodeType":"YulFunctionCall","src":"3030:12:17"},"nodeType":"YulExpressionStatement","src":"3030:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2931:117:17"},{"body":{"nodeType":"YulBlock","src":"3082:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3099:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3102:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3092:6:17"},"nodeType":"YulFunctionCall","src":"3092:88:17"},"nodeType":"YulExpressionStatement","src":"3092:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3196:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3199:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3189:6:17"},"nodeType":"YulFunctionCall","src":"3189:15:17"},"nodeType":"YulExpressionStatement","src":"3189:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3220:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3223:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3213:6:17"},"nodeType":"YulFunctionCall","src":"3213:15:17"},"nodeType":"YulExpressionStatement","src":"3213:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3054:180:17"},{"body":{"nodeType":"YulBlock","src":"3283:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3293:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3315:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3345:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3323:21:17"},"nodeType":"YulFunctionCall","src":"3323:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3311:3:17"},"nodeType":"YulFunctionCall","src":"3311:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3297:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3462:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3464:16:17"},"nodeType":"YulFunctionCall","src":"3464:18:17"},"nodeType":"YulExpressionStatement","src":"3464:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3405:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3417:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3402:2:17"},"nodeType":"YulFunctionCall","src":"3402:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3441:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3453:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3438:2:17"},"nodeType":"YulFunctionCall","src":"3438:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3399:2:17"},"nodeType":"YulFunctionCall","src":"3399:62:17"},"nodeType":"YulIf","src":"3396:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3500:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3504:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3493:6:17"},"nodeType":"YulFunctionCall","src":"3493:22:17"},"nodeType":"YulExpressionStatement","src":"3493:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3269:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"3277:4:17","type":""}],"src":"3240:281:17"},{"body":{"nodeType":"YulBlock","src":"3568:88:17","statements":[{"nodeType":"YulAssignment","src":"3578:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3588:18:17"},"nodeType":"YulFunctionCall","src":"3588:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3578:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3637:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"3645:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3617:19:17"},"nodeType":"YulFunctionCall","src":"3617:33:17"},"nodeType":"YulExpressionStatement","src":"3617:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3552:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3561:6:17","type":""}],"src":"3527:129:17"},{"body":{"nodeType":"YulBlock","src":"3729:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"3834:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3836:16:17"},"nodeType":"YulFunctionCall","src":"3836:18:17"},"nodeType":"YulExpressionStatement","src":"3836:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3806:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3814:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3803:2:17"},"nodeType":"YulFunctionCall","src":"3803:30:17"},"nodeType":"YulIf","src":"3800:56:17"},{"nodeType":"YulAssignment","src":"3866:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3896:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3874:21:17"},"nodeType":"YulFunctionCall","src":"3874:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3866:4:17"}]},{"nodeType":"YulAssignment","src":"3940:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3952:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3958:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3948:3:17"},"nodeType":"YulFunctionCall","src":"3948:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3940:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3713:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3724:4:17","type":""}],"src":"3662:308:17"},{"body":{"nodeType":"YulBlock","src":"4040:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4063:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"4068:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4073:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4050:12:17"},"nodeType":"YulFunctionCall","src":"4050:30:17"},"nodeType":"YulExpressionStatement","src":"4050:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4100:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4105:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4096:3:17"},"nodeType":"YulFunctionCall","src":"4096:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"4114:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4089:6:17"},"nodeType":"YulFunctionCall","src":"4089:27:17"},"nodeType":"YulExpressionStatement","src":"4089:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4022:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4027:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4032:6:17","type":""}],"src":"3976:146:17"},{"body":{"nodeType":"YulBlock","src":"4212:341:17","statements":[{"nodeType":"YulAssignment","src":"4222:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4289:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4247:41:17"},"nodeType":"YulFunctionCall","src":"4247:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4231:15:17"},"nodeType":"YulFunctionCall","src":"4231:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4222:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4313:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"4320:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4306:6:17"},"nodeType":"YulFunctionCall","src":"4306:21:17"},"nodeType":"YulExpressionStatement","src":"4306:21:17"},{"nodeType":"YulVariableDeclaration","src":"4336:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4351:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4358:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4347:3:17"},"nodeType":"YulFunctionCall","src":"4347:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4340:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4401:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4403:77:17"},"nodeType":"YulFunctionCall","src":"4403:79:17"},"nodeType":"YulExpressionStatement","src":"4403:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4382:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4387:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4378:3:17"},"nodeType":"YulFunctionCall","src":"4378:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"4396:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4375:2:17"},"nodeType":"YulFunctionCall","src":"4375:25:17"},"nodeType":"YulIf","src":"4372:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4530:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"4535:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4540:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4493:36:17"},"nodeType":"YulFunctionCall","src":"4493:54:17"},"nodeType":"YulExpressionStatement","src":"4493:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4185:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4190:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4198:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4206:5:17","type":""}],"src":"4128:425:17"},{"body":{"nodeType":"YulBlock","src":"4635:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"4684:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4686:77:17"},"nodeType":"YulFunctionCall","src":"4686:79:17"},"nodeType":"YulExpressionStatement","src":"4686:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4663:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4671:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:17"},"nodeType":"YulFunctionCall","src":"4659:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"4678:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4655:3:17"},"nodeType":"YulFunctionCall","src":"4655:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4648:6:17"},"nodeType":"YulFunctionCall","src":"4648:35:17"},"nodeType":"YulIf","src":"4645:122:17"},{"nodeType":"YulVariableDeclaration","src":"4776:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4803:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4790:12:17"},"nodeType":"YulFunctionCall","src":"4790:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4780:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4819:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4880:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4888:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4876:3:17"},"nodeType":"YulFunctionCall","src":"4876:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"4895:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"4903:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4828:47:17"},"nodeType":"YulFunctionCall","src":"4828:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4819:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4613:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4621:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4629:5:17","type":""}],"src":"4573:340:17"},{"body":{"nodeType":"YulBlock","src":"4995:433:17","statements":[{"body":{"nodeType":"YulBlock","src":"5041:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5043:77:17"},"nodeType":"YulFunctionCall","src":"5043:79:17"},"nodeType":"YulExpressionStatement","src":"5043:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5016:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5025:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5012:3:17"},"nodeType":"YulFunctionCall","src":"5012:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5037:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5008:3:17"},"nodeType":"YulFunctionCall","src":"5008:32:17"},"nodeType":"YulIf","src":"5005:119:17"},{"nodeType":"YulBlock","src":"5134:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5149:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5191:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:17"},"nodeType":"YulFunctionCall","src":"5176:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5163:12:17"},"nodeType":"YulFunctionCall","src":"5163:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5153:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5241:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5243:77:17"},"nodeType":"YulFunctionCall","src":"5243:79:17"},"nodeType":"YulExpressionStatement","src":"5243:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5213:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5221:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5210:2:17"},"nodeType":"YulFunctionCall","src":"5210:30:17"},"nodeType":"YulIf","src":"5207:117:17"},{"nodeType":"YulAssignment","src":"5338:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5383:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5394:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5379:3:17"},"nodeType":"YulFunctionCall","src":"5379:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5403:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5348:30:17"},"nodeType":"YulFunctionCall","src":"5348:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5338:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4965:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4976:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4988:6:17","type":""}],"src":"4919:509:17"},{"body":{"nodeType":"YulBlock","src":"5477:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"5534:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5543:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5546:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5536:6:17"},"nodeType":"YulFunctionCall","src":"5536:12:17"},"nodeType":"YulExpressionStatement","src":"5536:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5500:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5525:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5507:17:17"},"nodeType":"YulFunctionCall","src":"5507:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5497:2:17"},"nodeType":"YulFunctionCall","src":"5497:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5490:6:17"},"nodeType":"YulFunctionCall","src":"5490:43:17"},"nodeType":"YulIf","src":"5487:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5470:5:17","type":""}],"src":"5434:122:17"},{"body":{"nodeType":"YulBlock","src":"5614:87:17","statements":[{"nodeType":"YulAssignment","src":"5624:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5646:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5633:12:17"},"nodeType":"YulFunctionCall","src":"5633:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5624:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5689:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"5662:26:17"},"nodeType":"YulFunctionCall","src":"5662:33:17"},"nodeType":"YulExpressionStatement","src":"5662:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5592:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5600:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5608:5:17","type":""}],"src":"5562:139:17"},{"body":{"nodeType":"YulBlock","src":"5773:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"5819:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5821:77:17"},"nodeType":"YulFunctionCall","src":"5821:79:17"},"nodeType":"YulExpressionStatement","src":"5821:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5794:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5803:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5790:3:17"},"nodeType":"YulFunctionCall","src":"5790:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5815:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5786:3:17"},"nodeType":"YulFunctionCall","src":"5786:32:17"},"nodeType":"YulIf","src":"5783:119:17"},{"nodeType":"YulBlock","src":"5912:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5927:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5941:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5931:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5956:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5991:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6002:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5987:3:17"},"nodeType":"YulFunctionCall","src":"5987:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6011:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5966:20:17"},"nodeType":"YulFunctionCall","src":"5966:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5956:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5743:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5754:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5766:6:17","type":""}],"src":"5707:329:17"},{"body":{"nodeType":"YulBlock","src":"6105:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6122:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6144:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"6127:16:17"},"nodeType":"YulFunctionCall","src":"6127:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6115:6:17"},"nodeType":"YulFunctionCall","src":"6115:36:17"},"nodeType":"YulExpressionStatement","src":"6115:36:17"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6093:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6100:3:17","type":""}],"src":"6042:115:17"},{"body":{"nodeType":"YulBlock","src":"6259:122:17","statements":[{"nodeType":"YulAssignment","src":"6269:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6281:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6292:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6277:3:17"},"nodeType":"YulFunctionCall","src":"6277:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6269:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6347:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6360:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6371:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6356:3:17"},"nodeType":"YulFunctionCall","src":"6356:17:17"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"6305:41:17"},"nodeType":"YulFunctionCall","src":"6305:69:17"},"nodeType":"YulExpressionStatement","src":"6305:69:17"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6231:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6243:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6254:4:17","type":""}],"src":"6163:218:17"},{"body":{"nodeType":"YulBlock","src":"6415:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6432:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6435:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6425:6:17"},"nodeType":"YulFunctionCall","src":"6425:88:17"},"nodeType":"YulExpressionStatement","src":"6425:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6529:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6532:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6522:6:17"},"nodeType":"YulFunctionCall","src":"6522:15:17"},"nodeType":"YulExpressionStatement","src":"6522:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6553:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6556:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6546:6:17"},"nodeType":"YulFunctionCall","src":"6546:15:17"},"nodeType":"YulExpressionStatement","src":"6546:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6387:180:17"},{"body":{"nodeType":"YulBlock","src":"6624:269:17","statements":[{"nodeType":"YulAssignment","src":"6634:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6648:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"6654:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6644:3:17"},"nodeType":"YulFunctionCall","src":"6644:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6634:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"6665:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6695:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"6701:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6691:3:17"},"nodeType":"YulFunctionCall","src":"6691:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6669:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6742:51:17","statements":[{"nodeType":"YulAssignment","src":"6756:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6770:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6778:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6766:3:17"},"nodeType":"YulFunctionCall","src":"6766:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6756:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6722:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6715:6:17"},"nodeType":"YulFunctionCall","src":"6715:26:17"},"nodeType":"YulIf","src":"6712:81:17"},{"body":{"nodeType":"YulBlock","src":"6845:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6859:16:17"},"nodeType":"YulFunctionCall","src":"6859:18:17"},"nodeType":"YulExpressionStatement","src":"6859:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6809:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6832:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6840:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6829:2:17"},"nodeType":"YulFunctionCall","src":"6829:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6806:2:17"},"nodeType":"YulFunctionCall","src":"6806:38:17"},"nodeType":"YulIf","src":"6803:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6608:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6617:6:17","type":""}],"src":"6573:320:17"},{"body":{"nodeType":"YulBlock","src":"6953:87:17","statements":[{"nodeType":"YulAssignment","src":"6963:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6971:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6963:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6991:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"6994:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6984:6:17"},"nodeType":"YulFunctionCall","src":"6984:14:17"},"nodeType":"YulExpressionStatement","src":"6984:14:17"},{"nodeType":"YulAssignment","src":"7007:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7025:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7028:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7015:9:17"},"nodeType":"YulFunctionCall","src":"7015:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7007:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6940:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6948:4:17","type":""}],"src":"6899:141:17"},{"body":{"nodeType":"YulBlock","src":"7090:49:17","statements":[{"nodeType":"YulAssignment","src":"7100:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7118:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7125:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7114:3:17"},"nodeType":"YulFunctionCall","src":"7114:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"7130:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7110:3:17"},"nodeType":"YulFunctionCall","src":"7110:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7100:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7073:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7083:6:17","type":""}],"src":"7046:93:17"},{"body":{"nodeType":"YulBlock","src":"7198:54:17","statements":[{"nodeType":"YulAssignment","src":"7208:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7233:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"7239:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7229:3:17"},"nodeType":"YulFunctionCall","src":"7229:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7208:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7173:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"7179:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7189:8:17","type":""}],"src":"7145:107:17"},{"body":{"nodeType":"YulBlock","src":"7334:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7344:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"7365:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"7377:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7361:3:17"},"nodeType":"YulFunctionCall","src":"7361:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"7348:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7388:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"7419:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7430:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"7400:18:17"},"nodeType":"YulFunctionCall","src":"7400:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7392:4:17","type":""}]},{"nodeType":"YulAssignment","src":"7506:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"7537:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"7548:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"7518:18:17"},"nodeType":"YulFunctionCall","src":"7518:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"7506:8:17"}]},{"nodeType":"YulAssignment","src":"7566:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7579:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"7590:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7586:3:17"},"nodeType":"YulFunctionCall","src":"7586:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7575:3:17"},"nodeType":"YulFunctionCall","src":"7575:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7566:5:17"}]},{"nodeType":"YulAssignment","src":"7605:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7618:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"7629:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"7639:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7625:3:17"},"nodeType":"YulFunctionCall","src":"7625:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7615:2:17"},"nodeType":"YulFunctionCall","src":"7615:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7605:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7295:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"7302:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"7314:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7327:6:17","type":""}],"src":"7258:393:17"},{"body":{"nodeType":"YulBlock","src":"7689:28:17","statements":[{"nodeType":"YulAssignment","src":"7699:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"7706:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7699:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7675:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7685:3:17","type":""}],"src":"7657:60:17"},{"body":{"nodeType":"YulBlock","src":"7783:82:17","statements":[{"nodeType":"YulAssignment","src":"7793:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7851:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7833:17:17"},"nodeType":"YulFunctionCall","src":"7833:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7824:8:17"},"nodeType":"YulFunctionCall","src":"7824:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7806:17:17"},"nodeType":"YulFunctionCall","src":"7806:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7793:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7763:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7773:9:17","type":""}],"src":"7723:142:17"},{"body":{"nodeType":"YulBlock","src":"7918:28:17","statements":[{"nodeType":"YulAssignment","src":"7928:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"7935:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7928:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7904:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7914:3:17","type":""}],"src":"7871:75:17"},{"body":{"nodeType":"YulBlock","src":"8028:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8038:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"8093:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8062:30:17"},"nodeType":"YulFunctionCall","src":"8062:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"8042:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8117:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8157:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8151:5:17"},"nodeType":"YulFunctionCall","src":"8151:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8164:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"8196:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"8172:23:17"},"nodeType":"YulFunctionCall","src":"8172:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"8123:27:17"},"nodeType":"YulFunctionCall","src":"8123:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8110:6:17"},"nodeType":"YulFunctionCall","src":"8110:105:17"},"nodeType":"YulExpressionStatement","src":"8110:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8005:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"8011:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"8019:7:17","type":""}],"src":"7952:269:17"},{"body":{"nodeType":"YulBlock","src":"8276:24:17","statements":[{"nodeType":"YulAssignment","src":"8286:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8293:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8286:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8272:3:17","type":""}],"src":"8227:73:17"},{"body":{"nodeType":"YulBlock","src":"8359:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8369:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"8383:30:17"},"nodeType":"YulFunctionCall","src":"8383:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"8373:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8468:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8474:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"8482:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8424:43:17"},"nodeType":"YulFunctionCall","src":"8424:65:17"},"nodeType":"YulExpressionStatement","src":"8424:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8345:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"8351:6:17","type":""}],"src":"8306:189:17"},{"body":{"nodeType":"YulBlock","src":"8551:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"8618:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8662:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8669:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"8632:29:17"},"nodeType":"YulFunctionCall","src":"8632:39:17"},"nodeType":"YulExpressionStatement","src":"8632:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8571:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8568:2:17"},"nodeType":"YulFunctionCall","src":"8568:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8583:26:17","statements":[{"nodeType":"YulAssignment","src":"8585:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8598:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8605:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8594:3:17"},"nodeType":"YulFunctionCall","src":"8594:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"8585:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"8565:2:17","statements":[]},"src":"8561:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"8539:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8546:3:17","type":""}],"src":"8501:186:17"},{"body":{"nodeType":"YulBlock","src":"8772:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"8798:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8812:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8860:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8828:31:17"},"nodeType":"YulFunctionCall","src":"8828:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8816:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8879:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8902:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8930:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"8912:17:17"},"nodeType":"YulFunctionCall","src":"8912:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8898:3:17"},"nodeType":"YulFunctionCall","src":"8898:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8883:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9099:27:17","statements":[{"nodeType":"YulAssignment","src":"9101:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"9116:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9101:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9083:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"9095:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9080:2:17"},"nodeType":"YulFunctionCall","src":"9080:18:17"},"nodeType":"YulIf","src":"9077:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9168:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"9185:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"9213:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"9195:17:17"},"nodeType":"YulFunctionCall","src":"9195:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9181:3:17"},"nodeType":"YulFunctionCall","src":"9181:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"9139:28:17"},"nodeType":"YulFunctionCall","src":"9139:80:17"},"nodeType":"YulExpressionStatement","src":"9139:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8789:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8794:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8786:2:17"},"nodeType":"YulFunctionCall","src":"8786:11:17"},"nodeType":"YulIf","src":"8783:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8748:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"8755:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8760:10:17","type":""}],"src":"8693:543:17"},{"body":{"nodeType":"YulBlock","src":"9305:54:17","statements":[{"nodeType":"YulAssignment","src":"9315:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"9340:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"9346:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9336:3:17"},"nodeType":"YulFunctionCall","src":"9336:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"9315:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"9280:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"9286:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"9296:8:17","type":""}],"src":"9242:117:17"},{"body":{"nodeType":"YulBlock","src":"9416:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9426:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9475:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"9478:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9471:3:17"},"nodeType":"YulFunctionCall","src":"9471:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9490:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9486:3:17"},"nodeType":"YulFunctionCall","src":"9486:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"9442:28:17"},"nodeType":"YulFunctionCall","src":"9442:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9438:3:17"},"nodeType":"YulFunctionCall","src":"9438:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"9430:4:17","type":""}]},{"nodeType":"YulAssignment","src":"9503:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9517:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"9523:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9513:3:17"},"nodeType":"YulFunctionCall","src":"9513:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9503:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9393:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"9399:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9409:6:17","type":""}],"src":"9365:169:17"},{"body":{"nodeType":"YulBlock","src":"9620:214:17","statements":[{"nodeType":"YulAssignment","src":"9753:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9780:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"9786:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"9761:18:17"},"nodeType":"YulFunctionCall","src":"9761:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9753:4:17"}]},{"nodeType":"YulAssignment","src":"9799:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9810:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9820:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"9823:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9816:3:17"},"nodeType":"YulFunctionCall","src":"9816:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9807:2:17"},"nodeType":"YulFunctionCall","src":"9807:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"9799:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9601:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"9607:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"9615:4:17","type":""}],"src":"9539:295:17"},{"body":{"nodeType":"YulBlock","src":"9931:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9942:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9989:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9956:32:17"},"nodeType":"YulFunctionCall","src":"9956:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9946:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10078:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10080:16:17"},"nodeType":"YulFunctionCall","src":"10080:18:17"},"nodeType":"YulExpressionStatement","src":"10080:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10050:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10058:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10047:2:17"},"nodeType":"YulFunctionCall","src":"10047:30:17"},"nodeType":"YulIf","src":"10044:56:17"},{"nodeType":"YulVariableDeclaration","src":"10110:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10156:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10150:5:17"},"nodeType":"YulFunctionCall","src":"10150:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"10124:25:17"},"nodeType":"YulFunctionCall","src":"10124:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"10114:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10255:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"10261:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"10269:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"10209:45:17"},"nodeType":"YulFunctionCall","src":"10209:67:17"},"nodeType":"YulExpressionStatement","src":"10209:67:17"},{"nodeType":"YulVariableDeclaration","src":"10286:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10303:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"10290:9:17","type":""}]},{"nodeType":"YulAssignment","src":"10314:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10327:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10314:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10378:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10392:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10411:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10423:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10419:3:17"},"nodeType":"YulFunctionCall","src":"10419:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10407:3:17"},"nodeType":"YulFunctionCall","src":"10407:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"10396:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10443:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10489:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"10457:31:17"},"nodeType":"YulFunctionCall","src":"10457:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"10447:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10507:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10516:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10511:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10575:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10600:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10618:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10623:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10614:3:17"},"nodeType":"YulFunctionCall","src":"10614:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10608:5:17"},"nodeType":"YulFunctionCall","src":"10608:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10593:6:17"},"nodeType":"YulFunctionCall","src":"10593:42:17"},"nodeType":"YulExpressionStatement","src":"10593:42:17"},{"nodeType":"YulAssignment","src":"10652:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10666:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10674:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:17"},"nodeType":"YulFunctionCall","src":"10662:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10652:6:17"}]},{"nodeType":"YulAssignment","src":"10693:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10710:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10721:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10706:3:17"},"nodeType":"YulFunctionCall","src":"10706:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10693:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10541:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"10544:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10538:2:17"},"nodeType":"YulFunctionCall","src":"10538:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10553:21:17","statements":[{"nodeType":"YulAssignment","src":"10555:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10564:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"10567:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10560:3:17"},"nodeType":"YulFunctionCall","src":"10560:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10555:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"10534:3:17","statements":[]},"src":"10530:208:17"},{"body":{"nodeType":"YulBlock","src":"10774:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10792:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10819:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10824:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10815:3:17"},"nodeType":"YulFunctionCall","src":"10815:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10809:5:17"},"nodeType":"YulFunctionCall","src":"10809:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"10796:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10859:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10886:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10901:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10909:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10897:3:17"},"nodeType":"YulFunctionCall","src":"10897:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"10867:18:17"},"nodeType":"YulFunctionCall","src":"10867:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10852:6:17"},"nodeType":"YulFunctionCall","src":"10852:64:17"},"nodeType":"YulExpressionStatement","src":"10852:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"10757:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"10766:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10754:2:17"},"nodeType":"YulFunctionCall","src":"10754:19:17"},"nodeType":"YulIf","src":"10751:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10950:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10964:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10972:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10960:3:17"},"nodeType":"YulFunctionCall","src":"10960:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"10976:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10956:3:17"},"nodeType":"YulFunctionCall","src":"10956:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10943:6:17"},"nodeType":"YulFunctionCall","src":"10943:36:17"},"nodeType":"YulExpressionStatement","src":"10943:36:17"}]},"nodeType":"YulCase","src":"10371:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10376:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"11006:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11020:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11033:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11024:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11057:67:17","statements":[{"nodeType":"YulAssignment","src":"11075:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11094:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11099:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11090:3:17"},"nodeType":"YulFunctionCall","src":"11090:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11084:5:17"},"nodeType":"YulFunctionCall","src":"11084:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11075:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"11050:6:17"},"nodeType":"YulIf","src":"11047:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11144:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11203:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"11210:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"11150:52:17"},"nodeType":"YulFunctionCall","src":"11150:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11137:6:17"},"nodeType":"YulFunctionCall","src":"11137:81:17"},"nodeType":"YulExpressionStatement","src":"11137:81:17"}]},"nodeType":"YulCase","src":"10998:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10351:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10359:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10348:2:17"},"nodeType":"YulFunctionCall","src":"10348:14:17"},"nodeType":"YulSwitch","src":"10341:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9920:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"9926:3:17","type":""}],"src":"9839:1395:17"}]},"contents":"{\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\\n        let length := array_length_t_string_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\\n        end := add(pos, round_up_to_mul_of_32(length))\\n    }\\n\\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_uint16(value) -> cleaned {\\n        cleaned := and(value, 0xffff)\\n    }\\n\\n    function validator_revert_t_uint16(value) {\\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint16(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint16(value)\\n    }\\n\\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_uint256(value))\\n    }\\n\\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\\n        calldatacopy(dst, src, length)\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := calldataload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\\n    }\\n\\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 0))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function validator_revert_t_uint256(value) {\\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint256(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint256(value)\\n    }\\n\\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_uint16(value))\\n    }\\n\\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function panic_error_0x22() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x22)\\n        revert(0, 0x24)\\n    }\\n\\n    function extract_byte_array_length(data) -> length {\\n        length := div(data, 2)\\n        let outOfPlaceEncoding := and(data, 1)\\n        if iszero(outOfPlaceEncoding) {\\n            length := and(length, 0x7f)\\n        }\\n\\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\\n            panic_error_0x22()\\n        }\\n    }\\n\\n    function array_dataslot_t_string_storage(ptr) -> data {\\n        data := ptr\\n\\n        mstore(0, ptr)\\n        data := keccak256(0, 0x20)\\n\\n    }\\n\\n    function divide_by_32_ceil(value) -> result {\\n        result := div(add(value, 31), 32)\\n    }\\n\\n    function shift_left_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shl(bits, value)\\n\\n    }\\n\\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\\n        let shiftBits := mul(shiftBytes, 8)\\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\\n        value := and(value, not(mask))\\n        result := or(value, and(toInsert, mask))\\n    }\\n\\n    function identity(value) -> ret {\\n        ret := value\\n    }\\n\\n    function convert_t_uint256_to_t_uint256(value) -> converted {\\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\\n    }\\n\\n    function prepare_store_t_uint256(value) -> ret {\\n        ret := value\\n    }\\n\\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\\n    }\\n\\n    function zero_value_for_split_t_uint256() -> ret {\\n        ret := 0\\n    }\\n\\n    function storage_set_to_zero_t_uint256(slot, offset) {\\n        let zero_0 := zero_value_for_split_t_uint256()\\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\\n    }\\n\\n    function clear_storage_range_t_bytes1(start, end) {\\n        for {} lt(start, end) { start := add(start, 1) }\\n        {\\n            storage_set_to_zero_t_uint256(start, 0)\\n        }\\n    }\\n\\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\\n\\n        if gt(len, 31) {\\n            let dataArea := array_dataslot_t_string_storage(array)\\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\\n            if lt(startIndex, 32) { deleteStart := dataArea }\\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\\n        }\\n\\n    }\\n\\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shr(bits, value)\\n\\n    }\\n\\n    function mask_bytes_dynamic(data, bytes) -> result {\\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\\n        result := and(data, mask)\\n    }\\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\\n        // we want to save only elements that are part of the array after resizing\\n        // others should be set to zero\\n        data := mask_bytes_dynamic(data, len)\\n        used := or(data, mul(2, len))\\n    }\\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\\n\\n        let newLen := array_length_t_string_memory_ptr(src)\\n        // Make sure array length is sane\\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        let oldLen := extract_byte_array_length(sload(slot))\\n\\n        // potentially truncate data\\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\\n\\n        let srcOffset := 0\\n\\n        srcOffset := 0x20\\n\\n        switch gt(newLen, 31)\\n        case 1 {\\n            let loopEnd := and(newLen, not(0x1f))\\n\\n            let dstPtr := array_dataslot_t_string_storage(slot)\\n            let i := 0\\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\\n                sstore(dstPtr, mload(add(src, srcOffset)))\\n                dstPtr := add(dstPtr, 1)\\n                srcOffset := add(srcOffset, 32)\\n            }\\n            if lt(loopEnd, newLen) {\\n                let lastValue := mload(add(src, srcOffset))\\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\\n            }\\n            sstore(slot, add(mul(newLen, 2), 1))\\n        }\\n        default {\\n            let value := 0\\n            if newLen {\\n                value := mload(add(src, srcOffset))\\n            }\\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\\n        }\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"sourceMap":"251:1332:11:-:0;;;412:253;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;567:5;560:4;:12;;;;;;:::i;:::-;;592:8;582:7;:18;;;;;;:::i;:::-;;617:5;610:4;:12;;;;;;:::i;:::-;;646;632:11;:26;;;;412:253;;;;251:1332;;7:75:17;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1339::-;3164:6;3172;3180;3188;3237:3;3225:9;3216:7;3212:23;3208:33;3205:120;;;3244:79;;:::i;:::-;3205:120;3385:1;3374:9;3370:17;3364:24;3415:18;3407:6;3404:30;3401:117;;;3437:79;;:::i;:::-;3401:117;3542:74;3608:7;3599:6;3588:9;3584:22;3542:74;:::i;:::-;3532:84;;3335:291;3686:2;3675:9;3671:18;3665:25;3717:18;3709:6;3706:30;3703:117;;;3739:79;;:::i;:::-;3703:117;3844:74;3910:7;3901:6;3890:9;3886:22;3844:74;:::i;:::-;3834:84;;3636:292;3988:2;3977:9;3973:18;3967:25;4019:18;4011:6;4008:30;4005:117;;;4041:79;;:::i;:::-;4005:117;4146:74;4212:7;4203:6;4192:9;4188:22;4146:74;:::i;:::-;4136:84;;3938:292;4269:2;4295:64;4351:7;4342:6;4331:9;4327:22;4295:64;:::i;:::-;4285:74;;4240:129;3037:1339;;;;;;;:::o;4382:99::-;4434:6;4468:5;4462:12;4452:22;;4382:99;;;:::o;4487:180::-;4535:77;4532:1;4525:88;4632:4;4629:1;4622:15;4656:4;4653:1;4646:15;4673:320;4717:6;4754:1;4748:4;4744:12;4734:22;;4801:1;4795:4;4791:12;4822:18;4812:81;;4878:4;4870:6;4866:17;4856:27;;4812:81;4940:2;4932:6;4929:14;4909:18;4906:38;4903:84;;4959:18;;:::i;:::-;4903:84;4724:269;4673:320;;;:::o;4999:141::-;5048:4;5071:3;5063:11;;5094:3;5091:1;5084:14;5128:4;5125:1;5115:18;5107:26;;4999:141;;;:::o;5146:93::-;5183:6;5230:2;5225;5218:5;5214:14;5210:23;5200:33;;5146:93;;;:::o;5245:107::-;5289:8;5339:5;5333:4;5329:16;5308:37;;5245:107;;;;:::o;5358:393::-;5427:6;5477:1;5465:10;5461:18;5500:97;5530:66;5519:9;5500:97;:::i;:::-;5618:39;5648:8;5637:9;5618:39;:::i;:::-;5606:51;;5690:4;5686:9;5679:5;5675:21;5666:30;;5739:4;5729:8;5725:19;5718:5;5715:30;5705:40;;5434:317;;5358:393;;;;;:::o;5757:60::-;5785:3;5806:5;5799:12;;5757:60;;;:::o;5823:142::-;5873:9;5906:53;5924:34;5933:24;5951:5;5933:24;:::i;:::-;5924:34;:::i;:::-;5906:53;:::i;:::-;5893:66;;5823:142;;;:::o;5971:75::-;6014:3;6035:5;6028:12;;5971:75;;;:::o;6052:269::-;6162:39;6193:7;6162:39;:::i;:::-;6223:91;6272:41;6296:16;6272:41;:::i;:::-;6264:6;6257:4;6251:11;6223:91;:::i;:::-;6217:4;6210:105;6128:193;6052:269;;;:::o;6327:73::-;6372:3;6327:73;:::o;6406:189::-;6483:32;;:::i;:::-;6524:65;6582:6;6574;6568:4;6524:65;:::i;:::-;6459:136;6406:189;;:::o;6601:186::-;6661:120;6678:3;6671:5;6668:14;6661:120;;;6732:39;6769:1;6762:5;6732:39;:::i;:::-;6705:1;6698:5;6694:13;6685:22;;6661:120;;;6601:186;;:::o;6793:543::-;6894:2;6889:3;6886:11;6883:446;;;6928:38;6960:5;6928:38;:::i;:::-;7012:29;7030:10;7012:29;:::i;:::-;7002:8;6998:44;7195:2;7183:10;7180:18;7177:49;;;7216:8;7201:23;;7177:49;7239:80;7295:22;7313:3;7295:22;:::i;:::-;7285:8;7281:37;7268:11;7239:80;:::i;:::-;6898:431;;6883:446;6793:543;;;:::o;7342:117::-;7396:8;7446:5;7440:4;7436:16;7415:37;;7342:117;;;;:::o;7465:169::-;7509:6;7542:51;7590:1;7586:6;7578:5;7575:1;7571:13;7542:51;:::i;:::-;7538:56;7623:4;7617;7613:15;7603:25;;7516:118;7465:169;;;;:::o;7639:295::-;7715:4;7861:29;7886:3;7880:4;7861:29;:::i;:::-;7853:37;;7923:3;7920:1;7916:11;7910:4;7907:21;7899:29;;7639:295;;;;:::o;7939:1395::-;8056:37;8089:3;8056:37;:::i;:::-;8158:18;8150:6;8147:30;8144:56;;;8180:18;;:::i;:::-;8144:56;8224:38;8256:4;8250:11;8224:38;:::i;:::-;8309:67;8369:6;8361;8355:4;8309:67;:::i;:::-;8403:1;8427:4;8414:17;;8459:2;8451:6;8448:14;8476:1;8471:618;;;;9133:1;9150:6;9147:77;;;9199:9;9194:3;9190:19;9184:26;9175:35;;9147:77;9250:67;9310:6;9303:5;9250:67;:::i;:::-;9244:4;9237:81;9106:222;8441:887;;8471:618;8523:4;8519:9;8511:6;8507:22;8557:37;8589:4;8557:37;:::i;:::-;8616:1;8630:208;8644:7;8641:1;8638:14;8630:208;;;8723:9;8718:3;8714:19;8708:26;8700:6;8693:42;8774:1;8766:6;8762:14;8752:24;;8821:2;8810:9;8806:18;8793:31;;8667:4;8664:1;8660:12;8655:17;;8630:208;;;8866:6;8857:7;8854:19;8851:179;;;8924:9;8919:3;8915:19;8909:26;8967:48;9009:4;9001:6;8997:17;8986:9;8967:48;:::i;:::-;8959:6;8952:64;8874:156;8851:179;9076:1;9072;9064:6;9060:14;9056:22;9050:4;9043:36;8478:611;;;8441:887;;8031:1303;;;7939:1395;;:::o;251:1332:11:-;;;;;;;","deployedSourceMap":"251:1332:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1127:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;671:76;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1403:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;935:79;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;753;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1217:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1020:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1501:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;838:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1313:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1127;1168:13;1200:4;1193:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1127:84;:::o;671:76::-;734:6;726:5;;:14;;;;;;;;;;;;;;;;;;671:76;:::o;1403:92::-;1451:7;1477:11;;1470:18;;1403:92;:::o;935:79::-;1002:5;995:4;:12;;;;;;:::i;:::-;;935:79;:::o;753:::-;820:5;813:4;:12;;;;;;:::i;:::-;;753:79;:::o;1217:90::-;1261:13;1293:7;1286:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1217:90;:::o;1020:101::-;1102:12;1088:11;:26;;;;1020:101;:::o;1501:79::-;1543:6;1568:5;;;;;;;;;;;1561:12;;1501:79;:::o;838:91::-;914:8;904:7;:18;;;;;;:::i;:::-;;838:91;:::o;1313:84::-;1354:13;1386:4;1379:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:84;:::o;7:99:17:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:89;1712:7;1752:6;1745:5;1741:18;1730:29;;1676:89;;;:::o;1771:120::-;1843:23;1860:5;1843:23;:::i;:::-;1836:5;1833:34;1823:62;;1881:1;1878;1871:12;1823:62;1771:120;:::o;1897:137::-;1942:5;1980:6;1967:20;1958:29;;1996:32;2022:5;1996:32;:::i;:::-;1897:137;;;;:::o;2040:327::-;2098:6;2147:2;2135:9;2126:7;2122:23;2118:32;2115:119;;;2153:79;;:::i;:::-;2115:119;2273:1;2298:52;2342:7;2333:6;2322:9;2318:22;2298:52;:::i;:::-;2288:62;;2244:116;2040:327;;;;:::o;2373:77::-;2410:7;2439:5;2428:16;;2373:77;;;:::o;2456:118::-;2543:24;2561:5;2543:24;:::i;:::-;2538:3;2531:37;2456:118;;:::o;2580:222::-;2673:4;2711:2;2700:9;2696:18;2688:26;;2724:71;2792:1;2781:9;2777:17;2768:6;2724:71;:::i;:::-;2580:222;;;;:::o;2808:117::-;2917:1;2914;2907:12;2931:117;3040:1;3037;3030:12;3054:180;3102:77;3099:1;3092:88;3199:4;3196:1;3189:15;3223:4;3220:1;3213:15;3240:281;3323:27;3345:4;3323:27;:::i;:::-;3315:6;3311:40;3453:6;3441:10;3438:22;3417:18;3405:10;3402:34;3399:62;3396:88;;;3464:18;;:::i;:::-;3396:88;3504:10;3500:2;3493:22;3283:238;3240:281;;:::o;3527:129::-;3561:6;3588:20;;:::i;:::-;3578:30;;3617:33;3645:4;3637:6;3617:33;:::i;:::-;3527:129;;;:::o;3662:308::-;3724:4;3814:18;3806:6;3803:30;3800:56;;;3836:18;;:::i;:::-;3800:56;3874:29;3896:6;3874:29;:::i;:::-;3866:37;;3958:4;3952;3948:15;3940:23;;3662:308;;;:::o;3976:146::-;4073:6;4068:3;4063;4050:30;4114:1;4105:6;4100:3;4096:16;4089:27;3976:146;;;:::o;4128:425::-;4206:5;4231:66;4247:49;4289:6;4247:49;:::i;:::-;4231:66;:::i;:::-;4222:75;;4320:6;4313:5;4306:21;4358:4;4351:5;4347:16;4396:3;4387:6;4382:3;4378:16;4375:25;4372:112;;;4403:79;;:::i;:::-;4372:112;4493:54;4540:6;4535:3;4530;4493:54;:::i;:::-;4212:341;4128:425;;;;;:::o;4573:340::-;4629:5;4678:3;4671:4;4663:6;4659:17;4655:27;4645:122;;4686:79;;:::i;:::-;4645:122;4803:6;4790:20;4828:79;4903:3;4895:6;4888:4;4880:6;4876:17;4828:79;:::i;:::-;4819:88;;4635:278;4573:340;;;;:::o;4919:509::-;4988:6;5037:2;5025:9;5016:7;5012:23;5008:32;5005:119;;;5043:79;;:::i;:::-;5005:119;5191:1;5180:9;5176:17;5163:31;5221:18;5213:6;5210:30;5207:117;;;5243:79;;:::i;:::-;5207:117;5348:63;5403:7;5394:6;5383:9;5379:22;5348:63;:::i;:::-;5338:73;;5134:287;4919:509;;;;:::o;5434:122::-;5507:24;5525:5;5507:24;:::i;:::-;5500:5;5497:35;5487:63;;5546:1;5543;5536:12;5487:63;5434:122;:::o;5562:139::-;5608:5;5646:6;5633:20;5624:29;;5662:33;5689:5;5662:33;:::i;:::-;5562:139;;;;:::o;5707:329::-;5766:6;5815:2;5803:9;5794:7;5790:23;5786:32;5783:119;;;5821:79;;:::i;:::-;5783:119;5941:1;5966:53;6011:7;6002:6;5991:9;5987:22;5966:53;:::i;:::-;5956:63;;5912:117;5707:329;;;;:::o;6042:115::-;6127:23;6144:5;6127:23;:::i;:::-;6122:3;6115:36;6042:115;;:::o;6163:218::-;6254:4;6292:2;6281:9;6277:18;6269:26;;6305:69;6371:1;6360:9;6356:17;6347:6;6305:69;:::i;:::-;6163:218;;;;:::o;6387:180::-;6435:77;6432:1;6425:88;6532:4;6529:1;6522:15;6556:4;6553:1;6546:15;6573:320;6617:6;6654:1;6648:4;6644:12;6634:22;;6701:1;6695:4;6691:12;6722:18;6712:81;;6778:4;6770:6;6766:17;6756:27;;6712:81;6840:2;6832:6;6829:14;6809:18;6806:38;6803:84;;6859:18;;:::i;:::-;6803:84;6624:269;6573:320;;;:::o;6899:141::-;6948:4;6971:3;6963:11;;6994:3;6991:1;6984:14;7028:4;7025:1;7015:18;7007:26;;6899:141;;;:::o;7046:93::-;7083:6;7130:2;7125;7118:5;7114:14;7110:23;7100:33;;7046:93;;;:::o;7145:107::-;7189:8;7239:5;7233:4;7229:16;7208:37;;7145:107;;;;:::o;7258:393::-;7327:6;7377:1;7365:10;7361:18;7400:97;7430:66;7419:9;7400:97;:::i;:::-;7518:39;7548:8;7537:9;7518:39;:::i;:::-;7506:51;;7590:4;7586:9;7579:5;7575:21;7566:30;;7639:4;7629:8;7625:19;7618:5;7615:30;7605:40;;7334:317;;7258:393;;;;;:::o;7657:60::-;7685:3;7706:5;7699:12;;7657:60;;;:::o;7723:142::-;7773:9;7806:53;7824:34;7833:24;7851:5;7833:24;:::i;:::-;7824:34;:::i;:::-;7806:53;:::i;:::-;7793:66;;7723:142;;;:::o;7871:75::-;7914:3;7935:5;7928:12;;7871:75;;;:::o;7952:269::-;8062:39;8093:7;8062:39;:::i;:::-;8123:91;8172:41;8196:16;8172:41;:::i;:::-;8164:6;8157:4;8151:11;8123:91;:::i;:::-;8117:4;8110:105;8028:193;7952:269;;;:::o;8227:73::-;8272:3;8227:73;:::o;8306:189::-;8383:32;;:::i;:::-;8424:65;8482:6;8474;8468:4;8424:65;:::i;:::-;8359:136;8306:189;;:::o;8501:186::-;8561:120;8578:3;8571:5;8568:14;8561:120;;;8632:39;8669:1;8662:5;8632:39;:::i;:::-;8605:1;8598:5;8594:13;8585:22;;8561:120;;;8501:186;;:::o;8693:543::-;8794:2;8789:3;8786:11;8783:446;;;8828:38;8860:5;8828:38;:::i;:::-;8912:29;8930:10;8912:29;:::i;:::-;8902:8;8898:44;9095:2;9083:10;9080:18;9077:49;;;9116:8;9101:23;;9077:49;9139:80;9195:22;9213:3;9195:22;:::i;:::-;9185:8;9181:37;9168:11;9139:80;:::i;:::-;8798:431;;8783:446;8693:543;;;:::o;9242:117::-;9296:8;9346:5;9340:4;9336:16;9315:37;;9242:117;;;;:::o;9365:169::-;9409:6;9442:51;9490:1;9486:6;9478:5;9475:1;9471:13;9442:51;:::i;:::-;9438:56;9523:4;9517;9513:15;9503:25;;9416:118;9365:169;;;;:::o;9539:295::-;9615:4;9761:29;9786:3;9780:4;9761:29;:::i;:::-;9753:37;;9823:3;9820:1;9816:11;9810:4;9807:21;9799:29;;9539:295;;;;:::o;9839:1395::-;9956:37;9989:3;9956:37;:::i;:::-;10058:18;10050:6;10047:30;10044:56;;;10080:18;;:::i;:::-;10044:56;10124:38;10156:4;10150:11;10124:38;:::i;:::-;10209:67;10269:6;10261;10255:4;10209:67;:::i;:::-;10303:1;10327:4;10314:17;;10359:2;10351:6;10348:14;10376:1;10371:618;;;;11033:1;11050:6;11047:77;;;11099:9;11094:3;11090:19;11084:26;11075:35;;11047:77;11150:67;11210:6;11203:5;11150:67;:::i;:::-;11144:4;11137:81;11006:222;10341:887;;10371:618;10423:4;10419:9;10411:6;10407:22;10457:37;10489:4;10457:37;:::i;:::-;10516:1;10530:208;10544:7;10541:1;10538:14;10530:208;;;10623:9;10618:3;10614:19;10608:26;10600:6;10593:42;10674:1;10666:6;10662:14;10652:24;;10721:2;10710:9;10706:18;10693:31;;10567:4;10564:1;10560:12;10555:17;;10530:208;;;10766:6;10757:7;10754:19;10751:179;;;10824:9;10819:3;10815:19;10809:26;10867:48;10909:4;10901:6;10897:17;10886:9;10867:48;:::i;:::-;10859:6;10852:64;10774:156;10751:179;10976:1;10972;10964:6;10960:14;10956:22;10950:4;10943:36;10378:611;;;10341:887;;9931:1303;;;9839:1395;;:::o","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n// TODO: Implement access control\\n\\n// errors\\n// error Ticket__inactive();\\n// error Ticket__NoJudgeAssigned();\\n\\n\\n/// @title Police\\n/// @author Samin Yaser\\n/// @notice Profile of a police officer\\ncontract Police {\\n\\n    string private name;\\n    string private station;\\n    string private rank;\\n    uint256 private badgeNumber;\\n    uint16 private score;\\n\\n    constructor(\\n        string memory name_,\\n        string memory station_,\\n        string memory rank_,\\n        uint256 badgeNumber_\\n    ) {\\n        name = name_;\\n        station = station_;\\n        rank = rank_;\\n        badgeNumber = badgeNumber_;\\n    }\\n\\n    function updateScore(uint16 score_) external {\\n        score = score_;\\n    }\\n\\n    function changeName(string memory name_) external {\\n        name = name_;\\n    }\\n\\n    function changeStation(string memory station_) external {\\n        station = station_;\\n    }\\n\\n    function changeRank(string memory rank_) external {\\n        rank = rank_;\\n    }\\n\\n    function changeBadgeNumber(uint256 badgeNumber_) external {\\n        badgeNumber = badgeNumber_;\\n    }\\n\\n    function getName() external view returns(string memory) {\\n        return name;\\n    }\\n\\n    function getStation() external view returns(string memory) {\\n        return station;\\n    }\\n\\n    function getRank() external view returns(string memory) {\\n        return rank;\\n    }\\n\\n    function getBadgeNumber() external view returns(uint256) {\\n        return badgeNumber;\\n    }\\n\\n    function getScore() external view returns(uint16) {\\n        return score;\\n    }\\n\\n}\\n","sourcePath":"C:\\\\Users\\\\samin\\\\Documents\\\\Projects\\\\AWT\\\\TraffiChain\\\\contracts\\\\Police.sol","ast":{"absolutePath":"project:/contracts/Police.sol","exportedSymbols":{"Police":[1456]},"id":1457,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1326,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Police","contractDependencies":[],"contractKind":"contract","documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"169:82:11","text":"@title Police\\n @author Samin Yaser\\n @notice Profile of a police officer"},"fullyImplemented":true,"id":1456,"linearizedBaseContracts":[1456],"name":"Police","nameLocation":"260:6:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1329,"mutability":"mutable","name":"name","nameLocation":"289:4:11","nodeType":"VariableDeclaration","scope":1456,"src":"274:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1328,"name":"string","nodeType":"ElementaryTypeName","src":"274:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1331,"mutability":"mutable","name":"station","nameLocation":"314:7:11","nodeType":"VariableDeclaration","scope":1456,"src":"299:22:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1330,"name":"string","nodeType":"ElementaryTypeName","src":"299:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1333,"mutability":"mutable","name":"rank","nameLocation":"342:4:11","nodeType":"VariableDeclaration","scope":1456,"src":"327:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1332,"name":"string","nodeType":"ElementaryTypeName","src":"327:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1335,"mutability":"mutable","name":"badgeNumber","nameLocation":"368:11:11","nodeType":"VariableDeclaration","scope":1456,"src":"352:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"352:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1337,"mutability":"mutable","name":"score","nameLocation":"400:5:11","nodeType":"VariableDeclaration","scope":1456,"src":"385:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1336,"name":"uint16","nodeType":"ElementaryTypeName","src":"385:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"private"},{"body":{"id":1364,"nodeType":"Block","src":"550:115:11","statements":[{"expression":{"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1348,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"560:4:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1349,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"567:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"560:12:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1351,"nodeType":"ExpressionStatement","src":"560:12:11"},{"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1352,"name":"station","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"582:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1353,"name":"station_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"592:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"582:18:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1355,"nodeType":"ExpressionStatement","src":"582:18:11"},{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1356,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"610:4:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1357,"name":"rank_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"617:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"610:12:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1359,"nodeType":"ExpressionStatement","src":"610:12:11"},{"expression":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1360,"name":"badgeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"632:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1361,"name":"badgeNumber_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"646:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"632:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1363,"nodeType":"ExpressionStatement","src":"632:26:11"}]},"id":1365,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"name_","nameLocation":"447:5:11","nodeType":"VariableDeclaration","scope":1365,"src":"433:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1338,"name":"string","nodeType":"ElementaryTypeName","src":"433:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"station_","nameLocation":"476:8:11","nodeType":"VariableDeclaration","scope":1365,"src":"462:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1340,"name":"string","nodeType":"ElementaryTypeName","src":"462:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"rank_","nameLocation":"508:5:11","nodeType":"VariableDeclaration","scope":1365,"src":"494:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1342,"name":"string","nodeType":"ElementaryTypeName","src":"494:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"badgeNumber_","nameLocation":"531:12:11","nodeType":"VariableDeclaration","scope":1365,"src":"523:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"423:126:11"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"550:0:11"},"scope":1456,"src":"412:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1374,"nodeType":"Block","src":"716:31:11","statements":[{"expression":{"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1370,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"726:5:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1371,"name":"score_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"734:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"726:14:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":1373,"nodeType":"ExpressionStatement","src":"726:14:11"}]},"functionSelector":"17fd2967","id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"updateScore","nameLocation":"680:11:11","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"score_","nameLocation":"699:6:11","nodeType":"VariableDeclaration","scope":1375,"src":"692:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1366,"name":"uint16","nodeType":"ElementaryTypeName","src":"692:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"691:15:11"},"returnParameters":{"id":1369,"nodeType":"ParameterList","parameters":[],"src":"716:0:11"},"scope":1456,"src":"671:76:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1384,"nodeType":"Block","src":"803:29:11","statements":[{"expression":{"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1380,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"813:4:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1381,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"820:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"813:12:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1383,"nodeType":"ExpressionStatement","src":"813:12:11"}]},"functionSelector":"5353a2d8","id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"changeName","nameLocation":"762:10:11","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"name_","nameLocation":"787:5:11","nodeType":"VariableDeclaration","scope":1385,"src":"773:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1376,"name":"string","nodeType":"ElementaryTypeName","src":"773:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"772:21:11"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"803:0:11"},"scope":1456,"src":"753:79:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1394,"nodeType":"Block","src":"894:35:11","statements":[{"expression":{"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1390,"name":"station","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"904:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1391,"name":"station_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"914:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"904:18:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1393,"nodeType":"ExpressionStatement","src":"904:18:11"}]},"functionSelector":"ba005a8b","id":1395,"implemented":true,"kind":"function","modifiers":[],"name":"changeStation","nameLocation":"847:13:11","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"station_","nameLocation":"875:8:11","nodeType":"VariableDeclaration","scope":1395,"src":"861:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1386,"name":"string","nodeType":"ElementaryTypeName","src":"861:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"860:24:11"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"894:0:11"},"scope":1456,"src":"838:91:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1404,"nodeType":"Block","src":"985:29:11","statements":[{"expression":{"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1400,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"995:4:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1401,"name":"rank_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"1002:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"995:12:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1403,"nodeType":"ExpressionStatement","src":"995:12:11"}]},"functionSelector":"497b7f80","id":1405,"implemented":true,"kind":"function","modifiers":[],"name":"changeRank","nameLocation":"944:10:11","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"rank_","nameLocation":"969:5:11","nodeType":"VariableDeclaration","scope":1405,"src":"955:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1396,"name":"string","nodeType":"ElementaryTypeName","src":"955:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"954:21:11"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"985:0:11"},"scope":1456,"src":"935:79:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1414,"nodeType":"Block","src":"1078:43:11","statements":[{"expression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1410,"name":"badgeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"1088:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1411,"name":"badgeNumber_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"1102:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1088:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1413,"nodeType":"ExpressionStatement","src":"1088:26:11"}]},"functionSelector":"9469ae04","id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"changeBadgeNumber","nameLocation":"1029:17:11","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"badgeNumber_","nameLocation":"1055:12:11","nodeType":"VariableDeclaration","scope":1415,"src":"1047:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1047:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1046:22:11"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[],"src":"1078:0:11"},"scope":1456,"src":"1020:101:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1422,"nodeType":"Block","src":"1183:28:11","statements":[{"expression":{"id":1420,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1200:4:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1419,"id":1421,"nodeType":"Return","src":"1193:11:11"}]},"functionSelector":"17d7de7c","id":1423,"implemented":true,"kind":"function","modifiers":[],"name":"getName","nameLocation":"1136:7:11","nodeType":"FunctionDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"1143:2:11"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1423,"src":"1168:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1417,"name":"string","nodeType":"ElementaryTypeName","src":"1168:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1167:15:11"},"scope":1456,"src":"1127:84:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1430,"nodeType":"Block","src":"1276:31:11","statements":[{"expression":{"id":1428,"name":"station","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"1293:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1427,"id":1429,"nodeType":"Return","src":"1286:14:11"}]},"functionSelector":"7c8013ea","id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"getStation","nameLocation":"1226:10:11","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"1236:2:11"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"1261:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1425,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:15:11"},"scope":1456,"src":"1217:90:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1438,"nodeType":"Block","src":"1369:28:11","statements":[{"expression":{"id":1436,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"1386:4:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1435,"id":1437,"nodeType":"Return","src":"1379:11:11"}]},"functionSelector":"d303e7b2","id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"getRank","nameLocation":"1322:7:11","nodeType":"FunctionDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[],"src":"1329:2:11"},"returnParameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1439,"src":"1354:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1433,"name":"string","nodeType":"ElementaryTypeName","src":"1354:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1353:15:11"},"scope":1456,"src":"1313:84:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1446,"nodeType":"Block","src":"1460:35:11","statements":[{"expression":{"id":1444,"name":"badgeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"1477:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1443,"id":1445,"nodeType":"Return","src":"1470:18:11"}]},"functionSelector":"1f89362d","id":1447,"implemented":true,"kind":"function","modifiers":[],"name":"getBadgeNumber","nameLocation":"1412:14:11","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"1426:2:11"},"returnParameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"1451:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1451:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1450:9:11"},"scope":1456,"src":"1403:92:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1454,"nodeType":"Block","src":"1551:29:11","statements":[{"expression":{"id":1452,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"1568:5:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":1451,"id":1453,"nodeType":"Return","src":"1561:12:11"}]},"functionSelector":"afd82067","id":1455,"implemented":true,"kind":"function","modifiers":[],"name":"getScore","nameLocation":"1510:8:11","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[],"src":"1518:2:11"},"returnParameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"1543:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1449,"name":"uint16","nodeType":"ElementaryTypeName","src":"1543:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1542:8:11"},"scope":1456,"src":"1501:79:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1457,"src":"251:1332:11","usedErrors":[]}],"src":"32:1552:11"},"compiler":{"name":"solc","version":"0.8.17+commit.8df45f5f.Emscripten.clang"},"networks":{},"schemaVersion":"3.4.10","updatedAt":"2022-11-28T05:49:12.037Z","devdoc":{"author":"Samin Yaser","kind":"dev","methods":{},"title":"Police","version":1},"userdoc":{"kind":"user","methods":{},"notice":"Profile of a police officer","version":1}}');

/***/ }),

/***/ "./build/contracts/PoliceFactory.json":
/*!********************************************!*\
  !*** ./build/contracts/PoliceFactory.json ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"PoliceFactory","abi":[{"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"station_","type":"string"},{"internalType":"string","name":"rank_","type":"string"},{"internalType":"uint256","name":"badgeNumber_","type":"uint256"}],"name":"createNewPolice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"ticket","type":"address"}],"name":"addTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"police","type":"address"}],"name":"getPoliceProfile","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"police","type":"address"}],"name":"getAllTickets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"police","type":"address"}],"name":"getActiveTickets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function","constant":true}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.17+commit.8df45f5f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"ticket\\",\\"type\\":\\"address\\"}],\\"name\\":\\"addTicket\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_address\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"name_\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"station_\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"rank_\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"badgeNumber_\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createNewPolice\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"police\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getActiveTickets\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"police\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getAllTickets\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"police\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getPoliceProfile\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/PoliceFactory.sol\\":\\"PoliceFactory\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@openzeppelin/contracts/access/AccessControl.sol\\":{\\"keccak256\\":\\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\\",\\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\\"]},\\"@openzeppelin/contracts/access/IAccessControl.sol\\":{\\"keccak256\\":\\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\\",\\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\\"]},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"keccak256\\":\\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\\",\\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\\"]},\\"@openzeppelin/contracts/utils/Strings.sol\\":{\\"keccak256\\":\\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\\",\\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\\"]},\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\":{\\"keccak256\\":\\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\\",\\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\\"]},\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\":{\\"keccak256\\":\\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\\",\\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\\"]},\\"project:/contracts/Police.sol\\":{\\"keccak256\\":\\"0xdcb19c00ecc15171a194d20792cfa7964f0bca2abba1b7e115833ecc35e46b94\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://f71bda1b666dc88d54ffd00c6d3c1fb37b65a97f19547857e26f7fb0888e68e8\\",\\"dweb:/ipfs/QmRgXqHpWHYfW1GpHqMDfhhKRNoJj1xSWQ4z1RUV5NFzDZ\\"]},\\"project:/contracts/PoliceFactory.sol\\":{\\"keccak256\\":\\"0x627cd9c66afd5f6f6dda255a516b5457d8c46f9b22e2bf7117fc690c89319cca\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://0455827e08ee2f671645e620f046d6d9a509deb8403e84453d9a56c9a112d0dd\\",\\"dweb:/ipfs/QmTyyrgVzDE5BMAJZxEQg5R9hBfrzXSDGmjHs2jLytxsPB\\"]},\\"project:/contracts/Ticket.sol\\":{\\"keccak256\\":\\"0xec0c82ff2d770fdd771513e52f3344be8501b275ce8da8de02de16ee7d88cb27\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://61962dabb8696b4ceaddb33b9eb92ab9b7063afec37488396df852ea8cec93b3\\",\\"dweb:/ipfs/QmUyHtPW6oMrqwJGKca9Mtx7WAsLNAvbwyjjRBuTqwJgbR\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b50611e72806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806314fa96c81462000063578063698930a614620000995780637237a4b614620000cf57806377ce853414620000ef57806391d18b81146200010f575b600080fd5b6200008160048036038101906200007b919062000789565b62000145565b60405162000090919062000889565b60405180910390f35b620000b76004803603810190620000b1919062000789565b62000460565b604051620000c69190620008be565b60405180910390f35b620000ed6004803603810190620000e7919062000789565b620004c8565b005b6200010d600480360381019062000107919062000a78565b6200056b565b005b6200012d600480360381019062000127919062000789565b62000633565b6040516200013c919062000889565b60405180910390f35b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200020a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620001bf575b505050505090506000805b8251811015620002db5782818151811062000235576200023462000b5d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000288573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ae919062000bc9565b15620002c5578180620002c19062000c2a565b9250505b8080620002d29062000c2a565b91505062000215565b5060008167ffffffffffffffff811115620002fb57620002fa620008f6565b5b6040519080825280602002602001820160405280156200032a5781602001602082028036833780820191505090505b50905060005b8351811015620004545783818151811062000350576200034f62000b5d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c9919062000bc9565b156200043e57838181518110620003e557620003e462000b5d565b5b602002602001015182828151811062000403576200040262000b5d565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b80806200044b9062000c2a565b91505062000330565b50809350505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000848484846040516200057f9062000702565b6200058e949392919062000d11565b604051809103906000f080158015620005ab573d6000803e3d6000fd5b509050806000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620006f657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620006ab575b50505050509050919050565b6110c98062000d7483390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007518262000724565b9050919050565b620007638162000744565b81146200076f57600080fd5b50565b600081359050620007838162000758565b92915050565b600060208284031215620007a257620007a16200071a565b5b6000620007b28482850162000772565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b620007f28162000744565b82525050565b6000620008068383620007e7565b60208301905092915050565b6000602082019050919050565b60006200082c82620007bb565b620008388185620007c6565b93506200084583620007d7565b8060005b838110156200087c578151620008608882620007f8565b97506200086d8362000812565b92505060018101905062000849565b5085935050505092915050565b60006020820190508181036000830152620008a581846200081f565b905092915050565b620008b88162000744565b82525050565b6000602082019050620008d56000830184620008ad565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200093082620008e5565b810181811067ffffffffffffffff82111715620009525762000951620008f6565b5b80604052505050565b60006200096762000710565b905062000975828262000925565b919050565b600067ffffffffffffffff821115620009985762000997620008f6565b5b620009a382620008e5565b9050602081019050919050565b82818337600083830152505050565b6000620009d6620009d0846200097a565b6200095b565b905082815260208101848484011115620009f557620009f4620008e0565b5b62000a02848285620009b0565b509392505050565b600082601f83011262000a225762000a21620008db565b5b813562000a34848260208601620009bf565b91505092915050565b6000819050919050565b62000a528162000a3d565b811462000a5e57600080fd5b50565b60008135905062000a728162000a47565b92915050565b600080600080600060a0868803121562000a975762000a966200071a565b5b600062000aa78882890162000772565b955050602086013567ffffffffffffffff81111562000acb5762000aca6200071f565b5b62000ad98882890162000a0a565b945050604086013567ffffffffffffffff81111562000afd5762000afc6200071f565b5b62000b0b8882890162000a0a565b935050606086013567ffffffffffffffff81111562000b2f5762000b2e6200071f565b5b62000b3d8882890162000a0a565b925050608062000b508882890162000a61565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008115159050919050565b62000ba38162000b8c565b811462000baf57600080fd5b50565b60008151905062000bc38162000b98565b92915050565b60006020828403121562000be25762000be16200071a565b5b600062000bf28482850162000bb2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000c378262000a3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000c6c5762000c6b62000bfb565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000cb357808201518184015260208101905062000c96565b60008484015250505050565b600062000ccc8262000c77565b62000cd8818562000c82565b935062000cea81856020860162000c93565b62000cf581620008e5565b840191505092915050565b62000d0b8162000a3d565b82525050565b6000608082019050818103600083015262000d2d818762000cbf565b9050818103602083015262000d43818662000cbf565b9050818103604083015262000d59818562000cbf565b905062000d6a606083018462000d00565b9594505050505056fe60806040523480156200001157600080fd5b50604051620010c9380380620010c983398181016040528101906200003791906200024c565b83600090816200004891906200055c565b5082600190816200005a91906200055c565b5081600290816200006c91906200055c565b50806003819055505050505062000643565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e7826200009c565b810181811067ffffffffffffffff82111715620001095762000108620000ad565b5b80604052505050565b60006200011e6200007e565b90506200012c8282620000dc565b919050565b600067ffffffffffffffff8211156200014f576200014e620000ad565b5b6200015a826200009c565b9050602081019050919050565b60005b83811015620001875780820151818401526020810190506200016a565b60008484015250505050565b6000620001aa620001a48462000131565b62000112565b905082815260208101848484011115620001c957620001c862000097565b5b620001d684828562000167565b509392505050565b600082601f830112620001f657620001f562000092565b5b81516200020884826020860162000193565b91505092915050565b6000819050919050565b620002268162000211565b81146200023257600080fd5b50565b60008151905062000246816200021b565b92915050565b6000806000806080858703121562000269576200026862000088565b5b600085015167ffffffffffffffff8111156200028a57620002896200008d565b5b6200029887828801620001de565b945050602085015167ffffffffffffffff811115620002bc57620002bb6200008d565b5b620002ca87828801620001de565b935050604085015167ffffffffffffffff811115620002ee57620002ed6200008d565b5b620002fc87828801620001de565b92505060606200030f8782880162000235565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200036e57607f821691505b60208210810362000384576200038362000326565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003ee7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003af565b620003fa8683620003af565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200043d62000437620004318462000211565b62000412565b62000211565b9050919050565b6000819050919050565b62000459836200041c565b62000471620004688262000444565b848454620003bc565b825550505050565b600090565b6200048862000479565b620004958184846200044e565b505050565b5b81811015620004bd57620004b16000826200047e565b6001810190506200049b565b5050565b601f8211156200050c57620004d6816200038a565b620004e1846200039f565b81016020851015620004f1578190505b6200050962000500856200039f565b8301826200049a565b50505b505050565b600082821c905092915050565b6000620005316000198460080262000511565b1980831691505092915050565b60006200054c83836200051e565b9150826002028217905092915050565b62000567826200031b565b67ffffffffffffffff811115620005835762000582620000ad565b5b6200058f825462000355565b6200059c828285620004c1565b600060209050601f831160018114620005d45760008415620005bf578287015190505b620005cb85826200053e565b8655506200063b565b601f198416620005e4866200038a565b60005b828110156200060e57848901518255600182019150602085019450602081019050620005e7565b868310156200062e57848901516200062a601f8916826200051e565b8355505b6001600288020188555050505b505050505050565b610a7680620006536000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637c8013ea116100665780637c8013ea146101335780639469ae0414610151578063afd820671461016d578063ba005a8b1461018b578063d303e7b2146101a75761009e565b806317d7de7c146100a357806317fd2967146100c15780631f89362d146100dd578063497b7f80146100fb5780635353a2d814610117575b600080fd5b6100ab6101c5565b6040516100b89190610490565b60405180910390f35b6100db60048036038101906100d69190610500565b610257565b005b6100e5610277565b6040516100f29190610546565b60405180910390f35b61011560048036038101906101109190610696565b610281565b005b610131600480360381019061012c9190610696565b610294565b005b61013b6102a7565b6040516101489190610490565b60405180910390f35b61016b6004803603810190610166919061070b565b610339565b005b610175610343565b6040516101829190610747565b60405180910390f35b6101a560048036038101906101a09190610696565b61035b565b005b6101af61036e565b6040516101bc9190610490565b60405180910390f35b6060600080546101d490610791565b80601f016020809104026020016040519081016040528092919081815260200182805461020090610791565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050905090565b80600460006101000a81548161ffff021916908361ffff16021790555050565b6000600354905090565b8060029081610290919061096e565b5050565b80600090816102a3919061096e565b5050565b6060600180546102b690610791565b80601f01602080910402602001604051908101604052809291908181526020018280546102e290610791565b801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b5050505050905090565b8060038190555050565b6000600460009054906101000a900461ffff16905090565b806001908161036a919061096e565b5050565b60606002805461037d90610791565b80601f01602080910402602001604051908101604052809291908181526020018280546103a990610791565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561043a57808201518184015260208101905061041f565b60008484015250505050565b6000601f19601f8301169050919050565b600061046282610400565b61046c818561040b565b935061047c81856020860161041c565b61048581610446565b840191505092915050565b600060208201905081810360008301526104aa8184610457565b905092915050565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6104dd816104c6565b81146104e857600080fd5b50565b6000813590506104fa816104d4565b92915050565b600060208284031215610516576105156104bc565b5b6000610524848285016104eb565b91505092915050565b6000819050919050565b6105408161052d565b82525050565b600060208201905061055b6000830184610537565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105a382610446565b810181811067ffffffffffffffff821117156105c2576105c161056b565b5b80604052505050565b60006105d56104b2565b90506105e1828261059a565b919050565b600067ffffffffffffffff8211156106015761060061056b565b5b61060a82610446565b9050602081019050919050565b82818337600083830152505050565b6000610639610634846105e6565b6105cb565b90508281526020810184848401111561065557610654610566565b5b610660848285610617565b509392505050565b600082601f83011261067d5761067c610561565b5b813561068d848260208601610626565b91505092915050565b6000602082840312156106ac576106ab6104bc565b5b600082013567ffffffffffffffff8111156106ca576106c96104c1565b5b6106d684828501610668565b91505092915050565b6106e88161052d565b81146106f357600080fd5b50565b600081359050610705816106df565b92915050565b600060208284031215610721576107206104bc565b5b600061072f848285016106f6565b91505092915050565b610741816104c6565b82525050565b600060208201905061075c6000830184610738565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107a957607f821691505b6020821081036107bc576107bb610762565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107e7565b61082e86836107e7565b95508019841693508086168417925050509392505050565b6000819050919050565b600061086b6108666108618461052d565b610846565b61052d565b9050919050565b6000819050919050565b61088583610850565b61089961089182610872565b8484546107f4565b825550505050565b600090565b6108ae6108a1565b6108b981848461087c565b505050565b5b818110156108dd576108d26000826108a6565b6001810190506108bf565b5050565b601f821115610922576108f3816107c2565b6108fc846107d7565b8101602085101561090b578190505b61091f610917856107d7565b8301826108be565b50505b505050565b600082821c905092915050565b600061094560001984600802610927565b1980831691505092915050565b600061095e8383610934565b9150826002028217905092915050565b61097782610400565b67ffffffffffffffff8111156109905761098f61056b565b5b61099a8254610791565b6109a58282856108e1565b600060209050601f8311600181146109d857600084156109c6578287015190505b6109d08582610952565b865550610a38565b601f1984166109e6866107c2565b60005b82811015610a0e578489015182556001820191506020850194506020810190506109e9565b86831015610a2b5784890151610a27601f891682610934565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220e7d5dc4d44a12764801d89e3bdf6a1059213b9cedb737bb08009aea129d40ded64736f6c63430008110033a26469706673582212201d85e040e26ff9c9b416ab64141e3ff72a31676a1fb30447432f880e6576d08d64736f6c63430008110033","deployedBytecode":"0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806314fa96c81462000063578063698930a614620000995780637237a4b614620000cf57806377ce853414620000ef57806391d18b81146200010f575b600080fd5b6200008160048036038101906200007b919062000789565b62000145565b60405162000090919062000889565b60405180910390f35b620000b76004803603810190620000b1919062000789565b62000460565b604051620000c69190620008be565b60405180910390f35b620000ed6004803603810190620000e7919062000789565b620004c8565b005b6200010d600480360381019062000107919062000a78565b6200056b565b005b6200012d600480360381019062000127919062000789565b62000633565b6040516200013c919062000889565b60405180910390f35b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200020a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620001bf575b505050505090506000805b8251811015620002db5782818151811062000235576200023462000b5d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000288573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ae919062000bc9565b15620002c5578180620002c19062000c2a565b9250505b8080620002d29062000c2a565b91505062000215565b5060008167ffffffffffffffff811115620002fb57620002fa620008f6565b5b6040519080825280602002602001820160405280156200032a5781602001602082028036833780820191505090505b50905060005b8351811015620004545783818151811062000350576200034f62000b5d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c9919062000bc9565b156200043e57838181518110620003e557620003e462000b5d565b5b602002602001015182828151811062000403576200040262000b5d565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b80806200044b9062000c2a565b91505062000330565b50809350505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000848484846040516200057f9062000702565b6200058e949392919062000d11565b604051809103906000f080158015620005ab573d6000803e3d6000fd5b509050806000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620006f657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620006ab575b50505050509050919050565b6110c98062000d7483390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007518262000724565b9050919050565b620007638162000744565b81146200076f57600080fd5b50565b600081359050620007838162000758565b92915050565b600060208284031215620007a257620007a16200071a565b5b6000620007b28482850162000772565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b620007f28162000744565b82525050565b6000620008068383620007e7565b60208301905092915050565b6000602082019050919050565b60006200082c82620007bb565b620008388185620007c6565b93506200084583620007d7565b8060005b838110156200087c578151620008608882620007f8565b97506200086d8362000812565b92505060018101905062000849565b5085935050505092915050565b60006020820190508181036000830152620008a581846200081f565b905092915050565b620008b88162000744565b82525050565b6000602082019050620008d56000830184620008ad565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200093082620008e5565b810181811067ffffffffffffffff82111715620009525762000951620008f6565b5b80604052505050565b60006200096762000710565b905062000975828262000925565b919050565b600067ffffffffffffffff821115620009985762000997620008f6565b5b620009a382620008e5565b9050602081019050919050565b82818337600083830152505050565b6000620009d6620009d0846200097a565b6200095b565b905082815260208101848484011115620009f557620009f4620008e0565b5b62000a02848285620009b0565b509392505050565b600082601f83011262000a225762000a21620008db565b5b813562000a34848260208601620009bf565b91505092915050565b6000819050919050565b62000a528162000a3d565b811462000a5e57600080fd5b50565b60008135905062000a728162000a47565b92915050565b600080600080600060a0868803121562000a975762000a966200071a565b5b600062000aa78882890162000772565b955050602086013567ffffffffffffffff81111562000acb5762000aca6200071f565b5b62000ad98882890162000a0a565b945050604086013567ffffffffffffffff81111562000afd5762000afc6200071f565b5b62000b0b8882890162000a0a565b935050606086013567ffffffffffffffff81111562000b2f5762000b2e6200071f565b5b62000b3d8882890162000a0a565b925050608062000b508882890162000a61565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008115159050919050565b62000ba38162000b8c565b811462000baf57600080fd5b50565b60008151905062000bc38162000b98565b92915050565b60006020828403121562000be25762000be16200071a565b5b600062000bf28482850162000bb2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000c378262000a3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000c6c5762000c6b62000bfb565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000cb357808201518184015260208101905062000c96565b60008484015250505050565b600062000ccc8262000c77565b62000cd8818562000c82565b935062000cea81856020860162000c93565b62000cf581620008e5565b840191505092915050565b62000d0b8162000a3d565b82525050565b6000608082019050818103600083015262000d2d818762000cbf565b9050818103602083015262000d43818662000cbf565b9050818103604083015262000d59818562000cbf565b905062000d6a606083018462000d00565b9594505050505056fe60806040523480156200001157600080fd5b50604051620010c9380380620010c983398181016040528101906200003791906200024c565b83600090816200004891906200055c565b5082600190816200005a91906200055c565b5081600290816200006c91906200055c565b50806003819055505050505062000643565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e7826200009c565b810181811067ffffffffffffffff82111715620001095762000108620000ad565b5b80604052505050565b60006200011e6200007e565b90506200012c8282620000dc565b919050565b600067ffffffffffffffff8211156200014f576200014e620000ad565b5b6200015a826200009c565b9050602081019050919050565b60005b83811015620001875780820151818401526020810190506200016a565b60008484015250505050565b6000620001aa620001a48462000131565b62000112565b905082815260208101848484011115620001c957620001c862000097565b5b620001d684828562000167565b509392505050565b600082601f830112620001f657620001f562000092565b5b81516200020884826020860162000193565b91505092915050565b6000819050919050565b620002268162000211565b81146200023257600080fd5b50565b60008151905062000246816200021b565b92915050565b6000806000806080858703121562000269576200026862000088565b5b600085015167ffffffffffffffff8111156200028a57620002896200008d565b5b6200029887828801620001de565b945050602085015167ffffffffffffffff811115620002bc57620002bb6200008d565b5b620002ca87828801620001de565b935050604085015167ffffffffffffffff811115620002ee57620002ed6200008d565b5b620002fc87828801620001de565b92505060606200030f8782880162000235565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200036e57607f821691505b60208210810362000384576200038362000326565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003ee7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003af565b620003fa8683620003af565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200043d62000437620004318462000211565b62000412565b62000211565b9050919050565b6000819050919050565b62000459836200041c565b62000471620004688262000444565b848454620003bc565b825550505050565b600090565b6200048862000479565b620004958184846200044e565b505050565b5b81811015620004bd57620004b16000826200047e565b6001810190506200049b565b5050565b601f8211156200050c57620004d6816200038a565b620004e1846200039f565b81016020851015620004f1578190505b6200050962000500856200039f565b8301826200049a565b50505b505050565b600082821c905092915050565b6000620005316000198460080262000511565b1980831691505092915050565b60006200054c83836200051e565b9150826002028217905092915050565b62000567826200031b565b67ffffffffffffffff811115620005835762000582620000ad565b5b6200058f825462000355565b6200059c828285620004c1565b600060209050601f831160018114620005d45760008415620005bf578287015190505b620005cb85826200053e565b8655506200063b565b601f198416620005e4866200038a565b60005b828110156200060e57848901518255600182019150602085019450602081019050620005e7565b868310156200062e57848901516200062a601f8916826200051e565b8355505b6001600288020188555050505b505050505050565b610a7680620006536000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637c8013ea116100665780637c8013ea146101335780639469ae0414610151578063afd820671461016d578063ba005a8b1461018b578063d303e7b2146101a75761009e565b806317d7de7c146100a357806317fd2967146100c15780631f89362d146100dd578063497b7f80146100fb5780635353a2d814610117575b600080fd5b6100ab6101c5565b6040516100b89190610490565b60405180910390f35b6100db60048036038101906100d69190610500565b610257565b005b6100e5610277565b6040516100f29190610546565b60405180910390f35b61011560048036038101906101109190610696565b610281565b005b610131600480360381019061012c9190610696565b610294565b005b61013b6102a7565b6040516101489190610490565b60405180910390f35b61016b6004803603810190610166919061070b565b610339565b005b610175610343565b6040516101829190610747565b60405180910390f35b6101a560048036038101906101a09190610696565b61035b565b005b6101af61036e565b6040516101bc9190610490565b60405180910390f35b6060600080546101d490610791565b80601f016020809104026020016040519081016040528092919081815260200182805461020090610791565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050905090565b80600460006101000a81548161ffff021916908361ffff16021790555050565b6000600354905090565b8060029081610290919061096e565b5050565b80600090816102a3919061096e565b5050565b6060600180546102b690610791565b80601f01602080910402602001604051908101604052809291908181526020018280546102e290610791565b801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b5050505050905090565b8060038190555050565b6000600460009054906101000a900461ffff16905090565b806001908161036a919061096e565b5050565b60606002805461037d90610791565b80601f01602080910402602001604051908101604052809291908181526020018280546103a990610791565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561043a57808201518184015260208101905061041f565b60008484015250505050565b6000601f19601f8301169050919050565b600061046282610400565b61046c818561040b565b935061047c81856020860161041c565b61048581610446565b840191505092915050565b600060208201905081810360008301526104aa8184610457565b905092915050565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6104dd816104c6565b81146104e857600080fd5b50565b6000813590506104fa816104d4565b92915050565b600060208284031215610516576105156104bc565b5b6000610524848285016104eb565b91505092915050565b6000819050919050565b6105408161052d565b82525050565b600060208201905061055b6000830184610537565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105a382610446565b810181811067ffffffffffffffff821117156105c2576105c161056b565b5b80604052505050565b60006105d56104b2565b90506105e1828261059a565b919050565b600067ffffffffffffffff8211156106015761060061056b565b5b61060a82610446565b9050602081019050919050565b82818337600083830152505050565b6000610639610634846105e6565b6105cb565b90508281526020810184848401111561065557610654610566565b5b610660848285610617565b509392505050565b600082601f83011261067d5761067c610561565b5b813561068d848260208601610626565b91505092915050565b6000602082840312156106ac576106ab6104bc565b5b600082013567ffffffffffffffff8111156106ca576106c96104c1565b5b6106d684828501610668565b91505092915050565b6106e88161052d565b81146106f357600080fd5b50565b600081359050610705816106df565b92915050565b600060208284031215610721576107206104bc565b5b600061072f848285016106f6565b91505092915050565b610741816104c6565b82525050565b600060208201905061075c6000830184610738565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107a957607f821691505b6020821081036107bc576107bb610762565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107e7565b61082e86836107e7565b95508019841693508086168417925050509392505050565b6000819050919050565b600061086b6108666108618461052d565b610846565b61052d565b9050919050565b6000819050919050565b61088583610850565b61089961089182610872565b8484546107f4565b825550505050565b600090565b6108ae6108a1565b6108b981848461087c565b505050565b5b818110156108dd576108d26000826108a6565b6001810190506108bf565b5050565b601f821115610922576108f3816107c2565b6108fc846107d7565b8101602085101561090b578190505b61091f610917856107d7565b8301826108be565b50505b505050565b600082821c905092915050565b600061094560001984600802610927565b1980831691505092915050565b600061095e8383610934565b9150826002028217905092915050565b61097782610400565b67ffffffffffffffff8111156109905761098f61056b565b5b61099a8254610791565b6109a58282856108e1565b600060209050601f8311600181146109d857600084156109c6578287015190505b6109d08582610952565b865550610a38565b601f1984166109e6866107c2565b60005b82811015610a0e578489015182556001820191506020850194506020810190506109e9565b86831015610a2b5784890151610a27601f891682610934565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220e7d5dc4d44a12764801d89e3bdf6a1059213b9cedb737bb08009aea129d40ded64736f6c63430008110033a26469706673582212201d85e040e26ff9c9b416ab64141e3ff72a31676a1fb30447432f880e6576d08d64736f6c63430008110033","immutableReferences":{},"generatedSources":[],"deployedGeneratedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10764:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"748:87:17","statements":[{"nodeType":"YulAssignment","src":"758:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:17"},"nodeType":"YulFunctionCall","src":"767:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:17"},"nodeType":"YulFunctionCall","src":"796:33:17"},"nodeType":"YulExpressionStatement","src":"796:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:17","type":""}],"src":"696:139:17"},{"body":{"nodeType":"YulBlock","src":"907:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:17"},"nodeType":"YulFunctionCall","src":"955:79:17"},"nodeType":"YulExpressionStatement","src":"955:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:17"},"nodeType":"YulFunctionCall","src":"924:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:17"},"nodeType":"YulFunctionCall","src":"920:32:17"},"nodeType":"YulIf","src":"917:119:17"},{"nodeType":"YulBlock","src":"1046:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:17"},"nodeType":"YulFunctionCall","src":"1121:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:17"},"nodeType":"YulFunctionCall","src":"1100:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:17","type":""}],"src":"841:329:17"},{"body":{"nodeType":"YulBlock","src":"1250:40:17","statements":[{"nodeType":"YulAssignment","src":"1261:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1277:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1271:5:17"},"nodeType":"YulFunctionCall","src":"1271:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1261:6:17"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1233:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1243:6:17","type":""}],"src":"1176:114:17"},{"body":{"nodeType":"YulBlock","src":"1407:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1424:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1429:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1417:6:17"},"nodeType":"YulFunctionCall","src":"1417:19:17"},"nodeType":"YulExpressionStatement","src":"1417:19:17"},{"nodeType":"YulAssignment","src":"1445:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1464:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1469:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1460:3:17"},"nodeType":"YulFunctionCall","src":"1460:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1445:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1379:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1384:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1395:11:17","type":""}],"src":"1296:184:17"},{"body":{"nodeType":"YulBlock","src":"1558:60:17","statements":[{"nodeType":"YulAssignment","src":"1568:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1576:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1568:4:17"}]},{"nodeType":"YulAssignment","src":"1589:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1601:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1606:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1597:3:17"},"nodeType":"YulFunctionCall","src":"1597:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1589:4:17"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1545:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1553:4:17","type":""}],"src":"1486:132:17"},{"body":{"nodeType":"YulBlock","src":"1679:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1696:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1719:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1701:17:17"},"nodeType":"YulFunctionCall","src":"1701:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1689:6:17"},"nodeType":"YulFunctionCall","src":"1689:37:17"},"nodeType":"YulExpressionStatement","src":"1689:37:17"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1667:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1674:3:17","type":""}],"src":"1624:108:17"},{"body":{"nodeType":"YulBlock","src":"1818:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1862:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"1870:3:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"1828:33:17"},"nodeType":"YulFunctionCall","src":"1828:46:17"},"nodeType":"YulExpressionStatement","src":"1828:46:17"},{"nodeType":"YulAssignment","src":"1883:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1901:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1906:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1897:3:17"},"nodeType":"YulFunctionCall","src":"1897:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"1883:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"1791:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1799:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"1807:10:17","type":""}],"src":"1738:179:17"},{"body":{"nodeType":"YulBlock","src":"1998:38:17","statements":[{"nodeType":"YulAssignment","src":"2008:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2020:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2025:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2016:3:17"},"nodeType":"YulFunctionCall","src":"2016:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"2008:4:17"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1985:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"1993:4:17","type":""}],"src":"1923:113:17"},{"body":{"nodeType":"YulBlock","src":"2196:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2206:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2268:5:17"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2220:47:17"},"nodeType":"YulFunctionCall","src":"2220:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2210:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2283:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2364:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2369:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2290:73:17"},"nodeType":"YulFunctionCall","src":"2290:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2283:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"2385:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2450:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2400:49:17"},"nodeType":"YulFunctionCall","src":"2400:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"2389:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2465:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"2479:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2469:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2555:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2569:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2596:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2590:5:17"},"nodeType":"YulFunctionCall","src":"2590:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"2573:13:17","type":""}]},{"nodeType":"YulAssignment","src":"2616:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"2667:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2682:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"2623:43:17"},"nodeType":"YulFunctionCall","src":"2623:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2616:3:17"}]},{"nodeType":"YulAssignment","src":"2699:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2762:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2709:52:17"},"nodeType":"YulFunctionCall","src":"2709:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2699:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2517:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"2520:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2514:2:17"},"nodeType":"YulFunctionCall","src":"2514:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2528:18:17","statements":[{"nodeType":"YulAssignment","src":"2530:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2539:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"2542:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2535:3:17"},"nodeType":"YulFunctionCall","src":"2535:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2530:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2499:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2501:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2510:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2505:1:17","type":""}]}]},"src":"2495:284:17"},{"nodeType":"YulAssignment","src":"2788:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"2795:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2788:3:17"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2175:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2182:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2191:3:17","type":""}],"src":"2072:732:17"},{"body":{"nodeType":"YulBlock","src":"2958:225:17","statements":[{"nodeType":"YulAssignment","src":"2968:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2980:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2991:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2976:3:17"},"nodeType":"YulFunctionCall","src":"2976:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2968:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3015:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3026:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3011:3:17"},"nodeType":"YulFunctionCall","src":"3011:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3034:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3040:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3030:3:17"},"nodeType":"YulFunctionCall","src":"3030:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3004:6:17"},"nodeType":"YulFunctionCall","src":"3004:47:17"},"nodeType":"YulExpressionStatement","src":"3004:47:17"},{"nodeType":"YulAssignment","src":"3060:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3162:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"3171:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3068:93:17"},"nodeType":"YulFunctionCall","src":"3068:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3060:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2930:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2942:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2953:4:17","type":""}],"src":"2810:373:17"},{"body":{"nodeType":"YulBlock","src":"3254:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3271:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3294:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3276:17:17"},"nodeType":"YulFunctionCall","src":"3276:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3264:6:17"},"nodeType":"YulFunctionCall","src":"3264:37:17"},"nodeType":"YulExpressionStatement","src":"3264:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3242:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3249:3:17","type":""}],"src":"3189:118:17"},{"body":{"nodeType":"YulBlock","src":"3411:124:17","statements":[{"nodeType":"YulAssignment","src":"3421:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3433:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3444:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3429:3:17"},"nodeType":"YulFunctionCall","src":"3429:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3421:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3501:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3514:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3525:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3510:3:17"},"nodeType":"YulFunctionCall","src":"3510:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3457:43:17"},"nodeType":"YulFunctionCall","src":"3457:71:17"},"nodeType":"YulExpressionStatement","src":"3457:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3383:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3395:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3406:4:17","type":""}],"src":"3313:222:17"},{"body":{"nodeType":"YulBlock","src":"3630:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3647:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3650:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3640:6:17"},"nodeType":"YulFunctionCall","src":"3640:12:17"},"nodeType":"YulExpressionStatement","src":"3640:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3541:117:17"},{"body":{"nodeType":"YulBlock","src":"3753:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3770:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3773:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3763:6:17"},"nodeType":"YulFunctionCall","src":"3763:12:17"},"nodeType":"YulExpressionStatement","src":"3763:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3664:117:17"},{"body":{"nodeType":"YulBlock","src":"3835:54:17","statements":[{"nodeType":"YulAssignment","src":"3845:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3863:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3870:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3859:3:17"},"nodeType":"YulFunctionCall","src":"3859:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3879:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3875:3:17"},"nodeType":"YulFunctionCall","src":"3875:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3855:3:17"},"nodeType":"YulFunctionCall","src":"3855:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3845:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3818:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3828:6:17","type":""}],"src":"3787:102:17"},{"body":{"nodeType":"YulBlock","src":"3923:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3943:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3933:6:17"},"nodeType":"YulFunctionCall","src":"3933:88:17"},"nodeType":"YulExpressionStatement","src":"3933:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4037:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4040:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4030:6:17"},"nodeType":"YulFunctionCall","src":"4030:15:17"},"nodeType":"YulExpressionStatement","src":"4030:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4061:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4064:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4054:6:17"},"nodeType":"YulFunctionCall","src":"4054:15:17"},"nodeType":"YulExpressionStatement","src":"4054:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3895:180:17"},{"body":{"nodeType":"YulBlock","src":"4124:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4134:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4156:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4186:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4164:21:17"},"nodeType":"YulFunctionCall","src":"4164:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:17"},"nodeType":"YulFunctionCall","src":"4152:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4138:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4303:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4305:16:17"},"nodeType":"YulFunctionCall","src":"4305:18:17"},"nodeType":"YulExpressionStatement","src":"4305:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4246:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"4258:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4243:2:17"},"nodeType":"YulFunctionCall","src":"4243:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4282:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4294:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4279:2:17"},"nodeType":"YulFunctionCall","src":"4279:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4240:2:17"},"nodeType":"YulFunctionCall","src":"4240:62:17"},"nodeType":"YulIf","src":"4237:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4341:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4345:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4334:6:17"},"nodeType":"YulFunctionCall","src":"4334:22:17"},"nodeType":"YulExpressionStatement","src":"4334:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4110:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"4118:4:17","type":""}],"src":"4081:281:17"},{"body":{"nodeType":"YulBlock","src":"4409:88:17","statements":[{"nodeType":"YulAssignment","src":"4419:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4429:18:17"},"nodeType":"YulFunctionCall","src":"4429:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4419:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4478:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"4486:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4458:19:17"},"nodeType":"YulFunctionCall","src":"4458:33:17"},"nodeType":"YulExpressionStatement","src":"4458:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4393:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4402:6:17","type":""}],"src":"4368:129:17"},{"body":{"nodeType":"YulBlock","src":"4570:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"4675:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4677:16:17"},"nodeType":"YulFunctionCall","src":"4677:18:17"},"nodeType":"YulExpressionStatement","src":"4677:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4647:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4655:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4644:2:17"},"nodeType":"YulFunctionCall","src":"4644:30:17"},"nodeType":"YulIf","src":"4641:56:17"},{"nodeType":"YulAssignment","src":"4707:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4737:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4715:21:17"},"nodeType":"YulFunctionCall","src":"4715:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4707:4:17"}]},{"nodeType":"YulAssignment","src":"4781:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4793:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"4799:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:17"},"nodeType":"YulFunctionCall","src":"4789:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4781:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4554:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4565:4:17","type":""}],"src":"4503:308:17"},{"body":{"nodeType":"YulBlock","src":"4881:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4904:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"4909:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4914:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4891:12:17"},"nodeType":"YulFunctionCall","src":"4891:30:17"},"nodeType":"YulExpressionStatement","src":"4891:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4941:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4946:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4937:3:17"},"nodeType":"YulFunctionCall","src":"4937:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"4955:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4930:6:17"},"nodeType":"YulFunctionCall","src":"4930:27:17"},"nodeType":"YulExpressionStatement","src":"4930:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4863:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4868:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4873:6:17","type":""}],"src":"4817:146:17"},{"body":{"nodeType":"YulBlock","src":"5053:341:17","statements":[{"nodeType":"YulAssignment","src":"5063:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5130:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5088:41:17"},"nodeType":"YulFunctionCall","src":"5088:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5072:15:17"},"nodeType":"YulFunctionCall","src":"5072:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5063:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5154:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"5161:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5147:6:17"},"nodeType":"YulFunctionCall","src":"5147:21:17"},"nodeType":"YulExpressionStatement","src":"5147:21:17"},{"nodeType":"YulVariableDeclaration","src":"5177:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5192:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5199:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5188:3:17"},"nodeType":"YulFunctionCall","src":"5188:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5181:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5242:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"5244:77:17"},"nodeType":"YulFunctionCall","src":"5244:79:17"},"nodeType":"YulExpressionStatement","src":"5244:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5223:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5228:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5219:3:17"},"nodeType":"YulFunctionCall","src":"5219:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"5237:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5216:2:17"},"nodeType":"YulFunctionCall","src":"5216:25:17"},"nodeType":"YulIf","src":"5213:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5371:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"5376:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5381:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5334:36:17"},"nodeType":"YulFunctionCall","src":"5334:54:17"},"nodeType":"YulExpressionStatement","src":"5334:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5026:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5031:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5039:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5047:5:17","type":""}],"src":"4969:425:17"},{"body":{"nodeType":"YulBlock","src":"5476:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"5525:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5527:77:17"},"nodeType":"YulFunctionCall","src":"5527:79:17"},"nodeType":"YulExpressionStatement","src":"5527:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5504:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5512:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5500:3:17"},"nodeType":"YulFunctionCall","src":"5500:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"5519:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5496:3:17"},"nodeType":"YulFunctionCall","src":"5496:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5489:6:17"},"nodeType":"YulFunctionCall","src":"5489:35:17"},"nodeType":"YulIf","src":"5486:122:17"},{"nodeType":"YulVariableDeclaration","src":"5617:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5644:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5631:12:17"},"nodeType":"YulFunctionCall","src":"5631:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5621:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5660:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5721:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5729:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5717:3:17"},"nodeType":"YulFunctionCall","src":"5717:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"5736:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"5744:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5669:47:17"},"nodeType":"YulFunctionCall","src":"5669:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5660:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5454:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5462:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5470:5:17","type":""}],"src":"5414:340:17"},{"body":{"nodeType":"YulBlock","src":"5805:32:17","statements":[{"nodeType":"YulAssignment","src":"5815:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5826:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5815:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5787:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5797:7:17","type":""}],"src":"5760:77:17"},{"body":{"nodeType":"YulBlock","src":"5886:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"5943:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5952:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5955:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5945:6:17"},"nodeType":"YulFunctionCall","src":"5945:12:17"},"nodeType":"YulExpressionStatement","src":"5945:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5909:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5934:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5916:17:17"},"nodeType":"YulFunctionCall","src":"5916:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5906:2:17"},"nodeType":"YulFunctionCall","src":"5906:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5899:6:17"},"nodeType":"YulFunctionCall","src":"5899:43:17"},"nodeType":"YulIf","src":"5896:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5879:5:17","type":""}],"src":"5843:122:17"},{"body":{"nodeType":"YulBlock","src":"6023:87:17","statements":[{"nodeType":"YulAssignment","src":"6033:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6055:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6042:12:17"},"nodeType":"YulFunctionCall","src":"6042:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6033:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6098:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6071:26:17"},"nodeType":"YulFunctionCall","src":"6071:33:17"},"nodeType":"YulExpressionStatement","src":"6071:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6001:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6009:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6017:5:17","type":""}],"src":"5971:139:17"},{"body":{"nodeType":"YulBlock","src":"6280:1287:17","statements":[{"body":{"nodeType":"YulBlock","src":"6327:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6329:77:17"},"nodeType":"YulFunctionCall","src":"6329:79:17"},"nodeType":"YulExpressionStatement","src":"6329:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6301:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6310:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6297:3:17"},"nodeType":"YulFunctionCall","src":"6297:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6322:3:17","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6293:3:17"},"nodeType":"YulFunctionCall","src":"6293:33:17"},"nodeType":"YulIf","src":"6290:120:17"},{"nodeType":"YulBlock","src":"6420:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6435:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6449:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6439:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6464:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6499:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6510:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:17"},"nodeType":"YulFunctionCall","src":"6495:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6519:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6474:20:17"},"nodeType":"YulFunctionCall","src":"6474:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6464:6:17"}]}]},{"nodeType":"YulBlock","src":"6547:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6562:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6593:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6604:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6589:3:17"},"nodeType":"YulFunctionCall","src":"6589:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6576:12:17"},"nodeType":"YulFunctionCall","src":"6576:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6566:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6655:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6657:77:17"},"nodeType":"YulFunctionCall","src":"6657:79:17"},"nodeType":"YulExpressionStatement","src":"6657:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6627:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6635:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6624:2:17"},"nodeType":"YulFunctionCall","src":"6624:30:17"},"nodeType":"YulIf","src":"6621:117:17"},{"nodeType":"YulAssignment","src":"6752:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6797:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6808:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6793:3:17"},"nodeType":"YulFunctionCall","src":"6793:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6817:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6762:30:17"},"nodeType":"YulFunctionCall","src":"6762:63:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6752:6:17"}]}]},{"nodeType":"YulBlock","src":"6845:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6860:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6891:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6902:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6887:3:17"},"nodeType":"YulFunctionCall","src":"6887:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6874:12:17"},"nodeType":"YulFunctionCall","src":"6874:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6864:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6953:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6955:77:17"},"nodeType":"YulFunctionCall","src":"6955:79:17"},"nodeType":"YulExpressionStatement","src":"6955:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6925:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6933:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6922:2:17"},"nodeType":"YulFunctionCall","src":"6922:30:17"},"nodeType":"YulIf","src":"6919:117:17"},{"nodeType":"YulAssignment","src":"7050:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7095:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7106:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7091:3:17"},"nodeType":"YulFunctionCall","src":"7091:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7115:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7060:30:17"},"nodeType":"YulFunctionCall","src":"7060:63:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7050:6:17"}]}]},{"nodeType":"YulBlock","src":"7143:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7158:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7189:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7200:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7185:3:17"},"nodeType":"YulFunctionCall","src":"7185:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7172:12:17"},"nodeType":"YulFunctionCall","src":"7172:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7162:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7251:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7253:77:17"},"nodeType":"YulFunctionCall","src":"7253:79:17"},"nodeType":"YulExpressionStatement","src":"7253:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7223:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7231:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7220:2:17"},"nodeType":"YulFunctionCall","src":"7220:30:17"},"nodeType":"YulIf","src":"7217:117:17"},{"nodeType":"YulAssignment","src":"7348:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7404:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:17"},"nodeType":"YulFunctionCall","src":"7389:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7413:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7358:30:17"},"nodeType":"YulFunctionCall","src":"7358:63:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7348:6:17"}]}]},{"nodeType":"YulBlock","src":"7441:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7456:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7470:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7460:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7487:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7522:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7533:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7518:3:17"},"nodeType":"YulFunctionCall","src":"7518:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7542:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7497:20:17"},"nodeType":"YulFunctionCall","src":"7497:53:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7487:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6218:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6229:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6241:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6249:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6257:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6265:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6273:6:17","type":""}],"src":"6116:1451:17"},{"body":{"nodeType":"YulBlock","src":"7601:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7618:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7621:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7611:6:17"},"nodeType":"YulFunctionCall","src":"7611:88:17"},"nodeType":"YulExpressionStatement","src":"7611:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7715:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7718:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7708:6:17"},"nodeType":"YulFunctionCall","src":"7708:15:17"},"nodeType":"YulExpressionStatement","src":"7708:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7739:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7742:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7732:6:17"},"nodeType":"YulFunctionCall","src":"7732:15:17"},"nodeType":"YulExpressionStatement","src":"7732:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7573:180:17"},{"body":{"nodeType":"YulBlock","src":"7801:48:17","statements":[{"nodeType":"YulAssignment","src":"7811:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7836:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7829:6:17"},"nodeType":"YulFunctionCall","src":"7829:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7822:6:17"},"nodeType":"YulFunctionCall","src":"7822:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7811:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7783:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7793:7:17","type":""}],"src":"7759:90:17"},{"body":{"nodeType":"YulBlock","src":"7895:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"7949:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7958:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7961:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7951:6:17"},"nodeType":"YulFunctionCall","src":"7951:12:17"},"nodeType":"YulExpressionStatement","src":"7951:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7918:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7940:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7925:14:17"},"nodeType":"YulFunctionCall","src":"7925:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7915:2:17"},"nodeType":"YulFunctionCall","src":"7915:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7908:6:17"},"nodeType":"YulFunctionCall","src":"7908:40:17"},"nodeType":"YulIf","src":"7905:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7888:5:17","type":""}],"src":"7855:116:17"},{"body":{"nodeType":"YulBlock","src":"8037:77:17","statements":[{"nodeType":"YulAssignment","src":"8047:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8062:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8056:5:17"},"nodeType":"YulFunctionCall","src":"8056:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8047:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8102:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"8078:23:17"},"nodeType":"YulFunctionCall","src":"8078:30:17"},"nodeType":"YulExpressionStatement","src":"8078:30:17"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8015:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8023:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8031:5:17","type":""}],"src":"7977:137:17"},{"body":{"nodeType":"YulBlock","src":"8194:271:17","statements":[{"body":{"nodeType":"YulBlock","src":"8240:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8242:77:17"},"nodeType":"YulFunctionCall","src":"8242:79:17"},"nodeType":"YulExpressionStatement","src":"8242:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8215:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8224:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8211:3:17"},"nodeType":"YulFunctionCall","src":"8211:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8236:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8207:3:17"},"nodeType":"YulFunctionCall","src":"8207:32:17"},"nodeType":"YulIf","src":"8204:119:17"},{"nodeType":"YulBlock","src":"8333:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8348:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8362:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8352:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8377:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8420:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8431:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8416:3:17"},"nodeType":"YulFunctionCall","src":"8416:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8440:7:17"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"8387:28:17"},"nodeType":"YulFunctionCall","src":"8387:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8377:6:17"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8164:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8175:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8187:6:17","type":""}],"src":"8120:345:17"},{"body":{"nodeType":"YulBlock","src":"8499:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8516:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8519:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8509:6:17"},"nodeType":"YulFunctionCall","src":"8509:88:17"},"nodeType":"YulExpressionStatement","src":"8509:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8613:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8606:6:17"},"nodeType":"YulFunctionCall","src":"8606:15:17"},"nodeType":"YulExpressionStatement","src":"8606:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8637:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8640:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8630:6:17"},"nodeType":"YulFunctionCall","src":"8630:15:17"},"nodeType":"YulExpressionStatement","src":"8630:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8471:180:17"},{"body":{"nodeType":"YulBlock","src":"8700:190:17","statements":[{"nodeType":"YulAssignment","src":"8710:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8737:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8719:17:17"},"nodeType":"YulFunctionCall","src":"8719:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8710:5:17"}]},{"body":{"nodeType":"YulBlock","src":"8833:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8835:16:17"},"nodeType":"YulFunctionCall","src":"8835:18:17"},"nodeType":"YulExpressionStatement","src":"8835:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8758:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8765:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8755:2:17"},"nodeType":"YulFunctionCall","src":"8755:77:17"},"nodeType":"YulIf","src":"8752:103:17"},{"nodeType":"YulAssignment","src":"8864:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8875:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8882:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8871:3:17"},"nodeType":"YulFunctionCall","src":"8871:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8864:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8686:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8696:3:17","type":""}],"src":"8657:233:17"},{"body":{"nodeType":"YulBlock","src":"8955:40:17","statements":[{"nodeType":"YulAssignment","src":"8966:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8982:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8976:5:17"},"nodeType":"YulFunctionCall","src":"8976:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8966:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8938:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8948:6:17","type":""}],"src":"8896:99:17"},{"body":{"nodeType":"YulBlock","src":"9097:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9114:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9119:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9107:6:17"},"nodeType":"YulFunctionCall","src":"9107:19:17"},"nodeType":"YulExpressionStatement","src":"9107:19:17"},{"nodeType":"YulAssignment","src":"9135:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9154:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9159:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9150:3:17"},"nodeType":"YulFunctionCall","src":"9150:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9135:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9069:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"9074:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9085:11:17","type":""}],"src":"9001:169:17"},{"body":{"nodeType":"YulBlock","src":"9238:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9248:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9257:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9252:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9317:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9342:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"9347:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9338:3:17"},"nodeType":"YulFunctionCall","src":"9338:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9361:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"9366:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9357:3:17"},"nodeType":"YulFunctionCall","src":"9357:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9351:5:17"},"nodeType":"YulFunctionCall","src":"9351:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9331:6:17"},"nodeType":"YulFunctionCall","src":"9331:39:17"},"nodeType":"YulExpressionStatement","src":"9331:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9278:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"9281:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9275:2:17"},"nodeType":"YulFunctionCall","src":"9275:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9289:19:17","statements":[{"nodeType":"YulAssignment","src":"9291:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9300:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"9303:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9296:3:17"},"nodeType":"YulFunctionCall","src":"9296:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9291:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"9271:3:17","statements":[]},"src":"9267:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9400:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9405:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9396:3:17"},"nodeType":"YulFunctionCall","src":"9396:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"9414:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9389:6:17"},"nodeType":"YulFunctionCall","src":"9389:27:17"},"nodeType":"YulExpressionStatement","src":"9389:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9220:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9225:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"9230:6:17","type":""}],"src":"9176:246:17"},{"body":{"nodeType":"YulBlock","src":"9520:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9530:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9577:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9544:32:17"},"nodeType":"YulFunctionCall","src":"9544:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9534:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9592:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9658:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9663:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9599:58:17"},"nodeType":"YulFunctionCall","src":"9599:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9592:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9718:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9725:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9714:3:17"},"nodeType":"YulFunctionCall","src":"9714:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"9732:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9737:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9679:34:17"},"nodeType":"YulFunctionCall","src":"9679:65:17"},"nodeType":"YulExpressionStatement","src":"9679:65:17"},{"nodeType":"YulAssignment","src":"9753:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9764:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9791:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9769:21:17"},"nodeType":"YulFunctionCall","src":"9769:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9760:3:17"},"nodeType":"YulFunctionCall","src":"9760:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9753:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9501:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9508:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9516:3:17","type":""}],"src":"9428:377:17"},{"body":{"nodeType":"YulBlock","src":"9876:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9893:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9916:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9898:17:17"},"nodeType":"YulFunctionCall","src":"9898:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9886:6:17"},"nodeType":"YulFunctionCall","src":"9886:37:17"},"nodeType":"YulExpressionStatement","src":"9886:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9864:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9871:3:17","type":""}],"src":"9811:118:17"},{"body":{"nodeType":"YulBlock","src":"10177:584:17","statements":[{"nodeType":"YulAssignment","src":"10187:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10199:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10210:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10195:3:17"},"nodeType":"YulFunctionCall","src":"10195:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10187:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10235:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10246:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10231:3:17"},"nodeType":"YulFunctionCall","src":"10231:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10254:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10260:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10250:3:17"},"nodeType":"YulFunctionCall","src":"10250:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10224:6:17"},"nodeType":"YulFunctionCall","src":"10224:47:17"},"nodeType":"YulExpressionStatement","src":"10224:47:17"},{"nodeType":"YulAssignment","src":"10280:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10352:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"10361:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10288:63:17"},"nodeType":"YulFunctionCall","src":"10288:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10280:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10387:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10398:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10383:3:17"},"nodeType":"YulFunctionCall","src":"10383:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10407:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10413:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10403:3:17"},"nodeType":"YulFunctionCall","src":"10403:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10376:6:17"},"nodeType":"YulFunctionCall","src":"10376:48:17"},"nodeType":"YulExpressionStatement","src":"10376:48:17"},{"nodeType":"YulAssignment","src":"10433:86:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10505:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"10514:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10441:63:17"},"nodeType":"YulFunctionCall","src":"10441:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10433:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10540:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10551:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10536:3:17"},"nodeType":"YulFunctionCall","src":"10536:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10560:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10566:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10556:3:17"},"nodeType":"YulFunctionCall","src":"10556:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10529:6:17"},"nodeType":"YulFunctionCall","src":"10529:48:17"},"nodeType":"YulExpressionStatement","src":"10529:48:17"},{"nodeType":"YulAssignment","src":"10586:86:17","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10658:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"10667:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10594:63:17"},"nodeType":"YulFunctionCall","src":"10594:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10586:4:17"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10726:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10739:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10750:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10735:3:17"},"nodeType":"YulFunctionCall","src":"10735:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10682:43:17"},"nodeType":"YulFunctionCall","src":"10682:72:17"},"nodeType":"YulExpressionStatement","src":"10682:72:17"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10125:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10137:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10145:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10153:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10161:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10172:4:17","type":""}],"src":"9935:826:17"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_uint160(value) -> cleaned {\\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\\n    }\\n\\n    function cleanup_t_address(value) -> cleaned {\\n        cleaned := cleanup_t_uint160(value)\\n    }\\n\\n    function validator_revert_t_address(value) {\\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_address(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_address(value)\\n    }\\n\\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\\n        data := ptr\\n\\n        data := add(ptr, 0x20)\\n\\n    }\\n\\n    function abi_encode_t_address_to_t_address(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\\n        abi_encode_t_address_to_t_address(value0, pos)\\n        updatedPos := add(pos, 0x20)\\n    }\\n\\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\\n        next := add(ptr, 0x20)\\n    }\\n\\n    // address[] -> address[]\\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\\n        let srcPtr := baseRef\\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\\n        {\\n            let elementValue0 := mload(srcPtr)\\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\\n        }\\n        end := pos\\n    }\\n\\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\\n        calldatacopy(dst, src, length)\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := calldataload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function validator_revert_t_uint256(value) {\\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint256(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint256(value)\\n    }\\n\\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 32))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 64))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 96))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 128\\n\\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function panic_error_0x32() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x32)\\n        revert(0, 0x24)\\n    }\\n\\n    function cleanup_t_bool(value) -> cleaned {\\n        cleaned := iszero(iszero(value))\\n    }\\n\\n    function validator_revert_t_bool(value) {\\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\\n        value := mload(offset)\\n        validator_revert_t_bool(value)\\n    }\\n\\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function panic_error_0x11() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x11)\\n        revert(0, 0x24)\\n    }\\n\\n    function increment_t_uint256(value) -> ret {\\n        value := cleanup_t_uint256(value)\\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\\n        ret := add(value, 1)\\n    }\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\\n        let length := array_length_t_string_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\\n        end := add(pos, round_up_to_mul_of_32(length))\\n    }\\n\\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_uint256(value))\\n    }\\n\\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\\n        tail := add(headStart, 128)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\\n\\n        mstore(add(headStart, 32), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\\n\\n        mstore(add(headStart, 64), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\\n\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"sourceMap":"104:1668:12:-:0;;;;;;;;;;;;;;;;;;;","deployedSourceMap":"104:1668:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1113:656;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;855:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;584:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;253:325;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;981:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1113:656;1177:16;1205:24;1232:15;:23;1248:6;1232:23;;;;;;;;;;;;;;;1205:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1266:27;1313:9;1308:164;1332:7;:14;1328:1;:18;1308:164;;;1378:7;1386:1;1378:10;;;;;;;;:::i;:::-;;;;;;;;1371:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1367:95;;;1426:21;;;;;:::i;:::-;;;;1367:95;1348:3;;;;;:::i;:::-;;;;1308:164;;;;1482:30;1529:19;1515:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1482:67;;1565:9;1560:172;1584:7;:14;1580:1;:18;1560:172;;;1630:7;1638:1;1630:10;;;;;;;;:::i;:::-;;;;;;;;1623:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1619:103;;;1697:7;1705:1;1697:10;;;;;;;;:::i;:::-;;;;;;;;1678:13;1692:1;1678:16;;;;;;;;:::i;:::-;;;;;;;:29;;;;;;;;;;;1619:103;1600:3;;;;;:::i;:::-;;;;1560:172;;;;1749:13;1742:20;;;;;1113:656;;;:::o;855:120::-;919:7;945:15;:23;961:6;945:23;;;;;;;;;;;;;;;;;;;;;;;;;938:30;;855:120;;;:::o;584:119::-;656:15;:27;672:10;656:27;;;;;;;;;;;;;;;689:6;656:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;584:119;:::o;253:325::-;453:13;480:5;487:8;497:5;504:12;469:48;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;453:64;;564:6;528:15;:25;544:8;528:25;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;443:135;253:325;;;;;:::o;981:126::-;1042:16;1077:15;:23;1093:6;1077:23;;;;;;;;;;;;;;;1070:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;981:126;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:114::-;1243:6;1277:5;1271:12;1261:22;;1176:114;;;:::o;1296:184::-;1395:11;1429:6;1424:3;1417:19;1469:4;1464:3;1460:14;1445:29;;1296:184;;;;:::o;1486:132::-;1553:4;1576:3;1568:11;;1606:4;1601:3;1597:14;1589:22;;1486:132;;;:::o;1624:108::-;1701:24;1719:5;1701:24;:::i;:::-;1696:3;1689:37;1624:108;;:::o;1738:179::-;1807:10;1828:46;1870:3;1862:6;1828:46;:::i;:::-;1906:4;1901:3;1897:14;1883:28;;1738:179;;;;:::o;1923:113::-;1993:4;2025;2020:3;2016:14;2008:22;;1923:113;;;:::o;2072:732::-;2191:3;2220:54;2268:5;2220:54;:::i;:::-;2290:86;2369:6;2364:3;2290:86;:::i;:::-;2283:93;;2400:56;2450:5;2400:56;:::i;:::-;2479:7;2510:1;2495:284;2520:6;2517:1;2514:13;2495:284;;;2596:6;2590:13;2623:63;2682:3;2667:13;2623:63;:::i;:::-;2616:70;;2709:60;2762:6;2709:60;:::i;:::-;2699:70;;2555:224;2542:1;2539;2535:9;2530:14;;2495:284;;;2499:14;2795:3;2788:10;;2196:608;;;2072:732;;;;:::o;2810:373::-;2953:4;2991:2;2980:9;2976:18;2968:26;;3040:9;3034:4;3030:20;3026:1;3015:9;3011:17;3004:47;3068:108;3171:4;3162:6;3068:108;:::i;:::-;3060:116;;2810:373;;;;:::o;3189:118::-;3276:24;3294:5;3276:24;:::i;:::-;3271:3;3264:37;3189:118;;:::o;3313:222::-;3406:4;3444:2;3433:9;3429:18;3421:26;;3457:71;3525:1;3514:9;3510:17;3501:6;3457:71;:::i;:::-;3313:222;;;;:::o;3541:117::-;3650:1;3647;3640:12;3664:117;3773:1;3770;3763:12;3787:102;3828:6;3879:2;3875:7;3870:2;3863:5;3859:14;3855:28;3845:38;;3787:102;;;:::o;3895:180::-;3943:77;3940:1;3933:88;4040:4;4037:1;4030:15;4064:4;4061:1;4054:15;4081:281;4164:27;4186:4;4164:27;:::i;:::-;4156:6;4152:40;4294:6;4282:10;4279:22;4258:18;4246:10;4243:34;4240:62;4237:88;;;4305:18;;:::i;:::-;4237:88;4345:10;4341:2;4334:22;4124:238;4081:281;;:::o;4368:129::-;4402:6;4429:20;;:::i;:::-;4419:30;;4458:33;4486:4;4478:6;4458:33;:::i;:::-;4368:129;;;:::o;4503:308::-;4565:4;4655:18;4647:6;4644:30;4641:56;;;4677:18;;:::i;:::-;4641:56;4715:29;4737:6;4715:29;:::i;:::-;4707:37;;4799:4;4793;4789:15;4781:23;;4503:308;;;:::o;4817:146::-;4914:6;4909:3;4904;4891:30;4955:1;4946:6;4941:3;4937:16;4930:27;4817:146;;;:::o;4969:425::-;5047:5;5072:66;5088:49;5130:6;5088:49;:::i;:::-;5072:66;:::i;:::-;5063:75;;5161:6;5154:5;5147:21;5199:4;5192:5;5188:16;5237:3;5228:6;5223:3;5219:16;5216:25;5213:112;;;5244:79;;:::i;:::-;5213:112;5334:54;5381:6;5376:3;5371;5334:54;:::i;:::-;5053:341;4969:425;;;;;:::o;5414:340::-;5470:5;5519:3;5512:4;5504:6;5500:17;5496:27;5486:122;;5527:79;;:::i;:::-;5486:122;5644:6;5631:20;5669:79;5744:3;5736:6;5729:4;5721:6;5717:17;5669:79;:::i;:::-;5660:88;;5476:278;5414:340;;;;:::o;5760:77::-;5797:7;5826:5;5815:16;;5760:77;;;:::o;5843:122::-;5916:24;5934:5;5916:24;:::i;:::-;5909:5;5906:35;5896:63;;5955:1;5952;5945:12;5896:63;5843:122;:::o;5971:139::-;6017:5;6055:6;6042:20;6033:29;;6071:33;6098:5;6071:33;:::i;:::-;5971:139;;;;:::o;6116:1451::-;6241:6;6249;6257;6265;6273;6322:3;6310:9;6301:7;6297:23;6293:33;6290:120;;;6329:79;;:::i;:::-;6290:120;6449:1;6474:53;6519:7;6510:6;6499:9;6495:22;6474:53;:::i;:::-;6464:63;;6420:117;6604:2;6593:9;6589:18;6576:32;6635:18;6627:6;6624:30;6621:117;;;6657:79;;:::i;:::-;6621:117;6762:63;6817:7;6808:6;6797:9;6793:22;6762:63;:::i;:::-;6752:73;;6547:288;6902:2;6891:9;6887:18;6874:32;6933:18;6925:6;6922:30;6919:117;;;6955:79;;:::i;:::-;6919:117;7060:63;7115:7;7106:6;7095:9;7091:22;7060:63;:::i;:::-;7050:73;;6845:288;7200:2;7189:9;7185:18;7172:32;7231:18;7223:6;7220:30;7217:117;;;7253:79;;:::i;:::-;7217:117;7358:63;7413:7;7404:6;7393:9;7389:22;7358:63;:::i;:::-;7348:73;;7143:288;7470:3;7497:53;7542:7;7533:6;7522:9;7518:22;7497:53;:::i;:::-;7487:63;;7441:119;6116:1451;;;;;;;;:::o;7573:180::-;7621:77;7618:1;7611:88;7718:4;7715:1;7708:15;7742:4;7739:1;7732:15;7759:90;7793:7;7836:5;7829:13;7822:21;7811:32;;7759:90;;;:::o;7855:116::-;7925:21;7940:5;7925:21;:::i;:::-;7918:5;7915:32;7905:60;;7961:1;7958;7951:12;7905:60;7855:116;:::o;7977:137::-;8031:5;8062:6;8056:13;8047:22;;8078:30;8102:5;8078:30;:::i;:::-;7977:137;;;;:::o;8120:345::-;8187:6;8236:2;8224:9;8215:7;8211:23;8207:32;8204:119;;;8242:79;;:::i;:::-;8204:119;8362:1;8387:61;8440:7;8431:6;8420:9;8416:22;8387:61;:::i;:::-;8377:71;;8333:125;8120:345;;;;:::o;8471:180::-;8519:77;8516:1;8509:88;8616:4;8613:1;8606:15;8640:4;8637:1;8630:15;8657:233;8696:3;8719:24;8737:5;8719:24;:::i;:::-;8710:33;;8765:66;8758:5;8755:77;8752:103;;8835:18;;:::i;:::-;8752:103;8882:1;8875:5;8871:13;8864:20;;8657:233;;;:::o;8896:99::-;8948:6;8982:5;8976:12;8966:22;;8896:99;;;:::o;9001:169::-;9085:11;9119:6;9114:3;9107:19;9159:4;9154:3;9150:14;9135:29;;9001:169;;;;:::o;9176:246::-;9257:1;9267:113;9281:6;9278:1;9275:13;9267:113;;;9366:1;9361:3;9357:11;9351:18;9347:1;9342:3;9338:11;9331:39;9303:2;9300:1;9296:10;9291:15;;9267:113;;;9414:1;9405:6;9400:3;9396:16;9389:27;9238:184;9176:246;;;:::o;9428:377::-;9516:3;9544:39;9577:5;9544:39;:::i;:::-;9599:71;9663:6;9658:3;9599:71;:::i;:::-;9592:78;;9679:65;9737:6;9732:3;9725:4;9718:5;9714:16;9679:65;:::i;:::-;9769:29;9791:6;9769:29;:::i;:::-;9764:3;9760:39;9753:46;;9520:285;9428:377;;;;:::o;9811:118::-;9898:24;9916:5;9898:24;:::i;:::-;9893:3;9886:37;9811:118;;:::o;9935:826::-;10172:4;10210:3;10199:9;10195:19;10187:27;;10260:9;10254:4;10250:20;10246:1;10235:9;10231:17;10224:47;10288:78;10361:4;10352:6;10288:78;:::i;:::-;10280:86;;10413:9;10407:4;10403:20;10398:2;10387:9;10383:18;10376:48;10441:78;10514:4;10505:6;10441:78;:::i;:::-;10433:86;;10566:9;10560:4;10556:20;10551:2;10540:9;10536:18;10529:48;10594:78;10667:4;10658:6;10594:78;:::i;:::-;10586:86;;10682:72;10750:2;10739:9;10735:18;10726:6;10682:72;:::i;:::-;9935:826;;;;;;;:::o","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\"./Ticket.sol\\";\\nimport \\"./Police.sol\\";\\n\\ncontract PoliceFactory {\\n\\n    mapping (address => address) private policeToProfile;\\n    mapping (address => address[]) private PoliceToTickets;\\n\\n    function createNewPolice(\\n        address _address,\\n        string memory name_,\\n        string memory station_,\\n        string memory rank_,\\n        uint256 badgeNumber_\\n    ) external\\n    {\\n        Police police = new Police(name_, station_, rank_, badgeNumber_);\\n\\n        policeToProfile[_address] = address(police);\\n    }\\n\\n    function addTicket(\\n        address ticket\\n    ) external\\n    {\\n        PoliceToTickets[msg.sender].push(ticket);\\n    }\\n\\n\\n    // function isValidJudge(address judge) external view returns(bool) {\\n    //     return judgeWalletToProfile[judge] != address(0);\\n    // }\\n\\n    function getPoliceProfile(address police) external view returns(address) {\\n        return policeToProfile[police];\\n    }\\n\\n    function getAllTickets(address police) external view returns(address[] memory) {\\n        return PoliceToTickets[police];\\n    }\\n\\n    function getActiveTickets(address police) external view returns(address[] memory) {\\n        address[] memory tickets = PoliceToTickets[police];\\n\\n        uint256 activeTicketsLength = 0;\\n\\n        for (uint256 i = 0; i < tickets.length; i++) {\\n            if (Ticket(tickets[i]).isTicketActive()) {\\n                activeTicketsLength++;\\n            }\\n        }\\n\\n        address[] memory activeTickets = new address[](activeTicketsLength);\\n\\n        for (uint256 i = 0; i < tickets.length; i++) {\\n            if (Ticket(tickets[i]).isTicketActive()) {\\n                activeTickets[i] = tickets[i];\\n            }\\n        }\\n\\n        return activeTickets;\\n    }\\n\\n}\\n","sourcePath":"C:\\\\Users\\\\samin\\\\Documents\\\\Projects\\\\AWT\\\\TraffiChain\\\\contracts\\\\PoliceFactory.sol","ast":{"absolutePath":"project:/contracts/PoliceFactory.sol","exportedSymbols":{"AccessControl":[319],"Context":[414],"ERC165":[664],"IAccessControl":[392],"IERC165":[676],"Police":[1456],"PoliceFactory":[1634],"Strings":[640],"Ticket":[2112],"Ticket__NoJudgeAssigned":[1641],"Ticket__inactive":[1639]},"id":1635,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1458,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"project:/contracts/Ticket.sol","file":"./Ticket.sol","id":1459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1635,"sourceUnit":2113,"src":"57:22:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"project:/contracts/Police.sol","file":"./Police.sol","id":1460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1635,"sourceUnit":1457,"src":"80:22:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PoliceFactory","contractDependencies":[1456],"contractKind":"contract","fullyImplemented":true,"id":1634,"linearizedBaseContracts":[1634],"name":"PoliceFactory","nameLocation":"113:13:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1464,"mutability":"mutable","name":"policeToProfile","nameLocation":"171:15:12","nodeType":"VariableDeclaration","scope":1634,"src":"134:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1463,"keyType":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"143:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"134:28:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"154:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1469,"mutability":"mutable","name":"PoliceToTickets","nameLocation":"231:15:12","nodeType":"VariableDeclaration","scope":1634,"src":"192:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":1468,"keyType":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"201:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"192:30:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueType":{"baseType":{"id":1466,"name":"address","nodeType":"ElementaryTypeName","src":"212:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1467,"nodeType":"ArrayTypeName","src":"212:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"private"},{"body":{"id":1503,"nodeType":"Block","src":"443:135:12","statements":[{"assignments":[1484],"declarations":[{"constant":false,"id":1484,"mutability":"mutable","name":"police","nameLocation":"460:6:12","nodeType":"VariableDeclaration","scope":1503,"src":"453:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Police_$1456","typeString":"contract Police"},"typeName":{"id":1483,"nodeType":"UserDefinedTypeName","pathNode":{"id":1482,"name":"Police","nameLocations":["453:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1456,"src":"453:6:12"},"referencedDeclaration":1456,"src":"453:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Police_$1456","typeString":"contract Police"}},"visibility":"internal"}],"id":1493,"initialValue":{"arguments":[{"id":1488,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"480:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1489,"name":"station_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"487:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1490,"name":"rank_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"497:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1491,"name":"badgeNumber_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"504:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"469:10:12","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_Police_$1456_$","typeString":"function (string memory,string memory,string memory,uint256) returns (contract Police)"},"typeName":{"id":1486,"nodeType":"UserDefinedTypeName","pathNode":{"id":1485,"name":"Police","nameLocations":["473:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1456,"src":"473:6:12"},"referencedDeclaration":1456,"src":"473:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Police_$1456","typeString":"contract Police"}}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"469:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Police_$1456","typeString":"contract Police"}},"nodeType":"VariableDeclarationStatement","src":"453:64:12"},{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1494,"name":"policeToProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"528:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1496,"indexExpression":{"id":1495,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"544:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"528:25:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1499,"name":"police","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"564:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Police_$1456","typeString":"contract Police"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Police_$1456","typeString":"contract Police"}],"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"556:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"556:7:12","typeDescriptions":{}}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"556:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"528:43:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1502,"nodeType":"ExpressionStatement","src":"528:43:12"}]},"functionSelector":"77ce8534","id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"createNewPolice","nameLocation":"262:15:12","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"_address","nameLocation":"295:8:12","nodeType":"VariableDeclaration","scope":1504,"src":"287:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"287:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1473,"mutability":"mutable","name":"name_","nameLocation":"327:5:12","nodeType":"VariableDeclaration","scope":1504,"src":"313:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1472,"name":"string","nodeType":"ElementaryTypeName","src":"313:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"station_","nameLocation":"356:8:12","nodeType":"VariableDeclaration","scope":1504,"src":"342:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1474,"name":"string","nodeType":"ElementaryTypeName","src":"342:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"rank_","nameLocation":"388:5:12","nodeType":"VariableDeclaration","scope":1504,"src":"374:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1476,"name":"string","nodeType":"ElementaryTypeName","src":"374:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"badgeNumber_","nameLocation":"411:12:12","nodeType":"VariableDeclaration","scope":1504,"src":"403:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"403:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"277:152:12"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[],"src":"443:0:12"},"scope":1634,"src":"253:325:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1517,"nodeType":"Block","src":"646:57:12","statements":[{"expression":{"arguments":[{"id":1514,"name":"ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"689:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":1509,"name":"PoliceToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"656:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1512,"indexExpression":{"expression":{"id":1510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"672:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"676:6:12","memberName":"sender","nodeType":"MemberAccess","src":"672:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"656:27:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"684:4:12","memberName":"push","nodeType":"MemberAccess","src":"656:32:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"656:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"ExpressionStatement","src":"656:40:12"}]},"functionSelector":"7237a4b6","id":1518,"implemented":true,"kind":"function","modifiers":[],"name":"addTicket","nameLocation":"593:9:12","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"ticket","nameLocation":"620:6:12","nodeType":"VariableDeclaration","scope":1518,"src":"612:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"602:30:12"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[],"src":"646:0:12"},"scope":1634,"src":"584:119:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1529,"nodeType":"Block","src":"928:47:12","statements":[{"expression":{"baseExpression":{"id":1525,"name":"policeToProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"945:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1527,"indexExpression":{"id":1526,"name":"police","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"961:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"945:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1524,"id":1528,"nodeType":"Return","src":"938:30:12"}]},"functionSelector":"698930a6","id":1530,"implemented":true,"kind":"function","modifiers":[],"name":"getPoliceProfile","nameLocation":"864:16:12","nodeType":"FunctionDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"police","nameLocation":"889:6:12","nodeType":"VariableDeclaration","scope":1530,"src":"881:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"881:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"880:16:12"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1530,"src":"919:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"919:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"918:9:12"},"scope":1634,"src":"855:120:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1542,"nodeType":"Block","src":"1060:47:12","statements":[{"expression":{"baseExpression":{"id":1538,"name":"PoliceToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1077:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1540,"indexExpression":{"id":1539,"name":"police","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"1093:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1077:23:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1537,"id":1541,"nodeType":"Return","src":"1070:30:12"}]},"functionSelector":"91d18b81","id":1543,"implemented":true,"kind":"function","modifiers":[],"name":"getAllTickets","nameLocation":"990:13:12","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"police","nameLocation":"1012:6:12","nodeType":"VariableDeclaration","scope":1543,"src":"1004:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1531,"name":"address","nodeType":"ElementaryTypeName","src":"1004:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1003:16:12"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1543,"src":"1042:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1535,"nodeType":"ArrayTypeName","src":"1042:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1041:18:12"},"scope":1634,"src":"981:126:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1632,"nodeType":"Block","src":"1195:574:12","statements":[{"assignments":[1555],"declarations":[{"constant":false,"id":1555,"mutability":"mutable","name":"tickets","nameLocation":"1222:7:12","nodeType":"VariableDeclaration","scope":1632,"src":"1205:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"1205:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1554,"nodeType":"ArrayTypeName","src":"1205:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1559,"initialValue":{"baseExpression":{"id":1556,"name":"PoliceToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1232:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":1558,"indexExpression":{"id":1557,"name":"police","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"1248:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1232:23:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1205:50:12"},{"assignments":[1561],"declarations":[{"constant":false,"id":1561,"mutability":"mutable","name":"activeTicketsLength","nameLocation":"1274:19:12","nodeType":"VariableDeclaration","scope":1632,"src":"1266:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1266:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1563,"initialValue":{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1266:31:12"},{"body":{"id":1587,"nodeType":"Block","src":"1353:119:12","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":1576,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"1378:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1578,"indexExpression":{"id":1577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"1386:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1378:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"Ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"1371:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ticket_$2112_$","typeString":"type(contract Ticket)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1371:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1390:14:12","memberName":"isTicketActive","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"1371:33:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1371:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1586,"nodeType":"IfStatement","src":"1367:95:12","trueBody":{"id":1585,"nodeType":"Block","src":"1408:54:12","statements":[{"expression":{"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1426:21:12","subExpression":{"id":1582,"name":"activeTicketsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1426:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1584,"nodeType":"ExpressionStatement","src":"1426:21:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"1328:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1569,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"1332:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1340:6:12","memberName":"length","nodeType":"MemberAccess","src":"1332:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1328:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1588,"initializationExpression":{"assignments":[1565],"declarations":[{"constant":false,"id":1565,"mutability":"mutable","name":"i","nameLocation":"1321:1:12","nodeType":"VariableDeclaration","scope":1588,"src":"1313:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1313:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1567,"initialValue":{"hexValue":"30","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1313:13:12"},"loopExpression":{"expression":{"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1348:3:12","subExpression":{"id":1572,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"1348:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1574,"nodeType":"ExpressionStatement","src":"1348:3:12"},"nodeType":"ForStatement","src":"1308:164:12"},{"assignments":[1593],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"activeTickets","nameLocation":"1499:13:12","nodeType":"VariableDeclaration","scope":1632,"src":"1482:30:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1592,"nodeType":"ArrayTypeName","src":"1482:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1599,"initialValue":{"arguments":[{"id":1597,"name":"activeTicketsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1529:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1515:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1595,"nodeType":"ArrayTypeName","src":"1519:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1515:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1482:67:12"},{"body":{"id":1628,"nodeType":"Block","src":"1605:127:12","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":1612,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"1630:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1614,"indexExpression":{"id":1613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1638:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1630:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1611,"name":"Ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"1623:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ticket_$2112_$","typeString":"type(contract Ticket)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1642:14:12","memberName":"isTicketActive","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"1623:33:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1627,"nodeType":"IfStatement","src":"1619:103:12","trueBody":{"id":1626,"nodeType":"Block","src":"1660:62:12","statements":[{"expression":{"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1618,"name":"activeTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"1678:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1620,"indexExpression":{"id":1619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1692:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1678:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1621,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"1697:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1623,"indexExpression":{"id":1622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1705:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1697:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1678:29:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1625,"nodeType":"ExpressionStatement","src":"1678:29:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1604,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1580:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1605,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"1584:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1592:6:12","memberName":"length","nodeType":"MemberAccess","src":"1584:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1580:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1629,"initializationExpression":{"assignments":[1601],"declarations":[{"constant":false,"id":1601,"mutability":"mutable","name":"i","nameLocation":"1573:1:12","nodeType":"VariableDeclaration","scope":1629,"src":"1565:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1565:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1603,"initialValue":{"hexValue":"30","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1565:13:12"},"loopExpression":{"expression":{"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1600:3:12","subExpression":{"id":1608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1600:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1610,"nodeType":"ExpressionStatement","src":"1600:3:12"},"nodeType":"ForStatement","src":"1560:172:12"},{"expression":{"id":1630,"name":"activeTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"1749:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1550,"id":1631,"nodeType":"Return","src":"1742:20:12"}]},"functionSelector":"14fa96c8","id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveTickets","nameLocation":"1122:16:12","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"police","nameLocation":"1147:6:12","nodeType":"VariableDeclaration","scope":1633,"src":"1139:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"1139:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1138:16:12"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"1177:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1548,"nodeType":"ArrayTypeName","src":"1177:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1176:18:12"},"scope":1634,"src":"1113:656:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1635,"src":"104:1668:12","usedErrors":[]}],"src":"32:1741:12"},"compiler":{"name":"solc","version":"0.8.17+commit.8df45f5f.Emscripten.clang"},"networks":{"5777":{"events":{},"links":{},"address":"0xdC3a945772EC02c5292968c92634eC9dD9c32FCA","transactionHash":"0x6af80005fc82b48fecbef33a767dd7ae1e8eff619b84a263ccdb985823628636"}},"schemaVersion":"3.4.10","updatedAt":"2022-11-28T05:49:28.007Z","networkType":"ethereum","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}}');

/***/ }),

/***/ "./build/contracts/Ticket.json":
/*!*************************************!*\
  !*** ./build/contracts/Ticket.json ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"Ticket","abi":[{"inputs":[{"internalType":"address","name":"driver_","type":"address"},{"internalType":"uint16[]","name":"penalty_clasues_","type":"uint16[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Ticket__NoJudgeAssigned","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"ticket_address","type":"address"},{"indexed":false,"internalType":"enum Ticket.Status","name":"status","type":"uint8"}],"name":"StatusChanged","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"judge_","type":"address"}],"name":"requestHearing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkStatus","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum Ticket.Status","name":"status_","type":"uint8"}],"name":"resolveTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updateStatusDemo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isPayable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isTicketActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDriverAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOfficerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getJudgeAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCharges","outputs":[{"internalType":"uint16[]","name":"","type":"uint16[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTicketInfo","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint16[]","name":"","type":"uint16[]"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.17+commit.8df45f5f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"driver_\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint16[]\\",\\"name\\":\\"penalty_clasues_\\",\\"type\\":\\"uint16[]\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"inputs\\":[],\\"name\\":\\"Ticket__NoJudgeAssigned\\",\\"type\\":\\"error\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"role\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":true,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"previousAdminRole\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":true,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"newAdminRole\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"RoleAdminChanged\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"role\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"RoleGranted\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"role\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"RoleRevoked\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"ticket_address\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"enum Ticket.Status\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"StatusChanged\\",\\"type\\":\\"event\\"},{\\"inputs\\":[],\\"name\\":\\"DEFAULT_ADMIN_ROLE\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"checkStatus\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getCharges\\",\\"outputs\\":[{\\"internalType\\":\\"uint16[]\\",\\"name\\":\\"\\",\\"type\\":\\"uint16[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getDriverAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getJudgeAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getOfficerAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"role\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getRoleAdmin\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getTicketInfo\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint16[]\\",\\"name\\":\\"\\",\\"type\\":\\"uint16[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"role\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"grantRole\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"role\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"hasRole\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"isPayable\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"isTicketActive\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"role\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"renounceRole\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"judge_\\",\\"type\\":\\"address\\"}],\\"name\\":\\"requestHearing\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"enum Ticket.Status\\",\\"name\\":\\"status_\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"resolveTicket\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"role\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"revokeRole\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes4\\",\\"name\\":\\"interfaceId\\",\\"type\\":\\"bytes4\\"}],\\"name\\":\\"supportsInterface\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"updateStatusDemo\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"author\\":\\"Samin Yaser\\",\\"kind\\":\\"dev\\",\\"methods\\":{\\"getRoleAdmin(bytes32)\\":{\\"details\\":\\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role\'s admin, use {_setRoleAdmin}.\\"},\\"grantRole(bytes32,address)\\":{\\"details\\":\\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``\'s admin role. May emit a {RoleGranted} event.\\"},\\"hasRole(bytes32,address)\\":{\\"details\\":\\"Returns `true` if `account` has been granted `role`.\\"},\\"renounceRole(bytes32,address)\\":{\\"details\\":\\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function\'s purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\\"},\\"requestHearing(address)\\":{\\"details\\":\\"must provide wallet address of the judge\\"},\\"revokeRole(bytes32,address)\\":{\\"details\\":\\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``\'s admin role. May emit a {RoleRevoked} event.\\"},\\"supportsInterface(bytes4)\\":{\\"details\\":\\"See {IERC165-supportsInterface}.\\"}},\\"title\\":\\"Ticket\\",\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{\\"requestHearing(address)\\":{\\"notice\\":\\"Owner can request a hearing in court\\"},\\"resolveTicket(uint8)\\":{\\"notice\\":\\"Resolves the ticket for good.\\"},\\"updateStatusDemo()\\":{\\"notice\\":\\"update the state of the ticket for demo\\"}},\\"notice\\":\\"You can use this contract to issue a traffic ticket\\",\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/Ticket.sol\\":\\"Ticket\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@openzeppelin/contracts/access/AccessControl.sol\\":{\\"keccak256\\":\\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\\",\\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\\"]},\\"@openzeppelin/contracts/access/IAccessControl.sol\\":{\\"keccak256\\":\\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\\",\\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\\"]},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"keccak256\\":\\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\\",\\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\\"]},\\"@openzeppelin/contracts/utils/Strings.sol\\":{\\"keccak256\\":\\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\\",\\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\\"]},\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\":{\\"keccak256\\":\\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\\",\\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\\"]},\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\":{\\"keccak256\\":\\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\\",\\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\\"]},\\"project:/contracts/Ticket.sol\\":{\\"keccak256\\":\\"0xec0c82ff2d770fdd771513e52f3344be8501b275ce8da8de02de16ee7d88cb27\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://61962dabb8696b4ceaddb33b9eb92ab9b7063afec37488396df852ea8cec93b3\\",\\"dweb:/ipfs/QmUyHtPW6oMrqwJGKca9Mtx7WAsLNAvbwyjjRBuTqwJgbR\\"]}},\\"version\\":1}","bytecode":"","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101165760003560e01c806391d14854116100a2578063bd4daf2a11610071578063bd4daf2a146102bb578063ce46e046146102d9578063d547741f146102f7578063e6bcc2cb14610313578063e885a0df1461033157610116565b806391d148541461023557806392ce0e0614610265578063953ef87414610281578063a217fddf1461029d57610116565b80632f2ff15d116100e95780632f2ff15d146101b757806336568abe146101d35780633b7104f2146101ef578063451b1c961461020d57806372c344b41461022b57610116565b806301ffc9a71461011b57806309a483431461014b578063121d3f4e14610169578063248a9ca314610187575b600080fd5b610135600480360381019061013091906116d1565b610354565b6040516101429190611719565b60405180910390f35b6101536103ce565b6040516101609190611719565b60405180910390f35b6101716103e5565b60405161017e9190611775565b60405180910390f35b6101a1600480360381019061019c91906117c6565b61040d565b6040516101ae9190611802565b60405180910390f35b6101d160048036038101906101cc9190611849565b61042c565b005b6101ed60048036038101906101e89190611849565b61044d565b005b6101f76104d0565b6040516102049190611919565b60405180910390f35b6102156108cd565b6040516102229190611a07565b60405180910390f35b61023361094d565b005b61024f600480360381019061024a9190611849565b6109ae565b60405161025c9190611719565b60405180910390f35b61027f600480360381019061027a9190611a29565b610a18565b005b61029b60048036038101906102969190611a7b565b610b98565b005b6102a5610e0c565b6040516102b29190611802565b60405180910390f35b6102c3610e13565b6040516102d09190611775565b60405180910390f35b6102e1610e3b565b6040516102ee9190611719565b60405180910390f35b610311600480360381019061030c9190611849565b610ee5565b005b61031b610f06565b6040516103289190611775565b60405180910390f35b610339610fb7565b60405161034b96959493929190611ac1565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c757506103c6826110c7565b5b9050919050565b6000600660019054906101000a900460ff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806000838152602001908152602001600020600101549050919050565b6104358261040d565b61043e81611131565b6104488383611145565b505050565b610455611225565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990611ba2565b60405180910390fd5b6104cc828261122d565b5050565b6060600060078111156104e6576104e5611bc2565b5b600660009054906101000a900460ff16600781111561050857610507611bc2565b5b0361054a576040518060400160405280600781526020017f50656e64696e670000000000000000000000000000000000000000000000000081525090506108ca565b6001600781111561055e5761055d611bc2565b5b600660009054906101000a900460ff1660078111156105805761057f611bc2565b5b036105c2576040518060400160405280600481526020017f4c6174650000000000000000000000000000000000000000000000000000000081525090506108ca565b600560078111156105d6576105d5611bc2565b5b600660009054906101000a900460ff1660078111156105f8576105f7611bc2565b5b0361063a576040518060400160405280600981526020017f4469736d6973736564000000000000000000000000000000000000000000000081525090506108ca565b6004600781111561064e5761064d611bc2565b5b600660009054906101000a900460ff1660078111156106705761066f611bc2565b5b036106b2576040518060400160405280600981526020017f446973707574696e67000000000000000000000000000000000000000000000081525090506108ca565b600260078111156106c6576106c5611bc2565b5b600660009054906101000a900460ff1660078111156106e8576106e7611bc2565b5b0361072a576040518060400160405280600481526020017f506169640000000000000000000000000000000000000000000000000000000081525090506108ca565b6003600781111561073e5761073d611bc2565b5b600660009054906101000a900460ff1660078111156107605761075f611bc2565b5b036107a2576040518060400160405280600981526020017f43616e63656c6c6564000000000000000000000000000000000000000000000081525090506108ca565b600660078111156107b6576107b5611bc2565b5b600660009054906101000a900460ff1660078111156107d8576107d7611bc2565b5b0361081a576040518060400160405280600d81526020017f556e7265736f6c76616c626c650000000000000000000000000000000000000081525090506108ca565b60078081111561082d5761082c611bc2565b5b600660009054906101000a900460ff16600781111561084f5761084e611bc2565b5b03610891576040518060400160405280600981526020017f436f6e766963746564000000000000000000000000000000000000000000000081525090506108ca565b6040518060400160405280600581526020017f4572726f7200000000000000000000000000000000000000000000000000000081525090505b90565b6060600280548060200260200160405190810160405280929190818152602001828054801561094357602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161090a5790505b5050505050905090565b60006004819055506001600660006101000a81548160ff0219169083600781111561097b5761097a611bc2565b5b021790555061098a608261130e565b6005600081548092919061099d90611c20565b919050555062278d00600481905550565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600660019054906101000a900460ff16610a3157600080fd5b7f469f0a0947cf59c7d944c91c6f4c13c396753b8abf0036156a8c6b0c02fdc02e610a5b81611131565b610a63610e3b565b610a6c57600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ad77f9c4e6fd68fbdec6e3075ec7bfba710532af019aea93f5f59ebfe5a9d1a0b894e83611145565b610b217f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f7f000000000000000000000000000000000000000000000000000000000000000061122d565b6004600660006101000a81548160ff02191690836007811115610b4757610b46611bc2565b5b02179055507f76c0bad3b7f1c74587dcb478154d4c87ae6663db97cc086b981decf4e35a797c30600660009054906101000a900460ff16604051610b8c929190611cb0565b60405180910390a15050565b600660019054906101000a900460ff16610bb157600080fd5b80600660006101000a81548160ff02191690836007811115610bd657610bd5611bc2565b5b02179055506000600660016101000a81548160ff021916908315150217905550610c407f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f7f000000000000000000000000000000000000000000000000000000000000000061122d565b610c8a7f469f0a0947cf59c7d944c91c6f4c13c396753b8abf0036156a8c6b0c02fdc02e7f000000000000000000000000000000000000000000000000000000000000000061122d565b610cd47fbbecb2568601cb27e6ced525237c463da94c4fb7a9b98ac79fd30fd56d8e1b537f000000000000000000000000000000000000000000000000000000000000000061122d565b610d1e7f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f7f000000000000000000000000000000000000000000000000000000000000000061122d565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dc157610dc07f9c4e6fd68fbdec6e3075ec7bfba710532af019aea93f5f59ebfe5a9d1a0b894e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661122d565b5b7f76c0bad3b7f1c74587dcb478154d4c87ae6663db97cc086b981decf4e35a797c30600660009054906101000a900460ff16604051610e01929190611cb0565b60405180910390a150565b6000801b81565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806007811115610e5057610e4f611bc2565b5b600660009054906101000a900460ff166007811115610e7257610e71611bc2565b5b1480610eb1575060016007811115610e8d57610e8c611bc2565b5b600660009054906101000a900460ff166007811115610eaf57610eae611bc2565b5b145b15610edd5760045460035442610ec79190611cd9565b10610ed3576000610ed6565b60015b9050610ee2565b600090505b90565b610eee8261040d565b610ef781611131565b610f01838361122d565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f8f576040517f87f439ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060006060600060607f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600261103161135b565b6110396104d0565b828054806020026020016040519081016040528092919081815260200182805480156110ac57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116110735790505b50505050509250955095509550955095509550909192939495565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6111428161113d611225565b61139b565b50565b61114f82826109ae565b61122157600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506111c6611225565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b61123782826109ae565b1561130a57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506112af611225565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60028190806001815401808255809150506001900390600052602060002090601091828204019190066002029091909190916101000a81548161ffff021916908361ffff16021790555050565b6000600660019054906101000a900460ff1661137a5760009050611398565b4260045460035461138b9190611d0d565b6113959190611cd9565b90505b90565b6113a582826109ae565b611434576113ca8173ffffffffffffffffffffffffffffffffffffffff166014611438565b6113d88360001c6020611438565b6040516020016113e9929190611e15565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142b9190611919565b60405180910390fd5b5050565b60606000600283600261144b9190611e4f565b6114559190611d0d565b67ffffffffffffffff81111561146e5761146d611e91565b5b6040519080825280601f01601f1916602001820160405280156114a05781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106114d8576114d7611ec0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061153c5761153b611ec0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261157c9190611e4f565b6115869190611d0d565b90505b6001811115611626577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106115c8576115c7611ec0565b5b1a60f81b8282815181106115df576115de611ec0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061161f90611eef565b9050611589565b506000841461166a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166190611f64565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116ae81611679565b81146116b957600080fd5b50565b6000813590506116cb816116a5565b92915050565b6000602082840312156116e7576116e6611674565b5b60006116f5848285016116bc565b91505092915050565b60008115159050919050565b611713816116fe565b82525050565b600060208201905061172e600083018461170a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061175f82611734565b9050919050565b61176f81611754565b82525050565b600060208201905061178a6000830184611766565b92915050565b6000819050919050565b6117a381611790565b81146117ae57600080fd5b50565b6000813590506117c08161179a565b92915050565b6000602082840312156117dc576117db611674565b5b60006117ea848285016117b1565b91505092915050565b6117fc81611790565b82525050565b600060208201905061181760008301846117f3565b92915050565b61182681611754565b811461183157600080fd5b50565b6000813590506118438161181d565b92915050565b600080604083850312156118605761185f611674565b5b600061186e858286016117b1565b925050602061187f85828601611834565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118c35780820151818401526020810190506118a8565b60008484015250505050565b6000601f19601f8301169050919050565b60006118eb82611889565b6118f58185611894565b93506119058185602086016118a5565b61190e816118cf565b840191505092915050565b6000602082019050818103600083015261193381846118e0565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061ffff82169050919050565b61197e81611967565b82525050565b60006119908383611975565b60208301905092915050565b6000602082019050919050565b60006119b48261193b565b6119be8185611946565b93506119c983611957565b8060005b838110156119fa5781516119e18882611984565b97506119ec8361199c565b9250506001810190506119cd565b5085935050505092915050565b60006020820190508181036000830152611a2181846119a9565b905092915050565b600060208284031215611a3f57611a3e611674565b5b6000611a4d84828501611834565b91505092915050565b60088110611a6357600080fd5b50565b600081359050611a7581611a56565b92915050565b600060208284031215611a9157611a90611674565b5b6000611a9f84828501611a66565b91505092915050565b6000819050919050565b611abb81611aa8565b82525050565b600060c082019050611ad66000830189611766565b611ae36020830188611766565b611af06040830187611766565b8181036060830152611b0281866119a9565b9050611b116080830185611ab2565b81810360a0830152611b2381846118e0565b9050979650505050505050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611b8c602f83611894565b9150611b9782611b30565b604082019050919050565b60006020820190508181036000830152611bbb81611b7f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c2b82611aa8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c5d57611c5c611bf1565b5b600182019050919050565b60088110611c7957611c78611bc2565b5b50565b6000819050611c8a82611c68565b919050565b6000611c9a82611c7c565b9050919050565b611caa81611c8f565b82525050565b6000604082019050611cc56000830185611766565b611cd26020830184611ca1565b9392505050565b6000611ce482611aa8565b9150611cef83611aa8565b9250828203905081811115611d0757611d06611bf1565b5b92915050565b6000611d1882611aa8565b9150611d2383611aa8565b9250828201905080821115611d3b57611d3a611bf1565b5b92915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611d82601783611d41565b9150611d8d82611d4c565b601782019050919050565b6000611da382611889565b611dad8185611d41565b9350611dbd8185602086016118a5565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611dff601183611d41565b9150611e0a82611dc9565b601182019050919050565b6000611e2082611d75565b9150611e2c8285611d98565b9150611e3782611df2565b9150611e438284611d98565b91508190509392505050565b6000611e5a82611aa8565b9150611e6583611aa8565b9250828202611e7381611aa8565b91508282048414831517611e8a57611e89611bf1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611efa82611aa8565b915060008203611f0d57611f0c611bf1565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611f4e602083611894565b9150611f5982611f18565b602082019050919050565b60006020820190508181036000830152611f7d81611f41565b905091905056fea2646970667358221220f6d040d7e00132cc6265f989634e6b90be2c68a7c283d8dde22548d1f97dc49c64736f6c63430008110033","immutableReferences":{"1682":[{"length":32,"start":1001},{"length":32,"start":3174},{"length":32,"start":4036}],"1684":[{"length":32,"start":2813},{"length":32,"start":3100},{"length":32,"start":3248},{"length":32,"start":3322},{"length":32,"start":3607},{"length":32,"start":4069}]},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4544:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"759:80:17","statements":[{"nodeType":"YulAssignment","src":"769:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:17"},"nodeType":"YulFunctionCall","src":"778:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:17"},"nodeType":"YulFunctionCall","src":"800:33:17"},"nodeType":"YulExpressionStatement","src":"800:33:17"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:17","type":""}],"src":"696:143:17"},{"body":{"nodeType":"YulBlock","src":"934:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:17"},"nodeType":"YulFunctionCall","src":"944:12:17"},"nodeType":"YulExpressionStatement","src":"944:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:17"},{"body":{"nodeType":"YulBlock","src":"1016:54:17","statements":[{"nodeType":"YulAssignment","src":"1026:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1044:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1051:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:17"},"nodeType":"YulFunctionCall","src":"1040:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1060:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1056:3:17"},"nodeType":"YulFunctionCall","src":"1056:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1036:3:17"},"nodeType":"YulFunctionCall","src":"1036:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1026:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"999:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1009:6:17","type":""}],"src":"968:102:17"},{"body":{"nodeType":"YulBlock","src":"1104:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1121:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1124:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1114:6:17"},"nodeType":"YulFunctionCall","src":"1114:88:17"},"nodeType":"YulExpressionStatement","src":"1114:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1218:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1221:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1211:6:17"},"nodeType":"YulFunctionCall","src":"1211:15:17"},"nodeType":"YulExpressionStatement","src":"1211:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1242:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1245:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1235:6:17"},"nodeType":"YulFunctionCall","src":"1235:15:17"},"nodeType":"YulExpressionStatement","src":"1235:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1076:180:17"},{"body":{"nodeType":"YulBlock","src":"1305:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1315:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1337:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1367:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1345:21:17"},"nodeType":"YulFunctionCall","src":"1345:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1333:3:17"},"nodeType":"YulFunctionCall","src":"1333:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1319:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1484:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1486:16:17"},"nodeType":"YulFunctionCall","src":"1486:18:17"},"nodeType":"YulExpressionStatement","src":"1486:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1427:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1439:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1424:2:17"},"nodeType":"YulFunctionCall","src":"1424:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1463:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1475:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1460:2:17"},"nodeType":"YulFunctionCall","src":"1460:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1421:2:17"},"nodeType":"YulFunctionCall","src":"1421:62:17"},"nodeType":"YulIf","src":"1418:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1522:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1526:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1515:6:17"},"nodeType":"YulFunctionCall","src":"1515:22:17"},"nodeType":"YulExpressionStatement","src":"1515:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1291:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"1299:4:17","type":""}],"src":"1262:281:17"},{"body":{"nodeType":"YulBlock","src":"1590:88:17","statements":[{"nodeType":"YulAssignment","src":"1600:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1610:18:17"},"nodeType":"YulFunctionCall","src":"1610:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1600:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1659:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1667:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1639:19:17"},"nodeType":"YulFunctionCall","src":"1639:33:17"},"nodeType":"YulExpressionStatement","src":"1639:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1574:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1583:6:17","type":""}],"src":"1549:129:17"},{"body":{"nodeType":"YulBlock","src":"1765:229:17","statements":[{"body":{"nodeType":"YulBlock","src":"1870:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1872:16:17"},"nodeType":"YulFunctionCall","src":"1872:18:17"},"nodeType":"YulExpressionStatement","src":"1872:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1842:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1850:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1839:2:17"},"nodeType":"YulFunctionCall","src":"1839:30:17"},"nodeType":"YulIf","src":"1836:56:17"},{"nodeType":"YulAssignment","src":"1902:25:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1914:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1922:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1910:3:17"},"nodeType":"YulFunctionCall","src":"1910:17:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1902:4:17"}]},{"nodeType":"YulAssignment","src":"1964:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1976:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1982:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1972:3:17"},"nodeType":"YulFunctionCall","src":"1972:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1964:4:17"}]}]},"name":"array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1749:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1760:4:17","type":""}],"src":"1684:310:17"},{"body":{"nodeType":"YulBlock","src":"2089:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2106:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2109:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2099:6:17"},"nodeType":"YulFunctionCall","src":"2099:12:17"},"nodeType":"YulExpressionStatement","src":"2099:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2000:117:17"},{"body":{"nodeType":"YulBlock","src":"2167:45:17","statements":[{"nodeType":"YulAssignment","src":"2177:29:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2192:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2199:6:17","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2188:3:17"},"nodeType":"YulFunctionCall","src":"2188:18:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2177:7:17"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2149:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2159:7:17","type":""}],"src":"2123:89:17"},{"body":{"nodeType":"YulBlock","src":"2260:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"2316:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2325:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2328:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2318:6:17"},"nodeType":"YulFunctionCall","src":"2318:12:17"},"nodeType":"YulExpressionStatement","src":"2318:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2283:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"2290:16:17"},"nodeType":"YulFunctionCall","src":"2290:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2280:2:17"},"nodeType":"YulFunctionCall","src":"2280:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2273:6:17"},"nodeType":"YulFunctionCall","src":"2273:42:17"},"nodeType":"YulIf","src":"2270:62:17"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2253:5:17","type":""}],"src":"2218:120:17"},{"body":{"nodeType":"YulBlock","src":"2406:79:17","statements":[{"nodeType":"YulAssignment","src":"2416:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2431:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2425:5:17"},"nodeType":"YulFunctionCall","src":"2425:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2416:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2473:5:17"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"2447:25:17"},"nodeType":"YulFunctionCall","src":"2447:32:17"},"nodeType":"YulExpressionStatement","src":"2447:32:17"}]},"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2384:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2392:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2400:5:17","type":""}],"src":"2344:141:17"},{"body":{"nodeType":"YulBlock","src":"2619:617:17","statements":[{"nodeType":"YulAssignment","src":"2629:89:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2710:6:17"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2654:55:17"},"nodeType":"YulFunctionCall","src":"2654:63:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2638:15:17"},"nodeType":"YulFunctionCall","src":"2638:80:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2629:5:17"}]},{"nodeType":"YulVariableDeclaration","src":"2727:16:17","value":{"name":"array","nodeType":"YulIdentifier","src":"2738:5:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2731:3:17","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2760:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"2767:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:17"},"nodeType":"YulFunctionCall","src":"2753:21:17"},"nodeType":"YulExpressionStatement","src":"2753:21:17"},{"nodeType":"YulAssignment","src":"2783:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2794:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2801:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2790:3:17"},"nodeType":"YulFunctionCall","src":"2790:16:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2783:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"2816:44:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2834:6:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2846:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2854:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2842:3:17"},"nodeType":"YulFunctionCall","src":"2842:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2830:3:17"},"nodeType":"YulFunctionCall","src":"2830:30:17"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2820:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2888:103:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2902:77:17"},"nodeType":"YulFunctionCall","src":"2902:79:17"},"nodeType":"YulExpressionStatement","src":"2902:79:17"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2875:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2883:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2872:2:17"},"nodeType":"YulFunctionCall","src":"2872:15:17"},"nodeType":"YulIf","src":"2869:122:17"},{"body":{"nodeType":"YulBlock","src":"3076:154:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3091:21:17","value":{"name":"src","nodeType":"YulIdentifier","src":"3109:3:17"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"3095:10:17","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3133:3:17"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"3169:10:17"},{"name":"end","nodeType":"YulIdentifier","src":"3181:3:17"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"3138:30:17"},"nodeType":"YulFunctionCall","src":"3138:47:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3126:6:17"},"nodeType":"YulFunctionCall","src":"3126:60:17"},"nodeType":"YulExpressionStatement","src":"3126:60:17"},{"nodeType":"YulAssignment","src":"3199:21:17","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3210:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3215:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3206:3:17"},"nodeType":"YulFunctionCall","src":"3206:14:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3199:3:17"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3029:3:17"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3034:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3026:2:17"},"nodeType":"YulFunctionCall","src":"3026:15:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3042:25:17","statements":[{"nodeType":"YulAssignment","src":"3044:21:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3055:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3060:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3051:3:17"},"nodeType":"YulFunctionCall","src":"3051:14:17"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3044:3:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3004:21:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3006:17:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"3017:6:17"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3010:3:17","type":""}]}]},"src":"3000:230:17"}]},"name":"abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2589:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2597:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2605:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2613:5:17","type":""}],"src":"2507:729:17"},{"body":{"nodeType":"YulBlock","src":"3345:296:17","statements":[{"body":{"nodeType":"YulBlock","src":"3394:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3396:77:17"},"nodeType":"YulFunctionCall","src":"3396:79:17"},"nodeType":"YulExpressionStatement","src":"3396:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3373:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3381:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3369:3:17"},"nodeType":"YulFunctionCall","src":"3369:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"3388:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3365:3:17"},"nodeType":"YulFunctionCall","src":"3365:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3358:6:17"},"nodeType":"YulFunctionCall","src":"3358:35:17"},"nodeType":"YulIf","src":"3355:122:17"},{"nodeType":"YulVariableDeclaration","src":"3486:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3506:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3500:5:17"},"nodeType":"YulFunctionCall","src":"3500:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3490:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3522:113:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3608:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3616:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3604:3:17"},"nodeType":"YulFunctionCall","src":"3604:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"3623:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"3631:3:17"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3531:72:17"},"nodeType":"YulFunctionCall","src":"3531:104:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3522:5:17"}]}]},"name":"abi_decode_t_array$_t_uint16_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3323:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3331:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3339:5:17","type":""}],"src":"3258:383:17"},{"body":{"nodeType":"YulBlock","src":"3765:590:17","statements":[{"body":{"nodeType":"YulBlock","src":"3811:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3813:77:17"},"nodeType":"YulFunctionCall","src":"3813:79:17"},"nodeType":"YulExpressionStatement","src":"3813:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3786:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3795:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3782:3:17"},"nodeType":"YulFunctionCall","src":"3782:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3807:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3778:3:17"},"nodeType":"YulFunctionCall","src":"3778:32:17"},"nodeType":"YulIf","src":"3775:119:17"},{"nodeType":"YulBlock","src":"3904:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3919:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3933:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3923:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3948:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3994:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4005:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:17"},"nodeType":"YulFunctionCall","src":"3990:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4014:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3958:31:17"},"nodeType":"YulFunctionCall","src":"3958:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3948:6:17"}]}]},{"nodeType":"YulBlock","src":"4042:306:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4057:39:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4081:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4092:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4077:3:17"},"nodeType":"YulFunctionCall","src":"4077:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4071:5:17"},"nodeType":"YulFunctionCall","src":"4071:25:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4061:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4143:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4145:77:17"},"nodeType":"YulFunctionCall","src":"4145:79:17"},"nodeType":"YulExpressionStatement","src":"4145:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4115:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4123:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4112:2:17"},"nodeType":"YulFunctionCall","src":"4112:30:17"},"nodeType":"YulIf","src":"4109:117:17"},{"nodeType":"YulAssignment","src":"4240:98:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4310:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4321:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4306:3:17"},"nodeType":"YulFunctionCall","src":"4306:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4330:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint16_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4250:55:17"},"nodeType":"YulFunctionCall","src":"4250:88:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4240:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint16_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3727:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3738:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3750:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3758:6:17","type":""}],"src":"3647:708:17"},{"body":{"nodeType":"YulBlock","src":"4389:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4406:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4409:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4399:6:17"},"nodeType":"YulFunctionCall","src":"4399:88:17"},"nodeType":"YulExpressionStatement","src":"4399:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4503:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4506:4:17","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4496:6:17"},"nodeType":"YulFunctionCall","src":"4496:15:17"},"nodeType":"YulExpressionStatement","src":"4496:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4527:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4530:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4520:6:17"},"nodeType":"YulFunctionCall","src":"4520:15:17"},"nodeType":"YulExpressionStatement","src":"4520:15:17"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"4361:180:17"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_uint160(value) -> cleaned {\\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\\n    }\\n\\n    function cleanup_t_address(value) -> cleaned {\\n        cleaned := cleanup_t_uint160(value)\\n    }\\n\\n    function validator_revert_t_address(value) {\\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\\n        value := mload(offset)\\n        validator_revert_t_address(value)\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := mul(length, 0x20)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_uint16(value) -> cleaned {\\n        cleaned := and(value, 0xffff)\\n    }\\n\\n    function validator_revert_t_uint16(value) {\\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\\n        value := mload(offset)\\n        validator_revert_t_uint16(value)\\n    }\\n\\n    // uint16[]\\n    function abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr(length))\\n        let dst := array\\n\\n        mstore(array, length)\\n        dst := add(array, 0x20)\\n\\n        let srcEnd := add(offset, mul(length, 0x20))\\n        if gt(srcEnd, end) {\\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\\n        }\\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\\n        {\\n\\n            let elementPos := src\\n\\n            mstore(dst, abi_decode_t_uint16_fromMemory(elementPos, end))\\n            dst := add(dst, 0x20)\\n        }\\n    }\\n\\n    // uint16[]\\n    function abi_decode_t_array$_t_uint16_$dyn_memory_ptr_fromMemory(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := mload(offset)\\n        array := abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\\n    }\\n\\n    function abi_decode_tuple_t_addresst_array$_t_uint16_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := mload(add(headStart, 32))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value1 := abi_decode_t_array$_t_uint16_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function panic_error_0x21() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x21)\\n        revert(0, 0x24)\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"deployedGeneratedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17120:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:105:17","statements":[{"nodeType":"YulAssignment","src":"388:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:149:17"},{"body":{"nodeType":"YulBlock","src":"531:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:17"},"nodeType":"YulFunctionCall","src":"589:12:17"},"nodeType":"YulExpressionStatement","src":"589:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:17"},"nodeType":"YulFunctionCall","src":"561:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:17"},"nodeType":"YulFunctionCall","src":"551:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:17"},"nodeType":"YulFunctionCall","src":"544:42:17"},"nodeType":"YulIf","src":"541:62:17"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:17","type":""}],"src":"489:120:17"},{"body":{"nodeType":"YulBlock","src":"666:86:17","statements":[{"nodeType":"YulAssignment","src":"676:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:17"},"nodeType":"YulFunctionCall","src":"685:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:17"},"nodeType":"YulFunctionCall","src":"714:32:17"},"nodeType":"YulExpressionStatement","src":"714:32:17"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:17","type":""}],"src":"615:137:17"},{"body":{"nodeType":"YulBlock","src":"823:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:17"},"nodeType":"YulFunctionCall","src":"871:79:17"},"nodeType":"YulExpressionStatement","src":"871:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:17"},"nodeType":"YulFunctionCall","src":"840:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:17"},"nodeType":"YulFunctionCall","src":"836:32:17"},"nodeType":"YulIf","src":"833:119:17"},{"nodeType":"YulBlock","src":"962:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:17"},"nodeType":"YulFunctionCall","src":"1036:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:17"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:17"},"nodeType":"YulFunctionCall","src":"1016:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:17","type":""}],"src":"758:327:17"},{"body":{"nodeType":"YulBlock","src":"1133:48:17","statements":[{"nodeType":"YulAssignment","src":"1143:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:17"},"nodeType":"YulFunctionCall","src":"1161:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:17"},"nodeType":"YulFunctionCall","src":"1154:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:17","type":""}],"src":"1091:90:17"},{"body":{"nodeType":"YulBlock","src":"1246:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:17"},"nodeType":"YulFunctionCall","src":"1268:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:17"},"nodeType":"YulFunctionCall","src":"1256:34:17"},"nodeType":"YulExpressionStatement","src":"1256:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:17","type":""}],"src":"1187:109:17"},{"body":{"nodeType":"YulBlock","src":"1394:118:17","statements":[{"nodeType":"YulAssignment","src":"1404:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:17"},"nodeType":"YulFunctionCall","src":"1412:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:17"},"nodeType":"YulFunctionCall","src":"1487:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:17"},"nodeType":"YulFunctionCall","src":"1440:65:17"},"nodeType":"YulExpressionStatement","src":"1440:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:17","type":""}],"src":"1302:210:17"},{"body":{"nodeType":"YulBlock","src":"1563:81:17","statements":[{"nodeType":"YulAssignment","src":"1573:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1588:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1595:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1584:3:17"},"nodeType":"YulFunctionCall","src":"1584:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:17","type":""}],"src":"1518:126:17"},{"body":{"nodeType":"YulBlock","src":"1695:51:17","statements":[{"nodeType":"YulAssignment","src":"1705:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1734:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1716:17:17"},"nodeType":"YulFunctionCall","src":"1716:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1705:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1677:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1687:7:17","type":""}],"src":"1650:96:17"},{"body":{"nodeType":"YulBlock","src":"1817:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1834:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1857:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1839:17:17"},"nodeType":"YulFunctionCall","src":"1839:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1827:6:17"},"nodeType":"YulFunctionCall","src":"1827:37:17"},"nodeType":"YulExpressionStatement","src":"1827:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1805:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1812:3:17","type":""}],"src":"1752:118:17"},{"body":{"nodeType":"YulBlock","src":"1974:124:17","statements":[{"nodeType":"YulAssignment","src":"1984:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1996:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2007:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1992:3:17"},"nodeType":"YulFunctionCall","src":"1992:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1984:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2064:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2077:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2088:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2073:3:17"},"nodeType":"YulFunctionCall","src":"2073:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2020:43:17"},"nodeType":"YulFunctionCall","src":"2020:71:17"},"nodeType":"YulExpressionStatement","src":"2020:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1946:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1958:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1969:4:17","type":""}],"src":"1876:222:17"},{"body":{"nodeType":"YulBlock","src":"2149:32:17","statements":[{"nodeType":"YulAssignment","src":"2159:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2170:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2159:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2131:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2141:7:17","type":""}],"src":"2104:77:17"},{"body":{"nodeType":"YulBlock","src":"2230:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2287:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2296:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2299:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2289:6:17"},"nodeType":"YulFunctionCall","src":"2289:12:17"},"nodeType":"YulExpressionStatement","src":"2289:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2253:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2278:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2260:17:17"},"nodeType":"YulFunctionCall","src":"2260:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2250:2:17"},"nodeType":"YulFunctionCall","src":"2250:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2243:6:17"},"nodeType":"YulFunctionCall","src":"2243:43:17"},"nodeType":"YulIf","src":"2240:63:17"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2223:5:17","type":""}],"src":"2187:122:17"},{"body":{"nodeType":"YulBlock","src":"2367:87:17","statements":[{"nodeType":"YulAssignment","src":"2377:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2399:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2386:12:17"},"nodeType":"YulFunctionCall","src":"2386:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2377:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2442:5:17"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"2415:26:17"},"nodeType":"YulFunctionCall","src":"2415:33:17"},"nodeType":"YulExpressionStatement","src":"2415:33:17"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2345:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2353:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2361:5:17","type":""}],"src":"2315:139:17"},{"body":{"nodeType":"YulBlock","src":"2526:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"2572:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2574:77:17"},"nodeType":"YulFunctionCall","src":"2574:79:17"},"nodeType":"YulExpressionStatement","src":"2574:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2547:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2556:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2543:3:17"},"nodeType":"YulFunctionCall","src":"2543:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2568:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2539:3:17"},"nodeType":"YulFunctionCall","src":"2539:32:17"},"nodeType":"YulIf","src":"2536:119:17"},{"nodeType":"YulBlock","src":"2665:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2680:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2694:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2684:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2709:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2744:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2755:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2740:3:17"},"nodeType":"YulFunctionCall","src":"2740:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2764:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2719:20:17"},"nodeType":"YulFunctionCall","src":"2719:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2709:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2496:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2507:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2519:6:17","type":""}],"src":"2460:329:17"},{"body":{"nodeType":"YulBlock","src":"2860:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2877:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2900:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2882:17:17"},"nodeType":"YulFunctionCall","src":"2882:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2870:6:17"},"nodeType":"YulFunctionCall","src":"2870:37:17"},"nodeType":"YulExpressionStatement","src":"2870:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2848:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2855:3:17","type":""}],"src":"2795:118:17"},{"body":{"nodeType":"YulBlock","src":"3017:124:17","statements":[{"nodeType":"YulAssignment","src":"3027:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3039:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3050:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3035:3:17"},"nodeType":"YulFunctionCall","src":"3035:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3027:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3107:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3120:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3131:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3116:3:17"},"nodeType":"YulFunctionCall","src":"3116:17:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"3063:43:17"},"nodeType":"YulFunctionCall","src":"3063:71:17"},"nodeType":"YulExpressionStatement","src":"3063:71:17"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2989:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3001:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3012:4:17","type":""}],"src":"2919:222:17"},{"body":{"nodeType":"YulBlock","src":"3190:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"3247:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3256:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3259:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3249:6:17"},"nodeType":"YulFunctionCall","src":"3249:12:17"},"nodeType":"YulExpressionStatement","src":"3249:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3213:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3238:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3220:17:17"},"nodeType":"YulFunctionCall","src":"3220:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3210:2:17"},"nodeType":"YulFunctionCall","src":"3210:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3203:6:17"},"nodeType":"YulFunctionCall","src":"3203:43:17"},"nodeType":"YulIf","src":"3200:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3183:5:17","type":""}],"src":"3147:122:17"},{"body":{"nodeType":"YulBlock","src":"3327:87:17","statements":[{"nodeType":"YulAssignment","src":"3337:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3359:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3346:12:17"},"nodeType":"YulFunctionCall","src":"3346:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3337:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3402:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3375:26:17"},"nodeType":"YulFunctionCall","src":"3375:33:17"},"nodeType":"YulExpressionStatement","src":"3375:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3305:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3313:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3321:5:17","type":""}],"src":"3275:139:17"},{"body":{"nodeType":"YulBlock","src":"3503:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"3549:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3551:77:17"},"nodeType":"YulFunctionCall","src":"3551:79:17"},"nodeType":"YulExpressionStatement","src":"3551:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3524:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3520:3:17"},"nodeType":"YulFunctionCall","src":"3520:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3545:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3516:3:17"},"nodeType":"YulFunctionCall","src":"3516:32:17"},"nodeType":"YulIf","src":"3513:119:17"},{"nodeType":"YulBlock","src":"3642:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3657:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3671:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3661:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3686:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3721:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3732:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3717:3:17"},"nodeType":"YulFunctionCall","src":"3717:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3741:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3696:20:17"},"nodeType":"YulFunctionCall","src":"3696:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3686:6:17"}]}]},{"nodeType":"YulBlock","src":"3769:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3784:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3798:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3788:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3814:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3849:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3860:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3845:3:17"},"nodeType":"YulFunctionCall","src":"3845:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3869:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3824:20:17"},"nodeType":"YulFunctionCall","src":"3824:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3814:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3465:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3476:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3488:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3496:6:17","type":""}],"src":"3420:474:17"},{"body":{"nodeType":"YulBlock","src":"3959:40:17","statements":[{"nodeType":"YulAssignment","src":"3970:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3986:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3980:5:17"},"nodeType":"YulFunctionCall","src":"3980:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3970:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3942:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3952:6:17","type":""}],"src":"3900:99:17"},{"body":{"nodeType":"YulBlock","src":"4101:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4118:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4123:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4111:6:17"},"nodeType":"YulFunctionCall","src":"4111:19:17"},"nodeType":"YulExpressionStatement","src":"4111:19:17"},{"nodeType":"YulAssignment","src":"4139:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4158:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4163:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:17"},"nodeType":"YulFunctionCall","src":"4154:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4139:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4073:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4078:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4089:11:17","type":""}],"src":"4005:169:17"},{"body":{"nodeType":"YulBlock","src":"4242:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4252:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4261:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4256:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4321:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4346:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"4351:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4342:3:17"},"nodeType":"YulFunctionCall","src":"4342:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4365:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"4370:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4361:3:17"},"nodeType":"YulFunctionCall","src":"4361:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4355:5:17"},"nodeType":"YulFunctionCall","src":"4355:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4335:6:17"},"nodeType":"YulFunctionCall","src":"4335:39:17"},"nodeType":"YulExpressionStatement","src":"4335:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4282:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"4285:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4279:2:17"},"nodeType":"YulFunctionCall","src":"4279:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4293:19:17","statements":[{"nodeType":"YulAssignment","src":"4295:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4304:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"4307:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4300:3:17"},"nodeType":"YulFunctionCall","src":"4300:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4295:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"4275:3:17","statements":[]},"src":"4271:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4404:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4409:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4400:3:17"},"nodeType":"YulFunctionCall","src":"4400:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"4418:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4393:6:17"},"nodeType":"YulFunctionCall","src":"4393:27:17"},"nodeType":"YulExpressionStatement","src":"4393:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4224:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4229:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4234:6:17","type":""}],"src":"4180:246:17"},{"body":{"nodeType":"YulBlock","src":"4480:54:17","statements":[{"nodeType":"YulAssignment","src":"4490:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4508:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4515:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4504:3:17"},"nodeType":"YulFunctionCall","src":"4504:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4524:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4520:3:17"},"nodeType":"YulFunctionCall","src":"4520:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4500:3:17"},"nodeType":"YulFunctionCall","src":"4500:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4490:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4463:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4473:6:17","type":""}],"src":"4432:102:17"},{"body":{"nodeType":"YulBlock","src":"4632:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4642:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4689:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4656:32:17"},"nodeType":"YulFunctionCall","src":"4656:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4646:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4704:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4770:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4775:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4711:58:17"},"nodeType":"YulFunctionCall","src":"4711:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4704:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4830:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4837:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4826:3:17"},"nodeType":"YulFunctionCall","src":"4826:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"4844:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4849:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4791:34:17"},"nodeType":"YulFunctionCall","src":"4791:65:17"},"nodeType":"YulExpressionStatement","src":"4791:65:17"},{"nodeType":"YulAssignment","src":"4865:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4876:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4903:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4881:21:17"},"nodeType":"YulFunctionCall","src":"4881:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4872:3:17"},"nodeType":"YulFunctionCall","src":"4872:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4865:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4613:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4620:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4628:3:17","type":""}],"src":"4540:377:17"},{"body":{"nodeType":"YulBlock","src":"5041:195:17","statements":[{"nodeType":"YulAssignment","src":"5051:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5063:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5074:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:17"},"nodeType":"YulFunctionCall","src":"5059:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5051:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5098:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5109:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5094:3:17"},"nodeType":"YulFunctionCall","src":"5094:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5117:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5123:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5113:3:17"},"nodeType":"YulFunctionCall","src":"5113:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5087:6:17"},"nodeType":"YulFunctionCall","src":"5087:47:17"},"nodeType":"YulExpressionStatement","src":"5087:47:17"},{"nodeType":"YulAssignment","src":"5143:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5215:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"5224:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5151:63:17"},"nodeType":"YulFunctionCall","src":"5151:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5143:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5013:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5025:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5036:4:17","type":""}],"src":"4923:313:17"},{"body":{"nodeType":"YulBlock","src":"5315:40:17","statements":[{"nodeType":"YulAssignment","src":"5326:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5342:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5336:5:17"},"nodeType":"YulFunctionCall","src":"5336:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5326:6:17"}]}]},"name":"array_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5298:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5308:6:17","type":""}],"src":"5242:113:17"},{"body":{"nodeType":"YulBlock","src":"5471:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5488:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5493:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5481:6:17"},"nodeType":"YulFunctionCall","src":"5481:19:17"},"nodeType":"YulExpressionStatement","src":"5481:19:17"},{"nodeType":"YulAssignment","src":"5509:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5528:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5533:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5524:3:17"},"nodeType":"YulFunctionCall","src":"5524:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5509:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5443:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5448:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5459:11:17","type":""}],"src":"5361:183:17"},{"body":{"nodeType":"YulBlock","src":"5621:60:17","statements":[{"nodeType":"YulAssignment","src":"5631:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5639:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5631:4:17"}]},{"nodeType":"YulAssignment","src":"5652:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5664:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5669:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5660:3:17"},"nodeType":"YulFunctionCall","src":"5660:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5652:4:17"}]}]},"name":"array_dataslot_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5608:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5616:4:17","type":""}],"src":"5550:131:17"},{"body":{"nodeType":"YulBlock","src":"5731:45:17","statements":[{"nodeType":"YulAssignment","src":"5741:29:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5756:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5763:6:17","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5752:3:17"},"nodeType":"YulFunctionCall","src":"5752:18:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5741:7:17"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5713:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5723:7:17","type":""}],"src":"5687:89:17"},{"body":{"nodeType":"YulBlock","src":"5835:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5852:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5874:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"5857:16:17"},"nodeType":"YulFunctionCall","src":"5857:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5845:6:17"},"nodeType":"YulFunctionCall","src":"5845:36:17"},"nodeType":"YulExpressionStatement","src":"5845:36:17"}]},"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5823:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5830:3:17","type":""}],"src":"5782:105:17"},{"body":{"nodeType":"YulBlock","src":"5971:97:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6013:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"6021:3:17"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"5981:31:17"},"nodeType":"YulFunctionCall","src":"5981:44:17"},"nodeType":"YulExpressionStatement","src":"5981:44:17"},{"nodeType":"YulAssignment","src":"6034:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6052:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6057:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6048:3:17"},"nodeType":"YulFunctionCall","src":"6048:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"6034:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_uint16_to_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"5944:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5952:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"5960:10:17","type":""}],"src":"5893:175:17"},{"body":{"nodeType":"YulBlock","src":"6148:38:17","statements":[{"nodeType":"YulAssignment","src":"6158:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6170:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6175:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6166:3:17"},"nodeType":"YulFunctionCall","src":"6166:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"6158:4:17"}]}]},"name":"array_nextElement_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6135:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"6143:4:17","type":""}],"src":"6074:112:17"},{"body":{"nodeType":"YulBlock","src":"6342:602:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6352:67:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6413:5:17"}],"functionName":{"name":"array_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6366:46:17"},"nodeType":"YulFunctionCall","src":"6366:53:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6356:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6428:92:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6508:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6513:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6435:72:17"},"nodeType":"YulFunctionCall","src":"6435:85:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6428:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"6529:70:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6593:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6544:48:17"},"nodeType":"YulFunctionCall","src":"6544:55:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"6533:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6608:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"6622:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6612:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6698:221:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6712:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6739:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6733:5:17"},"nodeType":"YulFunctionCall","src":"6733:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"6716:13:17","type":""}]},{"nodeType":"YulAssignment","src":"6759:68:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6808:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"6823:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"6766:41:17"},"nodeType":"YulFunctionCall","src":"6766:61:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6759:3:17"}]},{"nodeType":"YulAssignment","src":"6840:69:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6902:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6850:51:17"},"nodeType":"YulFunctionCall","src":"6850:59:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6840:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6660:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"6663:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6657:2:17"},"nodeType":"YulFunctionCall","src":"6657:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6671:18:17","statements":[{"nodeType":"YulAssignment","src":"6673:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6682:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"6685:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6678:3:17"},"nodeType":"YulFunctionCall","src":"6678:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6673:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"6642:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6644:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6653:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6648:1:17","type":""}]}]},"src":"6638:281:17"},{"nodeType":"YulAssignment","src":"6928:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"6935:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6928:3:17"}]}]},"name":"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6321:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6328:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6337:3:17","type":""}],"src":"6220:724:17"},{"body":{"nodeType":"YulBlock","src":"7096:223:17","statements":[{"nodeType":"YulAssignment","src":"7106:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7118:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7129:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7114:3:17"},"nodeType":"YulFunctionCall","src":"7114:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7106:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7153:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7164:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:17"},"nodeType":"YulFunctionCall","src":"7149:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7172:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7178:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7168:3:17"},"nodeType":"YulFunctionCall","src":"7168:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7142:6:17"},"nodeType":"YulFunctionCall","src":"7142:47:17"},"nodeType":"YulExpressionStatement","src":"7142:47:17"},{"nodeType":"YulAssignment","src":"7198:114:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7298:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"7307:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7206:91:17"},"nodeType":"YulFunctionCall","src":"7206:106:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7198:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_uint16_$dyn_memory_ptr__to_t_array$_t_uint16_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7068:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7080:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7091:4:17","type":""}],"src":"6950:369:17"},{"body":{"nodeType":"YulBlock","src":"7391:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"7437:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7439:77:17"},"nodeType":"YulFunctionCall","src":"7439:79:17"},"nodeType":"YulExpressionStatement","src":"7439:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7412:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7421:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:17"},"nodeType":"YulFunctionCall","src":"7408:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7433:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7404:3:17"},"nodeType":"YulFunctionCall","src":"7404:32:17"},"nodeType":"YulIf","src":"7401:119:17"},{"nodeType":"YulBlock","src":"7530:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7545:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7559:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7549:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7574:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7609:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7620:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7605:3:17"},"nodeType":"YulFunctionCall","src":"7605:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7629:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7584:20:17"},"nodeType":"YulFunctionCall","src":"7584:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7574:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7361:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7372:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7384:6:17","type":""}],"src":"7325:329:17"},{"body":{"nodeType":"YulBlock","src":"7714:56:17","statements":[{"body":{"nodeType":"YulBlock","src":"7748:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7757:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7760:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7750:6:17"},"nodeType":"YulFunctionCall","src":"7750:12:17"},"nodeType":"YulExpressionStatement","src":"7750:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7737:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7744:1:17","type":"","value":"8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7734:2:17"},"nodeType":"YulFunctionCall","src":"7734:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7727:6:17"},"nodeType":"YulFunctionCall","src":"7727:20:17"},"nodeType":"YulIf","src":"7724:40:17"}]},"name":"validator_revert_t_enum$_Status_$1660","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7707:5:17","type":""}],"src":"7660:110:17"},{"body":{"nodeType":"YulBlock","src":"7839:98:17","statements":[{"nodeType":"YulAssignment","src":"7849:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7871:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7858:12:17"},"nodeType":"YulFunctionCall","src":"7858:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7849:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7925:5:17"}],"functionName":{"name":"validator_revert_t_enum$_Status_$1660","nodeType":"YulIdentifier","src":"7887:37:17"},"nodeType":"YulFunctionCall","src":"7887:44:17"},"nodeType":"YulExpressionStatement","src":"7887:44:17"}]},"name":"abi_decode_t_enum$_Status_$1660","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7817:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"7825:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7833:5:17","type":""}],"src":"7776:161:17"},{"body":{"nodeType":"YulBlock","src":"8020:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"8066:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8068:77:17"},"nodeType":"YulFunctionCall","src":"8068:79:17"},"nodeType":"YulExpressionStatement","src":"8068:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8041:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8050:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8037:3:17"},"nodeType":"YulFunctionCall","src":"8037:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8062:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8033:3:17"},"nodeType":"YulFunctionCall","src":"8033:32:17"},"nodeType":"YulIf","src":"8030:119:17"},{"nodeType":"YulBlock","src":"8159:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8174:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8188:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8178:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8203:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8249:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8260:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8245:3:17"},"nodeType":"YulFunctionCall","src":"8245:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8269:7:17"}],"functionName":{"name":"abi_decode_t_enum$_Status_$1660","nodeType":"YulIdentifier","src":"8213:31:17"},"nodeType":"YulFunctionCall","src":"8213:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8203:6:17"}]}]}]},"name":"abi_decode_tuple_t_enum$_Status_$1660","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7990:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8001:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8013:6:17","type":""}],"src":"7943:351:17"},{"body":{"nodeType":"YulBlock","src":"8345:32:17","statements":[{"nodeType":"YulAssignment","src":"8355:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"8366:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8355:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8327:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8337:7:17","type":""}],"src":"8300:77:17"},{"body":{"nodeType":"YulBlock","src":"8448:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8465:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8488:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8470:17:17"},"nodeType":"YulFunctionCall","src":"8470:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8458:6:17"},"nodeType":"YulFunctionCall","src":"8458:37:17"},"nodeType":"YulExpressionStatement","src":"8458:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8436:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8443:3:17","type":""}],"src":"8383:118:17"},{"body":{"nodeType":"YulBlock","src":"8813:707:17","statements":[{"nodeType":"YulAssignment","src":"8823:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8835:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8846:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8831:3:17"},"nodeType":"YulFunctionCall","src":"8831:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8823:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8904:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8917:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8928:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8913:3:17"},"nodeType":"YulFunctionCall","src":"8913:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8860:43:17"},"nodeType":"YulFunctionCall","src":"8860:71:17"},"nodeType":"YulExpressionStatement","src":"8860:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8985:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8998:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9009:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8994:3:17"},"nodeType":"YulFunctionCall","src":"8994:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8941:43:17"},"nodeType":"YulFunctionCall","src":"8941:72:17"},"nodeType":"YulExpressionStatement","src":"8941:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9067:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9080:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9091:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9076:3:17"},"nodeType":"YulFunctionCall","src":"9076:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9023:43:17"},"nodeType":"YulFunctionCall","src":"9023:72:17"},"nodeType":"YulExpressionStatement","src":"9023:72:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9116:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9127:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9112:3:17"},"nodeType":"YulFunctionCall","src":"9112:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9136:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9142:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9132:3:17"},"nodeType":"YulFunctionCall","src":"9132:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9105:6:17"},"nodeType":"YulFunctionCall","src":"9105:48:17"},"nodeType":"YulExpressionStatement","src":"9105:48:17"},{"nodeType":"YulAssignment","src":"9162:114:17","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9262:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"9271:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9170:91:17"},"nodeType":"YulFunctionCall","src":"9170:106:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9162:4:17"}]},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9330:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9343:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9354:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9339:3:17"},"nodeType":"YulFunctionCall","src":"9339:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9286:43:17"},"nodeType":"YulFunctionCall","src":"9286:73:17"},"nodeType":"YulExpressionStatement","src":"9286:73:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9380:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9391:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9376:3:17"},"nodeType":"YulFunctionCall","src":"9376:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9401:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9407:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9397:3:17"},"nodeType":"YulFunctionCall","src":"9397:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9369:6:17"},"nodeType":"YulFunctionCall","src":"9369:49:17"},"nodeType":"YulExpressionStatement","src":"9369:49:17"},{"nodeType":"YulAssignment","src":"9427:86:17","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9499:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"9508:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9435:63:17"},"nodeType":"YulFunctionCall","src":"9435:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9427:4:17"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_array$_t_uint16_$dyn_memory_ptr_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_address_t_array$_t_uint16_$dyn_memory_ptr_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8745:9:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8757:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8765:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8773:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8781:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8789:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8797:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8808:4:17","type":""}],"src":"8507:1013:17"},{"body":{"nodeType":"YulBlock","src":"9632:128:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9654:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9662:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9650:3:17"},"nodeType":"YulFunctionCall","src":"9650:14:17"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"9666:34:17","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9643:6:17"},"nodeType":"YulFunctionCall","src":"9643:58:17"},"nodeType":"YulExpressionStatement","src":"9643:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9722:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9730:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9718:3:17"},"nodeType":"YulFunctionCall","src":"9718:15:17"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"9735:17:17","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9711:6:17"},"nodeType":"YulFunctionCall","src":"9711:42:17"},"nodeType":"YulExpressionStatement","src":"9711:42:17"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9624:6:17","type":""}],"src":"9526:234:17"},{"body":{"nodeType":"YulBlock","src":"9912:220:17","statements":[{"nodeType":"YulAssignment","src":"9922:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9988:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9993:2:17","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9929:58:17"},"nodeType":"YulFunctionCall","src":"9929:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9922:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10094:3:17"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"10005:88:17"},"nodeType":"YulFunctionCall","src":"10005:93:17"},"nodeType":"YulExpressionStatement","src":"10005:93:17"},{"nodeType":"YulAssignment","src":"10107:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10118:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10123:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10114:3:17"},"nodeType":"YulFunctionCall","src":"10114:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10107:3:17"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9900:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9908:3:17","type":""}],"src":"9766:366:17"},{"body":{"nodeType":"YulBlock","src":"10309:248:17","statements":[{"nodeType":"YulAssignment","src":"10319:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10331:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10342:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10327:3:17"},"nodeType":"YulFunctionCall","src":"10327:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10319:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10366:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10377:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10362:3:17"},"nodeType":"YulFunctionCall","src":"10362:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10385:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10391:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10381:3:17"},"nodeType":"YulFunctionCall","src":"10381:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10355:6:17"},"nodeType":"YulFunctionCall","src":"10355:47:17"},"nodeType":"YulExpressionStatement","src":"10355:47:17"},{"nodeType":"YulAssignment","src":"10411:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10545:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10419:124:17"},"nodeType":"YulFunctionCall","src":"10419:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10411:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10289:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10304:4:17","type":""}],"src":"10138:419:17"},{"body":{"nodeType":"YulBlock","src":"10591:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10608:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10611:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10601:6:17"},"nodeType":"YulFunctionCall","src":"10601:88:17"},"nodeType":"YulExpressionStatement","src":"10601:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10705:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10708:4:17","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10698:6:17"},"nodeType":"YulFunctionCall","src":"10698:15:17"},"nodeType":"YulExpressionStatement","src":"10698:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10729:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10732:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10722:6:17"},"nodeType":"YulFunctionCall","src":"10722:15:17"},"nodeType":"YulExpressionStatement","src":"10722:15:17"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"10563:180:17"},{"body":{"nodeType":"YulBlock","src":"10777:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10794:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10797:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10787:6:17"},"nodeType":"YulFunctionCall","src":"10787:88:17"},"nodeType":"YulExpressionStatement","src":"10787:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10891:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10894:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10884:6:17"},"nodeType":"YulFunctionCall","src":"10884:15:17"},"nodeType":"YulExpressionStatement","src":"10884:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10915:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10918:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10908:6:17"},"nodeType":"YulFunctionCall","src":"10908:15:17"},"nodeType":"YulExpressionStatement","src":"10908:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10749:180:17"},{"body":{"nodeType":"YulBlock","src":"10978:190:17","statements":[{"nodeType":"YulAssignment","src":"10988:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11015:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10997:17:17"},"nodeType":"YulFunctionCall","src":"10997:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10988:5:17"}]},{"body":{"nodeType":"YulBlock","src":"11111:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11113:16:17"},"nodeType":"YulFunctionCall","src":"11113:18:17"},"nodeType":"YulExpressionStatement","src":"11113:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11036:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11043:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11033:2:17"},"nodeType":"YulFunctionCall","src":"11033:77:17"},"nodeType":"YulIf","src":"11030:103:17"},{"nodeType":"YulAssignment","src":"11142:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11153:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11160:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11149:3:17"},"nodeType":"YulFunctionCall","src":"11149:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11142:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10964:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10974:3:17","type":""}],"src":"10935:233:17"},{"body":{"nodeType":"YulBlock","src":"11228:62:17","statements":[{"body":{"nodeType":"YulBlock","src":"11262:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"11264:16:17"},"nodeType":"YulFunctionCall","src":"11264:18:17"},"nodeType":"YulExpressionStatement","src":"11264:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11251:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11258:1:17","type":"","value":"8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11248:2:17"},"nodeType":"YulFunctionCall","src":"11248:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11241:6:17"},"nodeType":"YulFunctionCall","src":"11241:20:17"},"nodeType":"YulIf","src":"11238:46:17"}]},"name":"validator_assert_t_enum$_Status_$1660","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11221:5:17","type":""}],"src":"11174:116:17"},{"body":{"nodeType":"YulBlock","src":"11352:77:17","statements":[{"nodeType":"YulAssignment","src":"11362:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"11373:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11362:7:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11417:5:17"}],"functionName":{"name":"validator_assert_t_enum$_Status_$1660","nodeType":"YulIdentifier","src":"11379:37:17"},"nodeType":"YulFunctionCall","src":"11379:44:17"},"nodeType":"YulExpressionStatement","src":"11379:44:17"}]},"name":"cleanup_t_enum$_Status_$1660","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11334:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11344:7:17","type":""}],"src":"11296:133:17"},{"body":{"nodeType":"YulBlock","src":"11504:64:17","statements":[{"nodeType":"YulAssignment","src":"11514:48:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11556:5:17"}],"functionName":{"name":"cleanup_t_enum$_Status_$1660","nodeType":"YulIdentifier","src":"11527:28:17"},"nodeType":"YulFunctionCall","src":"11527:35:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11514:9:17"}]}]},"name":"convert_t_enum$_Status_$1660_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11484:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11494:9:17","type":""}],"src":"11435:133:17"},{"body":{"nodeType":"YulBlock","src":"11648:75:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11665:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11710:5:17"}],"functionName":{"name":"convert_t_enum$_Status_$1660_to_t_uint8","nodeType":"YulIdentifier","src":"11670:39:17"},"nodeType":"YulFunctionCall","src":"11670:46:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11658:6:17"},"nodeType":"YulFunctionCall","src":"11658:59:17"},"nodeType":"YulExpressionStatement","src":"11658:59:17"}]},"name":"abi_encode_t_enum$_Status_$1660_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11636:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11643:3:17","type":""}],"src":"11574:149:17"},{"body":{"nodeType":"YulBlock","src":"11864:215:17","statements":[{"nodeType":"YulAssignment","src":"11874:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11886:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11897:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11882:3:17"},"nodeType":"YulFunctionCall","src":"11882:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11874:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11954:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11967:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11978:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11963:3:17"},"nodeType":"YulFunctionCall","src":"11963:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11910:43:17"},"nodeType":"YulFunctionCall","src":"11910:71:17"},"nodeType":"YulExpressionStatement","src":"11910:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12044:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12057:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12068:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12053:3:17"},"nodeType":"YulFunctionCall","src":"12053:18:17"}],"functionName":{"name":"abi_encode_t_enum$_Status_$1660_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"11991:52:17"},"nodeType":"YulFunctionCall","src":"11991:81:17"},"nodeType":"YulExpressionStatement","src":"11991:81:17"}]},"name":"abi_encode_tuple_t_address_t_enum$_Status_$1660__to_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11828:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11840:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11848:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11859:4:17","type":""}],"src":"11729:350:17"},{"body":{"nodeType":"YulBlock","src":"12130:149:17","statements":[{"nodeType":"YulAssignment","src":"12140:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12163:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12145:17:17"},"nodeType":"YulFunctionCall","src":"12145:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12140:1:17"}]},{"nodeType":"YulAssignment","src":"12174:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12197:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12179:17:17"},"nodeType":"YulFunctionCall","src":"12179:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12174:1:17"}]},{"nodeType":"YulAssignment","src":"12208:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12220:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"12223:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12216:3:17"},"nodeType":"YulFunctionCall","src":"12216:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"12208:4:17"}]},{"body":{"nodeType":"YulBlock","src":"12250:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12252:16:17"},"nodeType":"YulFunctionCall","src":"12252:18:17"},"nodeType":"YulExpressionStatement","src":"12252:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"12241:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"12247:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12238:2:17"},"nodeType":"YulFunctionCall","src":"12238:11:17"},"nodeType":"YulIf","src":"12235:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12116:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"12119:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"12125:4:17","type":""}],"src":"12085:194:17"},{"body":{"nodeType":"YulBlock","src":"12329:147:17","statements":[{"nodeType":"YulAssignment","src":"12339:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12362:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12344:17:17"},"nodeType":"YulFunctionCall","src":"12344:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12339:1:17"}]},{"nodeType":"YulAssignment","src":"12373:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12396:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12378:17:17"},"nodeType":"YulFunctionCall","src":"12378:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12373:1:17"}]},{"nodeType":"YulAssignment","src":"12407:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12418:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"12421:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12414:3:17"},"nodeType":"YulFunctionCall","src":"12414:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12407:3:17"}]},{"body":{"nodeType":"YulBlock","src":"12447:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12449:16:17"},"nodeType":"YulFunctionCall","src":"12449:18:17"},"nodeType":"YulExpressionStatement","src":"12449:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12439:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"12442:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12436:2:17"},"nodeType":"YulFunctionCall","src":"12436:10:17"},"nodeType":"YulIf","src":"12433:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12316:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"12319:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12325:3:17","type":""}],"src":"12285:191:17"},{"body":{"nodeType":"YulBlock","src":"12596:34:17","statements":[{"nodeType":"YulAssignment","src":"12606:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"12621:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12606:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12568:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"12573:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12584:11:17","type":""}],"src":"12482:148:17"},{"body":{"nodeType":"YulBlock","src":"12742:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12764:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12772:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12760:3:17"},"nodeType":"YulFunctionCall","src":"12760:14:17"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"12776:25:17","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12753:6:17"},"nodeType":"YulFunctionCall","src":"12753:49:17"},"nodeType":"YulExpressionStatement","src":"12753:49:17"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12734:6:17","type":""}],"src":"12636:173:17"},{"body":{"nodeType":"YulBlock","src":"12979:238:17","statements":[{"nodeType":"YulAssignment","src":"12989:92:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13073:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13078:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12996:76:17"},"nodeType":"YulFunctionCall","src":"12996:85:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12989:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13179:3:17"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"13090:88:17"},"nodeType":"YulFunctionCall","src":"13090:93:17"},"nodeType":"YulExpressionStatement","src":"13090:93:17"},{"nodeType":"YulAssignment","src":"13192:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13203:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13208:2:17","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13199:3:17"},"nodeType":"YulFunctionCall","src":"13199:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13192:3:17"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12967:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12975:3:17","type":""}],"src":"12815:402:17"},{"body":{"nodeType":"YulBlock","src":"13333:280:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13343:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13390:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13357:32:17"},"nodeType":"YulFunctionCall","src":"13357:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13347:6:17","type":""}]},{"nodeType":"YulAssignment","src":"13405:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13489:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"13494:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13412:76:17"},"nodeType":"YulFunctionCall","src":"13412:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13405:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13549:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13556:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13545:3:17"},"nodeType":"YulFunctionCall","src":"13545:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"13563:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"13568:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13510:34:17"},"nodeType":"YulFunctionCall","src":"13510:65:17"},"nodeType":"YulExpressionStatement","src":"13510:65:17"},{"nodeType":"YulAssignment","src":"13584:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13595:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"13600:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13591:3:17"},"nodeType":"YulFunctionCall","src":"13591:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13584:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13314:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13321:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13329:3:17","type":""}],"src":"13223:390:17"},{"body":{"nodeType":"YulBlock","src":"13725:61:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13747:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13755:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13743:3:17"},"nodeType":"YulFunctionCall","src":"13743:14:17"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"13759:19:17","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13736:6:17"},"nodeType":"YulFunctionCall","src":"13736:43:17"},"nodeType":"YulExpressionStatement","src":"13736:43:17"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13717:6:17","type":""}],"src":"13619:167:17"},{"body":{"nodeType":"YulBlock","src":"13956:238:17","statements":[{"nodeType":"YulAssignment","src":"13966:92:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14050:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14055:2:17","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13973:76:17"},"nodeType":"YulFunctionCall","src":"13973:85:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13966:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14156:3:17"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"14067:88:17"},"nodeType":"YulFunctionCall","src":"14067:93:17"},"nodeType":"YulExpressionStatement","src":"14067:93:17"},{"nodeType":"YulAssignment","src":"14169:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14180:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14185:2:17","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14176:3:17"},"nodeType":"YulFunctionCall","src":"14176:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14169:3:17"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13944:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13952:3:17","type":""}],"src":"13792:402:17"},{"body":{"nodeType":"YulBlock","src":"14586:581:17","statements":[{"nodeType":"YulAssignment","src":"14597:155:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14748:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14604:142:17"},"nodeType":"YulFunctionCall","src":"14604:148:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14597:3:17"}]},{"nodeType":"YulAssignment","src":"14762:102:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14851:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"14860:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14769:81:17"},"nodeType":"YulFunctionCall","src":"14769:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14762:3:17"}]},{"nodeType":"YulAssignment","src":"14874:155:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15025:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14881:142:17"},"nodeType":"YulFunctionCall","src":"14881:148:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14874:3:17"}]},{"nodeType":"YulAssignment","src":"15039:102:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15128:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"15137:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15046:81:17"},"nodeType":"YulFunctionCall","src":"15046:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15039:3:17"}]},{"nodeType":"YulAssignment","src":"15151:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"15158:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15151:3:17"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14557:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14563:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14571:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14582:3:17","type":""}],"src":"14200:967:17"},{"body":{"nodeType":"YulBlock","src":"15221:362:17","statements":[{"nodeType":"YulAssignment","src":"15231:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15254:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15236:17:17"},"nodeType":"YulFunctionCall","src":"15236:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15231:1:17"}]},{"nodeType":"YulAssignment","src":"15265:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15288:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15270:17:17"},"nodeType":"YulFunctionCall","src":"15270:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15265:1:17"}]},{"nodeType":"YulVariableDeclaration","src":"15299:28:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15322:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"15325:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15318:3:17"},"nodeType":"YulFunctionCall","src":"15318:9:17"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"15303:11:17","type":""}]},{"nodeType":"YulAssignment","src":"15336:41:17","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"15365:11:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15347:17:17"},"nodeType":"YulFunctionCall","src":"15347:30:17"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"15336:7:17"}]},{"body":{"nodeType":"YulBlock","src":"15554:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15556:16:17"},"nodeType":"YulFunctionCall","src":"15556:18:17"},"nodeType":"YulExpressionStatement","src":"15556:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15487:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15480:6:17"},"nodeType":"YulFunctionCall","src":"15480:9:17"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15510:1:17"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"15517:7:17"},{"name":"x","nodeType":"YulIdentifier","src":"15526:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15513:3:17"},"nodeType":"YulFunctionCall","src":"15513:15:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15507:2:17"},"nodeType":"YulFunctionCall","src":"15507:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15460:2:17"},"nodeType":"YulFunctionCall","src":"15460:83:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15440:6:17"},"nodeType":"YulFunctionCall","src":"15440:113:17"},"nodeType":"YulIf","src":"15437:139:17"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15204:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"15207:1:17","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"15213:7:17","type":""}],"src":"15173:410:17"},{"body":{"nodeType":"YulBlock","src":"15617:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15634:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15637:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15627:6:17"},"nodeType":"YulFunctionCall","src":"15627:88:17"},"nodeType":"YulExpressionStatement","src":"15627:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15731:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15734:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15724:6:17"},"nodeType":"YulFunctionCall","src":"15724:15:17"},"nodeType":"YulExpressionStatement","src":"15724:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15755:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15758:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15748:6:17"},"nodeType":"YulFunctionCall","src":"15748:15:17"},"nodeType":"YulExpressionStatement","src":"15748:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"15589:180:17"},{"body":{"nodeType":"YulBlock","src":"15803:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15820:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15823:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15813:6:17"},"nodeType":"YulFunctionCall","src":"15813:88:17"},"nodeType":"YulExpressionStatement","src":"15813:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15917:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15920:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15910:6:17"},"nodeType":"YulFunctionCall","src":"15910:15:17"},"nodeType":"YulExpressionStatement","src":"15910:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15941:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15944:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15934:6:17"},"nodeType":"YulFunctionCall","src":"15934:15:17"},"nodeType":"YulExpressionStatement","src":"15934:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15775:180:17"},{"body":{"nodeType":"YulBlock","src":"16004:128:17","statements":[{"nodeType":"YulAssignment","src":"16014:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16041:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16023:17:17"},"nodeType":"YulFunctionCall","src":"16023:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16014:5:17"}]},{"body":{"nodeType":"YulBlock","src":"16075:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16077:16:17"},"nodeType":"YulFunctionCall","src":"16077:18:17"},"nodeType":"YulExpressionStatement","src":"16077:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16062:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"16069:4:17","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16059:2:17"},"nodeType":"YulFunctionCall","src":"16059:15:17"},"nodeType":"YulIf","src":"16056:41:17"},{"nodeType":"YulAssignment","src":"16106:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16117:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"16124:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16113:3:17"},"nodeType":"YulFunctionCall","src":"16113:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16106:3:17"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15990:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16000:3:17","type":""}],"src":"15961:171:17"},{"body":{"nodeType":"YulBlock","src":"16244:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16266:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16274:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16262:3:17"},"nodeType":"YulFunctionCall","src":"16262:14:17"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"16278:34:17","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16255:6:17"},"nodeType":"YulFunctionCall","src":"16255:58:17"},"nodeType":"YulExpressionStatement","src":"16255:58:17"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16236:6:17","type":""}],"src":"16138:182:17"},{"body":{"nodeType":"YulBlock","src":"16472:220:17","statements":[{"nodeType":"YulAssignment","src":"16482:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16548:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16553:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16489:58:17"},"nodeType":"YulFunctionCall","src":"16489:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16482:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16654:3:17"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"16565:88:17"},"nodeType":"YulFunctionCall","src":"16565:93:17"},"nodeType":"YulExpressionStatement","src":"16565:93:17"},{"nodeType":"YulAssignment","src":"16667:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16678:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16683:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16674:3:17"},"nodeType":"YulFunctionCall","src":"16674:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16667:3:17"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16460:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16468:3:17","type":""}],"src":"16326:366:17"},{"body":{"nodeType":"YulBlock","src":"16869:248:17","statements":[{"nodeType":"YulAssignment","src":"16879:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16891:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16902:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16887:3:17"},"nodeType":"YulFunctionCall","src":"16887:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16879:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16926:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16937:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16922:3:17"},"nodeType":"YulFunctionCall","src":"16922:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16945:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"16951:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16941:3:17"},"nodeType":"YulFunctionCall","src":"16941:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16915:6:17"},"nodeType":"YulFunctionCall","src":"16915:47:17"},"nodeType":"YulExpressionStatement","src":"16915:47:17"},{"nodeType":"YulAssignment","src":"16971:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17105:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16979:124:17"},"nodeType":"YulFunctionCall","src":"16979:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16971:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16849:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16864:4:17","type":""}],"src":"16698:419:17"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_bytes4(value) -> cleaned {\\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\\n    }\\n\\n    function validator_revert_t_bytes4(value) {\\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_bytes4(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_bytes4(value)\\n    }\\n\\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function cleanup_t_bool(value) -> cleaned {\\n        cleaned := iszero(iszero(value))\\n    }\\n\\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_bool(value))\\n    }\\n\\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function cleanup_t_uint160(value) -> cleaned {\\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\\n    }\\n\\n    function cleanup_t_address(value) -> cleaned {\\n        cleaned := cleanup_t_uint160(value)\\n    }\\n\\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function cleanup_t_bytes32(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function validator_revert_t_bytes32(value) {\\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_bytes32(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_bytes32(value)\\n    }\\n\\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_bytes32(value))\\n    }\\n\\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function validator_revert_t_address(value) {\\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_address(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_address(value)\\n    }\\n\\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 32\\n\\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\\n        let length := array_length_t_string_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\\n        end := add(pos, round_up_to_mul_of_32(length))\\n    }\\n\\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function array_length_t_array$_t_uint16_$dyn_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function array_dataslot_t_array$_t_uint16_$dyn_memory_ptr(ptr) -> data {\\n        data := ptr\\n\\n        data := add(ptr, 0x20)\\n\\n    }\\n\\n    function cleanup_t_uint16(value) -> cleaned {\\n        cleaned := and(value, 0xffff)\\n    }\\n\\n    function abi_encode_t_uint16_to_t_uint16(value, pos) {\\n        mstore(pos, cleanup_t_uint16(value))\\n    }\\n\\n    function abi_encodeUpdatedPos_t_uint16_to_t_uint16(value0, pos) -> updatedPos {\\n        abi_encode_t_uint16_to_t_uint16(value0, pos)\\n        updatedPos := add(pos, 0x20)\\n    }\\n\\n    function array_nextElement_t_array$_t_uint16_$dyn_memory_ptr(ptr) -> next {\\n        next := add(ptr, 0x20)\\n    }\\n\\n    // uint16[] -> uint16[]\\n    function abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\\n        let length := array_length_t_array$_t_uint16_$dyn_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack(pos, length)\\n        let baseRef := array_dataslot_t_array$_t_uint16_$dyn_memory_ptr(value)\\n        let srcPtr := baseRef\\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\\n        {\\n            let elementValue0 := mload(srcPtr)\\n            pos := abi_encodeUpdatedPos_t_uint16_to_t_uint16(elementValue0, pos)\\n            srcPtr := array_nextElement_t_array$_t_uint16_$dyn_memory_ptr(srcPtr)\\n        }\\n        end := pos\\n    }\\n\\n    function abi_encode_tuple_t_array$_t_uint16_$dyn_memory_ptr__to_t_array$_t_uint16_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function validator_revert_t_enum$_Status_$1660(value) {\\n        if iszero(lt(value, 8)) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_enum$_Status_$1660(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_enum$_Status_$1660(value)\\n    }\\n\\n    function abi_decode_tuple_t_enum$_Status_$1660(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_enum$_Status_$1660(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_uint256(value))\\n    }\\n\\n    function abi_encode_tuple_t_address_t_address_t_address_t_array$_t_uint16_$dyn_memory_ptr_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_address_t_array$_t_uint16_$dyn_memory_ptr_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\\n        tail := add(headStart, 192)\\n\\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\\n\\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\\n\\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\\n\\n        mstore(add(headStart, 96), sub(tail, headStart))\\n        tail := abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack(value3,  tail)\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\\n\\n        mstore(add(headStart, 160), sub(tail, headStart))\\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value5,  tail)\\n\\n    }\\n\\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\\n\\n        mstore(add(memPtr, 0), \\"AccessControl: can only renounce\\")\\n\\n        mstore(add(memPtr, 32), \\" roles for self\\")\\n\\n    }\\n\\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\\n        end := add(pos, 64)\\n    }\\n\\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\\n\\n    }\\n\\n    function panic_error_0x21() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x21)\\n        revert(0, 0x24)\\n    }\\n\\n    function panic_error_0x11() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x11)\\n        revert(0, 0x24)\\n    }\\n\\n    function increment_t_uint256(value) -> ret {\\n        value := cleanup_t_uint256(value)\\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\\n        ret := add(value, 1)\\n    }\\n\\n    function validator_assert_t_enum$_Status_$1660(value) {\\n        if iszero(lt(value, 8)) { panic_error_0x21() }\\n    }\\n\\n    function cleanup_t_enum$_Status_$1660(value) -> cleaned {\\n        cleaned := value validator_assert_t_enum$_Status_$1660(value)\\n    }\\n\\n    function convert_t_enum$_Status_$1660_to_t_uint8(value) -> converted {\\n        converted := cleanup_t_enum$_Status_$1660(value)\\n    }\\n\\n    function abi_encode_t_enum$_Status_$1660_to_t_uint8_fromStack(value, pos) {\\n        mstore(pos, convert_t_enum$_Status_$1660_to_t_uint8(value))\\n    }\\n\\n    function abi_encode_tuple_t_address_t_enum$_Status_$1660__to_t_address_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\\n        tail := add(headStart, 64)\\n\\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\\n\\n        abi_encode_t_enum$_Status_$1660_to_t_uint8_fromStack(value1,  add(headStart, 32))\\n\\n    }\\n\\n    function checked_sub_t_uint256(x, y) -> diff {\\n        x := cleanup_t_uint256(x)\\n        y := cleanup_t_uint256(y)\\n        diff := sub(x, y)\\n\\n        if gt(diff, x) { panic_error_0x11() }\\n\\n    }\\n\\n    function checked_add_t_uint256(x, y) -> sum {\\n        x := cleanup_t_uint256(x)\\n        y := cleanup_t_uint256(y)\\n        sum := add(x, y)\\n\\n        if gt(x, sum) { panic_error_0x11() }\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\\n        updated_pos := pos\\n    }\\n\\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\\n\\n        mstore(add(memPtr, 0), \\"AccessControl: account \\")\\n\\n    }\\n\\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\\n        end := add(pos, 23)\\n    }\\n\\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\\n        let length := array_length_t_string_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\\n        end := add(pos, length)\\n    }\\n\\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\\n\\n        mstore(add(memPtr, 0), \\" is missing role \\")\\n\\n    }\\n\\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\\n        end := add(pos, 17)\\n    }\\n\\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\\n\\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\\n\\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\\n\\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\\n\\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\\n\\n        end := pos\\n    }\\n\\n    function checked_mul_t_uint256(x, y) -> product {\\n        x := cleanup_t_uint256(x)\\n        y := cleanup_t_uint256(y)\\n        let product_raw := mul(x, y)\\n        product := cleanup_t_uint256(product_raw)\\n\\n        // overflow, if x != 0 and y != product/x\\n        if iszero(\\n            or(\\n                iszero(x),\\n                eq(y, div(product, x))\\n            )\\n        ) { panic_error_0x11() }\\n\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function panic_error_0x32() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x32)\\n        revert(0, 0x24)\\n    }\\n\\n    function decrement_t_uint256(value) -> ret {\\n        value := cleanup_t_uint256(value)\\n        if eq(value, 0x00) { panic_error_0x11() }\\n        ret := sub(value, 1)\\n    }\\n\\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\\n\\n        mstore(add(memPtr, 0), \\"Strings: hex length insufficient\\")\\n\\n    }\\n\\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\\n        end := add(pos, 32)\\n    }\\n\\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\\n\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"sourceMap":"295:5753:13:-:0;;;1608:7;1581:34;;1647:1;1621:27;;1705:4;1681:28;;;;;;;;;;;;;;;;;;;;1814:446;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1927:7;1918:16;;;;;;;;;;1954:10;1944:20;;;;;;;;;;1990:1;1974:5;;:18;;;;;;;;;;;;;;;;;;2020:16;2002:15;:34;;;;;;;;;;;;:::i;:::-;;2063:15;2047:13;:31;;;;2098:14;2089:6;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2123:32;1134:24;2147:7;2123:10;;;:32;;:::i;:::-;2165:36;1204:25;2190:10;2165;;;:36;;:::i;:::-;2211:42;1348:31;2242:10;2211;;;:42;;:::i;:::-;1814:446;;295:5753;;6824:110:0;6902:25;6913:4;6919:7;6902:10;;;:25;;:::i;:::-;6824:110;;:::o;7474:233::-;7557:22;7565:4;7571:7;7557;;;:22;;:::i;:::-;7552:149;;7627:4;7595:6;:12;7602:4;7595:12;;;;;;;;;;;:20;;:29;7616:7;7595:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7677:12;:10;;;:12;;:::i;:::-;7650:40;;7668:7;7650:40;;7662:4;7650:40;;;;;;;;;;7552:149;7474:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;295:5753:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:102;1009:6;1060:2;1056:7;1051:2;1044:5;1040:14;1036:28;1026:38;;968:102;;;:::o;1076:180::-;1124:77;1121:1;1114:88;1221:4;1218:1;1211:15;1245:4;1242:1;1235:15;1262:281;1345:27;1367:4;1345:27;:::i;:::-;1337:6;1333:40;1475:6;1463:10;1460:22;1439:18;1427:10;1424:34;1421:62;1418:88;;;1486:18;;:::i;:::-;1418:88;1526:10;1522:2;1515:22;1305:238;1262:281;;:::o;1549:129::-;1583:6;1610:20;;:::i;:::-;1600:30;;1639:33;1667:4;1659:6;1639:33;:::i;:::-;1549:129;;;:::o;1684:310::-;1760:4;1850:18;1842:6;1839:30;1836:56;;;1872:18;;:::i;:::-;1836:56;1922:4;1914:6;1910:17;1902:25;;1982:4;1976;1972:15;1964:23;;1684:310;;;:::o;2000:117::-;2109:1;2106;2099:12;2123:89;2159:7;2199:6;2192:5;2188:18;2177:29;;2123:89;;;:::o;2218:120::-;2290:23;2307:5;2290:23;:::i;:::-;2283:5;2280:34;2270:62;;2328:1;2325;2318:12;2270:62;2218:120;:::o;2344:141::-;2400:5;2431:6;2425:13;2416:22;;2447:32;2473:5;2447:32;:::i;:::-;2344:141;;;;:::o;2507:729::-;2613:5;2638:80;2654:63;2710:6;2654:63;:::i;:::-;2638:80;:::i;:::-;2629:89;;2738:5;2767:6;2760:5;2753:21;2801:4;2794:5;2790:16;2783:23;;2854:4;2846:6;2842:17;2834:6;2830:30;2883:3;2875:6;2872:15;2869:122;;;2902:79;;:::i;:::-;2869:122;3017:6;3000:230;3034:6;3029:3;3026:15;3000:230;;;3109:3;3138:47;3181:3;3169:10;3138:47;:::i;:::-;3133:3;3126:60;3215:4;3210:3;3206:14;3199:21;;3076:154;3060:4;3055:3;3051:14;3044:21;;3000:230;;;3004:21;2619:617;;2507:729;;;;;:::o;3258:383::-;3339:5;3388:3;3381:4;3373:6;3369:17;3365:27;3355:122;;3396:79;;:::i;:::-;3355:122;3506:6;3500:13;3531:104;3631:3;3623:6;3616:4;3608:6;3604:17;3531:104;:::i;:::-;3522:113;;3345:296;3258:383;;;;:::o;3647:708::-;3750:6;3758;3807:2;3795:9;3786:7;3782:23;3778:32;3775:119;;;3813:79;;:::i;:::-;3775:119;3933:1;3958:64;4014:7;4005:6;3994:9;3990:22;3958:64;:::i;:::-;3948:74;;3904:128;4092:2;4081:9;4077:18;4071:25;4123:18;4115:6;4112:30;4109:117;;;4145:79;;:::i;:::-;4109:117;4250:88;4330:7;4321:6;4310:9;4306:22;4250:88;:::i;:::-;4240:98;;4042:306;3647:708;;;;;:::o;4361:180::-;4409:77;4406:1;4399:88;4506:4;4503:1;4496:15;4530:4;4527:1;4520:15;295:5753:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","deployedSourceMap":"295:5753:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4889:86:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4981:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4391:129:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4816:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5925:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2837:622:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5356:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4173:472;;;:::i;:::-;;2895:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2467:364:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3637:474;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2027:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5076:91:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4652:231;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5241:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5173:177:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5462:351;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;2606:202:0;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;4889:86:13:-;4937:4;4960:8;;;;;;;;;;;4953:15;;4889:86;:::o;4981:89::-;5031:7;5057:6;5050:13;;4981:89;:::o;4391:129:0:-;4465:7;4491:6;:12;4498:4;4491:12;;;;;;;;;;;:22;;;4484:29;;4391:129;;;:::o;4816:145::-;4899:18;4912:4;4899:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;:::-;4816:145:::0;;;:::o;5925:214::-;6031:12;:10;:12::i;:::-;6020:23;;:7;:23;;;6012:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;2837:622:13:-;2880:13;2989:14;2979:24;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;2975:46;;3005:16;;;;;;;;;;;;;;;;;;;;;2975:46;3045:11;3035:21;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:21;;;;;;;;:::i;:::-;;;3031:40;;3058:13;;;;;;;;;;;;;;;;;;;;;3031:40;3095:16;3085:26;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;3081:50;;3113:18;;;;;;;;;;;;;;;;;;;;;3081:50;3155:16;3145:26;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;3141:50;;3173:18;;;;;;;;;;;;;;;;;;;;;3141:50;3215:11;3205:21;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:21;;;;;;;;:::i;:::-;;;3201:40;;3228:13;;;;;;;;;;;;;;;;;;;;;3201:40;3265:16;3255:26;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;3251:50;;3283:18;;;;;;;;;;;;;;;;;;;;;3251:50;3325:19;3315:29;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:29;;;;;;;;:::i;:::-;;;3311:57;;3346:22;;;;;;;;;;;;;;;;;;;;;3311:57;3392:16;3382:26;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;3378:50;;3410:18;;;;;;;;;;;;;;;;;;;;;3378:50;3438:14;;;;;;;;;;;;;;;;;;;2837:622;;:::o;5356:100::-;5400:15;5434;5427:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5356:100;:::o;4173:472::-;4229:1;4218:8;:12;;;;4250:11;4241:6;;:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4271:14;4281:3;4271:9;:14::i;:::-;4295:7;;:9;;;;;;;;;:::i;:::-;;;;;;4325:7;4314:8;:18;;;;4173:472::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;2467:364:13:-;1781:8;;;;;;;;;;;1773:17;;;;;;1134:24:::1;2505:16:0;2516:4;2505:10;:16::i;:::-;2566:11:13::2;:9;:11::i;:::-;2558:20;;;::::0;::::2;;2597:6;2589:5;;:14;;;;;;;;;;;;;;;;;;2613:30;1273:23;2636:6;2613:10;:30::i;:::-;2654:40;1348:31;2686:7;2654:11;:40::i;:::-;2756:16;2747:6;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2788:36;2810:4;2817:6;;;;;;;;;;;2788:36;;;;;;;:::i;:::-;;;;;;;;1800:1:::1;2467:364:::0;:::o;3637:474::-;1781:8;;;;;;;;;;;1773:17;;;;;;3716:7:::1;3707:6;;:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3744:5;3733:8;;:16;;;;;;;;;;;;;;;;;;3788:40;1348:31;3820:7;3788:11;:40::i;:::-;3838:32;1134:24;3863:6;3838:11;:32::i;:::-;3880:34;1204:25;3906:7;3880:11;:34::i;:::-;3924:40;1348:31;3956:7;3924:11;:40::i;:::-;3994:1;3977:19;;:5;;;;;;;;;;;:19;;;3974:79;;4012:30;1273:23;4036:5;;;;;;;;;;;4012:11;:30::i;:::-;3974:79;4068:36;4090:4;4097:6;;;;;;;;;;;4068:36;;;;;;;:::i;:::-;;;;;;;;3637:474:::0;:::o;2027:49:0:-;2072:4;2027:49;;;:::o;5076:91:13:-;5127:7;5153;5146:14;;5076:91;:::o;4652:231::-;4693:4;4723:14;4713:24;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;:49;;;;4751:11;4741:21;;;;;;;;:::i;:::-;;:6;;;;;;;;;;;:21;;;;;;;;:::i;:::-;;;4713:49;4709:146;;;4821:8;;4804:13;;4786:15;:31;;;;:::i;:::-;4785:44;:59;;4839:5;4785:59;;;4832:4;4785:59;4778:66;;;;4709:146;4871:5;4864:12;;4652:231;;:::o;5241:147:0:-;5325:18;5338:4;5325:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;:::-;5241:147:::0;;;:::o;5173:177:13:-;5222:7;5261:1;5244:19;;:5;;;;;;;;;;;:19;;;5241:81;;5286:25;;;;;;;;;;;;;;5241:81;5338:5;;;;;;;;;;;5331:12;;5173:177;:::o;5462:351::-;5518:7;5535;5552;5569:15;5594:7;5611:13;5662:6;5682:7;5703:5;;;;;;;;;;;5722:15;5751:18;:16;:18::i;:::-;5783:13;:11;:13::i;:::-;5641:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5462:351;;;;;;:::o;829:155:4:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7474:233::-;7557:22;7565:4;7571:7;7557;:22::i;:::-;7552:149;;7627:4;7595:6;:12;7602:4;7595:12;;;;;;;;;;;:20;;:29;7616:7;7595:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7677:12;:10;:12::i;:::-;7650:40;;7668:7;7650:40;;7662:4;7650:40;;;;;;;;;;7552:149;7474:233;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7878:234:0:-;7961:22;7969:4;7975:7;7961;:22::i;:::-;7957:149;;;8031:5;7999:6;:12;8006:4;7999:12;;;;;;;;;;;:20;;:29;8020:7;7999:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8082:12;:10;:12::i;:::-;8055:40;;8073:7;8055:40;;8067:4;8055:40;;;;;;;;;;7957:149;7878:234;;:::o;2266:88:13:-;2319:15;2340:6;2319:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2266:88;:::o;5820:226::-;5870:7;5893:8;;;;;;;;;;;5889:89;;5966:1;5959:8;;;;5889:89;6024:15;6012:8;;5996:13;;:24;;;;:::i;:::-;5995:44;;;;:::i;:::-;5988:51;;5820:226;;:::o;3718:492:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;3989:41;;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4121:13;;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:349;;;;;;;;;;;:::i;:::-;;;;;;;;3801:403;3718:492;;:::o;1652:441:3:-;1727:13;1752:19;1797:1;1788:6;1784:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1752:47;;1809:15;:6;1816:1;1809:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1834;:6;1841:1;1834:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1864:9;1889:1;1880:6;1876:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;1930:12;1951:3;1943:5;:11;1930:25;;;;;;;:::i;:::-;;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1979:1;1969:11;;;;;1899:3;;;;:::i;:::-;;;1859:132;;;;2017:1;2008:5;:10;2000:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2079:6;2065:21;;;1652:441;;;;:::o;88:117:17:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:118::-;1839:24;1857:5;1839:24;:::i;:::-;1834:3;1827:37;1752:118;;:::o;1876:222::-;1969:4;2007:2;1996:9;1992:18;1984:26;;2020:71;2088:1;2077:9;2073:17;2064:6;2020:71;:::i;:::-;1876:222;;;;:::o;2104:77::-;2141:7;2170:5;2159:16;;2104:77;;;:::o;2187:122::-;2260:24;2278:5;2260:24;:::i;:::-;2253:5;2250:35;2240:63;;2299:1;2296;2289:12;2240:63;2187:122;:::o;2315:139::-;2361:5;2399:6;2386:20;2377:29;;2415:33;2442:5;2415:33;:::i;:::-;2315:139;;;;:::o;2460:329::-;2519:6;2568:2;2556:9;2547:7;2543:23;2539:32;2536:119;;;2574:79;;:::i;:::-;2536:119;2694:1;2719:53;2764:7;2755:6;2744:9;2740:22;2719:53;:::i;:::-;2709:63;;2665:117;2460:329;;;;:::o;2795:118::-;2882:24;2900:5;2882:24;:::i;:::-;2877:3;2870:37;2795:118;;:::o;2919:222::-;3012:4;3050:2;3039:9;3035:18;3027:26;;3063:71;3131:1;3120:9;3116:17;3107:6;3063:71;:::i;:::-;2919:222;;;;:::o;3147:122::-;3220:24;3238:5;3220:24;:::i;:::-;3213:5;3210:35;3200:63;;3259:1;3256;3249:12;3200:63;3147:122;:::o;3275:139::-;3321:5;3359:6;3346:20;3337:29;;3375:33;3402:5;3375:33;:::i;:::-;3275:139;;;;:::o;3420:474::-;3488:6;3496;3545:2;3533:9;3524:7;3520:23;3516:32;3513:119;;;3551:79;;:::i;:::-;3513:119;3671:1;3696:53;3741:7;3732:6;3721:9;3717:22;3696:53;:::i;:::-;3686:63;;3642:117;3798:2;3824:53;3869:7;3860:6;3849:9;3845:22;3824:53;:::i;:::-;3814:63;;3769:118;3420:474;;;;;:::o;3900:99::-;3952:6;3986:5;3980:12;3970:22;;3900:99;;;:::o;4005:169::-;4089:11;4123:6;4118:3;4111:19;4163:4;4158:3;4154:14;4139:29;;4005:169;;;;:::o;4180:246::-;4261:1;4271:113;4285:6;4282:1;4279:13;4271:113;;;4370:1;4365:3;4361:11;4355:18;4351:1;4346:3;4342:11;4335:39;4307:2;4304:1;4300:10;4295:15;;4271:113;;;4418:1;4409:6;4404:3;4400:16;4393:27;4242:184;4180:246;;;:::o;4432:102::-;4473:6;4524:2;4520:7;4515:2;4508:5;4504:14;4500:28;4490:38;;4432:102;;;:::o;4540:377::-;4628:3;4656:39;4689:5;4656:39;:::i;:::-;4711:71;4775:6;4770:3;4711:71;:::i;:::-;4704:78;;4791:65;4849:6;4844:3;4837:4;4830:5;4826:16;4791:65;:::i;:::-;4881:29;4903:6;4881:29;:::i;:::-;4876:3;4872:39;4865:46;;4632:285;4540:377;;;;:::o;4923:313::-;5036:4;5074:2;5063:9;5059:18;5051:26;;5123:9;5117:4;5113:20;5109:1;5098:9;5094:17;5087:47;5151:78;5224:4;5215:6;5151:78;:::i;:::-;5143:86;;4923:313;;;;:::o;5242:113::-;5308:6;5342:5;5336:12;5326:22;;5242:113;;;:::o;5361:183::-;5459:11;5493:6;5488:3;5481:19;5533:4;5528:3;5524:14;5509:29;;5361:183;;;;:::o;5550:131::-;5616:4;5639:3;5631:11;;5669:4;5664:3;5660:14;5652:22;;5550:131;;;:::o;5687:89::-;5723:7;5763:6;5756:5;5752:18;5741:29;;5687:89;;;:::o;5782:105::-;5857:23;5874:5;5857:23;:::i;:::-;5852:3;5845:36;5782:105;;:::o;5893:175::-;5960:10;5981:44;6021:3;6013:6;5981:44;:::i;:::-;6057:4;6052:3;6048:14;6034:28;;5893:175;;;;:::o;6074:112::-;6143:4;6175;6170:3;6166:14;6158:22;;6074:112;;;:::o;6220:724::-;6337:3;6366:53;6413:5;6366:53;:::i;:::-;6435:85;6513:6;6508:3;6435:85;:::i;:::-;6428:92;;6544:55;6593:5;6544:55;:::i;:::-;6622:7;6653:1;6638:281;6663:6;6660:1;6657:13;6638:281;;;6739:6;6733:13;6766:61;6823:3;6808:13;6766:61;:::i;:::-;6759:68;;6850:59;6902:6;6850:59;:::i;:::-;6840:69;;6698:221;6685:1;6682;6678:9;6673:14;;6638:281;;;6642:14;6935:3;6928:10;;6342:602;;;6220:724;;;;:::o;6950:369::-;7091:4;7129:2;7118:9;7114:18;7106:26;;7178:9;7172:4;7168:20;7164:1;7153:9;7149:17;7142:47;7206:106;7307:4;7298:6;7206:106;:::i;:::-;7198:114;;6950:369;;;;:::o;7325:329::-;7384:6;7433:2;7421:9;7412:7;7408:23;7404:32;7401:119;;;7439:79;;:::i;:::-;7401:119;7559:1;7584:53;7629:7;7620:6;7609:9;7605:22;7584:53;:::i;:::-;7574:63;;7530:117;7325:329;;;;:::o;7660:110::-;7744:1;7737:5;7734:12;7724:40;;7760:1;7757;7750:12;7724:40;7660:110;:::o;7776:161::-;7833:5;7871:6;7858:20;7849:29;;7887:44;7925:5;7887:44;:::i;:::-;7776:161;;;;:::o;7943:351::-;8013:6;8062:2;8050:9;8041:7;8037:23;8033:32;8030:119;;;8068:79;;:::i;:::-;8030:119;8188:1;8213:64;8269:7;8260:6;8249:9;8245:22;8213:64;:::i;:::-;8203:74;;8159:128;7943:351;;;;:::o;8300:77::-;8337:7;8366:5;8355:16;;8300:77;;;:::o;8383:118::-;8470:24;8488:5;8470:24;:::i;:::-;8465:3;8458:37;8383:118;;:::o;8507:1013::-;8808:4;8846:3;8835:9;8831:19;8823:27;;8860:71;8928:1;8917:9;8913:17;8904:6;8860:71;:::i;:::-;8941:72;9009:2;8998:9;8994:18;8985:6;8941:72;:::i;:::-;9023;9091:2;9080:9;9076:18;9067:6;9023:72;:::i;:::-;9142:9;9136:4;9132:20;9127:2;9116:9;9112:18;9105:48;9170:106;9271:4;9262:6;9170:106;:::i;:::-;9162:114;;9286:73;9354:3;9343:9;9339:19;9330:6;9286:73;:::i;:::-;9407:9;9401:4;9397:20;9391:3;9380:9;9376:19;9369:49;9435:78;9508:4;9499:6;9435:78;:::i;:::-;9427:86;;8507:1013;;;;;;;;;:::o;9526:234::-;9666:34;9662:1;9654:6;9650:14;9643:58;9735:17;9730:2;9722:6;9718:15;9711:42;9526:234;:::o;9766:366::-;9908:3;9929:67;9993:2;9988:3;9929:67;:::i;:::-;9922:74;;10005:93;10094:3;10005:93;:::i;:::-;10123:2;10118:3;10114:12;10107:19;;9766:366;;;:::o;10138:419::-;10304:4;10342:2;10331:9;10327:18;10319:26;;10391:9;10385:4;10381:20;10377:1;10366:9;10362:17;10355:47;10419:131;10545:4;10419:131;:::i;:::-;10411:139;;10138:419;;;:::o;10563:180::-;10611:77;10608:1;10601:88;10708:4;10705:1;10698:15;10732:4;10729:1;10722:15;10749:180;10797:77;10794:1;10787:88;10894:4;10891:1;10884:15;10918:4;10915:1;10908:15;10935:233;10974:3;10997:24;11015:5;10997:24;:::i;:::-;10988:33;;11043:66;11036:5;11033:77;11030:103;;11113:18;;:::i;:::-;11030:103;11160:1;11153:5;11149:13;11142:20;;10935:233;;;:::o;11174:116::-;11258:1;11251:5;11248:12;11238:46;;11264:18;;:::i;:::-;11238:46;11174:116;:::o;11296:133::-;11344:7;11373:5;11362:16;;11379:44;11417:5;11379:44;:::i;:::-;11296:133;;;:::o;11435:::-;11494:9;11527:35;11556:5;11527:35;:::i;:::-;11514:48;;11435:133;;;:::o;11574:149::-;11670:46;11710:5;11670:46;:::i;:::-;11665:3;11658:59;11574:149;;:::o;11729:350::-;11859:4;11897:2;11886:9;11882:18;11874:26;;11910:71;11978:1;11967:9;11963:17;11954:6;11910:71;:::i;:::-;11991:81;12068:2;12057:9;12053:18;12044:6;11991:81;:::i;:::-;11729:350;;;;;:::o;12085:194::-;12125:4;12145:20;12163:1;12145:20;:::i;:::-;12140:25;;12179:20;12197:1;12179:20;:::i;:::-;12174:25;;12223:1;12220;12216:9;12208:17;;12247:1;12241:4;12238:11;12235:37;;;12252:18;;:::i;:::-;12235:37;12085:194;;;;:::o;12285:191::-;12325:3;12344:20;12362:1;12344:20;:::i;:::-;12339:25;;12378:20;12396:1;12378:20;:::i;:::-;12373:25;;12421:1;12418;12414:9;12407:16;;12442:3;12439:1;12436:10;12433:36;;;12449:18;;:::i;:::-;12433:36;12285:191;;;;:::o;12482:148::-;12584:11;12621:3;12606:18;;12482:148;;;;:::o;12636:173::-;12776:25;12772:1;12764:6;12760:14;12753:49;12636:173;:::o;12815:402::-;12975:3;12996:85;13078:2;13073:3;12996:85;:::i;:::-;12989:92;;13090:93;13179:3;13090:93;:::i;:::-;13208:2;13203:3;13199:12;13192:19;;12815:402;;;:::o;13223:390::-;13329:3;13357:39;13390:5;13357:39;:::i;:::-;13412:89;13494:6;13489:3;13412:89;:::i;:::-;13405:96;;13510:65;13568:6;13563:3;13556:4;13549:5;13545:16;13510:65;:::i;:::-;13600:6;13595:3;13591:16;13584:23;;13333:280;13223:390;;;;:::o;13619:167::-;13759:19;13755:1;13747:6;13743:14;13736:43;13619:167;:::o;13792:402::-;13952:3;13973:85;14055:2;14050:3;13973:85;:::i;:::-;13966:92;;14067:93;14156:3;14067:93;:::i;:::-;14185:2;14180:3;14176:12;14169:19;;13792:402;;;:::o;14200:967::-;14582:3;14604:148;14748:3;14604:148;:::i;:::-;14597:155;;14769:95;14860:3;14851:6;14769:95;:::i;:::-;14762:102;;14881:148;15025:3;14881:148;:::i;:::-;14874:155;;15046:95;15137:3;15128:6;15046:95;:::i;:::-;15039:102;;15158:3;15151:10;;14200:967;;;;;:::o;15173:410::-;15213:7;15236:20;15254:1;15236:20;:::i;:::-;15231:25;;15270:20;15288:1;15270:20;:::i;:::-;15265:25;;15325:1;15322;15318:9;15347:30;15365:11;15347:30;:::i;:::-;15336:41;;15526:1;15517:7;15513:15;15510:1;15507:22;15487:1;15480:9;15460:83;15437:139;;15556:18;;:::i;:::-;15437:139;15221:362;15173:410;;;;:::o;15589:180::-;15637:77;15634:1;15627:88;15734:4;15731:1;15724:15;15758:4;15755:1;15748:15;15775:180;15823:77;15820:1;15813:88;15920:4;15917:1;15910:15;15944:4;15941:1;15934:15;15961:171;16000:3;16023:24;16041:5;16023:24;:::i;:::-;16014:33;;16069:4;16062:5;16059:15;16056:41;;16077:18;;:::i;:::-;16056:41;16124:1;16117:5;16113:13;16106:20;;15961:171;;;:::o;16138:182::-;16278:34;16274:1;16266:6;16262:14;16255:58;16138:182;:::o;16326:366::-;16468:3;16489:67;16553:2;16548:3;16489:67;:::i;:::-;16482:74;;16565:93;16654:3;16565:93;:::i;:::-;16683:2;16678:3;16674:12;16667:19;;16326:366;;;:::o;16698:419::-;16864:4;16902:2;16891:9;16887:18;16879:26;;16951:9;16945:4;16941:20;16937:1;16926:9;16922:17;16915:47;16979:131;17105:4;16979:131;:::i;:::-;16971:139;;16698:419;;;:::o","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\"@openzeppelin/contracts/access/AccessControl.sol\\";\\n\\n\\n// errors\\nerror Ticket__inactive();\\nerror Ticket__NoJudgeAssigned();\\n\\n\\n/// @title Ticket\\n/// @author Samin Yaser\\n/// @notice You can use this contract to issue a traffic ticket\\ncontract Ticket is AccessControl {\\n\\n    // Events\\n    event StatusChanged(address ticket_address, Status status);\\n\\n    // Pending: Ticket is issued and driver can pay the fine\\n    // Late: Driver has been late with the payment\\n    // Paid: Driver has paid the fine and ticket is closed\\n    // Cancelled: Ticket is cancelled by the police due to some reason\\n    // disputing: Ticket is being disputed in the court by the request of the driver\\n    // dismissed: Ticket is dismissed by the court in favor of the driver\\n    // unresolvable: ???\\n    // Convicted: Driver is convicted by the court and has to pay the fine\\n    enum Status {\\n        pending,\\n        late,\\n        paid,\\n        cancelled,\\n        disputing,\\n        dismissed,\\n        unresolvable,\\n        convicted\\n    }\\n\\n    // Roles\\n    bytes32 private constant DRIVER_ROLE = keccak256(\\"DRIVER_ROLE\\");\\n    bytes32 private constant OFFICER_ROLE = keccak256(\\"OFFICER_ROLE\\");\\n    bytes32 private constant JUDGE_ROLE = keccak256(\\"JUDGE_ROLE\\");\\n    bytes32 private constant CANCEL_TICKET_ROLE = keccak256(\\"CANCEL_TICKET_ROLE\\");\\n\\n    // Attributes\\n    address private immutable driver;\\n    address private immutable officer;\\n    address private judge;\\n    uint16[] private penalty_clasues;\\n    uint256 private lastTimeStamp;\\n    uint256 private interval = 30 days;\\n    uint256 private strikes = 0;\\n    Status private status;\\n    bool private isActive = true; // ticket is active or not\\n\\n    modifier checkActive{\\n        require(isActive);\\n        _;\\n    }\\n\\n    constructor(\\n        address driver_,\\n        uint16[] memory penalty_clasues_\\n        )\\n    {\\n\\n        driver = driver_;\\n        officer = msg.sender;\\n        judge = address(0);\\n        penalty_clasues = penalty_clasues_;\\n\\n        lastTimeStamp = block.timestamp;\\n\\n        status = Status.pending;\\n\\n        _setupRole(DRIVER_ROLE, driver_);\\n        _setupRole(OFFICER_ROLE, msg.sender);\\n        _setupRole(CANCEL_TICKET_ROLE, msg.sender);\\n    }\\n\\n    function addCharge(uint16 charge) internal {\\n        penalty_clasues.push(charge);\\n    }\\n\\n    /// @notice Owner can request a hearing in court\\n    /// @dev must provide wallet address of the judge\\n    function requestHearing(address judge_) public checkActive onlyRole(DRIVER_ROLE) {\\n        require(isPayable());\\n\\n        judge = judge_;\\n        _grantRole(JUDGE_ROLE, judge_);\\n\\n        _revokeRole(CANCEL_TICKET_ROLE, officer); // officer can\'t cancel the ticket anymore\\n        status = Status.disputing;\\n\\n        emit StatusChanged(address(this), status);\\n    }\\n\\n    function checkStatus() public view returns(string memory) {\\n\\n        // return uint256(status);\\n        // Ugly but gas efficient\\n        if (status == Status.pending) return \\"Pending\\";\\n        if (status == Status.late) return \\"Late\\";\\n        if (status == Status.dismissed) return \\"Dismissed\\";\\n        if (status == Status.disputing) return \\"Disputing\\";\\n        if (status == Status.paid) return \\"Paid\\";\\n        if (status == Status.cancelled) return \\"Cancelled\\";\\n        if (status == Status.unresolvable) return \\"Unresolvalble\\";\\n        if (status == Status.convicted) return \\"Convicted\\";\\n        return \\"Error\\";\\n    }\\n\\n    /// @dev set interval in days\\n    function setInterval(uint256 interval_) internal {\\n        interval = interval_;\\n    }\\n\\n    /// @notice Resolves the ticket for good.\\n    function resolveTicket(Status status_) external checkActive {\\n        status = status_;\\n        isActive = false;\\n\\n        // Revoke all roles\\n        _revokeRole(CANCEL_TICKET_ROLE, officer);\\n        _revokeRole(DRIVER_ROLE, driver);\\n        _revokeRole(OFFICER_ROLE, officer);\\n        _revokeRole(CANCEL_TICKET_ROLE, officer);\\n        if(judge != address(0)) {\\n            _revokeRole(JUDGE_ROLE, judge);\\n        }\\n\\n        emit StatusChanged(address(this), status);\\n    }\\n\\n    /// @notice update the state of the ticket for demo\\n    function updateStatusDemo() public {\\n        interval = 0;\\n\\n        status = Status.late;\\n        addCharge(130);\\n        strikes++;\\n        interval = 30 days;\\n\\n        // if (strikes == 3) {\\n        //     status = Status.unresolvable;\\n        //     isActive = false;\\n        // } else if (getRemainingTime() <= 0) {\\n        //     status = Status.late;\\n        //     addCharge(100);\\n        //     strikes++;\\n        //     interval = interval * 2;\\n        // }\\n    }\\n\\n\\n    function isPayable() public view returns(bool) {\\n        if (status == Status.pending || status == Status.late) {\\n            return (block.timestamp - lastTimeStamp) < interval ? true : false;\\n        }\\n        return false;\\n    }\\n\\n    function isTicketActive() external view returns(bool) {\\n        return isActive;\\n    }\\n\\n    function getDriverAddress() external view returns(address) {\\n        return driver;\\n    }\\n\\n    function getOfficerAddress() external view returns(address) {\\n        return officer;\\n    }\\n\\n    function getJudgeAddress() external view returns(address) {\\n        if(judge == address(0)) {\\n            revert Ticket__NoJudgeAssigned();\\n        }\\n        return judge;\\n    }\\n\\n    function getCharges() external view returns(uint16[] memory) {\\n        return penalty_clasues;\\n    }\\n\\n    function getTicketInfo() external view returns(\\n        address,\\n        address,\\n        address,\\n        uint16[] memory,\\n        uint256,\\n        string memory\\n    ) {\\n        return (\\n            driver,\\n            officer,\\n            judge,\\n            penalty_clasues,\\n            getRemainingTime(),\\n            checkStatus()\\n        );\\n    }\\n\\n\\n    function getRemainingTime() internal view returns(uint256) {\\n        if(!isActive) {\\n            // revert Ticket__inactive();\\n            return 0;\\n        }\\n\\n        return (lastTimeStamp + interval) - block.timestamp;\\n    }\\n}\\n","sourcePath":"C:\\\\Users\\\\samin\\\\Documents\\\\Projects\\\\AWT\\\\TraffiChain\\\\contracts\\\\Ticket.sol","ast":{"absolutePath":"project:/contracts/Ticket.sol","exportedSymbols":{"AccessControl":[319],"Context":[414],"ERC165":[664],"IAccessControl":[392],"IERC165":[676],"Strings":[640],"Ticket":[2112],"Ticket__NoJudgeAssigned":[1641],"Ticket__inactive":[1639]},"id":2113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1636,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":1637,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2113,"sourceUnit":320,"src":"57:58:13","symbolAliases":[],"unitAlias":""},{"errorSelector":"45978dec","id":1639,"name":"Ticket__inactive","nameLocation":"134:16:13","nodeType":"ErrorDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[],"src":"150:2:13"},"src":"128:25:13"},{"errorSelector":"87f439ad","id":1641,"name":"Ticket__NoJudgeAssigned","nameLocation":"160:23:13","nodeType":"ErrorDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[],"src":"183:2:13"},"src":"154:32:13"},{"abstract":false,"baseContracts":[{"baseName":{"id":1643,"name":"AccessControl","nameLocations":["314:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":319,"src":"314:13:13"},"id":1644,"nodeType":"InheritanceSpecifier","src":"314:13:13"}],"canonicalName":"Ticket","contractDependencies":[],"contractKind":"contract","documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"189:106:13","text":"@title Ticket\\n @author Samin Yaser\\n @notice You can use this contract to issue a traffic ticket"},"fullyImplemented":true,"id":2112,"linearizedBaseContracts":[2112,319,664,676,392,414],"name":"Ticket","nameLocation":"304:6:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"76c0bad3b7f1c74587dcb478154d4c87ae6663db97cc086b981decf4e35a797c","id":1651,"name":"StatusChanged","nameLocation":"355:13:13","nodeType":"EventDefinition","parameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"indexed":false,"mutability":"mutable","name":"ticket_address","nameLocation":"377:14:13","nodeType":"VariableDeclaration","scope":1651,"src":"369:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"369:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1649,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"400:6:13","nodeType":"VariableDeclaration","scope":1651,"src":"393:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"typeName":{"id":1648,"nodeType":"UserDefinedTypeName","pathNode":{"id":1647,"name":"Status","nameLocations":["393:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1660,"src":"393:6:13"},"referencedDeclaration":1660,"src":"393:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"visibility":"internal"}],"src":"368:39:13"},"src":"349:59:13"},{"canonicalName":"Ticket.Status","id":1660,"members":[{"id":1652,"name":"pending","nameLocation":"937:7:13","nodeType":"EnumValue","src":"937:7:13"},{"id":1653,"name":"late","nameLocation":"954:4:13","nodeType":"EnumValue","src":"954:4:13"},{"id":1654,"name":"paid","nameLocation":"968:4:13","nodeType":"EnumValue","src":"968:4:13"},{"id":1655,"name":"cancelled","nameLocation":"982:9:13","nodeType":"EnumValue","src":"982:9:13"},{"id":1656,"name":"disputing","nameLocation":"1001:9:13","nodeType":"EnumValue","src":"1001:9:13"},{"id":1657,"name":"dismissed","nameLocation":"1020:9:13","nodeType":"EnumValue","src":"1020:9:13"},{"id":1658,"name":"unresolvable","nameLocation":"1039:12:13","nodeType":"EnumValue","src":"1039:12:13"},{"id":1659,"name":"convicted","nameLocation":"1061:9:13","nodeType":"EnumValue","src":"1061:9:13"}],"name":"Status","nameLocation":"920:6:13","nodeType":"EnumDefinition","src":"915:161:13"},{"constant":true,"id":1665,"mutability":"constant","name":"DRIVER_ROLE","nameLocation":"1120:11:13","nodeType":"VariableDeclaration","scope":2112,"src":"1095:63:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1095:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4452495645525f524f4c45","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1144:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_469f0a0947cf59c7d944c91c6f4c13c396753b8abf0036156a8c6b0c02fdc02e","typeString":"literal_string \\"DRIVER_ROLE\\""},"value":"DRIVER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_469f0a0947cf59c7d944c91c6f4c13c396753b8abf0036156a8c6b0c02fdc02e","typeString":"literal_string \\"DRIVER_ROLE\\""}],"id":1662,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"1134:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1134:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":1670,"mutability":"constant","name":"OFFICER_ROLE","nameLocation":"1189:12:13","nodeType":"VariableDeclaration","scope":2112,"src":"1164:65:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1164:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f4646494345525f524f4c45","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1214:14:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbecb2568601cb27e6ced525237c463da94c4fb7a9b98ac79fd30fd56d8e1b53","typeString":"literal_string \\"OFFICER_ROLE\\""},"value":"OFFICER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bbecb2568601cb27e6ced525237c463da94c4fb7a9b98ac79fd30fd56d8e1b53","typeString":"literal_string \\"OFFICER_ROLE\\""}],"id":1667,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"1204:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1204:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":1675,"mutability":"constant","name":"JUDGE_ROLE","nameLocation":"1260:10:13","nodeType":"VariableDeclaration","scope":2112,"src":"1235:61:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4a554447455f524f4c45","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1283:12:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c4e6fd68fbdec6e3075ec7bfba710532af019aea93f5f59ebfe5a9d1a0b894e","typeString":"literal_string \\"JUDGE_ROLE\\""},"value":"JUDGE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9c4e6fd68fbdec6e3075ec7bfba710532af019aea93f5f59ebfe5a9d1a0b894e","typeString":"literal_string \\"JUDGE_ROLE\\""}],"id":1672,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"1273:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1273:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":1680,"mutability":"constant","name":"CANCEL_TICKET_ROLE","nameLocation":"1327:18:13","nodeType":"VariableDeclaration","scope":2112,"src":"1302:77:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1302:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"43414e43454c5f5449434b45545f524f4c45","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1358:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f","typeString":"literal_string \\"CANCEL_TICKET_ROLE\\""},"value":"CANCEL_TICKET_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f","typeString":"literal_string \\"CANCEL_TICKET_ROLE\\""}],"id":1677,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"1348:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1348:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1682,"mutability":"immutable","name":"driver","nameLocation":"1430:6:13","nodeType":"VariableDeclaration","scope":2112,"src":"1404:32:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1681,"name":"address","nodeType":"ElementaryTypeName","src":"1404:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1684,"mutability":"immutable","name":"officer","nameLocation":"1468:7:13","nodeType":"VariableDeclaration","scope":2112,"src":"1442:33:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"1442:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1686,"mutability":"mutable","name":"judge","nameLocation":"1497:5:13","nodeType":"VariableDeclaration","scope":2112,"src":"1481:21:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"1481:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1689,"mutability":"mutable","name":"penalty_clasues","nameLocation":"1525:15:13","nodeType":"VariableDeclaration","scope":2112,"src":"1508:32:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage","typeString":"uint16[]"},"typeName":{"baseType":{"id":1687,"name":"uint16","nodeType":"ElementaryTypeName","src":"1508:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":1688,"nodeType":"ArrayTypeName","src":"1508:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"private"},{"constant":false,"id":1691,"mutability":"mutable","name":"lastTimeStamp","nameLocation":"1562:13:13","nodeType":"VariableDeclaration","scope":2112,"src":"1546:29:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1546:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1694,"mutability":"mutable","name":"interval","nameLocation":"1597:8:13","nodeType":"VariableDeclaration","scope":2112,"src":"1581:34:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1608:7:13","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"visibility":"private"},{"constant":false,"id":1697,"mutability":"mutable","name":"strikes","nameLocation":"1637:7:13","nodeType":"VariableDeclaration","scope":2112,"src":"1621:27:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":false,"id":1700,"mutability":"mutable","name":"status","nameLocation":"1669:6:13","nodeType":"VariableDeclaration","scope":2112,"src":"1654:21:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"typeName":{"id":1699,"nodeType":"UserDefinedTypeName","pathNode":{"id":1698,"name":"Status","nameLocations":["1654:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1660,"src":"1654:6:13"},"referencedDeclaration":1660,"src":"1654:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"visibility":"private"},{"constant":false,"id":1703,"mutability":"mutable","name":"isActive","nameLocation":"1694:8:13","nodeType":"VariableDeclaration","scope":2112,"src":"1681:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1681:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1705:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"private"},{"body":{"id":1710,"nodeType":"Block","src":"1763:45:13","statements":[{"expression":{"arguments":[{"id":1706,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"1781:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1773:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"ExpressionStatement","src":"1773:17:13"},{"id":1709,"nodeType":"PlaceholderStatement","src":"1800:1:13"}]},"id":1711,"name":"checkActive","nameLocation":"1752:11:13","nodeType":"ModifierDefinition","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"1763:0:13"},"src":"1743:65:13","virtual":false,"visibility":"internal"},{"body":{"id":1766,"nodeType":"Block","src":"1907:353:13","statements":[{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1719,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"1918:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1720,"name":"driver_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"1927:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1918:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1722,"nodeType":"ExpressionStatement","src":"1918:16:13"},{"expression":{"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1723,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1944:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1954:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1958:6:13","memberName":"sender","nodeType":"MemberAccess","src":"1954:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1944:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1727,"nodeType":"ExpressionStatement","src":"1944:20:13"},{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1728,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"1974:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1990:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1982:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:13","typeDescriptions":{}}},"id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1982:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1974:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1734,"nodeType":"ExpressionStatement","src":"1974:18:13"},{"expression":{"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1735,"name":"penalty_clasues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"2002:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage","typeString":"uint16[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1736,"name":"penalty_clasues_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2020:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"}},"src":"2002:34:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage","typeString":"uint16[] storage ref"}},"id":1738,"nodeType":"ExpressionStatement","src":"2002:34:13"},{"expression":{"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1739,"name":"lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"2047:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1740,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2063:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2069:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"2063:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2047:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1743,"nodeType":"ExpressionStatement","src":"2047:31:13"},{"expression":{"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1744,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"2089:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1745,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2098:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2105:7:13","memberName":"pending","nodeType":"MemberAccess","referencedDeclaration":1652,"src":"2098:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"2089:23:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"id":1748,"nodeType":"ExpressionStatement","src":"2089:23:13"},{"expression":{"arguments":[{"id":1750,"name":"DRIVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"2134:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1751,"name":"driver_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2147:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1749,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"2123:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2123:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1753,"nodeType":"ExpressionStatement","src":"2123:32:13"},{"expression":{"arguments":[{"id":1755,"name":"OFFICER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2176:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1756,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2190:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2194:6:13","memberName":"sender","nodeType":"MemberAccess","src":"2190:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1754,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"2165:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2165:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1759,"nodeType":"ExpressionStatement","src":"2165:36:13"},{"expression":{"arguments":[{"id":1761,"name":"CANCEL_TICKET_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2222:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1762,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2242:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2246:6:13","memberName":"sender","nodeType":"MemberAccess","src":"2242:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1760,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"2211:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2211:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"2211:42:13"}]},"id":1767,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"driver_","nameLocation":"1843:7:13","nodeType":"VariableDeclaration","scope":1767,"src":"1835:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"penalty_clasues_","nameLocation":"1876:16:13","nodeType":"VariableDeclaration","scope":1767,"src":"1860:32:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[]"},"typeName":{"baseType":{"id":1714,"name":"uint16","nodeType":"ElementaryTypeName","src":"1860:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":1715,"nodeType":"ArrayTypeName","src":"1860:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"internal"}],"src":"1825:77:13"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"1907:0:13"},"scope":2112,"src":"1814:446:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1778,"nodeType":"Block","src":"2309:45:13","statements":[{"expression":{"arguments":[{"id":1775,"name":"charge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"2340:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":1772,"name":"penalty_clasues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"2319:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage","typeString":"uint16[] storage ref"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2335:4:13","memberName":"push","nodeType":"MemberAccess","src":"2319:20:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint16_$dyn_storage_ptr_$_t_uint16_$returns$__$bound_to$_t_array$_t_uint16_$dyn_storage_ptr_$","typeString":"function (uint16[] storage pointer,uint16)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2319:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1777,"nodeType":"ExpressionStatement","src":"2319:28:13"}]},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"addCharge","nameLocation":"2275:9:13","nodeType":"FunctionDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"charge","nameLocation":"2292:6:13","nodeType":"VariableDeclaration","scope":1779,"src":"2285:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1768,"name":"uint16","nodeType":"ElementaryTypeName","src":"2285:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2284:15:13"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[],"src":"2309:0:13"},"scope":2112,"src":"2266:88:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1822,"nodeType":"Block","src":"2548:283:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1791,"name":"isPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"2566:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2558:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1794,"nodeType":"ExpressionStatement","src":"2558:20:13"},{"expression":{"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1795,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2589:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1796,"name":"judge_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"2597:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2589:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1798,"nodeType":"ExpressionStatement","src":"2589:14:13"},{"expression":{"arguments":[{"id":1800,"name":"JUDGE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"2624:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1801,"name":"judge_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"2636:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1799,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"2613:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2613:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1803,"nodeType":"ExpressionStatement","src":"2613:30:13"},{"expression":{"arguments":[{"id":1805,"name":"CANCEL_TICKET_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2666:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1806,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2686:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1804,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2654:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2654:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"ExpressionStatement","src":"2654:40:13"},{"expression":{"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1809,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"2747:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1810,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2756:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2763:9:13","memberName":"disputing","nodeType":"MemberAccess","referencedDeclaration":1656,"src":"2756:16:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"2747:25:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"id":1813,"nodeType":"ExpressionStatement","src":"2747:25:13"},{"eventCall":{"arguments":[{"arguments":[{"id":1817,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2810:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2802:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"2802:7:13","typeDescriptions":{}}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2802:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1819,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"2817:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}],"id":1814,"name":"StatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"2788:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_Status_$1660_$returns$__$","typeString":"function (address,enum Ticket.Status)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1821,"nodeType":"EmitStatement","src":"2783:41:13"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"2360:102:13","text":"@notice Owner can request a hearing in court\\n @dev must provide wallet address of the judge"},"functionSelector":"92ce0e06","id":1823,"implemented":true,"kind":"function","modifiers":[{"id":1785,"kind":"modifierInvocation","modifierName":{"id":1784,"name":"checkActive","nameLocations":["2514:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"2514:11:13"},"nodeType":"ModifierInvocation","src":"2514:11:13"},{"arguments":[{"id":1787,"name":"DRIVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"2535:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1788,"kind":"modifierInvocation","modifierName":{"id":1786,"name":"onlyRole","nameLocations":["2526:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"2526:8:13"},"nodeType":"ModifierInvocation","src":"2526:21:13"}],"name":"requestHearing","nameLocation":"2476:14:13","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"judge_","nameLocation":"2499:6:13","nodeType":"VariableDeclaration","scope":1823,"src":"2491:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"2491:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2490:16:13"},"returnParameters":{"id":1789,"nodeType":"ParameterList","parameters":[],"src":"2548:0:13"},"scope":2112,"src":"2467:364:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1886,"nodeType":"Block","src":"2895:564:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1828,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"2979:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1829,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2996:7:13","memberName":"pending","nodeType":"MemberAccess","referencedDeclaration":1652,"src":"2989:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"2979:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1834,"nodeType":"IfStatement","src":"2975:46:13","trueBody":{"expression":{"hexValue":"50656e64696e67","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3012:9:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4be840e351422c3b302abb79aa7db05560ead7e387e413320822a342fca3f54e","typeString":"literal_string \\"Pending\\""},"value":"Pending"},"functionReturnParameters":1827,"id":1833,"nodeType":"Return","src":"3005:16:13"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1835,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3035:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1836,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3045:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3052:4:13","memberName":"late","nodeType":"MemberAccess","referencedDeclaration":1653,"src":"3045:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"3035:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1841,"nodeType":"IfStatement","src":"3031:40:13","trueBody":{"expression":{"hexValue":"4c617465","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3065:6:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d9285f55d1b48f8e46b3cb5aaf77e9164a36532ce1de8fb4c4fb4425ba4dec4","typeString":"literal_string \\"Late\\""},"value":"Late"},"functionReturnParameters":1827,"id":1840,"nodeType":"Return","src":"3058:13:13"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1842,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3085:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1843,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3095:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3102:9:13","memberName":"dismissed","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"3095:16:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"3085:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1848,"nodeType":"IfStatement","src":"3081:50:13","trueBody":{"expression":{"hexValue":"4469736d6973736564","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3120:11:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_fff0ea78639ac4900870a40f179ee23f38a9ed725d400f4ab4184c4861701f2c","typeString":"literal_string \\"Dismissed\\""},"value":"Dismissed"},"functionReturnParameters":1827,"id":1847,"nodeType":"Return","src":"3113:18:13"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1849,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3145:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1850,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3155:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3162:9:13","memberName":"disputing","nodeType":"MemberAccess","referencedDeclaration":1656,"src":"3155:16:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"3145:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1855,"nodeType":"IfStatement","src":"3141:50:13","trueBody":{"expression":{"hexValue":"446973707574696e67","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3180:11:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8525ac7d88e75076302a7b7de4727fa4dbc3f7f04301821d0f959b957f328a55","typeString":"literal_string \\"Disputing\\""},"value":"Disputing"},"functionReturnParameters":1827,"id":1854,"nodeType":"Return","src":"3173:18:13"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3205:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1857,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3215:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3222:4:13","memberName":"paid","nodeType":"MemberAccess","referencedDeclaration":1654,"src":"3215:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"3205:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1862,"nodeType":"IfStatement","src":"3201:40:13","trueBody":{"expression":{"hexValue":"50616964","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3235:6:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_21d9bb69a52e805568416ac0779bad2902dbd559032654b1806c7d1edaeaad13","typeString":"literal_string \\"Paid\\""},"value":"Paid"},"functionReturnParameters":1827,"id":1861,"nodeType":"Return","src":"3228:13:13"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1863,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3255:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1864,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3265:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3272:9:13","memberName":"cancelled","nodeType":"MemberAccess","referencedDeclaration":1655,"src":"3265:16:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"3255:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1869,"nodeType":"IfStatement","src":"3251:50:13","trueBody":{"expression":{"hexValue":"43616e63656c6c6564","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3290:11:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b","typeString":"literal_string \\"Cancelled\\""},"value":"Cancelled"},"functionReturnParameters":1827,"id":1868,"nodeType":"Return","src":"3283:18:13"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1870,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3315:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1871,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3325:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3332:12:13","memberName":"unresolvable","nodeType":"MemberAccess","referencedDeclaration":1658,"src":"3325:19:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"3315:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1876,"nodeType":"IfStatement","src":"3311:57:13","trueBody":{"expression":{"hexValue":"556e7265736f6c76616c626c65","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3353:15:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce9f0d5c53ffe486fbe3eb935601cee1ba5f6b4d3ebe622e7c247b96da545007","typeString":"literal_string \\"Unresolvalble\\""},"value":"Unresolvalble"},"functionReturnParameters":1827,"id":1875,"nodeType":"Return","src":"3346:22:13"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1877,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3382:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1878,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3392:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3399:9:13","memberName":"convicted","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"3392:16:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"3382:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1883,"nodeType":"IfStatement","src":"3378:50:13","trueBody":{"expression":{"hexValue":"436f6e766963746564","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3417:11:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4783cc2880ef30f2853b84c21e7daee0d8486c4e37d92d8f7ea9417aa9b1eabc","typeString":"literal_string \\"Convicted\\""},"value":"Convicted"},"functionReturnParameters":1827,"id":1882,"nodeType":"Return","src":"3410:18:13"}},{"expression":{"hexValue":"4572726f72","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3445:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1","typeString":"literal_string \\"Error\\""},"value":"Error"},"functionReturnParameters":1827,"id":1885,"nodeType":"Return","src":"3438:14:13"}]},"functionSelector":"3b7104f2","id":1887,"implemented":true,"kind":"function","modifiers":[],"name":"checkStatus","nameLocation":"2846:11:13","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[],"src":"2857:2:13"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1887,"src":"2880:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1825,"name":"string","nodeType":"ElementaryTypeName","src":"2880:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2879:15:13"},"scope":2112,"src":"2837:622:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1897,"nodeType":"Block","src":"3548:37:13","statements":[{"expression":{"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1893,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"3558:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1894,"name":"interval_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"3569:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3558:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1896,"nodeType":"ExpressionStatement","src":"3558:20:13"}]},"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"3465:29:13","text":"@dev set interval in days"},"id":1898,"implemented":true,"kind":"function","modifiers":[],"name":"setInterval","nameLocation":"3508:11:13","nodeType":"FunctionDefinition","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"interval_","nameLocation":"3528:9:13","nodeType":"VariableDeclaration","scope":1898,"src":"3520:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"3520:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3519:19:13"},"returnParameters":{"id":1892,"nodeType":"ParameterList","parameters":[],"src":"3548:0:13"},"scope":2112,"src":"3499:86:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"3697:414:13","statements":[{"expression":{"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1907,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3707:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1908,"name":"status_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"3716:7:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"3707:16:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"id":1910,"nodeType":"ExpressionStatement","src":"3707:16:13"},{"expression":{"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1911,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"3733:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3744:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3733:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1914,"nodeType":"ExpressionStatement","src":"3733:16:13"},{"expression":{"arguments":[{"id":1916,"name":"CANCEL_TICKET_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"3800:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1917,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"3820:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1915,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3788:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1919,"nodeType":"ExpressionStatement","src":"3788:40:13"},{"expression":{"arguments":[{"id":1921,"name":"DRIVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"3850:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1922,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"3863:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1920,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3838:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3838:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1924,"nodeType":"ExpressionStatement","src":"3838:32:13"},{"expression":{"arguments":[{"id":1926,"name":"OFFICER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"3892:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1927,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"3906:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1925,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3880:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1929,"nodeType":"ExpressionStatement","src":"3880:34:13"},{"expression":{"arguments":[{"id":1931,"name":"CANCEL_TICKET_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"3936:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1932,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"3956:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1930,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3924:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3924:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"3924:40:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"3977:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3994:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3986:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1936,"name":"address","nodeType":"ElementaryTypeName","src":"3986:7:13","typeDescriptions":{}}},"id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3986:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3977:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1947,"nodeType":"IfStatement","src":"3974:79:13","trueBody":{"id":1946,"nodeType":"Block","src":"3998:55:13","statements":[{"expression":{"arguments":[{"id":1942,"name":"JUDGE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"4024:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1943,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"4036:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1941,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"4012:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4012:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1945,"nodeType":"ExpressionStatement","src":"4012:30:13"}]}},{"eventCall":{"arguments":[{"arguments":[{"id":1951,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"4090:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}],"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4082:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"4082:7:13","typeDescriptions":{}}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4082:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1953,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"4097:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}],"id":1948,"name":"StatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"4068:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_Status_$1660_$returns$__$","typeString":"function (address,enum Ticket.Status)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4068:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1955,"nodeType":"EmitStatement","src":"4063:41:13"}]},"documentation":{"id":1899,"nodeType":"StructuredDocumentation","src":"3591:41:13","text":"@notice Resolves the ticket for good."},"functionSelector":"953ef874","id":1957,"implemented":true,"kind":"function","modifiers":[{"id":1905,"kind":"modifierInvocation","modifierName":{"id":1904,"name":"checkActive","nameLocations":["3685:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"3685:11:13"},"nodeType":"ModifierInvocation","src":"3685:11:13"}],"name":"resolveTicket","nameLocation":"3646:13:13","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"status_","nameLocation":"3667:7:13","nodeType":"VariableDeclaration","scope":1957,"src":"3660:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"typeName":{"id":1901,"nodeType":"UserDefinedTypeName","pathNode":{"id":1900,"name":"Status","nameLocations":["3660:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1660,"src":"3660:6:13"},"referencedDeclaration":1660,"src":"3660:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"visibility":"internal"}],"src":"3659:16:13"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[],"src":"3697:0:13"},"scope":2112,"src":"3637:474:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1981,"nodeType":"Block","src":"4208:437:13","statements":[{"expression":{"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1961,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"4218:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4229:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4218:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1964,"nodeType":"ExpressionStatement","src":"4218:12:13"},{"expression":{"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1965,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"4241:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1966,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"4250:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4257:4:13","memberName":"late","nodeType":"MemberAccess","referencedDeclaration":1653,"src":"4250:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"4241:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"id":1969,"nodeType":"ExpressionStatement","src":"4241:20:13"},{"expression":{"arguments":[{"hexValue":"313330","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4281:3:13","typeDescriptions":{"typeIdentifier":"t_rational_130_by_1","typeString":"int_const 130"},"value":"130"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_130_by_1","typeString":"int_const 130"}],"id":1970,"name":"addCharge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"4271:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1973,"nodeType":"ExpressionStatement","src":"4271:14:13"},{"expression":{"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4295:9:13","subExpression":{"id":1974,"name":"strikes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"4295:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1976,"nodeType":"ExpressionStatement","src":"4295:9:13"},{"expression":{"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1977,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"4314:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3330","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4325:7:13","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"4314:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1980,"nodeType":"ExpressionStatement","src":"4314:18:13"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"4117:51:13","text":"@notice update the state of the ticket for demo"},"functionSelector":"72c344b4","id":1982,"implemented":true,"kind":"function","modifiers":[],"name":"updateStatusDemo","nameLocation":"4182:16:13","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[],"src":"4198:2:13"},"returnParameters":{"id":1960,"nodeType":"ParameterList","parameters":[],"src":"4208:0:13"},"scope":2112,"src":"4173:472:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2011,"nodeType":"Block","src":"4699:184:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1987,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"4713:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1988,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"4723:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4730:7:13","memberName":"pending","nodeType":"MemberAccess","referencedDeclaration":1652,"src":"4723:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"4713:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"4741:6:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1992,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"4751:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$1660_$","typeString":"type(enum Ticket.Status)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4758:4:13","memberName":"late","nodeType":"MemberAccess","referencedDeclaration":1653,"src":"4751:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$1660","typeString":"enum Ticket.Status"}},"src":"4741:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4713:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2008,"nodeType":"IfStatement","src":"4709:146:13","trueBody":{"id":2007,"nodeType":"Block","src":"4764:91:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1996,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4786:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4792:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"4786:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1998,"name":"lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"4804:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4786:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4785:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2001,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"4821:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4785:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"66616c7365","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4839:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4785:59:13","trueExpression":{"hexValue":"74727565","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4832:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1986,"id":2006,"nodeType":"Return","src":"4778:66:13"}]}},{"expression":{"hexValue":"66616c7365","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4871:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1986,"id":2010,"nodeType":"Return","src":"4864:12:13"}]},"functionSelector":"ce46e046","id":2012,"implemented":true,"kind":"function","modifiers":[],"name":"isPayable","nameLocation":"4661:9:13","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[],"src":"4670:2:13"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2012,"src":"4693:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1984,"name":"bool","nodeType":"ElementaryTypeName","src":"4693:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4692:6:13"},"scope":2112,"src":"4652:231:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2019,"nodeType":"Block","src":"4943:32:13","statements":[{"expression":{"id":2017,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"4960:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2016,"id":2018,"nodeType":"Return","src":"4953:15:13"}]},"functionSelector":"09a48343","id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"isTicketActive","nameLocation":"4898:14:13","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[],"src":"4912:2:13"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"4937:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2014,"name":"bool","nodeType":"ElementaryTypeName","src":"4937:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4936:6:13"},"scope":2112,"src":"4889:86:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2027,"nodeType":"Block","src":"5040:30:13","statements":[{"expression":{"id":2025,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"5057:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2024,"id":2026,"nodeType":"Return","src":"5050:13:13"}]},"functionSelector":"121d3f4e","id":2028,"implemented":true,"kind":"function","modifiers":[],"name":"getDriverAddress","nameLocation":"4990:16:13","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"5006:2:13"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2028,"src":"5031:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"5031:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5030:9:13"},"scope":2112,"src":"4981:89:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2035,"nodeType":"Block","src":"5136:31:13","statements":[{"expression":{"id":2033,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"5153:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2032,"id":2034,"nodeType":"Return","src":"5146:14:13"}]},"functionSelector":"bd4daf2a","id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"getOfficerAddress","nameLocation":"5085:17:13","nodeType":"FunctionDefinition","parameters":{"id":2029,"nodeType":"ParameterList","parameters":[],"src":"5102:2:13"},"returnParameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2036,"src":"5127:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2030,"name":"address","nodeType":"ElementaryTypeName","src":"5127:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5126:9:13"},"scope":2112,"src":"5076:91:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2054,"nodeType":"Block","src":"5231:119:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2041,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"5244:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5261:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5253:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"5253:7:13","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5253:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5244:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2051,"nodeType":"IfStatement","src":"5241:81:13","trueBody":{"id":2050,"nodeType":"Block","src":"5265:57:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2047,"name":"Ticket__NoJudgeAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"5286:23:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5286:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"RevertStatement","src":"5279:32:13"}]}},{"expression":{"id":2052,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"5338:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2040,"id":2053,"nodeType":"Return","src":"5331:12:13"}]},"functionSelector":"e6bcc2cb","id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"getJudgeAddress","nameLocation":"5182:15:13","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[],"src":"5197:2:13"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"5222:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"5222:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5221:9:13"},"scope":2112,"src":"5173:177:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2063,"nodeType":"Block","src":"5417:39:13","statements":[{"expression":{"id":2061,"name":"penalty_clasues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"5434:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage","typeString":"uint16[] storage ref"}},"functionReturnParameters":2060,"id":2062,"nodeType":"Return","src":"5427:22:13"}]},"functionSelector":"451b1c96","id":2064,"implemented":true,"kind":"function","modifiers":[],"name":"getCharges","nameLocation":"5365:10:13","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[],"src":"5375:2:13"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2064,"src":"5400:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[]"},"typeName":{"baseType":{"id":2057,"name":"uint16","nodeType":"ElementaryTypeName","src":"5400:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":2058,"nodeType":"ArrayTypeName","src":"5400:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"internal"}],"src":"5399:17:13"},"scope":2112,"src":"5356:100:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2090,"nodeType":"Block","src":"5631:182:13","statements":[{"expression":{"components":[{"id":2080,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"5662:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2081,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"5682:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2082,"name":"judge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"5703:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2083,"name":"penalty_clasues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"5722:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage","typeString":"uint16[] storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2084,"name":"getRemainingTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"5751:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5751:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2086,"name":"checkStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"5783:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5783:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5648:158:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_address_$_t_array$_t_uint16_$dyn_storage_$_t_uint256_$_t_string_memory_ptr_$","typeString":"tuple(address,address,address,uint16[] storage ref,uint256,string memory)"}},"functionReturnParameters":2079,"id":2089,"nodeType":"Return","src":"5641:165:13"}]},"functionSelector":"e885a0df","id":2091,"implemented":true,"kind":"function","modifiers":[],"name":"getTicketInfo","nameLocation":"5471:13:13","nodeType":"FunctionDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"5484:2:13"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"5518:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2066,"name":"address","nodeType":"ElementaryTypeName","src":"5518:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"5535:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"5552:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2070,"name":"address","nodeType":"ElementaryTypeName","src":"5552:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"5569:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[]"},"typeName":{"baseType":{"id":2072,"name":"uint16","nodeType":"ElementaryTypeName","src":"5569:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":2073,"nodeType":"ArrayTypeName","src":"5569:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"5594:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"5594:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"5611:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2077,"name":"string","nodeType":"ElementaryTypeName","src":"5611:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5508:122:13"},"scope":2112,"src":"5462:351:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2110,"nodeType":"Block","src":"5879:167:13","statements":[{"condition":{"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5892:9:13","subExpression":{"id":2096,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"5893:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2101,"nodeType":"IfStatement","src":"5889:89:13","trueBody":{"id":2100,"nodeType":"Block","src":"5903:75:13","statements":[{"expression":{"hexValue":"30","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5966:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2095,"id":2099,"nodeType":"Return","src":"5959:8:13"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"5996:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2103,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"6012:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5996:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5995:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2106,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6024:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"6024:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5995:44:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2095,"id":2109,"nodeType":"Return","src":"5988:51:13"}]},"id":2111,"implemented":true,"kind":"function","modifiers":[],"name":"getRemainingTime","nameLocation":"5829:16:13","nodeType":"FunctionDefinition","parameters":{"id":2092,"nodeType":"ParameterList","parameters":[],"src":"5845:2:13"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2111,"src":"5870:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"5870:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5869:9:13"},"scope":2112,"src":"5820:226:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2113,"src":"295:5753:13","usedErrors":[1641]}],"src":"32:6017:13"},"compiler":{"name":"solc","version":"0.8.17+commit.8df45f5f.Emscripten.clang"},"networks":{},"schemaVersion":"3.4.10","updatedAt":"2022-11-28T05:49:12.090Z","devdoc":{"author":"Samin Yaser","kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role\'s admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``\'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function\'s purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"requestHearing(address)":{"details":"must provide wallet address of the judge"},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``\'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"title":"Ticket","version":1},"userdoc":{"kind":"user","methods":{"requestHearing(address)":{"notice":"Owner can request a hearing in court"},"resolveTicket(uint8)":{"notice":"Resolves the ticket for good."},"updateStatusDemo()":{"notice":"update the state of the ticket for demo"}},"notice":"You can use this contract to issue a traffic ticket","version":1}}');

/***/ }),

/***/ "./build/contracts/TicketFactory.json":
/*!********************************************!*\
  !*** ./build/contracts/TicketFactory.json ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"TicketFactory","abi":[{"inputs":[{"internalType":"address","name":"driver","type":"address"},{"internalType":"uint16[]","name":"penalty_clasues","type":"uint16[]"}],"name":"createNewTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"driver","type":"address"},{"internalType":"address","name":"officer","type":"address"},{"internalType":"address","name":"ticket","type":"address"}],"name":"deleteTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"driver","type":"address"}],"name":"getDriverTickets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"officer","type":"address"}],"name":"getOfficerTickets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"getLastAddedTicket","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"driver","type":"address"}],"name":"getActiveTickets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"address","name":"driver","type":"address"}],"name":"getAllTickets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","constant":true}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.17+commit.8df45f5f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"driver\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint16[]\\",\\"name\\":\\"penalty_clasues\\",\\"type\\":\\"uint16[]\\"}],\\"name\\":\\"createNewTicket\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"driver\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"officer\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"ticket\\",\\"type\\":\\"address\\"}],\\"name\\":\\"deleteTicket\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"driver\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getActiveTickets\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"driver\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getAllTickets\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"driver\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getDriverTickets\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getLastAddedTicket\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"officer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getOfficerTickets\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/TicketFactory.sol\\":\\"TicketFactory\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@openzeppelin/contracts/access/AccessControl.sol\\":{\\"keccak256\\":\\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\\",\\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\\"]},\\"@openzeppelin/contracts/access/IAccessControl.sol\\":{\\"keccak256\\":\\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\\",\\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\\"]},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"keccak256\\":\\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\\",\\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\\"]},\\"@openzeppelin/contracts/utils/Strings.sol\\":{\\"keccak256\\":\\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\\",\\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\\"]},\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\":{\\"keccak256\\":\\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\\",\\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\\"]},\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\":{\\"keccak256\\":\\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\\",\\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\\"]},\\"project:/contracts/Ticket.sol\\":{\\"keccak256\\":\\"0xec0c82ff2d770fdd771513e52f3344be8501b275ce8da8de02de16ee7d88cb27\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://61962dabb8696b4ceaddb33b9eb92ab9b7063afec37488396df852ea8cec93b3\\",\\"dweb:/ipfs/QmUyHtPW6oMrqwJGKca9Mtx7WAsLNAvbwyjjRBuTqwJgbR\\"]},\\"project:/contracts/TicketFactory.sol\\":{\\"keccak256\\":\\"0x6f70285d6d30c7141dae24409e8b714590dcbff2f2357bd5ea96089af8e6518c\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://2bd0f1db6e1c675ed1dd959a77fdfaf73f02fc456fb8876a5beff022edf005e4\\",\\"dweb:/ipfs/QmaQ2daL9NBbWgQAo3RJcV9M6PWdJGUCBYpv4HrGnHynA3\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b50613d4d806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000945760003560e01c806391d18b81116200006357806391d18b811462000147578063a9fd6149146200017d578063e176f628146200019f578063f1b7af2414620001d55762000094565b806314fa96c81462000099578063168e791914620000cf57806338cc483114620000ef57806385167c571462000111575b600080fd5b620000b76004803603810190620000b1919062000faf565b620001f5565b604051620000c69190620010af565b60405180910390f35b620000ed6004803603810190620000e7919062001287565b62000521565b005b620000f9620006e5565b604051620001089190620012fe565b60405180910390f35b6200012f600480360381019062000129919062000faf565b620006ed565b6040516200013e9190620010af565b60405180910390f35b6200016560048036038101906200015f919062000faf565b620007bc565b604051620001749190620010af565b60405180910390f35b620001876200088a565b604051620001969190620012fe565b60405180910390f35b620001bd6004803603810190620001b7919062000faf565b620008b4565b604051620001cc9190620010af565b60405180910390f35b620001f36004803603810190620001ed91906200131b565b62000982565b005b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620002b957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200026e575b505050505090506000805b82518110156200038a57828181518110620002e457620002e362001377565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000337573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035d9190620013e3565b156200037457818062000370906200144e565b9250505b808062000381906200144e565b915050620002c4565b5060008167ffffffffffffffff811115620003aa57620003a9620010e9565b5b604051908082528060200260200182016040528015620003d95781602001602082028036833780820191505090505b5090506000805b845181101562000514578481815181106200040057620003ff62001377565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000453573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004799190620013e3565b15620004fe5784818151811062000495576200049462001377565b5b6020026020010151838381518110620004b357620004b262001377565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508180620004fa906200144e565b9250505b80806200050b906200144e565b915050620003e0565b5081945050505050919050565b60008282604051620005339062000f28565b6200054092919062001569565b604051809103906000f0801580156200055d573d6000803e3d6000fd5b5090506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600030905090565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620007b057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000765575b50505050509050919050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200087e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000833575b50505050509050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200097657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200092b575b50505050509050919050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060005b8281101562000c95578373ffffffffffffffffffffffffffffffffffffffff166000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811062000a855762000a8462001377565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160362000c7f576000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018462000b1991906200159d565b8154811062000b2d5762000b2c62001377565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811062000bab5762000baa62001377565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548062000c445762000c43620015d8565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905562000c95565b808062000c8c906200144e565b91505062000a12565b5060005b8181101562000f20578373ffffffffffffffffffffffffffffffffffffffff16600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811062000d0d5762000d0c62001377565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160362000f0a57600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018362000da291906200159d565b8154811062000db65762000db562001377565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811062000e355762000e3462001377565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548062000ecf5762000ece620015d8565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905562000f20565b808062000f17906200144e565b91505062000c99565b505050505050565b612710806200160883390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000f778262000f4a565b9050919050565b62000f898162000f6a565b811462000f9557600080fd5b50565b60008135905062000fa98162000f7e565b92915050565b60006020828403121562000fc85762000fc762000f40565b5b600062000fd88482850162000f98565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b620010188162000f6a565b82525050565b60006200102c83836200100d565b60208301905092915050565b6000602082019050919050565b6000620010528262000fe1565b6200105e818562000fec565b93506200106b8362000ffd565b8060005b83811015620010a25781516200108688826200101e565b9750620010938362001038565b9250506001810190506200106f565b5085935050505092915050565b60006020820190508181036000830152620010cb818462001045565b905092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200112382620010d8565b810181811067ffffffffffffffff82111715620011455762001144620010e9565b5b80604052505050565b60006200115a62000f36565b905062001168828262001118565b919050565b600067ffffffffffffffff8211156200118b576200118a620010e9565b5b602082029050602081019050919050565b600080fd5b600061ffff82169050919050565b620011ba81620011a1565b8114620011c657600080fd5b50565b600081359050620011da81620011af565b92915050565b6000620011f7620011f1846200116d565b6200114e565b905080838252602082019050602084028301858111156200121d576200121c6200119c565b5b835b818110156200124a5780620012358882620011c9565b8452602084019350506020810190506200121f565b5050509392505050565b600082601f8301126200126c576200126b620010d3565b5b81356200127e848260208601620011e0565b91505092915050565b60008060408385031215620012a157620012a062000f40565b5b6000620012b18582860162000f98565b925050602083013567ffffffffffffffff811115620012d557620012d462000f45565b5b620012e38582860162001254565b9150509250929050565b620012f88162000f6a565b82525050565b6000602082019050620013156000830184620012ed565b92915050565b60008060006060848603121562001337576200133662000f40565b5b6000620013478682870162000f98565b93505060206200135a8682870162000f98565b92505060406200136d8682870162000f98565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008115159050919050565b620013bd81620013a6565b8114620013c957600080fd5b50565b600081519050620013dd81620013b2565b92915050565b600060208284031215620013fc57620013fb62000f40565b5b60006200140c84828501620013cc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006200145b8262001444565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001490576200148f62001415565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b620014d281620011a1565b82525050565b6000620014e68383620014c7565b60208301905092915050565b6000602082019050919050565b60006200150c826200149b565b620015188185620014a6565b93506200152583620014b7565b8060005b838110156200155c578151620015408882620014d8565b97506200154d83620014f2565b92505060018101905062001529565b5085935050505092915050565b6000604082019050620015806000830185620012ed565b8181036020830152620015948184620014ff565b90509392505050565b6000620015aa8262001444565b9150620015b78362001444565b9250828203905081811115620015d257620015d162001415565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe60c060405262278d0060045560006005556001600660016101000a81548160ff0219169083151502179055503480156200003857600080fd5b50604051620027103803806200271083398181016040528101906200005e91906200066a565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060029080519060200190620001209291906200036d565b50426003819055506000600660006101000a81548160ff02191690836007811115620001515762000150620006d0565b5b0217905550620001887f469f0a0947cf59c7d944c91c6f4c13c396753b8abf0036156a8c6b0c02fdc02e83620001f460201b60201c565b620001ba7fbbecb2568601cb27e6ced525237c463da94c4fb7a9b98ac79fd30fd56d8e1b5333620001f460201b60201c565b620001ec7f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f33620001f460201b60201c565b5050620006ff565b6200020682826200020a60201b60201c565b5050565b6200021c8282620002fb60201b60201c565b620002f757600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200029c6200036560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b82805482825590600052602060002090600f016010900481019282156200040b5791602002820160005b83821115620003d957835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030262000397565b8015620004095782816101000a81549061ffff0219169055600201602081600101049283019260010302620003d9565b505b5090506200041a91906200041e565b5090565b5b80821115620004395760008160009055506001016200041f565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200047e8262000451565b9050919050565b620004908162000471565b81146200049c57600080fd5b50565b600081519050620004b08162000485565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200050682620004bb565b810181811067ffffffffffffffff82111715620005285762000527620004cc565b5b80604052505050565b60006200053d6200043d565b90506200054b8282620004fb565b919050565b600067ffffffffffffffff8211156200056e576200056d620004cc565b5b602082029050602081019050919050565b600080fd5b600061ffff82169050919050565b6200059d8162000584565b8114620005a957600080fd5b50565b600081519050620005bd8162000592565b92915050565b6000620005da620005d48462000550565b62000531565b905080838252602082019050602084028301858111156200060057620005ff6200057f565b5b835b818110156200062d5780620006188882620005ac565b84526020840193505060208101905062000602565b5050509392505050565b600082601f8301126200064f576200064e620004b6565b5b815162000661848260208601620005c3565b91505092915050565b6000806040838503121562000684576200068362000447565b5b600062000694858286016200049f565b925050602083015167ffffffffffffffff811115620006b857620006b76200044c565b5b620006c68582860162000637565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a051611fba6200075660003960008181610afd01528181610c1c01528181610cb001528181610cfa01528181610e170152610fe50152600081816103e901528181610c660152610fc40152611fba6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806391d14854116100a2578063bd4daf2a11610071578063bd4daf2a146102bb578063ce46e046146102d9578063d547741f146102f7578063e6bcc2cb14610313578063e885a0df1461033157610116565b806391d148541461023557806392ce0e0614610265578063953ef87414610281578063a217fddf1461029d57610116565b80632f2ff15d116100e95780632f2ff15d146101b757806336568abe146101d35780633b7104f2146101ef578063451b1c961461020d57806372c344b41461022b57610116565b806301ffc9a71461011b57806309a483431461014b578063121d3f4e14610169578063248a9ca314610187575b600080fd5b610135600480360381019061013091906116d1565b610354565b6040516101429190611719565b60405180910390f35b6101536103ce565b6040516101609190611719565b60405180910390f35b6101716103e5565b60405161017e9190611775565b60405180910390f35b6101a1600480360381019061019c91906117c6565b61040d565b6040516101ae9190611802565b60405180910390f35b6101d160048036038101906101cc9190611849565b61042c565b005b6101ed60048036038101906101e89190611849565b61044d565b005b6101f76104d0565b6040516102049190611919565b60405180910390f35b6102156108cd565b6040516102229190611a07565b60405180910390f35b61023361094d565b005b61024f600480360381019061024a9190611849565b6109ae565b60405161025c9190611719565b60405180910390f35b61027f600480360381019061027a9190611a29565b610a18565b005b61029b60048036038101906102969190611a7b565b610b98565b005b6102a5610e0c565b6040516102b29190611802565b60405180910390f35b6102c3610e13565b6040516102d09190611775565b60405180910390f35b6102e1610e3b565b6040516102ee9190611719565b60405180910390f35b610311600480360381019061030c9190611849565b610ee5565b005b61031b610f06565b6040516103289190611775565b60405180910390f35b610339610fb7565b60405161034b96959493929190611ac1565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c757506103c6826110c7565b5b9050919050565b6000600660019054906101000a900460ff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806000838152602001908152602001600020600101549050919050565b6104358261040d565b61043e81611131565b6104488383611145565b505050565b610455611225565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990611ba2565b60405180910390fd5b6104cc828261122d565b5050565b6060600060078111156104e6576104e5611bc2565b5b600660009054906101000a900460ff16600781111561050857610507611bc2565b5b0361054a576040518060400160405280600781526020017f50656e64696e670000000000000000000000000000000000000000000000000081525090506108ca565b6001600781111561055e5761055d611bc2565b5b600660009054906101000a900460ff1660078111156105805761057f611bc2565b5b036105c2576040518060400160405280600481526020017f4c6174650000000000000000000000000000000000000000000000000000000081525090506108ca565b600560078111156105d6576105d5611bc2565b5b600660009054906101000a900460ff1660078111156105f8576105f7611bc2565b5b0361063a576040518060400160405280600981526020017f4469736d6973736564000000000000000000000000000000000000000000000081525090506108ca565b6004600781111561064e5761064d611bc2565b5b600660009054906101000a900460ff1660078111156106705761066f611bc2565b5b036106b2576040518060400160405280600981526020017f446973707574696e67000000000000000000000000000000000000000000000081525090506108ca565b600260078111156106c6576106c5611bc2565b5b600660009054906101000a900460ff1660078111156106e8576106e7611bc2565b5b0361072a576040518060400160405280600481526020017f506169640000000000000000000000000000000000000000000000000000000081525090506108ca565b6003600781111561073e5761073d611bc2565b5b600660009054906101000a900460ff1660078111156107605761075f611bc2565b5b036107a2576040518060400160405280600981526020017f43616e63656c6c6564000000000000000000000000000000000000000000000081525090506108ca565b600660078111156107b6576107b5611bc2565b5b600660009054906101000a900460ff1660078111156107d8576107d7611bc2565b5b0361081a576040518060400160405280600d81526020017f556e7265736f6c76616c626c650000000000000000000000000000000000000081525090506108ca565b60078081111561082d5761082c611bc2565b5b600660009054906101000a900460ff16600781111561084f5761084e611bc2565b5b03610891576040518060400160405280600981526020017f436f6e766963746564000000000000000000000000000000000000000000000081525090506108ca565b6040518060400160405280600581526020017f4572726f7200000000000000000000000000000000000000000000000000000081525090505b90565b6060600280548060200260200160405190810160405280929190818152602001828054801561094357602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161090a5790505b5050505050905090565b60006004819055506001600660006101000a81548160ff0219169083600781111561097b5761097a611bc2565b5b021790555061098a608261130e565b6005600081548092919061099d90611c20565b919050555062278d00600481905550565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600660019054906101000a900460ff16610a3157600080fd5b7f469f0a0947cf59c7d944c91c6f4c13c396753b8abf0036156a8c6b0c02fdc02e610a5b81611131565b610a63610e3b565b610a6c57600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ad77f9c4e6fd68fbdec6e3075ec7bfba710532af019aea93f5f59ebfe5a9d1a0b894e83611145565b610b217f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f7f000000000000000000000000000000000000000000000000000000000000000061122d565b6004600660006101000a81548160ff02191690836007811115610b4757610b46611bc2565b5b02179055507f76c0bad3b7f1c74587dcb478154d4c87ae6663db97cc086b981decf4e35a797c30600660009054906101000a900460ff16604051610b8c929190611cb0565b60405180910390a15050565b600660019054906101000a900460ff16610bb157600080fd5b80600660006101000a81548160ff02191690836007811115610bd657610bd5611bc2565b5b02179055506000600660016101000a81548160ff021916908315150217905550610c407f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f7f000000000000000000000000000000000000000000000000000000000000000061122d565b610c8a7f469f0a0947cf59c7d944c91c6f4c13c396753b8abf0036156a8c6b0c02fdc02e7f000000000000000000000000000000000000000000000000000000000000000061122d565b610cd47fbbecb2568601cb27e6ced525237c463da94c4fb7a9b98ac79fd30fd56d8e1b537f000000000000000000000000000000000000000000000000000000000000000061122d565b610d1e7f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f7f000000000000000000000000000000000000000000000000000000000000000061122d565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dc157610dc07f9c4e6fd68fbdec6e3075ec7bfba710532af019aea93f5f59ebfe5a9d1a0b894e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661122d565b5b7f76c0bad3b7f1c74587dcb478154d4c87ae6663db97cc086b981decf4e35a797c30600660009054906101000a900460ff16604051610e01929190611cb0565b60405180910390a150565b6000801b81565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806007811115610e5057610e4f611bc2565b5b600660009054906101000a900460ff166007811115610e7257610e71611bc2565b5b1480610eb1575060016007811115610e8d57610e8c611bc2565b5b600660009054906101000a900460ff166007811115610eaf57610eae611bc2565b5b145b15610edd5760045460035442610ec79190611cd9565b10610ed3576000610ed6565b60015b9050610ee2565b600090505b90565b610eee8261040d565b610ef781611131565b610f01838361122d565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f8f576040517f87f439ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060006060600060607f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600261103161135b565b6110396104d0565b828054806020026020016040519081016040528092919081815260200182805480156110ac57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116110735790505b50505050509250955095509550955095509550909192939495565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6111428161113d611225565b61139b565b50565b61114f82826109ae565b61122157600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506111c6611225565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b61123782826109ae565b1561130a57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506112af611225565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60028190806001815401808255809150506001900390600052602060002090601091828204019190066002029091909190916101000a81548161ffff021916908361ffff16021790555050565b6000600660019054906101000a900460ff1661137a5760009050611398565b4260045460035461138b9190611d0d565b6113959190611cd9565b90505b90565b6113a582826109ae565b611434576113ca8173ffffffffffffffffffffffffffffffffffffffff166014611438565b6113d88360001c6020611438565b6040516020016113e9929190611e15565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142b9190611919565b60405180910390fd5b5050565b60606000600283600261144b9190611e4f565b6114559190611d0d565b67ffffffffffffffff81111561146e5761146d611e91565b5b6040519080825280601f01601f1916602001820160405280156114a05781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106114d8576114d7611ec0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061153c5761153b611ec0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261157c9190611e4f565b6115869190611d0d565b90505b6001811115611626577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106115c8576115c7611ec0565b5b1a60f81b8282815181106115df576115de611ec0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061161f90611eef565b9050611589565b506000841461166a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166190611f64565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116ae81611679565b81146116b957600080fd5b50565b6000813590506116cb816116a5565b92915050565b6000602082840312156116e7576116e6611674565b5b60006116f5848285016116bc565b91505092915050565b60008115159050919050565b611713816116fe565b82525050565b600060208201905061172e600083018461170a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061175f82611734565b9050919050565b61176f81611754565b82525050565b600060208201905061178a6000830184611766565b92915050565b6000819050919050565b6117a381611790565b81146117ae57600080fd5b50565b6000813590506117c08161179a565b92915050565b6000602082840312156117dc576117db611674565b5b60006117ea848285016117b1565b91505092915050565b6117fc81611790565b82525050565b600060208201905061181760008301846117f3565b92915050565b61182681611754565b811461183157600080fd5b50565b6000813590506118438161181d565b92915050565b600080604083850312156118605761185f611674565b5b600061186e858286016117b1565b925050602061187f85828601611834565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118c35780820151818401526020810190506118a8565b60008484015250505050565b6000601f19601f8301169050919050565b60006118eb82611889565b6118f58185611894565b93506119058185602086016118a5565b61190e816118cf565b840191505092915050565b6000602082019050818103600083015261193381846118e0565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061ffff82169050919050565b61197e81611967565b82525050565b60006119908383611975565b60208301905092915050565b6000602082019050919050565b60006119b48261193b565b6119be8185611946565b93506119c983611957565b8060005b838110156119fa5781516119e18882611984565b97506119ec8361199c565b9250506001810190506119cd565b5085935050505092915050565b60006020820190508181036000830152611a2181846119a9565b905092915050565b600060208284031215611a3f57611a3e611674565b5b6000611a4d84828501611834565b91505092915050565b60088110611a6357600080fd5b50565b600081359050611a7581611a56565b92915050565b600060208284031215611a9157611a90611674565b5b6000611a9f84828501611a66565b91505092915050565b6000819050919050565b611abb81611aa8565b82525050565b600060c082019050611ad66000830189611766565b611ae36020830188611766565b611af06040830187611766565b8181036060830152611b0281866119a9565b9050611b116080830185611ab2565b81810360a0830152611b2381846118e0565b9050979650505050505050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611b8c602f83611894565b9150611b9782611b30565b604082019050919050565b60006020820190508181036000830152611bbb81611b7f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c2b82611aa8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c5d57611c5c611bf1565b5b600182019050919050565b60088110611c7957611c78611bc2565b5b50565b6000819050611c8a82611c68565b919050565b6000611c9a82611c7c565b9050919050565b611caa81611c8f565b82525050565b6000604082019050611cc56000830185611766565b611cd26020830184611ca1565b9392505050565b6000611ce482611aa8565b9150611cef83611aa8565b9250828203905081811115611d0757611d06611bf1565b5b92915050565b6000611d1882611aa8565b9150611d2383611aa8565b9250828201905080821115611d3b57611d3a611bf1565b5b92915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611d82601783611d41565b9150611d8d82611d4c565b601782019050919050565b6000611da382611889565b611dad8185611d41565b9350611dbd8185602086016118a5565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611dff601183611d41565b9150611e0a82611dc9565b601182019050919050565b6000611e2082611d75565b9150611e2c8285611d98565b9150611e3782611df2565b9150611e438284611d98565b91508190509392505050565b6000611e5a82611aa8565b9150611e6583611aa8565b9250828202611e7381611aa8565b91508282048414831517611e8a57611e89611bf1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611efa82611aa8565b915060008203611f0d57611f0c611bf1565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611f4e602083611894565b9150611f5982611f18565b602082019050919050565b60006020820190508181036000830152611f7d81611f41565b905091905056fea2646970667358221220f6d040d7e00132cc6265f989634e6b90be2c68a7c283d8dde22548d1f97dc49c64736f6c63430008110033a26469706673582212205e5514c8a1c546b32c313c89d40d63f16e635d41e7f09e9e141b349490f5f8bd64736f6c63430008110033","deployedBytecode":"0x60806040523480156200001157600080fd5b5060043610620000945760003560e01c806391d18b81116200006357806391d18b811462000147578063a9fd6149146200017d578063e176f628146200019f578063f1b7af2414620001d55762000094565b806314fa96c81462000099578063168e791914620000cf57806338cc483114620000ef57806385167c571462000111575b600080fd5b620000b76004803603810190620000b1919062000faf565b620001f5565b604051620000c69190620010af565b60405180910390f35b620000ed6004803603810190620000e7919062001287565b62000521565b005b620000f9620006e5565b604051620001089190620012fe565b60405180910390f35b6200012f600480360381019062000129919062000faf565b620006ed565b6040516200013e9190620010af565b60405180910390f35b6200016560048036038101906200015f919062000faf565b620007bc565b604051620001749190620010af565b60405180910390f35b620001876200088a565b604051620001969190620012fe565b60405180910390f35b620001bd6004803603810190620001b7919062000faf565b620008b4565b604051620001cc9190620010af565b60405180910390f35b620001f36004803603810190620001ed91906200131b565b62000982565b005b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620002b957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200026e575b505050505090506000805b82518110156200038a57828181518110620002e457620002e362001377565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000337573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035d9190620013e3565b156200037457818062000370906200144e565b9250505b808062000381906200144e565b915050620002c4565b5060008167ffffffffffffffff811115620003aa57620003a9620010e9565b5b604051908082528060200260200182016040528015620003d95781602001602082028036833780820191505090505b5090506000805b845181101562000514578481815181106200040057620003ff62001377565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166309a483436040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000453573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004799190620013e3565b15620004fe5784818151811062000495576200049462001377565b5b6020026020010151838381518110620004b357620004b262001377565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508180620004fa906200144e565b9250505b80806200050b906200144e565b915050620003e0565b5081945050505050919050565b60008282604051620005339062000f28565b6200054092919062001569565b604051809103906000f0801580156200055d573d6000803e3d6000fd5b5090506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600030905090565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620007b057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000765575b50505050509050919050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200087e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000833575b50505050509050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200097657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200092b575b50505050509050919050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060005b8281101562000c95578373ffffffffffffffffffffffffffffffffffffffff166000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811062000a855762000a8462001377565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160362000c7f576000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018462000b1991906200159d565b8154811062000b2d5762000b2c62001377565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811062000bab5762000baa62001377565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548062000c445762000c43620015d8565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905562000c95565b808062000c8c906200144e565b91505062000a12565b5060005b8181101562000f20578373ffffffffffffffffffffffffffffffffffffffff16600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811062000d0d5762000d0c62001377565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160362000f0a57600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018362000da291906200159d565b8154811062000db65762000db562001377565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811062000e355762000e3462001377565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548062000ecf5762000ece620015d8565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905562000f20565b808062000f17906200144e565b91505062000c99565b505050505050565b612710806200160883390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000f778262000f4a565b9050919050565b62000f898162000f6a565b811462000f9557600080fd5b50565b60008135905062000fa98162000f7e565b92915050565b60006020828403121562000fc85762000fc762000f40565b5b600062000fd88482850162000f98565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b620010188162000f6a565b82525050565b60006200102c83836200100d565b60208301905092915050565b6000602082019050919050565b6000620010528262000fe1565b6200105e818562000fec565b93506200106b8362000ffd565b8060005b83811015620010a25781516200108688826200101e565b9750620010938362001038565b9250506001810190506200106f565b5085935050505092915050565b60006020820190508181036000830152620010cb818462001045565b905092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200112382620010d8565b810181811067ffffffffffffffff82111715620011455762001144620010e9565b5b80604052505050565b60006200115a62000f36565b905062001168828262001118565b919050565b600067ffffffffffffffff8211156200118b576200118a620010e9565b5b602082029050602081019050919050565b600080fd5b600061ffff82169050919050565b620011ba81620011a1565b8114620011c657600080fd5b50565b600081359050620011da81620011af565b92915050565b6000620011f7620011f1846200116d565b6200114e565b905080838252602082019050602084028301858111156200121d576200121c6200119c565b5b835b818110156200124a5780620012358882620011c9565b8452602084019350506020810190506200121f565b5050509392505050565b600082601f8301126200126c576200126b620010d3565b5b81356200127e848260208601620011e0565b91505092915050565b60008060408385031215620012a157620012a062000f40565b5b6000620012b18582860162000f98565b925050602083013567ffffffffffffffff811115620012d557620012d462000f45565b5b620012e38582860162001254565b9150509250929050565b620012f88162000f6a565b82525050565b6000602082019050620013156000830184620012ed565b92915050565b60008060006060848603121562001337576200133662000f40565b5b6000620013478682870162000f98565b93505060206200135a8682870162000f98565b92505060406200136d8682870162000f98565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008115159050919050565b620013bd81620013a6565b8114620013c957600080fd5b50565b600081519050620013dd81620013b2565b92915050565b600060208284031215620013fc57620013fb62000f40565b5b60006200140c84828501620013cc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006200145b8262001444565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001490576200148f62001415565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b620014d281620011a1565b82525050565b6000620014e68383620014c7565b60208301905092915050565b6000602082019050919050565b60006200150c826200149b565b620015188185620014a6565b93506200152583620014b7565b8060005b838110156200155c578151620015408882620014d8565b97506200154d83620014f2565b92505060018101905062001529565b5085935050505092915050565b6000604082019050620015806000830185620012ed565b8181036020830152620015948184620014ff565b90509392505050565b6000620015aa8262001444565b9150620015b78362001444565b9250828203905081811115620015d257620015d162001415565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe60c060405262278d0060045560006005556001600660016101000a81548160ff0219169083151502179055503480156200003857600080fd5b50604051620027103803806200271083398181016040528101906200005e91906200066a565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060029080519060200190620001209291906200036d565b50426003819055506000600660006101000a81548160ff02191690836007811115620001515762000150620006d0565b5b0217905550620001887f469f0a0947cf59c7d944c91c6f4c13c396753b8abf0036156a8c6b0c02fdc02e83620001f460201b60201c565b620001ba7fbbecb2568601cb27e6ced525237c463da94c4fb7a9b98ac79fd30fd56d8e1b5333620001f460201b60201c565b620001ec7f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f33620001f460201b60201c565b5050620006ff565b6200020682826200020a60201b60201c565b5050565b6200021c8282620002fb60201b60201c565b620002f757600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200029c6200036560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b82805482825590600052602060002090600f016010900481019282156200040b5791602002820160005b83821115620003d957835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030262000397565b8015620004095782816101000a81549061ffff0219169055600201602081600101049283019260010302620003d9565b505b5090506200041a91906200041e565b5090565b5b80821115620004395760008160009055506001016200041f565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200047e8262000451565b9050919050565b620004908162000471565b81146200049c57600080fd5b50565b600081519050620004b08162000485565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200050682620004bb565b810181811067ffffffffffffffff82111715620005285762000527620004cc565b5b80604052505050565b60006200053d6200043d565b90506200054b8282620004fb565b919050565b600067ffffffffffffffff8211156200056e576200056d620004cc565b5b602082029050602081019050919050565b600080fd5b600061ffff82169050919050565b6200059d8162000584565b8114620005a957600080fd5b50565b600081519050620005bd8162000592565b92915050565b6000620005da620005d48462000550565b62000531565b905080838252602082019050602084028301858111156200060057620005ff6200057f565b5b835b818110156200062d5780620006188882620005ac565b84526020840193505060208101905062000602565b5050509392505050565b600082601f8301126200064f576200064e620004b6565b5b815162000661848260208601620005c3565b91505092915050565b6000806040838503121562000684576200068362000447565b5b600062000694858286016200049f565b925050602083015167ffffffffffffffff811115620006b857620006b76200044c565b5b620006c68582860162000637565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a051611fba6200075660003960008181610afd01528181610c1c01528181610cb001528181610cfa01528181610e170152610fe50152600081816103e901528181610c660152610fc40152611fba6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806391d14854116100a2578063bd4daf2a11610071578063bd4daf2a146102bb578063ce46e046146102d9578063d547741f146102f7578063e6bcc2cb14610313578063e885a0df1461033157610116565b806391d148541461023557806392ce0e0614610265578063953ef87414610281578063a217fddf1461029d57610116565b80632f2ff15d116100e95780632f2ff15d146101b757806336568abe146101d35780633b7104f2146101ef578063451b1c961461020d57806372c344b41461022b57610116565b806301ffc9a71461011b57806309a483431461014b578063121d3f4e14610169578063248a9ca314610187575b600080fd5b610135600480360381019061013091906116d1565b610354565b6040516101429190611719565b60405180910390f35b6101536103ce565b6040516101609190611719565b60405180910390f35b6101716103e5565b60405161017e9190611775565b60405180910390f35b6101a1600480360381019061019c91906117c6565b61040d565b6040516101ae9190611802565b60405180910390f35b6101d160048036038101906101cc9190611849565b61042c565b005b6101ed60048036038101906101e89190611849565b61044d565b005b6101f76104d0565b6040516102049190611919565b60405180910390f35b6102156108cd565b6040516102229190611a07565b60405180910390f35b61023361094d565b005b61024f600480360381019061024a9190611849565b6109ae565b60405161025c9190611719565b60405180910390f35b61027f600480360381019061027a9190611a29565b610a18565b005b61029b60048036038101906102969190611a7b565b610b98565b005b6102a5610e0c565b6040516102b29190611802565b60405180910390f35b6102c3610e13565b6040516102d09190611775565b60405180910390f35b6102e1610e3b565b6040516102ee9190611719565b60405180910390f35b610311600480360381019061030c9190611849565b610ee5565b005b61031b610f06565b6040516103289190611775565b60405180910390f35b610339610fb7565b60405161034b96959493929190611ac1565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c757506103c6826110c7565b5b9050919050565b6000600660019054906101000a900460ff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806000838152602001908152602001600020600101549050919050565b6104358261040d565b61043e81611131565b6104488383611145565b505050565b610455611225565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990611ba2565b60405180910390fd5b6104cc828261122d565b5050565b6060600060078111156104e6576104e5611bc2565b5b600660009054906101000a900460ff16600781111561050857610507611bc2565b5b0361054a576040518060400160405280600781526020017f50656e64696e670000000000000000000000000000000000000000000000000081525090506108ca565b6001600781111561055e5761055d611bc2565b5b600660009054906101000a900460ff1660078111156105805761057f611bc2565b5b036105c2576040518060400160405280600481526020017f4c6174650000000000000000000000000000000000000000000000000000000081525090506108ca565b600560078111156105d6576105d5611bc2565b5b600660009054906101000a900460ff1660078111156105f8576105f7611bc2565b5b0361063a576040518060400160405280600981526020017f4469736d6973736564000000000000000000000000000000000000000000000081525090506108ca565b6004600781111561064e5761064d611bc2565b5b600660009054906101000a900460ff1660078111156106705761066f611bc2565b5b036106b2576040518060400160405280600981526020017f446973707574696e67000000000000000000000000000000000000000000000081525090506108ca565b600260078111156106c6576106c5611bc2565b5b600660009054906101000a900460ff1660078111156106e8576106e7611bc2565b5b0361072a576040518060400160405280600481526020017f506169640000000000000000000000000000000000000000000000000000000081525090506108ca565b6003600781111561073e5761073d611bc2565b5b600660009054906101000a900460ff1660078111156107605761075f611bc2565b5b036107a2576040518060400160405280600981526020017f43616e63656c6c6564000000000000000000000000000000000000000000000081525090506108ca565b600660078111156107b6576107b5611bc2565b5b600660009054906101000a900460ff1660078111156107d8576107d7611bc2565b5b0361081a576040518060400160405280600d81526020017f556e7265736f6c76616c626c650000000000000000000000000000000000000081525090506108ca565b60078081111561082d5761082c611bc2565b5b600660009054906101000a900460ff16600781111561084f5761084e611bc2565b5b03610891576040518060400160405280600981526020017f436f6e766963746564000000000000000000000000000000000000000000000081525090506108ca565b6040518060400160405280600581526020017f4572726f7200000000000000000000000000000000000000000000000000000081525090505b90565b6060600280548060200260200160405190810160405280929190818152602001828054801561094357602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161090a5790505b5050505050905090565b60006004819055506001600660006101000a81548160ff0219169083600781111561097b5761097a611bc2565b5b021790555061098a608261130e565b6005600081548092919061099d90611c20565b919050555062278d00600481905550565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600660019054906101000a900460ff16610a3157600080fd5b7f469f0a0947cf59c7d944c91c6f4c13c396753b8abf0036156a8c6b0c02fdc02e610a5b81611131565b610a63610e3b565b610a6c57600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ad77f9c4e6fd68fbdec6e3075ec7bfba710532af019aea93f5f59ebfe5a9d1a0b894e83611145565b610b217f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f7f000000000000000000000000000000000000000000000000000000000000000061122d565b6004600660006101000a81548160ff02191690836007811115610b4757610b46611bc2565b5b02179055507f76c0bad3b7f1c74587dcb478154d4c87ae6663db97cc086b981decf4e35a797c30600660009054906101000a900460ff16604051610b8c929190611cb0565b60405180910390a15050565b600660019054906101000a900460ff16610bb157600080fd5b80600660006101000a81548160ff02191690836007811115610bd657610bd5611bc2565b5b02179055506000600660016101000a81548160ff021916908315150217905550610c407f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f7f000000000000000000000000000000000000000000000000000000000000000061122d565b610c8a7f469f0a0947cf59c7d944c91c6f4c13c396753b8abf0036156a8c6b0c02fdc02e7f000000000000000000000000000000000000000000000000000000000000000061122d565b610cd47fbbecb2568601cb27e6ced525237c463da94c4fb7a9b98ac79fd30fd56d8e1b537f000000000000000000000000000000000000000000000000000000000000000061122d565b610d1e7f7dc38bfcf3f4cd184671c7e6971d68d9731e00efe0a482344cd63548133e805f7f000000000000000000000000000000000000000000000000000000000000000061122d565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dc157610dc07f9c4e6fd68fbdec6e3075ec7bfba710532af019aea93f5f59ebfe5a9d1a0b894e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661122d565b5b7f76c0bad3b7f1c74587dcb478154d4c87ae6663db97cc086b981decf4e35a797c30600660009054906101000a900460ff16604051610e01929190611cb0565b60405180910390a150565b6000801b81565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806007811115610e5057610e4f611bc2565b5b600660009054906101000a900460ff166007811115610e7257610e71611bc2565b5b1480610eb1575060016007811115610e8d57610e8c611bc2565b5b600660009054906101000a900460ff166007811115610eaf57610eae611bc2565b5b145b15610edd5760045460035442610ec79190611cd9565b10610ed3576000610ed6565b60015b9050610ee2565b600090505b90565b610eee8261040d565b610ef781611131565b610f01838361122d565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f8f576040517f87f439ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060006060600060607f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600261103161135b565b6110396104d0565b828054806020026020016040519081016040528092919081815260200182805480156110ac57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116110735790505b50505050509250955095509550955095509550909192939495565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6111428161113d611225565b61139b565b50565b61114f82826109ae565b61122157600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506111c6611225565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b61123782826109ae565b1561130a57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506112af611225565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60028190806001815401808255809150506001900390600052602060002090601091828204019190066002029091909190916101000a81548161ffff021916908361ffff16021790555050565b6000600660019054906101000a900460ff1661137a5760009050611398565b4260045460035461138b9190611d0d565b6113959190611cd9565b90505b90565b6113a582826109ae565b611434576113ca8173ffffffffffffffffffffffffffffffffffffffff166014611438565b6113d88360001c6020611438565b6040516020016113e9929190611e15565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142b9190611919565b60405180910390fd5b5050565b60606000600283600261144b9190611e4f565b6114559190611d0d565b67ffffffffffffffff81111561146e5761146d611e91565b5b6040519080825280601f01601f1916602001820160405280156114a05781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106114d8576114d7611ec0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061153c5761153b611ec0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261157c9190611e4f565b6115869190611d0d565b90505b6001811115611626577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106115c8576115c7611ec0565b5b1a60f81b8282815181106115df576115de611ec0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061161f90611eef565b9050611589565b506000841461166a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166190611f64565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116ae81611679565b81146116b957600080fd5b50565b6000813590506116cb816116a5565b92915050565b6000602082840312156116e7576116e6611674565b5b60006116f5848285016116bc565b91505092915050565b60008115159050919050565b611713816116fe565b82525050565b600060208201905061172e600083018461170a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061175f82611734565b9050919050565b61176f81611754565b82525050565b600060208201905061178a6000830184611766565b92915050565b6000819050919050565b6117a381611790565b81146117ae57600080fd5b50565b6000813590506117c08161179a565b92915050565b6000602082840312156117dc576117db611674565b5b60006117ea848285016117b1565b91505092915050565b6117fc81611790565b82525050565b600060208201905061181760008301846117f3565b92915050565b61182681611754565b811461183157600080fd5b50565b6000813590506118438161181d565b92915050565b600080604083850312156118605761185f611674565b5b600061186e858286016117b1565b925050602061187f85828601611834565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118c35780820151818401526020810190506118a8565b60008484015250505050565b6000601f19601f8301169050919050565b60006118eb82611889565b6118f58185611894565b93506119058185602086016118a5565b61190e816118cf565b840191505092915050565b6000602082019050818103600083015261193381846118e0565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061ffff82169050919050565b61197e81611967565b82525050565b60006119908383611975565b60208301905092915050565b6000602082019050919050565b60006119b48261193b565b6119be8185611946565b93506119c983611957565b8060005b838110156119fa5781516119e18882611984565b97506119ec8361199c565b9250506001810190506119cd565b5085935050505092915050565b60006020820190508181036000830152611a2181846119a9565b905092915050565b600060208284031215611a3f57611a3e611674565b5b6000611a4d84828501611834565b91505092915050565b60088110611a6357600080fd5b50565b600081359050611a7581611a56565b92915050565b600060208284031215611a9157611a90611674565b5b6000611a9f84828501611a66565b91505092915050565b6000819050919050565b611abb81611aa8565b82525050565b600060c082019050611ad66000830189611766565b611ae36020830188611766565b611af06040830187611766565b8181036060830152611b0281866119a9565b9050611b116080830185611ab2565b81810360a0830152611b2381846118e0565b9050979650505050505050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611b8c602f83611894565b9150611b9782611b30565b604082019050919050565b60006020820190508181036000830152611bbb81611b7f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c2b82611aa8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c5d57611c5c611bf1565b5b600182019050919050565b60088110611c7957611c78611bc2565b5b50565b6000819050611c8a82611c68565b919050565b6000611c9a82611c7c565b9050919050565b611caa81611c8f565b82525050565b6000604082019050611cc56000830185611766565b611cd26020830184611ca1565b9392505050565b6000611ce482611aa8565b9150611cef83611aa8565b9250828203905081811115611d0757611d06611bf1565b5b92915050565b6000611d1882611aa8565b9150611d2383611aa8565b9250828201905080821115611d3b57611d3a611bf1565b5b92915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611d82601783611d41565b9150611d8d82611d4c565b601782019050919050565b6000611da382611889565b611dad8185611d41565b9350611dbd8185602086016118a5565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611dff601183611d41565b9150611e0a82611dc9565b601182019050919050565b6000611e2082611d75565b9150611e2c8285611d98565b9150611e3782611df2565b9150611e438284611d98565b91508190509392505050565b6000611e5a82611aa8565b9150611e6583611aa8565b9250828202611e7381611aa8565b91508282048414831517611e8a57611e89611bf1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611efa82611aa8565b915060008203611f0d57611f0c611bf1565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611f4e602083611894565b9150611f5982611f18565b602082019050919050565b60006020820190508181036000830152611f7d81611f41565b905091905056fea2646970667358221220f6d040d7e00132cc6265f989634e6b90be2c68a7c283d8dde22548d1f97dc49c64736f6c63430008110033a26469706673582212205e5514c8a1c546b32c313c89d40d63f16e635d41e7f09e9e141b349490f5f8bd64736f6c63430008110033","immutableReferences":{},"generatedSources":[],"deployedGeneratedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11502:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"748:87:17","statements":[{"nodeType":"YulAssignment","src":"758:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:17"},"nodeType":"YulFunctionCall","src":"767:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:17"},"nodeType":"YulFunctionCall","src":"796:33:17"},"nodeType":"YulExpressionStatement","src":"796:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:17","type":""}],"src":"696:139:17"},{"body":{"nodeType":"YulBlock","src":"907:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:17"},"nodeType":"YulFunctionCall","src":"955:79:17"},"nodeType":"YulExpressionStatement","src":"955:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:17"},"nodeType":"YulFunctionCall","src":"924:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:17"},"nodeType":"YulFunctionCall","src":"920:32:17"},"nodeType":"YulIf","src":"917:119:17"},{"nodeType":"YulBlock","src":"1046:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:17"},"nodeType":"YulFunctionCall","src":"1121:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:17"},"nodeType":"YulFunctionCall","src":"1100:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:17","type":""}],"src":"841:329:17"},{"body":{"nodeType":"YulBlock","src":"1250:40:17","statements":[{"nodeType":"YulAssignment","src":"1261:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1277:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1271:5:17"},"nodeType":"YulFunctionCall","src":"1271:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1261:6:17"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1233:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1243:6:17","type":""}],"src":"1176:114:17"},{"body":{"nodeType":"YulBlock","src":"1407:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1424:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1429:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1417:6:17"},"nodeType":"YulFunctionCall","src":"1417:19:17"},"nodeType":"YulExpressionStatement","src":"1417:19:17"},{"nodeType":"YulAssignment","src":"1445:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1464:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1469:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1460:3:17"},"nodeType":"YulFunctionCall","src":"1460:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1445:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1379:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1384:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1395:11:17","type":""}],"src":"1296:184:17"},{"body":{"nodeType":"YulBlock","src":"1558:60:17","statements":[{"nodeType":"YulAssignment","src":"1568:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1576:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1568:4:17"}]},{"nodeType":"YulAssignment","src":"1589:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1601:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1606:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1597:3:17"},"nodeType":"YulFunctionCall","src":"1597:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1589:4:17"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1545:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1553:4:17","type":""}],"src":"1486:132:17"},{"body":{"nodeType":"YulBlock","src":"1679:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1696:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1719:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1701:17:17"},"nodeType":"YulFunctionCall","src":"1701:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1689:6:17"},"nodeType":"YulFunctionCall","src":"1689:37:17"},"nodeType":"YulExpressionStatement","src":"1689:37:17"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1667:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1674:3:17","type":""}],"src":"1624:108:17"},{"body":{"nodeType":"YulBlock","src":"1818:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1862:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"1870:3:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"1828:33:17"},"nodeType":"YulFunctionCall","src":"1828:46:17"},"nodeType":"YulExpressionStatement","src":"1828:46:17"},{"nodeType":"YulAssignment","src":"1883:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1901:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1906:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1897:3:17"},"nodeType":"YulFunctionCall","src":"1897:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"1883:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"1791:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1799:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"1807:10:17","type":""}],"src":"1738:179:17"},{"body":{"nodeType":"YulBlock","src":"1998:38:17","statements":[{"nodeType":"YulAssignment","src":"2008:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2020:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2025:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2016:3:17"},"nodeType":"YulFunctionCall","src":"2016:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"2008:4:17"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1985:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"1993:4:17","type":""}],"src":"1923:113:17"},{"body":{"nodeType":"YulBlock","src":"2196:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2206:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2268:5:17"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2220:47:17"},"nodeType":"YulFunctionCall","src":"2220:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2210:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2283:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2364:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2369:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2290:73:17"},"nodeType":"YulFunctionCall","src":"2290:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2283:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"2385:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2450:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2400:49:17"},"nodeType":"YulFunctionCall","src":"2400:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"2389:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2465:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"2479:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2469:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2555:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2569:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2596:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2590:5:17"},"nodeType":"YulFunctionCall","src":"2590:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"2573:13:17","type":""}]},{"nodeType":"YulAssignment","src":"2616:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"2667:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2682:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"2623:43:17"},"nodeType":"YulFunctionCall","src":"2623:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2616:3:17"}]},{"nodeType":"YulAssignment","src":"2699:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2762:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2709:52:17"},"nodeType":"YulFunctionCall","src":"2709:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2699:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2517:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"2520:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2514:2:17"},"nodeType":"YulFunctionCall","src":"2514:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2528:18:17","statements":[{"nodeType":"YulAssignment","src":"2530:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2539:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"2542:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2535:3:17"},"nodeType":"YulFunctionCall","src":"2535:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2530:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2499:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2501:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2510:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2505:1:17","type":""}]}]},"src":"2495:284:17"},{"nodeType":"YulAssignment","src":"2788:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"2795:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2788:3:17"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2175:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2182:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2191:3:17","type":""}],"src":"2072:732:17"},{"body":{"nodeType":"YulBlock","src":"2958:225:17","statements":[{"nodeType":"YulAssignment","src":"2968:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2980:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2991:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2976:3:17"},"nodeType":"YulFunctionCall","src":"2976:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2968:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3015:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3026:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3011:3:17"},"nodeType":"YulFunctionCall","src":"3011:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3034:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3040:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3030:3:17"},"nodeType":"YulFunctionCall","src":"3030:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3004:6:17"},"nodeType":"YulFunctionCall","src":"3004:47:17"},"nodeType":"YulExpressionStatement","src":"3004:47:17"},{"nodeType":"YulAssignment","src":"3060:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3162:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"3171:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3068:93:17"},"nodeType":"YulFunctionCall","src":"3068:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3060:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2930:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2942:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2953:4:17","type":""}],"src":"2810:373:17"},{"body":{"nodeType":"YulBlock","src":"3278:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3295:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3298:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3288:6:17"},"nodeType":"YulFunctionCall","src":"3288:12:17"},"nodeType":"YulExpressionStatement","src":"3288:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3189:117:17"},{"body":{"nodeType":"YulBlock","src":"3360:54:17","statements":[{"nodeType":"YulAssignment","src":"3370:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3388:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3395:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3384:3:17"},"nodeType":"YulFunctionCall","src":"3384:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3404:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3400:3:17"},"nodeType":"YulFunctionCall","src":"3400:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3380:3:17"},"nodeType":"YulFunctionCall","src":"3380:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3370:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3343:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3353:6:17","type":""}],"src":"3312:102:17"},{"body":{"nodeType":"YulBlock","src":"3448:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3465:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3468:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3458:6:17"},"nodeType":"YulFunctionCall","src":"3458:88:17"},"nodeType":"YulExpressionStatement","src":"3458:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3562:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3565:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3555:6:17"},"nodeType":"YulFunctionCall","src":"3555:15:17"},"nodeType":"YulExpressionStatement","src":"3555:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3586:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3589:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3579:6:17"},"nodeType":"YulFunctionCall","src":"3579:15:17"},"nodeType":"YulExpressionStatement","src":"3579:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3420:180:17"},{"body":{"nodeType":"YulBlock","src":"3649:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3659:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3681:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3711:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3689:21:17"},"nodeType":"YulFunctionCall","src":"3689:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3677:3:17"},"nodeType":"YulFunctionCall","src":"3677:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3663:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3828:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3830:16:17"},"nodeType":"YulFunctionCall","src":"3830:18:17"},"nodeType":"YulExpressionStatement","src":"3830:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3771:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3783:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3768:2:17"},"nodeType":"YulFunctionCall","src":"3768:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3807:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3819:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3804:2:17"},"nodeType":"YulFunctionCall","src":"3804:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3765:2:17"},"nodeType":"YulFunctionCall","src":"3765:62:17"},"nodeType":"YulIf","src":"3762:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3866:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3870:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:17"},"nodeType":"YulFunctionCall","src":"3859:22:17"},"nodeType":"YulExpressionStatement","src":"3859:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3635:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"3643:4:17","type":""}],"src":"3606:281:17"},{"body":{"nodeType":"YulBlock","src":"3934:88:17","statements":[{"nodeType":"YulAssignment","src":"3944:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3954:18:17"},"nodeType":"YulFunctionCall","src":"3954:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3944:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4003:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"4011:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3983:19:17"},"nodeType":"YulFunctionCall","src":"3983:33:17"},"nodeType":"YulExpressionStatement","src":"3983:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3918:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3927:6:17","type":""}],"src":"3893:129:17"},{"body":{"nodeType":"YulBlock","src":"4109:229:17","statements":[{"body":{"nodeType":"YulBlock","src":"4214:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4216:16:17"},"nodeType":"YulFunctionCall","src":"4216:18:17"},"nodeType":"YulExpressionStatement","src":"4216:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4186:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4194:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4183:2:17"},"nodeType":"YulFunctionCall","src":"4183:30:17"},"nodeType":"YulIf","src":"4180:56:17"},{"nodeType":"YulAssignment","src":"4246:25:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4258:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4266:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4254:3:17"},"nodeType":"YulFunctionCall","src":"4254:17:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4246:4:17"}]},{"nodeType":"YulAssignment","src":"4308:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4320:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"4326:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4316:3:17"},"nodeType":"YulFunctionCall","src":"4316:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4308:4:17"}]}]},"name":"array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4093:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4104:4:17","type":""}],"src":"4028:310:17"},{"body":{"nodeType":"YulBlock","src":"4433:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4450:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4453:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4443:6:17"},"nodeType":"YulFunctionCall","src":"4443:12:17"},"nodeType":"YulExpressionStatement","src":"4443:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"4344:117:17"},{"body":{"nodeType":"YulBlock","src":"4511:45:17","statements":[{"nodeType":"YulAssignment","src":"4521:29:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4536:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4543:6:17","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4532:3:17"},"nodeType":"YulFunctionCall","src":"4532:18:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4521:7:17"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4503:7:17","type":""}],"src":"4467:89:17"},{"body":{"nodeType":"YulBlock","src":"4604:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"4660:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4669:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4672:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4662:6:17"},"nodeType":"YulFunctionCall","src":"4662:12:17"},"nodeType":"YulExpressionStatement","src":"4662:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4627:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4651:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"4634:16:17"},"nodeType":"YulFunctionCall","src":"4634:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4624:2:17"},"nodeType":"YulFunctionCall","src":"4624:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4617:6:17"},"nodeType":"YulFunctionCall","src":"4617:42:17"},"nodeType":"YulIf","src":"4614:62:17"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4597:5:17","type":""}],"src":"4562:120:17"},{"body":{"nodeType":"YulBlock","src":"4739:86:17","statements":[{"nodeType":"YulAssignment","src":"4749:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4771:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4758:12:17"},"nodeType":"YulFunctionCall","src":"4758:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4749:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4813:5:17"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"4787:25:17"},"nodeType":"YulFunctionCall","src":"4787:32:17"},"nodeType":"YulExpressionStatement","src":"4787:32:17"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4717:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4725:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4733:5:17","type":""}],"src":"4688:137:17"},{"body":{"nodeType":"YulBlock","src":"4948:606:17","statements":[{"nodeType":"YulAssignment","src":"4958:89:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5039:6:17"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4983:55:17"},"nodeType":"YulFunctionCall","src":"4983:63:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4967:15:17"},"nodeType":"YulFunctionCall","src":"4967:80:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4958:5:17"}]},{"nodeType":"YulVariableDeclaration","src":"5056:16:17","value":{"name":"array","nodeType":"YulIdentifier","src":"5067:5:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5060:3:17","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5089:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"5096:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5082:6:17"},"nodeType":"YulFunctionCall","src":"5082:21:17"},"nodeType":"YulExpressionStatement","src":"5082:21:17"},{"nodeType":"YulAssignment","src":"5112:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5123:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5130:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5119:3:17"},"nodeType":"YulFunctionCall","src":"5119:16:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5112:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"5145:44:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5163:6:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5175:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5183:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5171:3:17"},"nodeType":"YulFunctionCall","src":"5171:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5159:3:17"},"nodeType":"YulFunctionCall","src":"5159:30:17"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5149:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5217:103:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5231:77:17"},"nodeType":"YulFunctionCall","src":"5231:79:17"},"nodeType":"YulExpressionStatement","src":"5231:79:17"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5204:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"5212:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5201:2:17"},"nodeType":"YulFunctionCall","src":"5201:15:17"},"nodeType":"YulIf","src":"5198:122:17"},{"body":{"nodeType":"YulBlock","src":"5405:143:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5420:21:17","value":{"name":"src","nodeType":"YulIdentifier","src":"5438:3:17"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5424:10:17","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5462:3:17"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5487:10:17"},{"name":"end","nodeType":"YulIdentifier","src":"5499:3:17"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"5467:19:17"},"nodeType":"YulFunctionCall","src":"5467:36:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5455:6:17"},"nodeType":"YulFunctionCall","src":"5455:49:17"},"nodeType":"YulExpressionStatement","src":"5455:49:17"},{"nodeType":"YulAssignment","src":"5517:21:17","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5528:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5533:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5524:3:17"},"nodeType":"YulFunctionCall","src":"5524:14:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5517:3:17"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5358:3:17"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5363:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5355:2:17"},"nodeType":"YulFunctionCall","src":"5355:15:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5371:25:17","statements":[{"nodeType":"YulAssignment","src":"5373:21:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5384:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5389:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:17"},"nodeType":"YulFunctionCall","src":"5380:14:17"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5373:3:17"}]}]},"pre":{"nodeType":"YulBlock","src":"5333:21:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5335:17:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"5346:6:17"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5339:3:17","type":""}]}]},"src":"5329:219:17"}]},"name":"abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4918:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4926:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4934:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4942:5:17","type":""}],"src":"4847:707:17"},{"body":{"nodeType":"YulBlock","src":"5652:292:17","statements":[{"body":{"nodeType":"YulBlock","src":"5701:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5703:77:17"},"nodeType":"YulFunctionCall","src":"5703:79:17"},"nodeType":"YulExpressionStatement","src":"5703:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5680:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5688:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5676:3:17"},"nodeType":"YulFunctionCall","src":"5676:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"5695:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5672:3:17"},"nodeType":"YulFunctionCall","src":"5672:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5665:6:17"},"nodeType":"YulFunctionCall","src":"5665:35:17"},"nodeType":"YulIf","src":"5662:122:17"},{"nodeType":"YulVariableDeclaration","src":"5793:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5820:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5807:12:17"},"nodeType":"YulFunctionCall","src":"5807:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5797:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5836:102:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5911:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5919:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5907:3:17"},"nodeType":"YulFunctionCall","src":"5907:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"5926:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"5934:3:17"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5845:61:17"},"nodeType":"YulFunctionCall","src":"5845:93:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5836:5:17"}]}]},"name":"abi_decode_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5630:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5638:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5646:5:17","type":""}],"src":"5576:368:17"},{"body":{"nodeType":"YulBlock","src":"6057:575:17","statements":[{"body":{"nodeType":"YulBlock","src":"6103:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6105:77:17"},"nodeType":"YulFunctionCall","src":"6105:79:17"},"nodeType":"YulExpressionStatement","src":"6105:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6078:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6087:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6074:3:17"},"nodeType":"YulFunctionCall","src":"6074:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6099:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6070:3:17"},"nodeType":"YulFunctionCall","src":"6070:32:17"},"nodeType":"YulIf","src":"6067:119:17"},{"nodeType":"YulBlock","src":"6196:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6211:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6225:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6215:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6240:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6275:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6286:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6271:3:17"},"nodeType":"YulFunctionCall","src":"6271:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6295:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6250:20:17"},"nodeType":"YulFunctionCall","src":"6250:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6240:6:17"}]}]},{"nodeType":"YulBlock","src":"6323:302:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6338:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6369:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6380:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6365:3:17"},"nodeType":"YulFunctionCall","src":"6365:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6352:12:17"},"nodeType":"YulFunctionCall","src":"6352:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6342:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6431:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6433:77:17"},"nodeType":"YulFunctionCall","src":"6433:79:17"},"nodeType":"YulExpressionStatement","src":"6433:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6403:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6411:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6400:2:17"},"nodeType":"YulFunctionCall","src":"6400:30:17"},"nodeType":"YulIf","src":"6397:117:17"},{"nodeType":"YulAssignment","src":"6528:87:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6587:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6598:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6583:3:17"},"nodeType":"YulFunctionCall","src":"6583:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6607:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6538:44:17"},"nodeType":"YulFunctionCall","src":"6538:77:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6528:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6019:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6030:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6042:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6050:6:17","type":""}],"src":"5950:682:17"},{"body":{"nodeType":"YulBlock","src":"6703:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6720:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6743:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6725:17:17"},"nodeType":"YulFunctionCall","src":"6725:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6713:6:17"},"nodeType":"YulFunctionCall","src":"6713:37:17"},"nodeType":"YulExpressionStatement","src":"6713:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6691:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6698:3:17","type":""}],"src":"6638:118:17"},{"body":{"nodeType":"YulBlock","src":"6860:124:17","statements":[{"nodeType":"YulAssignment","src":"6870:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6882:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6893:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6878:3:17"},"nodeType":"YulFunctionCall","src":"6878:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6870:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6950:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6963:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6974:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6959:3:17"},"nodeType":"YulFunctionCall","src":"6959:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6906:43:17"},"nodeType":"YulFunctionCall","src":"6906:71:17"},"nodeType":"YulExpressionStatement","src":"6906:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6832:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6844:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6855:4:17","type":""}],"src":"6762:222:17"},{"body":{"nodeType":"YulBlock","src":"7090:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"7136:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7138:77:17"},"nodeType":"YulFunctionCall","src":"7138:79:17"},"nodeType":"YulExpressionStatement","src":"7138:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7111:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7120:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7107:3:17"},"nodeType":"YulFunctionCall","src":"7107:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7132:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7103:3:17"},"nodeType":"YulFunctionCall","src":"7103:32:17"},"nodeType":"YulIf","src":"7100:119:17"},{"nodeType":"YulBlock","src":"7229:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7244:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7258:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7248:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7273:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7308:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7319:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7304:3:17"},"nodeType":"YulFunctionCall","src":"7304:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7328:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7283:20:17"},"nodeType":"YulFunctionCall","src":"7283:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7273:6:17"}]}]},{"nodeType":"YulBlock","src":"7356:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7371:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7385:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7375:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7401:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7436:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7447:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7432:3:17"},"nodeType":"YulFunctionCall","src":"7432:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7456:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7411:20:17"},"nodeType":"YulFunctionCall","src":"7411:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7401:6:17"}]}]},{"nodeType":"YulBlock","src":"7484:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7499:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7513:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7503:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7529:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7564:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7575:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7560:3:17"},"nodeType":"YulFunctionCall","src":"7560:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7584:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7539:20:17"},"nodeType":"YulFunctionCall","src":"7539:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7529:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7044:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7055:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7067:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7075:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7083:6:17","type":""}],"src":"6990:619:17"},{"body":{"nodeType":"YulBlock","src":"7643:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7660:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7663:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7653:6:17"},"nodeType":"YulFunctionCall","src":"7653:88:17"},"nodeType":"YulExpressionStatement","src":"7653:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7757:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7760:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7750:6:17"},"nodeType":"YulFunctionCall","src":"7750:15:17"},"nodeType":"YulExpressionStatement","src":"7750:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7781:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7784:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7774:6:17"},"nodeType":"YulFunctionCall","src":"7774:15:17"},"nodeType":"YulExpressionStatement","src":"7774:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7615:180:17"},{"body":{"nodeType":"YulBlock","src":"7843:48:17","statements":[{"nodeType":"YulAssignment","src":"7853:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7878:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7871:6:17"},"nodeType":"YulFunctionCall","src":"7871:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7864:6:17"},"nodeType":"YulFunctionCall","src":"7864:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7853:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7825:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7835:7:17","type":""}],"src":"7801:90:17"},{"body":{"nodeType":"YulBlock","src":"7937:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"7991:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8000:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8003:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7993:6:17"},"nodeType":"YulFunctionCall","src":"7993:12:17"},"nodeType":"YulExpressionStatement","src":"7993:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7960:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7982:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7967:14:17"},"nodeType":"YulFunctionCall","src":"7967:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7957:2:17"},"nodeType":"YulFunctionCall","src":"7957:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7950:6:17"},"nodeType":"YulFunctionCall","src":"7950:40:17"},"nodeType":"YulIf","src":"7947:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7930:5:17","type":""}],"src":"7897:116:17"},{"body":{"nodeType":"YulBlock","src":"8079:77:17","statements":[{"nodeType":"YulAssignment","src":"8089:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8104:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8098:5:17"},"nodeType":"YulFunctionCall","src":"8098:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8089:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8144:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"8120:23:17"},"nodeType":"YulFunctionCall","src":"8120:30:17"},"nodeType":"YulExpressionStatement","src":"8120:30:17"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8057:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8065:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8073:5:17","type":""}],"src":"8019:137:17"},{"body":{"nodeType":"YulBlock","src":"8236:271:17","statements":[{"body":{"nodeType":"YulBlock","src":"8282:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8284:77:17"},"nodeType":"YulFunctionCall","src":"8284:79:17"},"nodeType":"YulExpressionStatement","src":"8284:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8257:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8266:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8253:3:17"},"nodeType":"YulFunctionCall","src":"8253:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8278:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8249:3:17"},"nodeType":"YulFunctionCall","src":"8249:32:17"},"nodeType":"YulIf","src":"8246:119:17"},{"nodeType":"YulBlock","src":"8375:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8390:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8404:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8394:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8419:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8462:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8473:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8458:3:17"},"nodeType":"YulFunctionCall","src":"8458:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8482:7:17"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"8429:28:17"},"nodeType":"YulFunctionCall","src":"8429:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8419:6:17"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8206:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8217:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8229:6:17","type":""}],"src":"8162:345:17"},{"body":{"nodeType":"YulBlock","src":"8541:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8558:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8561:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8551:6:17"},"nodeType":"YulFunctionCall","src":"8551:88:17"},"nodeType":"YulExpressionStatement","src":"8551:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8655:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8648:6:17"},"nodeType":"YulFunctionCall","src":"8648:15:17"},"nodeType":"YulExpressionStatement","src":"8648:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8679:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8682:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8672:6:17"},"nodeType":"YulFunctionCall","src":"8672:15:17"},"nodeType":"YulExpressionStatement","src":"8672:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8513:180:17"},{"body":{"nodeType":"YulBlock","src":"8744:32:17","statements":[{"nodeType":"YulAssignment","src":"8754:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"8765:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8754:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8726:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8736:7:17","type":""}],"src":"8699:77:17"},{"body":{"nodeType":"YulBlock","src":"8825:190:17","statements":[{"nodeType":"YulAssignment","src":"8835:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8862:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8844:17:17"},"nodeType":"YulFunctionCall","src":"8844:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8835:5:17"}]},{"body":{"nodeType":"YulBlock","src":"8958:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8960:16:17"},"nodeType":"YulFunctionCall","src":"8960:18:17"},"nodeType":"YulExpressionStatement","src":"8960:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8883:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8890:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8880:2:17"},"nodeType":"YulFunctionCall","src":"8880:77:17"},"nodeType":"YulIf","src":"8877:103:17"},{"nodeType":"YulAssignment","src":"8989:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9000:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9007:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8996:3:17"},"nodeType":"YulFunctionCall","src":"8996:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8989:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8811:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8821:3:17","type":""}],"src":"8782:233:17"},{"body":{"nodeType":"YulBlock","src":"9094:40:17","statements":[{"nodeType":"YulAssignment","src":"9105:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9121:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9115:5:17"},"nodeType":"YulFunctionCall","src":"9115:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9105:6:17"}]}]},"name":"array_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9077:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9087:6:17","type":""}],"src":"9021:113:17"},{"body":{"nodeType":"YulBlock","src":"9250:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9267:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9272:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9260:6:17"},"nodeType":"YulFunctionCall","src":"9260:19:17"},"nodeType":"YulExpressionStatement","src":"9260:19:17"},{"nodeType":"YulAssignment","src":"9288:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9307:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9312:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9303:3:17"},"nodeType":"YulFunctionCall","src":"9303:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9288:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9222:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"9227:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9238:11:17","type":""}],"src":"9140:183:17"},{"body":{"nodeType":"YulBlock","src":"9400:60:17","statements":[{"nodeType":"YulAssignment","src":"9410:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9418:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9410:4:17"}]},{"nodeType":"YulAssignment","src":"9431:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9443:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9448:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:17"},"nodeType":"YulFunctionCall","src":"9439:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9431:4:17"}]}]},"name":"array_dataslot_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9387:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9395:4:17","type":""}],"src":"9329:131:17"},{"body":{"nodeType":"YulBlock","src":"9519:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9536:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9558:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"9541:16:17"},"nodeType":"YulFunctionCall","src":"9541:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9529:6:17"},"nodeType":"YulFunctionCall","src":"9529:36:17"},"nodeType":"YulExpressionStatement","src":"9529:36:17"}]},"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9507:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9514:3:17","type":""}],"src":"9466:105:17"},{"body":{"nodeType":"YulBlock","src":"9655:97:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9697:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"9705:3:17"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"9665:31:17"},"nodeType":"YulFunctionCall","src":"9665:44:17"},"nodeType":"YulExpressionStatement","src":"9665:44:17"},{"nodeType":"YulAssignment","src":"9718:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9736:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9741:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9732:3:17"},"nodeType":"YulFunctionCall","src":"9732:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9718:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_uint16_to_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9628:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9636:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9644:10:17","type":""}],"src":"9577:175:17"},{"body":{"nodeType":"YulBlock","src":"9832:38:17","statements":[{"nodeType":"YulAssignment","src":"9842:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9854:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9859:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9850:3:17"},"nodeType":"YulFunctionCall","src":"9850:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9842:4:17"}]}]},"name":"array_nextElement_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9819:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9827:4:17","type":""}],"src":"9758:112:17"},{"body":{"nodeType":"YulBlock","src":"10026:602:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10036:67:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10097:5:17"}],"functionName":{"name":"array_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10050:46:17"},"nodeType":"YulFunctionCall","src":"10050:53:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10040:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10112:92:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10192:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10197:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10119:72:17"},"nodeType":"YulFunctionCall","src":"10119:85:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10112:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"10213:70:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10277:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10228:48:17"},"nodeType":"YulFunctionCall","src":"10228:55:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10217:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10292:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"10306:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10296:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10382:221:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10396:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10423:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10417:5:17"},"nodeType":"YulFunctionCall","src":"10417:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10400:13:17","type":""}]},{"nodeType":"YulAssignment","src":"10443:68:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10492:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"10507:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"10450:41:17"},"nodeType":"YulFunctionCall","src":"10450:61:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10443:3:17"}]},{"nodeType":"YulAssignment","src":"10524:69:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10586:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10534:51:17"},"nodeType":"YulFunctionCall","src":"10534:59:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10524:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10344:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"10347:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10341:2:17"},"nodeType":"YulFunctionCall","src":"10341:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10355:18:17","statements":[{"nodeType":"YulAssignment","src":"10357:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10366:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"10369:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10362:3:17"},"nodeType":"YulFunctionCall","src":"10362:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10357:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"10326:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10328:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10337:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10332:1:17","type":""}]}]},"src":"10322:281:17"},{"nodeType":"YulAssignment","src":"10612:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"10619:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10612:3:17"}]}]},"name":"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10005:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10012:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10021:3:17","type":""}],"src":"9904:724:17"},{"body":{"nodeType":"YulBlock","src":"10808:305:17","statements":[{"nodeType":"YulAssignment","src":"10818:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10830:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10841:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10826:3:17"},"nodeType":"YulFunctionCall","src":"10826:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10818:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10898:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10911:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10922:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10907:3:17"},"nodeType":"YulFunctionCall","src":"10907:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10854:43:17"},"nodeType":"YulFunctionCall","src":"10854:71:17"},"nodeType":"YulExpressionStatement","src":"10854:71:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10946:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10957:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10942:3:17"},"nodeType":"YulFunctionCall","src":"10942:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10966:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10972:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10962:3:17"},"nodeType":"YulFunctionCall","src":"10962:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10935:6:17"},"nodeType":"YulFunctionCall","src":"10935:48:17"},"nodeType":"YulExpressionStatement","src":"10935:48:17"},{"nodeType":"YulAssignment","src":"10992:114:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11092:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"11101:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11000:91:17"},"nodeType":"YulFunctionCall","src":"11000:106:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10992:4:17"}]}]},"name":"abi_encode_tuple_t_address_t_array$_t_uint16_$dyn_memory_ptr__to_t_address_t_array$_t_uint16_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10772:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10784:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10792:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10803:4:17","type":""}],"src":"10634:479:17"},{"body":{"nodeType":"YulBlock","src":"11164:149:17","statements":[{"nodeType":"YulAssignment","src":"11174:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11197:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11179:17:17"},"nodeType":"YulFunctionCall","src":"11179:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11174:1:17"}]},{"nodeType":"YulAssignment","src":"11208:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11231:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11213:17:17"},"nodeType":"YulFunctionCall","src":"11213:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11208:1:17"}]},{"nodeType":"YulAssignment","src":"11242:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11254:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"11257:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11250:3:17"},"nodeType":"YulFunctionCall","src":"11250:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11242:4:17"}]},{"body":{"nodeType":"YulBlock","src":"11284:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11286:16:17"},"nodeType":"YulFunctionCall","src":"11286:18:17"},"nodeType":"YulExpressionStatement","src":"11286:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"11275:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"11281:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11272:2:17"},"nodeType":"YulFunctionCall","src":"11272:11:17"},"nodeType":"YulIf","src":"11269:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11150:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"11153:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11159:4:17","type":""}],"src":"11119:194:17"},{"body":{"nodeType":"YulBlock","src":"11347:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11364:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11367:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11357:6:17"},"nodeType":"YulFunctionCall","src":"11357:88:17"},"nodeType":"YulExpressionStatement","src":"11357:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11461:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11464:4:17","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11454:6:17"},"nodeType":"YulFunctionCall","src":"11454:15:17"},"nodeType":"YulExpressionStatement","src":"11454:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11485:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11488:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11478:6:17"},"nodeType":"YulFunctionCall","src":"11478:15:17"},"nodeType":"YulExpressionStatement","src":"11478:15:17"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"11319:180:17"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_uint160(value) -> cleaned {\\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\\n    }\\n\\n    function cleanup_t_address(value) -> cleaned {\\n        cleaned := cleanup_t_uint160(value)\\n    }\\n\\n    function validator_revert_t_address(value) {\\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_address(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_address(value)\\n    }\\n\\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\\n        data := ptr\\n\\n        data := add(ptr, 0x20)\\n\\n    }\\n\\n    function abi_encode_t_address_to_t_address(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\\n        abi_encode_t_address_to_t_address(value0, pos)\\n        updatedPos := add(pos, 0x20)\\n    }\\n\\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\\n        next := add(ptr, 0x20)\\n    }\\n\\n    // address[] -> address[]\\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\\n        let srcPtr := baseRef\\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\\n        {\\n            let elementValue0 := mload(srcPtr)\\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\\n        }\\n        end := pos\\n    }\\n\\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := mul(length, 0x20)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_uint16(value) -> cleaned {\\n        cleaned := and(value, 0xffff)\\n    }\\n\\n    function validator_revert_t_uint16(value) {\\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint16(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint16(value)\\n    }\\n\\n    // uint16[]\\n    function abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr(offset, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr(length))\\n        let dst := array\\n\\n        mstore(array, length)\\n        dst := add(array, 0x20)\\n\\n        let srcEnd := add(offset, mul(length, 0x20))\\n        if gt(srcEnd, end) {\\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\\n        }\\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\\n        {\\n\\n            let elementPos := src\\n\\n            mstore(dst, abi_decode_t_uint16(elementPos, end))\\n            dst := add(dst, 0x20)\\n        }\\n    }\\n\\n    // uint16[]\\n    function abi_decode_t_array$_t_uint16_$dyn_memory_ptr(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := calldataload(offset)\\n        array := abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr(add(offset, 0x20), length, end)\\n    }\\n\\n    function abi_decode_tuple_t_addresst_array$_t_uint16_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 32))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value1 := abi_decode_t_array$_t_uint16_$dyn_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 32\\n\\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 64\\n\\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function panic_error_0x32() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x32)\\n        revert(0, 0x24)\\n    }\\n\\n    function cleanup_t_bool(value) -> cleaned {\\n        cleaned := iszero(iszero(value))\\n    }\\n\\n    function validator_revert_t_bool(value) {\\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\\n        value := mload(offset)\\n        validator_revert_t_bool(value)\\n    }\\n\\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function panic_error_0x11() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x11)\\n        revert(0, 0x24)\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function increment_t_uint256(value) -> ret {\\n        value := cleanup_t_uint256(value)\\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\\n        ret := add(value, 1)\\n    }\\n\\n    function array_length_t_array$_t_uint16_$dyn_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function array_dataslot_t_array$_t_uint16_$dyn_memory_ptr(ptr) -> data {\\n        data := ptr\\n\\n        data := add(ptr, 0x20)\\n\\n    }\\n\\n    function abi_encode_t_uint16_to_t_uint16(value, pos) {\\n        mstore(pos, cleanup_t_uint16(value))\\n    }\\n\\n    function abi_encodeUpdatedPos_t_uint16_to_t_uint16(value0, pos) -> updatedPos {\\n        abi_encode_t_uint16_to_t_uint16(value0, pos)\\n        updatedPos := add(pos, 0x20)\\n    }\\n\\n    function array_nextElement_t_array$_t_uint16_$dyn_memory_ptr(ptr) -> next {\\n        next := add(ptr, 0x20)\\n    }\\n\\n    // uint16[] -> uint16[]\\n    function abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\\n        let length := array_length_t_array$_t_uint16_$dyn_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack(pos, length)\\n        let baseRef := array_dataslot_t_array$_t_uint16_$dyn_memory_ptr(value)\\n        let srcPtr := baseRef\\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\\n        {\\n            let elementValue0 := mload(srcPtr)\\n            pos := abi_encodeUpdatedPos_t_uint16_to_t_uint16(elementValue0, pos)\\n            srcPtr := array_nextElement_t_array$_t_uint16_$dyn_memory_ptr(srcPtr)\\n        }\\n        end := pos\\n    }\\n\\n    function abi_encode_tuple_t_address_t_array$_t_uint16_$dyn_memory_ptr__to_t_address_t_array$_t_uint16_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\\n        tail := add(headStart, 64)\\n\\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\\n\\n        mstore(add(headStart, 32), sub(tail, headStart))\\n        tail := abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack(value1,  tail)\\n\\n    }\\n\\n    function checked_sub_t_uint256(x, y) -> diff {\\n        x := cleanup_t_uint256(x)\\n        y := cleanup_t_uint256(y)\\n        diff := sub(x, y)\\n\\n        if gt(diff, x) { panic_error_0x11() }\\n\\n    }\\n\\n    function panic_error_0x31() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x31)\\n        revert(0, 0x24)\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"sourceMap":"116:2770:14:-:0;;;;;;;;;;;;;;;;;;;","deployedSourceMap":"116:2770:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:699;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;295:379;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2794:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1712:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2662:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1851:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1577:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;695:876;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1957:699;2021:16;2049:24;2076:15;:23;2092:6;2076:23;;;;;;;;;;;;;;;2049:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:27;2156:9;2151:164;2175:7;:14;2171:1;:18;2151:164;;;2221:7;2229:1;2221:10;;;;;;;;:::i;:::-;;;;;;;;2214:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2210:95;;;2269:21;;;;;:::i;:::-;;;;2210:95;2191:3;;;;;:::i;:::-;;;;2151:164;;;;2325:30;2372:19;2358:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2325:67;;2402:9;2431;2426:193;2450:7;:14;2446:1;:18;2426:193;;;2496:7;2504:1;2496:10;;;;;;;;:::i;:::-;;;;;;;;2489:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2485:124;;;2563:7;2571:1;2563:10;;;;;;;;:::i;:::-;;;;;;;;2544:13;2558:1;2544:16;;;;;;;;:::i;:::-;;;;;;;:29;;;;;;;;;;;2591:3;;;;;:::i;:::-;;;;2485:124;2466:3;;;;;:::i;:::-;;;;2426:193;;;;2636:13;2629:20;;;;;;1957:699;;;:::o;295:379::-;422:13;462:6;482:15;438:69;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;422:85;;518:15;:23;534:6;518:23;;;;;;;;;;;;;;;555:6;518:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;573:16;:28;590:10;573:28;;;;;;;;;;;;;;;615:6;573:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;660:6;634:15;;:33;;;;;;;;;;;;;;;;;;412:262;295:379;;:::o;2794:90::-;2838:7;2872:4;2857:20;;2794:90;:::o;1712:133::-;1778:16;1813;:25;1830:7;1813:25;;;;;;;;;;;;;;;1806:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:133;;;:::o;2662:126::-;2723:16;2758:15;:23;2774:6;2758:23;;;;;;;;;;;;;;;2751:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2662:126;;;:::o;1851:100::-;1903:7;1929:15;;;;;;;;;;;1922:22;;1851:100;:::o;1577:129::-;1641:16;1676:15;:23;1692:6;1676:23;;;;;;;;;;;;;;;1669:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:129;;;:::o;695:876::-;815:26;844:15;:23;860:6;844:23;;;;;;;;;;;;;;;:30;;;;815:59;;884:27;914:16;:25;931:7;914:25;;;;;;;;;;;;;;;:32;;;;884:62;;962:9;957:294;981:18;977:1;:22;957:294;;;1054:6;1024:36;;:15;:23;1040:6;1024:23;;;;;;;;;;;;;;;1048:1;1024:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:36;;;1020:221;;1109:15;:23;1125:6;1109:23;;;;;;;;;;;;;;;1154:1;1133:18;:22;;;;:::i;:::-;1109:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1080:15;:23;1096:6;1080:23;;;;;;;;;;;;;;;1104:1;1080:26;;;;;;;;:::i;:::-;;;;;;;;;;:76;;;;;;;;;;;;;;;;;;1174:15;:23;1190:6;1174:23;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:5;;1020:221;1001:3;;;;;:::i;:::-;;;;957:294;;;;1266:9;1261:304;1285:19;1281:1;:23;1261:304;;;1361:6;1329:38;;:16;:25;1346:7;1329:25;;;;;;;;;;;;;;;1355:1;1329:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:38;;;1325:230;;1418:16;:25;1435:7;1418:25;;;;;;;;;;;;;;;1466:1;1444:19;:23;;;;:::i;:::-;1418:50;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1387:16;:25;1404:7;1387:25;;;;;;;;;;;;;;;1413:1;1387:28;;;;;;;;:::i;:::-;;;;;;;;;;:81;;;;;;;;;;;;;;;;;;1486:16;:25;1503:7;1486:25;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1535:5;;1325:230;1306:3;;;;;:::i;:::-;;;;1261:304;;;;805:766;;695:876;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:114::-;1243:6;1277:5;1271:12;1261:22;;1176:114;;;:::o;1296:184::-;1395:11;1429:6;1424:3;1417:19;1469:4;1464:3;1460:14;1445:29;;1296:184;;;;:::o;1486:132::-;1553:4;1576:3;1568:11;;1606:4;1601:3;1597:14;1589:22;;1486:132;;;:::o;1624:108::-;1701:24;1719:5;1701:24;:::i;:::-;1696:3;1689:37;1624:108;;:::o;1738:179::-;1807:10;1828:46;1870:3;1862:6;1828:46;:::i;:::-;1906:4;1901:3;1897:14;1883:28;;1738:179;;;;:::o;1923:113::-;1993:4;2025;2020:3;2016:14;2008:22;;1923:113;;;:::o;2072:732::-;2191:3;2220:54;2268:5;2220:54;:::i;:::-;2290:86;2369:6;2364:3;2290:86;:::i;:::-;2283:93;;2400:56;2450:5;2400:56;:::i;:::-;2479:7;2510:1;2495:284;2520:6;2517:1;2514:13;2495:284;;;2596:6;2590:13;2623:63;2682:3;2667:13;2623:63;:::i;:::-;2616:70;;2709:60;2762:6;2709:60;:::i;:::-;2699:70;;2555:224;2542:1;2539;2535:9;2530:14;;2495:284;;;2499:14;2795:3;2788:10;;2196:608;;;2072:732;;;;:::o;2810:373::-;2953:4;2991:2;2980:9;2976:18;2968:26;;3040:9;3034:4;3030:20;3026:1;3015:9;3011:17;3004:47;3068:108;3171:4;3162:6;3068:108;:::i;:::-;3060:116;;2810:373;;;;:::o;3189:117::-;3298:1;3295;3288:12;3312:102;3353:6;3404:2;3400:7;3395:2;3388:5;3384:14;3380:28;3370:38;;3312:102;;;:::o;3420:180::-;3468:77;3465:1;3458:88;3565:4;3562:1;3555:15;3589:4;3586:1;3579:15;3606:281;3689:27;3711:4;3689:27;:::i;:::-;3681:6;3677:40;3819:6;3807:10;3804:22;3783:18;3771:10;3768:34;3765:62;3762:88;;;3830:18;;:::i;:::-;3762:88;3870:10;3866:2;3859:22;3649:238;3606:281;;:::o;3893:129::-;3927:6;3954:20;;:::i;:::-;3944:30;;3983:33;4011:4;4003:6;3983:33;:::i;:::-;3893:129;;;:::o;4028:310::-;4104:4;4194:18;4186:6;4183:30;4180:56;;;4216:18;;:::i;:::-;4180:56;4266:4;4258:6;4254:17;4246:25;;4326:4;4320;4316:15;4308:23;;4028:310;;;:::o;4344:117::-;4453:1;4450;4443:12;4467:89;4503:7;4543:6;4536:5;4532:18;4521:29;;4467:89;;;:::o;4562:120::-;4634:23;4651:5;4634:23;:::i;:::-;4627:5;4624:34;4614:62;;4672:1;4669;4662:12;4614:62;4562:120;:::o;4688:137::-;4733:5;4771:6;4758:20;4749:29;;4787:32;4813:5;4787:32;:::i;:::-;4688:137;;;;:::o;4847:707::-;4942:5;4967:80;4983:63;5039:6;4983:63;:::i;:::-;4967:80;:::i;:::-;4958:89;;5067:5;5096:6;5089:5;5082:21;5130:4;5123:5;5119:16;5112:23;;5183:4;5175:6;5171:17;5163:6;5159:30;5212:3;5204:6;5201:15;5198:122;;;5231:79;;:::i;:::-;5198:122;5346:6;5329:219;5363:6;5358:3;5355:15;5329:219;;;5438:3;5467:36;5499:3;5487:10;5467:36;:::i;:::-;5462:3;5455:49;5533:4;5528:3;5524:14;5517:21;;5405:143;5389:4;5384:3;5380:14;5373:21;;5329:219;;;5333:21;4948:606;;4847:707;;;;;:::o;5576:368::-;5646:5;5695:3;5688:4;5680:6;5676:17;5672:27;5662:122;;5703:79;;:::i;:::-;5662:122;5820:6;5807:20;5845:93;5934:3;5926:6;5919:4;5911:6;5907:17;5845:93;:::i;:::-;5836:102;;5652:292;5576:368;;;;:::o;5950:682::-;6042:6;6050;6099:2;6087:9;6078:7;6074:23;6070:32;6067:119;;;6105:79;;:::i;:::-;6067:119;6225:1;6250:53;6295:7;6286:6;6275:9;6271:22;6250:53;:::i;:::-;6240:63;;6196:117;6380:2;6369:9;6365:18;6352:32;6411:18;6403:6;6400:30;6397:117;;;6433:79;;:::i;:::-;6397:117;6538:77;6607:7;6598:6;6587:9;6583:22;6538:77;:::i;:::-;6528:87;;6323:302;5950:682;;;;;:::o;6638:118::-;6725:24;6743:5;6725:24;:::i;:::-;6720:3;6713:37;6638:118;;:::o;6762:222::-;6855:4;6893:2;6882:9;6878:18;6870:26;;6906:71;6974:1;6963:9;6959:17;6950:6;6906:71;:::i;:::-;6762:222;;;;:::o;6990:619::-;7067:6;7075;7083;7132:2;7120:9;7111:7;7107:23;7103:32;7100:119;;;7138:79;;:::i;:::-;7100:119;7258:1;7283:53;7328:7;7319:6;7308:9;7304:22;7283:53;:::i;:::-;7273:63;;7229:117;7385:2;7411:53;7456:7;7447:6;7436:9;7432:22;7411:53;:::i;:::-;7401:63;;7356:118;7513:2;7539:53;7584:7;7575:6;7564:9;7560:22;7539:53;:::i;:::-;7529:63;;7484:118;6990:619;;;;;:::o;7615:180::-;7663:77;7660:1;7653:88;7760:4;7757:1;7750:15;7784:4;7781:1;7774:15;7801:90;7835:7;7878:5;7871:13;7864:21;7853:32;;7801:90;;;:::o;7897:116::-;7967:21;7982:5;7967:21;:::i;:::-;7960:5;7957:32;7947:60;;8003:1;8000;7993:12;7947:60;7897:116;:::o;8019:137::-;8073:5;8104:6;8098:13;8089:22;;8120:30;8144:5;8120:30;:::i;:::-;8019:137;;;;:::o;8162:345::-;8229:6;8278:2;8266:9;8257:7;8253:23;8249:32;8246:119;;;8284:79;;:::i;:::-;8246:119;8404:1;8429:61;8482:7;8473:6;8462:9;8458:22;8429:61;:::i;:::-;8419:71;;8375:125;8162:345;;;;:::o;8513:180::-;8561:77;8558:1;8551:88;8658:4;8655:1;8648:15;8682:4;8679:1;8672:15;8699:77;8736:7;8765:5;8754:16;;8699:77;;;:::o;8782:233::-;8821:3;8844:24;8862:5;8844:24;:::i;:::-;8835:33;;8890:66;8883:5;8880:77;8877:103;;8960:18;;:::i;:::-;8877:103;9007:1;9000:5;8996:13;8989:20;;8782:233;;;:::o;9021:113::-;9087:6;9121:5;9115:12;9105:22;;9021:113;;;:::o;9140:183::-;9238:11;9272:6;9267:3;9260:19;9312:4;9307:3;9303:14;9288:29;;9140:183;;;;:::o;9329:131::-;9395:4;9418:3;9410:11;;9448:4;9443:3;9439:14;9431:22;;9329:131;;;:::o;9466:105::-;9541:23;9558:5;9541:23;:::i;:::-;9536:3;9529:36;9466:105;;:::o;9577:175::-;9644:10;9665:44;9705:3;9697:6;9665:44;:::i;:::-;9741:4;9736:3;9732:14;9718:28;;9577:175;;;;:::o;9758:112::-;9827:4;9859;9854:3;9850:14;9842:22;;9758:112;;;:::o;9904:724::-;10021:3;10050:53;10097:5;10050:53;:::i;:::-;10119:85;10197:6;10192:3;10119:85;:::i;:::-;10112:92;;10228:55;10277:5;10228:55;:::i;:::-;10306:7;10337:1;10322:281;10347:6;10344:1;10341:13;10322:281;;;10423:6;10417:13;10450:61;10507:3;10492:13;10450:61;:::i;:::-;10443:68;;10534:59;10586:6;10534:59;:::i;:::-;10524:69;;10382:221;10369:1;10366;10362:9;10357:14;;10322:281;;;10326:14;10619:3;10612:10;;10026:602;;;9904:724;;;;:::o;10634:479::-;10803:4;10841:2;10830:9;10826:18;10818:26;;10854:71;10922:1;10911:9;10907:17;10898:6;10854:71;:::i;:::-;10972:9;10966:4;10962:20;10957:2;10946:9;10942:18;10935:48;11000:106;11101:4;11092:6;11000:106;:::i;:::-;10992:114;;10634:479;;;;;:::o;11119:194::-;11159:4;11179:20;11197:1;11179:20;:::i;:::-;11174:25;;11213:20;11231:1;11213:20;:::i;:::-;11208:25;;11257:1;11254;11250:9;11242:17;;11281:1;11275:4;11272:11;11269:37;;;11286:18;;:::i;:::-;11269:37;11119:194;;;;:::o;11319:180::-;11367:77;11364:1;11357:88;11464:4;11461:1;11454:15;11488:4;11485:1;11478:15","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n// TODO: Implement access control\\n\\nimport \\"./Ticket.sol\\";\\n\\ncontract TicketFactory {\\n\\n    mapping(address => address[]) private driverToTickets;\\n    mapping(address => address[]) private officerToTickets;\\n    address lastAddedTicket;\\n\\n    function createNewTicket(\\n        address driver,\\n        uint16[] memory penalty_clasues\\n        )\\n    external\\n    {\\n        Ticket ticket = new Ticket(\\n            driver,\\n            penalty_clasues\\n        );\\n\\n        driverToTickets[driver].push(address(ticket));\\n        officerToTickets[msg.sender].push(address(ticket));\\n\\n        lastAddedTicket = address(ticket);\\n    }\\n\\n    // Rip gas\\n    function deleteTicket(\\n        address driver,\\n        address officer,\\n        address ticket\\n    ) external {\\n        uint256 driverTicketLength = driverToTickets[driver].length;\\n        uint256 officerTicketLength = officerToTickets[officer].length;\\n\\n        for (uint256 i = 0; i < driverTicketLength; i++) {\\n            if (driverToTickets[driver][i] == ticket) {\\n                driverToTickets[driver][i] = driverToTickets[driver][driverTicketLength - 1];\\n                driverToTickets[driver].pop();\\n                break;\\n            }\\n        }\\n\\n        for (uint256 i = 0; i < officerTicketLength; i++) {\\n            if (officerToTickets[officer][i] == ticket) {\\n                officerToTickets[officer][i] = officerToTickets[officer][officerTicketLength - 1];\\n                officerToTickets[officer].pop();\\n                break;\\n            }\\n        }\\n    }\\n\\n    function getDriverTickets(address driver) external view returns(address[] memory) {\\n        return driverToTickets[driver];\\n    }\\n\\n    function getOfficerTickets(address officer) external view returns(address[] memory) {\\n        return officerToTickets[officer];\\n    }\\n\\n    function getLastAddedTicket() external view returns(address) {\\n        return lastAddedTicket;\\n    }\\n\\n    function getActiveTickets(address driver) external view returns(address[] memory) {\\n        address[] memory tickets = driverToTickets[driver];\\n        uint256 activeTicketsLength = 0;\\n\\n        for (uint256 i = 0; i < tickets.length; i++) {\\n            if (Ticket(tickets[i]).isTicketActive()) {\\n                activeTicketsLength++;\\n            }\\n        }\\n\\n        address[] memory activeTickets = new address[](activeTicketsLength);\\n        uint256 j = 0;\\n\\n        for (uint256 i = 0; i < tickets.length; i++) {\\n            if (Ticket(tickets[i]).isTicketActive()) {\\n                activeTickets[j] = tickets[i];\\n                j++;\\n            }\\n        }\\n\\n        return activeTickets;\\n    }\\n\\n    function getAllTickets(address driver) external view returns(address[] memory) {\\n        return driverToTickets[driver];\\n    }\\n\\n    function getAddress() external view returns(address) {\\n        return address(this);\\n    }\\n}\\n","sourcePath":"C:\\\\Users\\\\samin\\\\Documents\\\\Projects\\\\AWT\\\\TraffiChain\\\\contracts\\\\TicketFactory.sol","ast":{"absolutePath":"project:/contracts/TicketFactory.sol","exportedSymbols":{"AccessControl":[319],"Context":[414],"ERC165":[664],"IAccessControl":[392],"IERC165":[676],"Strings":[640],"Ticket":[2112],"TicketFactory":[2438],"Ticket__NoJudgeAssigned":[1641],"Ticket__inactive":[1639]},"id":2439,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2114,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"project:/contracts/Ticket.sol","file":"./Ticket.sol","id":2115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2439,"sourceUnit":2113,"src":"92:22:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"TicketFactory","contractDependencies":[2112],"contractKind":"contract","fullyImplemented":true,"id":2438,"linearizedBaseContracts":[2438],"name":"TicketFactory","nameLocation":"125:13:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2120,"mutability":"mutable","name":"driverToTickets","nameLocation":"184:15:14","nodeType":"VariableDeclaration","scope":2438,"src":"146:53:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":2119,"keyType":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"154:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"146:29:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueType":{"baseType":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"165:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2118,"nodeType":"ArrayTypeName","src":"165:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"private"},{"constant":false,"id":2125,"mutability":"mutable","name":"officerToTickets","nameLocation":"243:16:14","nodeType":"VariableDeclaration","scope":2438,"src":"205:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":2124,"keyType":{"id":2121,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"205:29:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueType":{"baseType":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"224:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2123,"nodeType":"ArrayTypeName","src":"224:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"private"},{"constant":false,"id":2127,"mutability":"mutable","name":"lastAddedTicket","nameLocation":"273:15:14","nodeType":"VariableDeclaration","scope":2438,"src":"265:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2126,"name":"address","nodeType":"ElementaryTypeName","src":"265:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"body":{"id":2173,"nodeType":"Block","src":"412:262:14","statements":[{"assignments":[2137],"declarations":[{"constant":false,"id":2137,"mutability":"mutable","name":"ticket","nameLocation":"429:6:14","nodeType":"VariableDeclaration","scope":2173,"src":"422:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"},"typeName":{"id":2136,"nodeType":"UserDefinedTypeName","pathNode":{"id":2135,"name":"Ticket","nameLocations":["422:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2112,"src":"422:6:14"},"referencedDeclaration":2112,"src":"422:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}},"visibility":"internal"}],"id":2144,"initialValue":{"arguments":[{"id":2141,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"462:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2142,"name":"penalty_clasues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"482:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"}],"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"438:10:14","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_array$_t_uint16_$dyn_memory_ptr_$returns$_t_contract$_Ticket_$2112_$","typeString":"function (address,uint16[] memory) returns (contract Ticket)"},"typeName":{"id":2139,"nodeType":"UserDefinedTypeName","pathNode":{"id":2138,"name":"Ticket","nameLocations":["442:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2112,"src":"442:6:14"},"referencedDeclaration":2112,"src":"442:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"438:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}},"nodeType":"VariableDeclarationStatement","src":"422:85:14"},{"expression":{"arguments":[{"arguments":[{"id":2151,"name":"ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"555:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}],"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"547:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2149,"name":"address","nodeType":"ElementaryTypeName","src":"547:7:14","typeDescriptions":{}}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"547:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2145,"name":"driverToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"518:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2147,"indexExpression":{"id":2146,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"534:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"518:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"542:4:14","memberName":"push","nodeType":"MemberAccess","src":"518:28:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"518:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2154,"nodeType":"ExpressionStatement","src":"518:45:14"},{"expression":{"arguments":[{"arguments":[{"id":2162,"name":"ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"615:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}],"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"607:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"607:7:14","typeDescriptions":{}}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"607:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2155,"name":"officerToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"573:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2158,"indexExpression":{"expression":{"id":2156,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"590:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"594:6:14","memberName":"sender","nodeType":"MemberAccess","src":"590:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"573:28:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"602:4:14","memberName":"push","nodeType":"MemberAccess","src":"573:33:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"573:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2165,"nodeType":"ExpressionStatement","src":"573:50:14"},{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2166,"name":"lastAddedTicket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"634:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2169,"name":"ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"660:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}],"id":2168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"652:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:14","typeDescriptions":{}}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"652:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"634:33:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2172,"nodeType":"ExpressionStatement","src":"634:33:14"}]},"functionSelector":"168e7919","id":2174,"implemented":true,"kind":"function","modifiers":[],"name":"createNewTicket","nameLocation":"304:15:14","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"driver","nameLocation":"337:6:14","nodeType":"VariableDeclaration","scope":2174,"src":"329:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"329:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"penalty_clasues","nameLocation":"369:15:14","nodeType":"VariableDeclaration","scope":2174,"src":"353:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[]"},"typeName":{"baseType":{"id":2130,"name":"uint16","nodeType":"ElementaryTypeName","src":"353:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":2131,"nodeType":"ArrayTypeName","src":"353:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"internal"}],"src":"319:75:14"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[],"src":"412:0:14"},"scope":2438,"src":"295:379:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2281,"nodeType":"Block","src":"805:766:14","statements":[{"assignments":[2184],"declarations":[{"constant":false,"id":2184,"mutability":"mutable","name":"driverTicketLength","nameLocation":"823:18:14","nodeType":"VariableDeclaration","scope":2281,"src":"815:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2189,"initialValue":{"expression":{"baseExpression":{"id":2185,"name":"driverToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"844:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2187,"indexExpression":{"id":2186,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"860:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"844:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"868:6:14","memberName":"length","nodeType":"MemberAccess","src":"844:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"815:59:14"},{"assignments":[2191],"declarations":[{"constant":false,"id":2191,"mutability":"mutable","name":"officerTicketLength","nameLocation":"892:19:14","nodeType":"VariableDeclaration","scope":2281,"src":"884:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2196,"initialValue":{"expression":{"baseExpression":{"id":2192,"name":"officerToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"914:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2194,"indexExpression":{"id":2193,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"931:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"914:25:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:6:14","memberName":"length","nodeType":"MemberAccess","src":"914:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"884:62:14"},{"body":{"id":2237,"nodeType":"Block","src":"1006:245:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2207,"name":"driverToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1024:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2209,"indexExpression":{"id":2208,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"1040:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1024:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2211,"indexExpression":{"id":2210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1048:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1024:26:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2212,"name":"ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"1054:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1024:36:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2236,"nodeType":"IfStatement","src":"1020:221:14","trueBody":{"id":2235,"nodeType":"Block","src":"1062:179:14","statements":[{"expression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2214,"name":"driverToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1080:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2217,"indexExpression":{"id":2215,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"1096:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1080:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2218,"indexExpression":{"id":2216,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1104:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1080:26:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":2219,"name":"driverToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1109:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2221,"indexExpression":{"id":2220,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"1125:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1109:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2225,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2222,"name":"driverTicketLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"1133:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1154:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1133:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1109:47:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1080:76:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2227,"nodeType":"ExpressionStatement","src":"1080:76:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2228,"name":"driverToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1174:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2230,"indexExpression":{"id":2229,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"1190:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1174:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1198:3:14","memberName":"pop","nodeType":"MemberAccess","src":"1174:27:14","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1174:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2233,"nodeType":"ExpressionStatement","src":"1174:29:14"},{"id":2234,"nodeType":"Break","src":"1221:5:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2202,"name":"driverTicketLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"981:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"977:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2238,"initializationExpression":{"assignments":[2198],"declarations":[{"constant":false,"id":2198,"mutability":"mutable","name":"i","nameLocation":"970:1:14","nodeType":"VariableDeclaration","scope":2238,"src":"962:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"962:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2200,"initialValue":{"hexValue":"30","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"974:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"962:13:14"},"loopExpression":{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1001:3:14","subExpression":{"id":2204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1001:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2206,"nodeType":"ExpressionStatement","src":"1001:3:14"},"nodeType":"ForStatement","src":"957:294:14"},{"body":{"id":2279,"nodeType":"Block","src":"1311:254:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2249,"name":"officerToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1329:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2251,"indexExpression":{"id":2250,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"1346:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1329:25:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2253,"indexExpression":{"id":2252,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"1355:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1329:28:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2254,"name":"ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"1361:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1329:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2278,"nodeType":"IfStatement","src":"1325:230:14","trueBody":{"id":2277,"nodeType":"Block","src":"1369:186:14","statements":[{"expression":{"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2256,"name":"officerToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1387:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2259,"indexExpression":{"id":2257,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"1404:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1387:25:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2260,"indexExpression":{"id":2258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"1413:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1387:28:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":2261,"name":"officerToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1418:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2263,"indexExpression":{"id":2262,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"1435:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1418:25:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2267,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"officerTicketLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"1444:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1466:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1444:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1418:50:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1387:81:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2269,"nodeType":"ExpressionStatement","src":"1387:81:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2270,"name":"officerToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1486:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2272,"indexExpression":{"id":2271,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"1503:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1486:25:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:3:14","memberName":"pop","nodeType":"MemberAccess","src":"1486:29:14","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2275,"nodeType":"ExpressionStatement","src":"1486:31:14"},{"id":2276,"nodeType":"Break","src":"1535:5:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"1281:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2244,"name":"officerTicketLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"1285:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1281:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2280,"initializationExpression":{"assignments":[2240],"declarations":[{"constant":false,"id":2240,"mutability":"mutable","name":"i","nameLocation":"1274:1:14","nodeType":"VariableDeclaration","scope":2280,"src":"1266:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1266:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2242,"initialValue":{"hexValue":"30","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1278:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1266:13:14"},"loopExpression":{"expression":{"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1306:3:14","subExpression":{"id":2246,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"1306:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2248,"nodeType":"ExpressionStatement","src":"1306:3:14"},"nodeType":"ForStatement","src":"1261:304:14"}]},"functionSelector":"f1b7af24","id":2282,"implemented":true,"kind":"function","modifiers":[],"name":"deleteTicket","nameLocation":"704:12:14","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"driver","nameLocation":"734:6:14","nodeType":"VariableDeclaration","scope":2282,"src":"726:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"726:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"officer","nameLocation":"758:7:14","nodeType":"VariableDeclaration","scope":2282,"src":"750:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"750:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"ticket","nameLocation":"783:6:14","nodeType":"VariableDeclaration","scope":2282,"src":"775:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"716:79:14"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[],"src":"805:0:14"},"scope":2438,"src":"695:876:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2294,"nodeType":"Block","src":"1659:47:14","statements":[{"expression":{"baseExpression":{"id":2290,"name":"driverToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1676:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2292,"indexExpression":{"id":2291,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"1692:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1676:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":2289,"id":2293,"nodeType":"Return","src":"1669:30:14"}]},"functionSelector":"e176f628","id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"getDriverTickets","nameLocation":"1586:16:14","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"driver","nameLocation":"1611:6:14","nodeType":"VariableDeclaration","scope":2295,"src":"1603:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"1603:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1602:16:14"},"returnParameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2295,"src":"1641:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"1641:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2287,"nodeType":"ArrayTypeName","src":"1641:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1640:18:14"},"scope":2438,"src":"1577:129:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2307,"nodeType":"Block","src":"1796:49:14","statements":[{"expression":{"baseExpression":{"id":2303,"name":"officerToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1813:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2305,"indexExpression":{"id":2304,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"1830:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1813:25:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":2302,"id":2306,"nodeType":"Return","src":"1806:32:14"}]},"functionSelector":"85167c57","id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"getOfficerTickets","nameLocation":"1721:17:14","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"officer","nameLocation":"1747:7:14","nodeType":"VariableDeclaration","scope":2308,"src":"1739:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"1739:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1738:17:14"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"1778:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"1778:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2300,"nodeType":"ArrayTypeName","src":"1778:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1777:18:14"},"scope":2438,"src":"1712:133:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2315,"nodeType":"Block","src":"1912:39:14","statements":[{"expression":{"id":2313,"name":"lastAddedTicket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"1929:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2312,"id":2314,"nodeType":"Return","src":"1922:22:14"}]},"functionSelector":"a9fd6149","id":2316,"implemented":true,"kind":"function","modifiers":[],"name":"getLastAddedTicket","nameLocation":"1860:18:14","nodeType":"FunctionDefinition","parameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"1878:2:14"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2316,"src":"1903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"1903:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1902:9:14"},"scope":2438,"src":"1851:100:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2412,"nodeType":"Block","src":"2039:617:14","statements":[{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"tickets","nameLocation":"2066:7:14","nodeType":"VariableDeclaration","scope":2412,"src":"2049:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2326,"name":"address","nodeType":"ElementaryTypeName","src":"2049:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2327,"nodeType":"ArrayTypeName","src":"2049:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2332,"initialValue":{"baseExpression":{"id":2329,"name":"driverToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"2076:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2331,"indexExpression":{"id":2330,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2092:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2076:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2049:50:14"},{"assignments":[2334],"declarations":[{"constant":false,"id":2334,"mutability":"mutable","name":"activeTicketsLength","nameLocation":"2117:19:14","nodeType":"VariableDeclaration","scope":2412,"src":"2109:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2336,"initialValue":{"hexValue":"30","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2109:31:14"},{"body":{"id":2360,"nodeType":"Block","src":"2196:119:14","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":2349,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2221:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2351,"indexExpression":{"id":2350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"2229:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2221:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2348,"name":"Ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2214:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ticket_$2112_$","typeString":"type(contract Ticket)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2214:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2233:14:14","memberName":"isTicketActive","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"2214:33:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2214:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2359,"nodeType":"IfStatement","src":"2210:95:14","trueBody":{"id":2358,"nodeType":"Block","src":"2251:54:14","statements":[{"expression":{"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2269:21:14","subExpression":{"id":2355,"name":"activeTicketsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"2269:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2357,"nodeType":"ExpressionStatement","src":"2269:21:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2341,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"2171:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2342,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2175:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2183:6:14","memberName":"length","nodeType":"MemberAccess","src":"2175:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2171:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2361,"initializationExpression":{"assignments":[2338],"declarations":[{"constant":false,"id":2338,"mutability":"mutable","name":"i","nameLocation":"2164:1:14","nodeType":"VariableDeclaration","scope":2361,"src":"2156:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2340,"initialValue":{"hexValue":"30","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2168:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2156:13:14"},"loopExpression":{"expression":{"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2191:3:14","subExpression":{"id":2345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"2191:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2347,"nodeType":"ExpressionStatement","src":"2191:3:14"},"nodeType":"ForStatement","src":"2151:164:14"},{"assignments":[2366],"declarations":[{"constant":false,"id":2366,"mutability":"mutable","name":"activeTickets","nameLocation":"2342:13:14","nodeType":"VariableDeclaration","scope":2412,"src":"2325:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2364,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2365,"nodeType":"ArrayTypeName","src":"2325:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2372,"initialValue":{"arguments":[{"id":2370,"name":"activeTicketsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"2372:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2358:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2367,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2368,"nodeType":"ArrayTypeName","src":"2362:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2358:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2325:67:14"},{"assignments":[2374],"declarations":[{"constant":false,"id":2374,"mutability":"mutable","name":"j","nameLocation":"2410:1:14","nodeType":"VariableDeclaration","scope":2412,"src":"2402:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2402:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2376,"initialValue":{"hexValue":"30","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2414:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2402:13:14"},{"body":{"id":2408,"nodeType":"Block","src":"2471:148:14","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":2389,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2496:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2391,"indexExpression":{"id":2390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2504:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2496:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2388,"name":"Ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ticket_$2112_$","typeString":"type(contract Ticket)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Ticket_$2112","typeString":"contract Ticket"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2508:14:14","memberName":"isTicketActive","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"2489:33:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2407,"nodeType":"IfStatement","src":"2485:124:14","trueBody":{"id":2406,"nodeType":"Block","src":"2526:83:14","statements":[{"expression":{"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2395,"name":"activeTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"2544:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2397,"indexExpression":{"id":2396,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"2558:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2544:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2398,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2563:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2400,"indexExpression":{"id":2399,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2571:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2563:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2544:29:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2402,"nodeType":"ExpressionStatement","src":"2544:29:14"},{"expression":{"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2591:3:14","subExpression":{"id":2403,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"2591:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2405,"nodeType":"ExpressionStatement","src":"2591:3:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2446:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2382,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2450:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2458:6:14","memberName":"length","nodeType":"MemberAccess","src":"2450:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2446:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2409,"initializationExpression":{"assignments":[2378],"declarations":[{"constant":false,"id":2378,"mutability":"mutable","name":"i","nameLocation":"2439:1:14","nodeType":"VariableDeclaration","scope":2409,"src":"2431:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2431:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2380,"initialValue":{"hexValue":"30","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2431:13:14"},"loopExpression":{"expression":{"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2466:3:14","subExpression":{"id":2385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2466:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2387,"nodeType":"ExpressionStatement","src":"2466:3:14"},"nodeType":"ForStatement","src":"2426:193:14"},{"expression":{"id":2410,"name":"activeTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"2636:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2323,"id":2411,"nodeType":"Return","src":"2629:20:14"}]},"functionSelector":"14fa96c8","id":2413,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveTickets","nameLocation":"1966:16:14","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"driver","nameLocation":"1991:6:14","nodeType":"VariableDeclaration","scope":2413,"src":"1983:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2317,"name":"address","nodeType":"ElementaryTypeName","src":"1983:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1982:16:14"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2413,"src":"2021:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2320,"name":"address","nodeType":"ElementaryTypeName","src":"2021:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2321,"nodeType":"ArrayTypeName","src":"2021:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2020:18:14"},"scope":2438,"src":"1957:699:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2425,"nodeType":"Block","src":"2741:47:14","statements":[{"expression":{"baseExpression":{"id":2421,"name":"driverToTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"2758:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2423,"indexExpression":{"id":2422,"name":"driver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"2774:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2758:23:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":2420,"id":2424,"nodeType":"Return","src":"2751:30:14"}]},"functionSelector":"91d18b81","id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"getAllTickets","nameLocation":"2671:13:14","nodeType":"FunctionDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"driver","nameLocation":"2693:6:14","nodeType":"VariableDeclaration","scope":2426,"src":"2685:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2684:16:14"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"2723:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"2723:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2418,"nodeType":"ArrayTypeName","src":"2723:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2722:18:14"},"scope":2438,"src":"2662:126:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2436,"nodeType":"Block","src":"2847:37:14","statements":[{"expression":{"arguments":[{"id":2433,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2872:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_TicketFactory_$2438","typeString":"contract TicketFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TicketFactory_$2438","typeString":"contract TicketFactory"}],"id":2432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2431,"name":"address","nodeType":"ElementaryTypeName","src":"2864:7:14","typeDescriptions":{}}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2430,"id":2435,"nodeType":"Return","src":"2857:20:14"}]},"functionSelector":"38cc4831","id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"2803:10:14","nodeType":"FunctionDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[],"src":"2813:2:14"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2437,"src":"2838:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2428,"name":"address","nodeType":"ElementaryTypeName","src":"2838:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2837:9:14"},"scope":2438,"src":"2794:90:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2439,"src":"116:2770:14","usedErrors":[]}],"src":"32:2855:14"},"compiler":{"name":"solc","version":"0.8.17+commit.8df45f5f.Emscripten.clang"},"networks":{"5777":{"events":{},"links":{},"address":"0xE1B55E6a14fa19fb5419bFdca8B38b979F378790","transactionHash":"0xd07e4dc03caa922932cc8152b12c46914084319cb127edf8ee5c87e3d95e4547"}},"schemaVersion":"3.4.10","updatedAt":"2022-11-28T05:49:45.705Z","networkType":"ethereum","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}}');

/***/ }),

/***/ "./build/contracts/VehicleFactory.json":
/*!*********************************************!*\
  !*** ./build/contracts/VehicleFactory.json ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"contractName":"VehicleFactory","abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"uint256","name":"chassisNo_","type":"uint256"},{"internalType":"enum VehicleFactory.Class","name":"class_","type":"uint8"},{"internalType":"enum VehicleFactory.Type","name":"type_","type":"uint8"},{"internalType":"uint256","name":"licenseNo_","type":"uint256"}],"name":"createNewVehicle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"licenseNo","type":"uint256"},{"internalType":"enum VehicleFactory.Status","name":"status","type":"uint8"}],"name":"changeStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"licenseNo","type":"uint256"}],"name":"getVehicleByLicense","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"chassisNo","type":"uint256"},{"internalType":"enum VehicleFactory.Status","name":"vehicleStatus","type":"uint8"},{"internalType":"enum VehicleFactory.Class","name":"vehicleClass","type":"uint8"},{"internalType":"enum VehicleFactory.Type","name":"vehicleType","type":"uint8"},{"internalType":"uint256","name":"licenseNo","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"internalType":"struct VehicleFactory.Vehicle","name":"","type":"tuple"}],"stateMutability":"view","type":"function","constant":true}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.17+commit.8df45f5f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"licenseNo\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"enum VehicleFactory.Status\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"changeStatus\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"name_\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"chassisNo_\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"enum VehicleFactory.Class\\",\\"name\\":\\"class_\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"enum VehicleFactory.Type\\",\\"name\\":\\"type_\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"licenseNo_\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createNewVehicle\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"licenseNo\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getVehicleByLicense\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"name\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"chassisNo\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"enum VehicleFactory.Status\\",\\"name\\":\\"vehicleStatus\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"enum VehicleFactory.Class\\",\\"name\\":\\"vehicleClass\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"enum VehicleFactory.Type\\",\\"name\\":\\"vehicleType\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"licenseNo\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"internalType\\":\\"struct VehicleFactory.Vehicle\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"project:/contracts/VehicleFactory.sol\\":\\"VehicleFactory\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"project:/contracts/VehicleFactory.sol\\":{\\"keccak256\\":\\"0xa65981aece43df3e1841464256f1507acdd3edb73996640aa9796f5e27dec347\\",\\"license\\":\\"MIT\\",\\"urls\\":[\\"bzz-raw://072605996f5348516e7ee579edd7bf5f038a306e2f80a27518be81f5caa0ea37\\",\\"dweb:/ipfs/QmcoBosNqkWi1gNeEb5AgYsq9F54wJu8thteXweTUYA4H1\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b50610f84806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634538f4c814610046578063ad5a12ea14610062578063c5a8a2ab14610092575b600080fd5b610060600480360381019061005b91906108b3565b6100ae565b005b61007c6004803603810190610077919061094a565b610434565b6040516100899190610be9565b60405180910390f35b6100ac60048036038101906100a79190610c30565b61060e565b005b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e0016040528087815260200186815260200160038081111561011657610115610a05565b5b815260200185600581111561012e5761012d610a05565b5b815260200184600281111561014657610145610a05565b5b81526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000190816101a99190610e7c565b506020820151816001015560408201518160020160006101000a81548160ff021916908360038111156101df576101de610a05565b5b021790555060608201518160020160016101000a81548160ff0219169083600581111561020f5761020e610a05565b5b021790555060808201518160020160026101000a81548160ff0219169083600281111561023f5761023e610a05565b5b021790555060a0820151816003015560c08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506040518060e001604052808681526020018581526020016003808111156102c1576102c0610a05565b5b81526020018460058111156102d9576102d8610a05565b5b81526020018360028111156102f1576102f0610a05565b5b81526020018281526020013373ffffffffffffffffffffffffffffffffffffffff1681525060016000838152602001908152602001600020600082015181600001908161033e9190610e7c565b506020820151816001015560408201518160020160006101000a81548160ff0219169083600381111561037457610373610a05565b5b021790555060608201518160020160016101000a81548160ff021916908360058111156103a4576103a3610a05565b5b021790555060808201518160020160026101000a81548160ff021916908360028111156103d4576103d3610a05565b5b021790555060a0820151816003015560c08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505050565b61043c610650565b600160008381526020019081526020016000206040518060e001604052908160008201805461046a90610c9f565b80601f016020809104026020016040519081016040528092919081815260200182805461049690610c9f565b80156104e35780601f106104b8576101008083540402835291602001916104e3565b820191906000526020600020905b8154815290600101906020018083116104c657829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff16600381111561051b5761051a610a05565b5b600381111561052d5761052c610a05565b5b81526020016002820160019054906101000a900460ff16600581111561055657610555610a05565b5b600581111561056857610567610a05565b5b81526020016002820160029054906101000a900460ff16600281111561059157610590610a05565b5b60028111156105a3576105a2610a05565b5b8152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b806001600084815260200190815260200160002060020160006101000a81548160ff0219169083600381111561064757610646610a05565b5b02179055505050565b6040518060e0016040528060608152602001600081526020016000600381111561067d5761067c610a05565b5b81526020016000600581111561069657610695610a05565b5b8152602001600060028111156106af576106ae610a05565b5b815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610740826106f7565b810181811067ffffffffffffffff8211171561075f5761075e610708565b5b80604052505050565b60006107726106d9565b905061077e8282610737565b919050565b600067ffffffffffffffff82111561079e5761079d610708565b5b6107a7826106f7565b9050602081019050919050565b82818337600083830152505050565b60006107d66107d184610783565b610768565b9050828152602081018484840111156107f2576107f16106f2565b5b6107fd8482856107b4565b509392505050565b600082601f83011261081a576108196106ed565b5b813561082a8482602086016107c3565b91505092915050565b6000819050919050565b61084681610833565b811461085157600080fd5b50565b6000813590506108638161083d565b92915050565b6006811061087657600080fd5b50565b60008135905061088881610869565b92915050565b6003811061089b57600080fd5b50565b6000813590506108ad8161088e565b92915050565b600080600080600060a086880312156108cf576108ce6106e3565b5b600086013567ffffffffffffffff8111156108ed576108ec6106e8565b5b6108f988828901610805565b955050602061090a88828901610854565b945050604061091b88828901610879565b935050606061092c8882890161089e565b925050608061093d88828901610854565b9150509295509295909350565b6000602082840312156109605761095f6106e3565b5b600061096e84828501610854565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109b1578082015181840152602081019050610996565b60008484015250505050565b60006109c882610977565b6109d28185610982565b93506109e2818560208601610993565b6109eb816106f7565b840191505092915050565b6109ff81610833565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610a4557610a44610a05565b5b50565b6000819050610a5682610a34565b919050565b6000610a6682610a48565b9050919050565b610a7681610a5b565b82525050565b60068110610a8d57610a8c610a05565b5b50565b6000819050610a9e82610a7c565b919050565b6000610aae82610a90565b9050919050565b610abe81610aa3565b82525050565b60038110610ad557610ad4610a05565b5b50565b6000819050610ae682610ac4565b919050565b6000610af682610ad8565b9050919050565b610b0681610aeb565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b3782610b0c565b9050919050565b610b4781610b2c565b82525050565b600060e0830160008301518482036000860152610b6a82826109bd565b9150506020830151610b7f60208601826109f6565b506040830151610b926040860182610a6d565b506060830151610ba56060860182610ab5565b506080830151610bb86080860182610afd565b5060a0830151610bcb60a08601826109f6565b5060c0830151610bde60c0860182610b3e565b508091505092915050565b60006020820190508181036000830152610c038184610b4d565b905092915050565b60048110610c1857600080fd5b50565b600081359050610c2a81610c0b565b92915050565b60008060408385031215610c4757610c466106e3565b5b6000610c5585828601610854565b9250506020610c6685828601610c1b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cb757607f821691505b602082108103610cca57610cc9610c70565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610d327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610cf5565b610d3c8683610cf5565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610d79610d74610d6f84610833565b610d54565b610833565b9050919050565b6000819050919050565b610d9383610d5e565b610da7610d9f82610d80565b848454610d02565b825550505050565b600090565b610dbc610daf565b610dc7818484610d8a565b505050565b5b81811015610deb57610de0600082610db4565b600181019050610dcd565b5050565b601f821115610e3057610e0181610cd0565b610e0a84610ce5565b81016020851015610e19578190505b610e2d610e2585610ce5565b830182610dcc565b50505b505050565b600082821c905092915050565b6000610e5360001984600802610e35565b1980831691505092915050565b6000610e6c8383610e42565b9150826002028217905092915050565b610e8582610977565b67ffffffffffffffff811115610e9e57610e9d610708565b5b610ea88254610c9f565b610eb3828285610def565b600060209050601f831160018114610ee65760008415610ed4578287015190505b610ede8582610e60565b865550610f46565b601f198416610ef486610cd0565b60005b82811015610f1c57848901518255600182019150602085019450602081019050610ef7565b86831015610f395784890151610f35601f891682610e42565b8355505b6001600288020188555050505b50505050505056fea26469706673582212200c600414dce01a6e0967ca2fc731ba57638a9994f4d32c81e994f57b6844b0de64736f6c63430008110033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100415760003560e01c80634538f4c814610046578063ad5a12ea14610062578063c5a8a2ab14610092575b600080fd5b610060600480360381019061005b91906108b3565b6100ae565b005b61007c6004803603810190610077919061094a565b610434565b6040516100899190610be9565b60405180910390f35b6100ac60048036038101906100a79190610c30565b61060e565b005b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e0016040528087815260200186815260200160038081111561011657610115610a05565b5b815260200185600581111561012e5761012d610a05565b5b815260200184600281111561014657610145610a05565b5b81526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000190816101a99190610e7c565b506020820151816001015560408201518160020160006101000a81548160ff021916908360038111156101df576101de610a05565b5b021790555060608201518160020160016101000a81548160ff0219169083600581111561020f5761020e610a05565b5b021790555060808201518160020160026101000a81548160ff0219169083600281111561023f5761023e610a05565b5b021790555060a0820151816003015560c08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506040518060e001604052808681526020018581526020016003808111156102c1576102c0610a05565b5b81526020018460058111156102d9576102d8610a05565b5b81526020018360028111156102f1576102f0610a05565b5b81526020018281526020013373ffffffffffffffffffffffffffffffffffffffff1681525060016000838152602001908152602001600020600082015181600001908161033e9190610e7c565b506020820151816001015560408201518160020160006101000a81548160ff0219169083600381111561037457610373610a05565b5b021790555060608201518160020160016101000a81548160ff021916908360058111156103a4576103a3610a05565b5b021790555060808201518160020160026101000a81548160ff021916908360028111156103d4576103d3610a05565b5b021790555060a0820151816003015560c08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505050565b61043c610650565b600160008381526020019081526020016000206040518060e001604052908160008201805461046a90610c9f565b80601f016020809104026020016040519081016040528092919081815260200182805461049690610c9f565b80156104e35780601f106104b8576101008083540402835291602001916104e3565b820191906000526020600020905b8154815290600101906020018083116104c657829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff16600381111561051b5761051a610a05565b5b600381111561052d5761052c610a05565b5b81526020016002820160019054906101000a900460ff16600581111561055657610555610a05565b5b600581111561056857610567610a05565b5b81526020016002820160029054906101000a900460ff16600281111561059157610590610a05565b5b60028111156105a3576105a2610a05565b5b8152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b806001600084815260200190815260200160002060020160006101000a81548160ff0219169083600381111561064757610646610a05565b5b02179055505050565b6040518060e0016040528060608152602001600081526020016000600381111561067d5761067c610a05565b5b81526020016000600581111561069657610695610a05565b5b8152602001600060028111156106af576106ae610a05565b5b815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610740826106f7565b810181811067ffffffffffffffff8211171561075f5761075e610708565b5b80604052505050565b60006107726106d9565b905061077e8282610737565b919050565b600067ffffffffffffffff82111561079e5761079d610708565b5b6107a7826106f7565b9050602081019050919050565b82818337600083830152505050565b60006107d66107d184610783565b610768565b9050828152602081018484840111156107f2576107f16106f2565b5b6107fd8482856107b4565b509392505050565b600082601f83011261081a576108196106ed565b5b813561082a8482602086016107c3565b91505092915050565b6000819050919050565b61084681610833565b811461085157600080fd5b50565b6000813590506108638161083d565b92915050565b6006811061087657600080fd5b50565b60008135905061088881610869565b92915050565b6003811061089b57600080fd5b50565b6000813590506108ad8161088e565b92915050565b600080600080600060a086880312156108cf576108ce6106e3565b5b600086013567ffffffffffffffff8111156108ed576108ec6106e8565b5b6108f988828901610805565b955050602061090a88828901610854565b945050604061091b88828901610879565b935050606061092c8882890161089e565b925050608061093d88828901610854565b9150509295509295909350565b6000602082840312156109605761095f6106e3565b5b600061096e84828501610854565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109b1578082015181840152602081019050610996565b60008484015250505050565b60006109c882610977565b6109d28185610982565b93506109e2818560208601610993565b6109eb816106f7565b840191505092915050565b6109ff81610833565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610a4557610a44610a05565b5b50565b6000819050610a5682610a34565b919050565b6000610a6682610a48565b9050919050565b610a7681610a5b565b82525050565b60068110610a8d57610a8c610a05565b5b50565b6000819050610a9e82610a7c565b919050565b6000610aae82610a90565b9050919050565b610abe81610aa3565b82525050565b60038110610ad557610ad4610a05565b5b50565b6000819050610ae682610ac4565b919050565b6000610af682610ad8565b9050919050565b610b0681610aeb565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b3782610b0c565b9050919050565b610b4781610b2c565b82525050565b600060e0830160008301518482036000860152610b6a82826109bd565b9150506020830151610b7f60208601826109f6565b506040830151610b926040860182610a6d565b506060830151610ba56060860182610ab5565b506080830151610bb86080860182610afd565b5060a0830151610bcb60a08601826109f6565b5060c0830151610bde60c0860182610b3e565b508091505092915050565b60006020820190508181036000830152610c038184610b4d565b905092915050565b60048110610c1857600080fd5b50565b600081359050610c2a81610c0b565b92915050565b60008060408385031215610c4757610c466106e3565b5b6000610c5585828601610854565b9250506020610c6685828601610c1b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cb757607f821691505b602082108103610cca57610cc9610c70565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610d327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610cf5565b610d3c8683610cf5565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610d79610d74610d6f84610833565b610d54565b610833565b9050919050565b6000819050919050565b610d9383610d5e565b610da7610d9f82610d80565b848454610d02565b825550505050565b600090565b610dbc610daf565b610dc7818484610d8a565b505050565b5b81811015610deb57610de0600082610db4565b600181019050610dcd565b5050565b601f821115610e3057610e0181610cd0565b610e0a84610ce5565b81016020851015610e19578190505b610e2d610e2585610ce5565b830182610dcc565b50505b505050565b600082821c905092915050565b6000610e5360001984600802610e35565b1980831691505092915050565b6000610e6c8383610e42565b9150826002028217905092915050565b610e8582610977565b67ffffffffffffffff811115610e9e57610e9d610708565b5b610ea88254610c9f565b610eb3828285610def565b600060209050601f831160018114610ee65760008415610ed4578287015190505b610ede8582610e60565b865550610f46565b601f198416610ef486610cd0565b60005b82811015610f1c57848901518255600182019150602085019450602081019050610ef7565b86831015610f395784890151610f35601f891682610e42565b8355505b6001600288020188555050505b50505050505056fea26469706673582212200c600414dce01a6e0967ca2fc731ba57638a9994f4d32c81e994f57b6844b0de64736f6c63430008110033","immutableReferences":{},"generatedSources":[],"deployedGeneratedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15708:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"423:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:12:17"},"nodeType":"YulExpressionStatement","src":"433:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:17"},{"body":{"nodeType":"YulBlock","src":"546:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:17"},"nodeType":"YulFunctionCall","src":"556:12:17"},"nodeType":"YulExpressionStatement","src":"556:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:17"},{"body":{"nodeType":"YulBlock","src":"628:54:17","statements":[{"nodeType":"YulAssignment","src":"638:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:17"},"nodeType":"YulFunctionCall","src":"652:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:17"},"nodeType":"YulFunctionCall","src":"648:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:17","type":""}],"src":"580:102:17"},{"body":{"nodeType":"YulBlock","src":"716:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:17"},"nodeType":"YulFunctionCall","src":"726:88:17"},"nodeType":"YulExpressionStatement","src":"726:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:17"},"nodeType":"YulFunctionCall","src":"823:15:17"},"nodeType":"YulExpressionStatement","src":"823:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:17"},"nodeType":"YulFunctionCall","src":"847:15:17"},"nodeType":"YulExpressionStatement","src":"847:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:17"},{"body":{"nodeType":"YulBlock","src":"917:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:17"},"nodeType":"YulFunctionCall","src":"957:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:17"},"nodeType":"YulFunctionCall","src":"945:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:17"},"nodeType":"YulFunctionCall","src":"1098:18:17"},"nodeType":"YulExpressionStatement","src":"1098:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:17"},"nodeType":"YulFunctionCall","src":"1036:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:17"},"nodeType":"YulFunctionCall","src":"1072:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:17"},"nodeType":"YulFunctionCall","src":"1033:62:17"},"nodeType":"YulIf","src":"1030:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:17"},"nodeType":"YulFunctionCall","src":"1127:22:17"},"nodeType":"YulExpressionStatement","src":"1127:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:17","type":""}],"src":"874:281:17"},{"body":{"nodeType":"YulBlock","src":"1202:88:17","statements":[{"nodeType":"YulAssignment","src":"1212:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:17"},"nodeType":"YulFunctionCall","src":"1222:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:17"},"nodeType":"YulFunctionCall","src":"1251:33:17"},"nodeType":"YulExpressionStatement","src":"1251:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:17","type":""}],"src":"1161:129:17"},{"body":{"nodeType":"YulBlock","src":"1363:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:17"},"nodeType":"YulFunctionCall","src":"1470:18:17"},"nodeType":"YulExpressionStatement","src":"1470:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:17"},"nodeType":"YulFunctionCall","src":"1437:30:17"},"nodeType":"YulIf","src":"1434:56:17"},{"nodeType":"YulAssignment","src":"1500:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:17"},"nodeType":"YulFunctionCall","src":"1508:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:17"}]},{"nodeType":"YulAssignment","src":"1574:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:17"},"nodeType":"YulFunctionCall","src":"1582:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:17","type":""}],"src":"1296:308:17"},{"body":{"nodeType":"YulBlock","src":"1674:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1697:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"1702:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1707:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1684:12:17"},"nodeType":"YulFunctionCall","src":"1684:30:17"},"nodeType":"YulExpressionStatement","src":"1684:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1734:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1739:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:17"},"nodeType":"YulFunctionCall","src":"1730:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1723:6:17"},"nodeType":"YulFunctionCall","src":"1723:27:17"},"nodeType":"YulExpressionStatement","src":"1723:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1656:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1661:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1666:6:17","type":""}],"src":"1610:146:17"},{"body":{"nodeType":"YulBlock","src":"1846:341:17","statements":[{"nodeType":"YulAssignment","src":"1856:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1923:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1881:41:17"},"nodeType":"YulFunctionCall","src":"1881:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1865:15:17"},"nodeType":"YulFunctionCall","src":"1865:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1856:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1947:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"1954:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:17"},"nodeType":"YulFunctionCall","src":"1940:21:17"},"nodeType":"YulExpressionStatement","src":"1940:21:17"},{"nodeType":"YulVariableDeclaration","src":"1970:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1985:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1992:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:17"},"nodeType":"YulFunctionCall","src":"1981:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1974:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2035:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2037:77:17"},"nodeType":"YulFunctionCall","src":"2037:79:17"},"nodeType":"YulExpressionStatement","src":"2037:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2016:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2021:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:17"},"nodeType":"YulFunctionCall","src":"2012:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"2030:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2009:2:17"},"nodeType":"YulFunctionCall","src":"2009:25:17"},"nodeType":"YulIf","src":"2006:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2164:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"2169:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2174:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2127:36:17"},"nodeType":"YulFunctionCall","src":"2127:54:17"},"nodeType":"YulExpressionStatement","src":"2127:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1819:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1824:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1832:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1840:5:17","type":""}],"src":"1762:425:17"},{"body":{"nodeType":"YulBlock","src":"2269:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"2318:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2320:77:17"},"nodeType":"YulFunctionCall","src":"2320:79:17"},"nodeType":"YulExpressionStatement","src":"2320:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2297:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2305:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:17"},"nodeType":"YulFunctionCall","src":"2293:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2312:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2289:3:17"},"nodeType":"YulFunctionCall","src":"2289:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2282:6:17"},"nodeType":"YulFunctionCall","src":"2282:35:17"},"nodeType":"YulIf","src":"2279:122:17"},{"nodeType":"YulVariableDeclaration","src":"2410:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2437:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2424:12:17"},"nodeType":"YulFunctionCall","src":"2424:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2414:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2453:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2514:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2522:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2510:3:17"},"nodeType":"YulFunctionCall","src":"2510:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2529:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2537:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2462:47:17"},"nodeType":"YulFunctionCall","src":"2462:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2453:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2247:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2255:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2263:5:17","type":""}],"src":"2207:340:17"},{"body":{"nodeType":"YulBlock","src":"2598:32:17","statements":[{"nodeType":"YulAssignment","src":"2608:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2619:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2608:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2580:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2590:7:17","type":""}],"src":"2553:77:17"},{"body":{"nodeType":"YulBlock","src":"2679:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2736:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2745:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2748:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2738:6:17"},"nodeType":"YulFunctionCall","src":"2738:12:17"},"nodeType":"YulExpressionStatement","src":"2738:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2702:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2727:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2709:17:17"},"nodeType":"YulFunctionCall","src":"2709:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2699:2:17"},"nodeType":"YulFunctionCall","src":"2699:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2692:6:17"},"nodeType":"YulFunctionCall","src":"2692:43:17"},"nodeType":"YulIf","src":"2689:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2672:5:17","type":""}],"src":"2636:122:17"},{"body":{"nodeType":"YulBlock","src":"2816:87:17","statements":[{"nodeType":"YulAssignment","src":"2826:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2848:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2835:12:17"},"nodeType":"YulFunctionCall","src":"2835:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2826:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2891:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2864:26:17"},"nodeType":"YulFunctionCall","src":"2864:33:17"},"nodeType":"YulExpressionStatement","src":"2864:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2794:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2802:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:17","type":""}],"src":"2764:139:17"},{"body":{"nodeType":"YulBlock","src":"2962:56:17","statements":[{"body":{"nodeType":"YulBlock","src":"2996:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3005:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3008:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2998:6:17"},"nodeType":"YulFunctionCall","src":"2998:12:17"},"nodeType":"YulExpressionStatement","src":"2998:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2985:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2992:1:17","type":"","value":"6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2982:2:17"},"nodeType":"YulFunctionCall","src":"2982:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2975:6:17"},"nodeType":"YulFunctionCall","src":"2975:20:17"},"nodeType":"YulIf","src":"2972:40:17"}]},"name":"validator_revert_t_enum$_Class_$2519","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2955:5:17","type":""}],"src":"2909:109:17"},{"body":{"nodeType":"YulBlock","src":"3086:97:17","statements":[{"nodeType":"YulAssignment","src":"3096:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3118:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3105:12:17"},"nodeType":"YulFunctionCall","src":"3105:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3171:5:17"}],"functionName":{"name":"validator_revert_t_enum$_Class_$2519","nodeType":"YulIdentifier","src":"3134:36:17"},"nodeType":"YulFunctionCall","src":"3134:43:17"},"nodeType":"YulExpressionStatement","src":"3134:43:17"}]},"name":"abi_decode_t_enum$_Class_$2519","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3064:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3072:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3080:5:17","type":""}],"src":"3024:159:17"},{"body":{"nodeType":"YulBlock","src":"3241:56:17","statements":[{"body":{"nodeType":"YulBlock","src":"3275:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3284:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3287:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3277:6:17"},"nodeType":"YulFunctionCall","src":"3277:12:17"},"nodeType":"YulExpressionStatement","src":"3277:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3264:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3271:1:17","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3261:2:17"},"nodeType":"YulFunctionCall","src":"3261:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3254:6:17"},"nodeType":"YulFunctionCall","src":"3254:20:17"},"nodeType":"YulIf","src":"3251:40:17"}]},"name":"validator_revert_t_enum$_Type_$2523","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3234:5:17","type":""}],"src":"3189:108:17"},{"body":{"nodeType":"YulBlock","src":"3364:96:17","statements":[{"nodeType":"YulAssignment","src":"3374:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3396:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3383:12:17"},"nodeType":"YulFunctionCall","src":"3383:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3374:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3448:5:17"}],"functionName":{"name":"validator_revert_t_enum$_Type_$2523","nodeType":"YulIdentifier","src":"3412:35:17"},"nodeType":"YulFunctionCall","src":"3412:42:17"},"nodeType":"YulExpressionStatement","src":"3412:42:17"}]},"name":"abi_decode_t_enum$_Type_$2523","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3342:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3350:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3358:5:17","type":""}],"src":"3303:157:17"},{"body":{"nodeType":"YulBlock","src":"3629:966:17","statements":[{"body":{"nodeType":"YulBlock","src":"3676:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3678:77:17"},"nodeType":"YulFunctionCall","src":"3678:79:17"},"nodeType":"YulExpressionStatement","src":"3678:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3650:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3659:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3646:3:17"},"nodeType":"YulFunctionCall","src":"3646:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3671:3:17","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3642:3:17"},"nodeType":"YulFunctionCall","src":"3642:33:17"},"nodeType":"YulIf","src":"3639:120:17"},{"nodeType":"YulBlock","src":"3769:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3784:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3815:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3826:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3811:3:17"},"nodeType":"YulFunctionCall","src":"3811:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3798:12:17"},"nodeType":"YulFunctionCall","src":"3798:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3788:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3876:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3878:77:17"},"nodeType":"YulFunctionCall","src":"3878:79:17"},"nodeType":"YulExpressionStatement","src":"3878:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3856:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3845:2:17"},"nodeType":"YulFunctionCall","src":"3845:30:17"},"nodeType":"YulIf","src":"3842:117:17"},{"nodeType":"YulAssignment","src":"3973:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4018:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4029:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4014:3:17"},"nodeType":"YulFunctionCall","src":"4014:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4038:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3983:30:17"},"nodeType":"YulFunctionCall","src":"3983:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3973:6:17"}]}]},{"nodeType":"YulBlock","src":"4066:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4081:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4095:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4085:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4111:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4146:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4157:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4142:3:17"},"nodeType":"YulFunctionCall","src":"4142:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4166:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4121:20:17"},"nodeType":"YulFunctionCall","src":"4121:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4111:6:17"}]}]},{"nodeType":"YulBlock","src":"4194:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4209:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4223:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4213:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4239:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4284:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4295:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4280:3:17"},"nodeType":"YulFunctionCall","src":"4280:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4304:7:17"}],"functionName":{"name":"abi_decode_t_enum$_Class_$2519","nodeType":"YulIdentifier","src":"4249:30:17"},"nodeType":"YulFunctionCall","src":"4249:63:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4239:6:17"}]}]},{"nodeType":"YulBlock","src":"4332:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4347:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4361:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4351:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4377:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4421:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4432:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4417:3:17"},"nodeType":"YulFunctionCall","src":"4417:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4441:7:17"}],"functionName":{"name":"abi_decode_t_enum$_Type_$2523","nodeType":"YulIdentifier","src":"4387:29:17"},"nodeType":"YulFunctionCall","src":"4387:62:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4377:6:17"}]}]},{"nodeType":"YulBlock","src":"4469:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4484:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4498:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4488:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4515:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4550:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4561:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4546:3:17"},"nodeType":"YulFunctionCall","src":"4546:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4570:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4525:20:17"},"nodeType":"YulFunctionCall","src":"4525:53:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4515:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_enum$_Class_$2519t_enum$_Type_$2523t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3567:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3578:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3590:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3598:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3606:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3614:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3622:6:17","type":""}],"src":"3466:1129:17"},{"body":{"nodeType":"YulBlock","src":"4667:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"4713:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4715:77:17"},"nodeType":"YulFunctionCall","src":"4715:79:17"},"nodeType":"YulExpressionStatement","src":"4715:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4688:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4697:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4684:3:17"},"nodeType":"YulFunctionCall","src":"4684:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4709:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4680:3:17"},"nodeType":"YulFunctionCall","src":"4680:32:17"},"nodeType":"YulIf","src":"4677:119:17"},{"nodeType":"YulBlock","src":"4806:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4821:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4835:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4825:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4850:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4885:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4896:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4881:3:17"},"nodeType":"YulFunctionCall","src":"4881:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4905:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4860:20:17"},"nodeType":"YulFunctionCall","src":"4860:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4850:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4637:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4648:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4660:6:17","type":""}],"src":"4601:329:17"},{"body":{"nodeType":"YulBlock","src":"4995:40:17","statements":[{"nodeType":"YulAssignment","src":"5006:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5022:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5016:5:17"},"nodeType":"YulFunctionCall","src":"5016:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5006:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4978:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4988:6:17","type":""}],"src":"4936:99:17"},{"body":{"nodeType":"YulBlock","src":"5127:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5144:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5149:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5137:6:17"},"nodeType":"YulFunctionCall","src":"5137:19:17"},"nodeType":"YulExpressionStatement","src":"5137:19:17"},{"nodeType":"YulAssignment","src":"5165:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5184:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5189:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5180:3:17"},"nodeType":"YulFunctionCall","src":"5180:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5165:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5099:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5104:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5115:11:17","type":""}],"src":"5041:159:17"},{"body":{"nodeType":"YulBlock","src":"5268:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5278:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5287:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5282:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5347:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5372:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"5377:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5368:3:17"},"nodeType":"YulFunctionCall","src":"5368:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5391:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"5396:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5387:3:17"},"nodeType":"YulFunctionCall","src":"5387:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5381:5:17"},"nodeType":"YulFunctionCall","src":"5381:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5361:6:17"},"nodeType":"YulFunctionCall","src":"5361:39:17"},"nodeType":"YulExpressionStatement","src":"5361:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5308:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"5311:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5305:2:17"},"nodeType":"YulFunctionCall","src":"5305:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5319:19:17","statements":[{"nodeType":"YulAssignment","src":"5321:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5330:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"5333:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5326:3:17"},"nodeType":"YulFunctionCall","src":"5326:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5321:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"5301:3:17","statements":[]},"src":"5297:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5430:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5435:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5426:3:17"},"nodeType":"YulFunctionCall","src":"5426:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"5444:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5419:6:17"},"nodeType":"YulFunctionCall","src":"5419:27:17"},"nodeType":"YulExpressionStatement","src":"5419:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5250:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5255:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5260:6:17","type":""}],"src":"5206:246:17"},{"body":{"nodeType":"YulBlock","src":"5540:275:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5550:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5597:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5564:32:17"},"nodeType":"YulFunctionCall","src":"5564:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5554:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5612:68:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5668:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5673:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5619:48:17"},"nodeType":"YulFunctionCall","src":"5619:61:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5612:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5728:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5735:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5724:3:17"},"nodeType":"YulFunctionCall","src":"5724:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"5742:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5747:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5689:34:17"},"nodeType":"YulFunctionCall","src":"5689:65:17"},"nodeType":"YulExpressionStatement","src":"5689:65:17"},{"nodeType":"YulAssignment","src":"5763:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5774:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5801:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5779:21:17"},"nodeType":"YulFunctionCall","src":"5779:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5770:3:17"},"nodeType":"YulFunctionCall","src":"5770:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5763:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5521:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5528:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5536:3:17","type":""}],"src":"5458:357:17"},{"body":{"nodeType":"YulBlock","src":"5876:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5893:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5916:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5898:17:17"},"nodeType":"YulFunctionCall","src":"5898:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5886:6:17"},"nodeType":"YulFunctionCall","src":"5886:37:17"},"nodeType":"YulExpressionStatement","src":"5886:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5864:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5871:3:17","type":""}],"src":"5821:108:17"},{"body":{"nodeType":"YulBlock","src":"5963:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5980:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5983:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:17"},"nodeType":"YulFunctionCall","src":"5973:88:17"},"nodeType":"YulExpressionStatement","src":"5973:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6077:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6080:4:17","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6070:6:17"},"nodeType":"YulFunctionCall","src":"6070:15:17"},"nodeType":"YulExpressionStatement","src":"6070:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6101:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6104:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6094:6:17"},"nodeType":"YulFunctionCall","src":"6094:15:17"},"nodeType":"YulExpressionStatement","src":"6094:15:17"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"5935:180:17"},{"body":{"nodeType":"YulBlock","src":"6175:62:17","statements":[{"body":{"nodeType":"YulBlock","src":"6209:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"6211:16:17"},"nodeType":"YulFunctionCall","src":"6211:18:17"},"nodeType":"YulExpressionStatement","src":"6211:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6198:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6205:1:17","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6195:2:17"},"nodeType":"YulFunctionCall","src":"6195:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6188:6:17"},"nodeType":"YulFunctionCall","src":"6188:20:17"},"nodeType":"YulIf","src":"6185:46:17"}]},"name":"validator_assert_t_enum$_Status_$2512","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6168:5:17","type":""}],"src":"6121:116:17"},{"body":{"nodeType":"YulBlock","src":"6299:77:17","statements":[{"nodeType":"YulAssignment","src":"6309:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"6320:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6309:7:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6364:5:17"}],"functionName":{"name":"validator_assert_t_enum$_Status_$2512","nodeType":"YulIdentifier","src":"6326:37:17"},"nodeType":"YulFunctionCall","src":"6326:44:17"},"nodeType":"YulExpressionStatement","src":"6326:44:17"}]},"name":"cleanup_t_enum$_Status_$2512","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6281:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6291:7:17","type":""}],"src":"6243:133:17"},{"body":{"nodeType":"YulBlock","src":"6451:64:17","statements":[{"nodeType":"YulAssignment","src":"6461:48:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6503:5:17"}],"functionName":{"name":"cleanup_t_enum$_Status_$2512","nodeType":"YulIdentifier","src":"6474:28:17"},"nodeType":"YulFunctionCall","src":"6474:35:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6461:9:17"}]}]},"name":"convert_t_enum$_Status_$2512_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6431:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6441:9:17","type":""}],"src":"6382:133:17"},{"body":{"nodeType":"YulBlock","src":"6585:75:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6602:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6647:5:17"}],"functionName":{"name":"convert_t_enum$_Status_$2512_to_t_uint8","nodeType":"YulIdentifier","src":"6607:39:17"},"nodeType":"YulFunctionCall","src":"6607:46:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6595:6:17"},"nodeType":"YulFunctionCall","src":"6595:59:17"},"nodeType":"YulExpressionStatement","src":"6595:59:17"}]},"name":"abi_encode_t_enum$_Status_$2512_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6573:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6580:3:17","type":""}],"src":"6521:139:17"},{"body":{"nodeType":"YulBlock","src":"6719:62:17","statements":[{"body":{"nodeType":"YulBlock","src":"6753:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"6755:16:17"},"nodeType":"YulFunctionCall","src":"6755:18:17"},"nodeType":"YulExpressionStatement","src":"6755:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6742:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6749:1:17","type":"","value":"6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6739:2:17"},"nodeType":"YulFunctionCall","src":"6739:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6732:6:17"},"nodeType":"YulFunctionCall","src":"6732:20:17"},"nodeType":"YulIf","src":"6729:46:17"}]},"name":"validator_assert_t_enum$_Class_$2519","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6712:5:17","type":""}],"src":"6666:115:17"},{"body":{"nodeType":"YulBlock","src":"6842:76:17","statements":[{"nodeType":"YulAssignment","src":"6852:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"6863:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6852:7:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6906:5:17"}],"functionName":{"name":"validator_assert_t_enum$_Class_$2519","nodeType":"YulIdentifier","src":"6869:36:17"},"nodeType":"YulFunctionCall","src":"6869:43:17"},"nodeType":"YulExpressionStatement","src":"6869:43:17"}]},"name":"cleanup_t_enum$_Class_$2519","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6824:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6834:7:17","type":""}],"src":"6787:131:17"},{"body":{"nodeType":"YulBlock","src":"6992:63:17","statements":[{"nodeType":"YulAssignment","src":"7002:47:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7043:5:17"}],"functionName":{"name":"cleanup_t_enum$_Class_$2519","nodeType":"YulIdentifier","src":"7015:27:17"},"nodeType":"YulFunctionCall","src":"7015:34:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7002:9:17"}]}]},"name":"convert_t_enum$_Class_$2519_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6972:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6982:9:17","type":""}],"src":"6924:131:17"},{"body":{"nodeType":"YulBlock","src":"7124:74:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7141:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7185:5:17"}],"functionName":{"name":"convert_t_enum$_Class_$2519_to_t_uint8","nodeType":"YulIdentifier","src":"7146:38:17"},"nodeType":"YulFunctionCall","src":"7146:45:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7134:6:17"},"nodeType":"YulFunctionCall","src":"7134:58:17"},"nodeType":"YulExpressionStatement","src":"7134:58:17"}]},"name":"abi_encode_t_enum$_Class_$2519_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7112:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7119:3:17","type":""}],"src":"7061:137:17"},{"body":{"nodeType":"YulBlock","src":"7256:62:17","statements":[{"body":{"nodeType":"YulBlock","src":"7290:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"7292:16:17"},"nodeType":"YulFunctionCall","src":"7292:18:17"},"nodeType":"YulExpressionStatement","src":"7292:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7279:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7286:1:17","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7276:2:17"},"nodeType":"YulFunctionCall","src":"7276:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7269:6:17"},"nodeType":"YulFunctionCall","src":"7269:20:17"},"nodeType":"YulIf","src":"7266:46:17"}]},"name":"validator_assert_t_enum$_Type_$2523","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7249:5:17","type":""}],"src":"7204:114:17"},{"body":{"nodeType":"YulBlock","src":"7378:75:17","statements":[{"nodeType":"YulAssignment","src":"7388:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"7399:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7388:7:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7441:5:17"}],"functionName":{"name":"validator_assert_t_enum$_Type_$2523","nodeType":"YulIdentifier","src":"7405:35:17"},"nodeType":"YulFunctionCall","src":"7405:42:17"},"nodeType":"YulExpressionStatement","src":"7405:42:17"}]},"name":"cleanup_t_enum$_Type_$2523","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7370:7:17","type":""}],"src":"7324:129:17"},{"body":{"nodeType":"YulBlock","src":"7526:62:17","statements":[{"nodeType":"YulAssignment","src":"7536:46:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7576:5:17"}],"functionName":{"name":"cleanup_t_enum$_Type_$2523","nodeType":"YulIdentifier","src":"7549:26:17"},"nodeType":"YulFunctionCall","src":"7549:33:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7536:9:17"}]}]},"name":"convert_t_enum$_Type_$2523_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7506:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7516:9:17","type":""}],"src":"7459:129:17"},{"body":{"nodeType":"YulBlock","src":"7656:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7673:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7716:5:17"}],"functionName":{"name":"convert_t_enum$_Type_$2523_to_t_uint8","nodeType":"YulIdentifier","src":"7678:37:17"},"nodeType":"YulFunctionCall","src":"7678:44:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7666:6:17"},"nodeType":"YulFunctionCall","src":"7666:57:17"},"nodeType":"YulExpressionStatement","src":"7666:57:17"}]},"name":"abi_encode_t_enum$_Type_$2523_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7644:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7651:3:17","type":""}],"src":"7594:135:17"},{"body":{"nodeType":"YulBlock","src":"7780:81:17","statements":[{"nodeType":"YulAssignment","src":"7790:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7805:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7812:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7801:3:17"},"nodeType":"YulFunctionCall","src":"7801:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7790:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7762:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7772:7:17","type":""}],"src":"7735:126:17"},{"body":{"nodeType":"YulBlock","src":"7912:51:17","statements":[{"nodeType":"YulAssignment","src":"7922:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7951:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7933:17:17"},"nodeType":"YulFunctionCall","src":"7933:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7922:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7894:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7904:7:17","type":""}],"src":"7867:96:17"},{"body":{"nodeType":"YulBlock","src":"8024:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8064:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8046:17:17"},"nodeType":"YulFunctionCall","src":"8046:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8034:6:17"},"nodeType":"YulFunctionCall","src":"8034:37:17"},"nodeType":"YulExpressionStatement","src":"8034:37:17"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8012:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8019:3:17","type":""}],"src":"7969:108:17"},{"body":{"nodeType":"YulBlock","src":"8277:1411:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8287:26:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8303:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8308:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8299:3:17"},"nodeType":"YulFunctionCall","src":"8299:14:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"8291:4:17","type":""}]},{"nodeType":"YulBlock","src":"8323:235:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8358:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8388:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8395:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8384:3:17"},"nodeType":"YulFunctionCall","src":"8384:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8378:5:17"},"nodeType":"YulFunctionCall","src":"8378:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8362:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8426:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8431:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8422:3:17"},"nodeType":"YulFunctionCall","src":"8422:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8442:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"8448:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8438:3:17"},"nodeType":"YulFunctionCall","src":"8438:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8415:6:17"},"nodeType":"YulFunctionCall","src":"8415:38:17"},"nodeType":"YulExpressionStatement","src":"8415:38:17"},{"nodeType":"YulAssignment","src":"8466:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8528:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"8542:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8474:53:17"},"nodeType":"YulFunctionCall","src":"8474:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8466:4:17"}]}]},{"nodeType":"YulBlock","src":"8568:169:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8608:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8638:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8645:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8634:3:17"},"nodeType":"YulFunctionCall","src":"8634:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8628:5:17"},"nodeType":"YulFunctionCall","src":"8628:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8612:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8698:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8716:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8721:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8712:3:17"},"nodeType":"YulFunctionCall","src":"8712:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8664:33:17"},"nodeType":"YulFunctionCall","src":"8664:63:17"},"nodeType":"YulExpressionStatement","src":"8664:63:17"}]},{"nodeType":"YulBlock","src":"8747:182:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8791:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8821:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8828:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8817:3:17"},"nodeType":"YulFunctionCall","src":"8817:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8811:5:17"},"nodeType":"YulFunctionCall","src":"8811:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8795:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8890:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8908:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8913:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8904:3:17"},"nodeType":"YulFunctionCall","src":"8904:14:17"}],"functionName":{"name":"abi_encode_t_enum$_Status_$2512_to_t_uint8","nodeType":"YulIdentifier","src":"8847:42:17"},"nodeType":"YulFunctionCall","src":"8847:72:17"},"nodeType":"YulExpressionStatement","src":"8847:72:17"}]},{"nodeType":"YulBlock","src":"8939:180:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8982:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9012:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9019:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9008:3:17"},"nodeType":"YulFunctionCall","src":"9008:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9002:5:17"},"nodeType":"YulFunctionCall","src":"9002:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8986:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9080:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9098:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9103:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9094:3:17"},"nodeType":"YulFunctionCall","src":"9094:14:17"}],"functionName":{"name":"abi_encode_t_enum$_Class_$2519_to_t_uint8","nodeType":"YulIdentifier","src":"9038:41:17"},"nodeType":"YulFunctionCall","src":"9038:71:17"},"nodeType":"YulExpressionStatement","src":"9038:71:17"}]},{"nodeType":"YulBlock","src":"9129:178:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9171:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9201:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9208:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9197:3:17"},"nodeType":"YulFunctionCall","src":"9197:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9191:5:17"},"nodeType":"YulFunctionCall","src":"9191:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9175:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9268:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9286:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9291:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9282:3:17"},"nodeType":"YulFunctionCall","src":"9282:14:17"}],"functionName":{"name":"abi_encode_t_enum$_Type_$2523_to_t_uint8","nodeType":"YulIdentifier","src":"9227:40:17"},"nodeType":"YulFunctionCall","src":"9227:70:17"},"nodeType":"YulExpressionStatement","src":"9227:70:17"}]},{"nodeType":"YulBlock","src":"9317:169:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9357:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9387:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9394:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:17"},"nodeType":"YulFunctionCall","src":"9383:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9377:5:17"},"nodeType":"YulFunctionCall","src":"9377:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9361:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9447:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9465:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9470:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9461:3:17"},"nodeType":"YulFunctionCall","src":"9461:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9413:33:17"},"nodeType":"YulFunctionCall","src":"9413:63:17"},"nodeType":"YulExpressionStatement","src":"9413:63:17"}]},{"nodeType":"YulBlock","src":"9496:165:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9532:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9562:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9569:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9558:3:17"},"nodeType":"YulFunctionCall","src":"9558:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9552:5:17"},"nodeType":"YulFunctionCall","src":"9552:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9536:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9622:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9640:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9645:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9636:3:17"},"nodeType":"YulFunctionCall","src":"9636:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9588:33:17"},"nodeType":"YulFunctionCall","src":"9588:63:17"},"nodeType":"YulExpressionStatement","src":"9588:63:17"}]},{"nodeType":"YulAssignment","src":"9671:11:17","value":{"name":"tail","nodeType":"YulIdentifier","src":"9678:4:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9671:3:17"}]}]},"name":"abi_encode_t_struct$_Vehicle_$2541_memory_ptr_to_t_struct$_Vehicle_$2541_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8256:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8263:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8272:3:17","type":""}],"src":"8153:1535:17"},{"body":{"nodeType":"YulBlock","src":"9842:225:17","statements":[{"nodeType":"YulAssignment","src":"9852:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9864:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9875:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9860:3:17"},"nodeType":"YulFunctionCall","src":"9860:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9852:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9899:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9910:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9895:3:17"},"nodeType":"YulFunctionCall","src":"9895:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9918:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9924:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9914:3:17"},"nodeType":"YulFunctionCall","src":"9914:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9888:6:17"},"nodeType":"YulFunctionCall","src":"9888:47:17"},"nodeType":"YulExpressionStatement","src":"9888:47:17"},{"nodeType":"YulAssignment","src":"9944:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10046:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"10055:4:17"}],"functionName":{"name":"abi_encode_t_struct$_Vehicle_$2541_memory_ptr_to_t_struct$_Vehicle_$2541_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9952:93:17"},"nodeType":"YulFunctionCall","src":"9952:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9944:4:17"}]}]},"name":"abi_encode_tuple_t_struct$_Vehicle_$2541_memory_ptr__to_t_struct$_Vehicle_$2541_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9814:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9826:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9837:4:17","type":""}],"src":"9694:373:17"},{"body":{"nodeType":"YulBlock","src":"10127:56:17","statements":[{"body":{"nodeType":"YulBlock","src":"10161:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10170:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10173:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10163:6:17"},"nodeType":"YulFunctionCall","src":"10163:12:17"},"nodeType":"YulExpressionStatement","src":"10163:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10150:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"10157:1:17","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10147:2:17"},"nodeType":"YulFunctionCall","src":"10147:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10140:6:17"},"nodeType":"YulFunctionCall","src":"10140:20:17"},"nodeType":"YulIf","src":"10137:40:17"}]},"name":"validator_revert_t_enum$_Status_$2512","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10120:5:17","type":""}],"src":"10073:110:17"},{"body":{"nodeType":"YulBlock","src":"10252:98:17","statements":[{"nodeType":"YulAssignment","src":"10262:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10284:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10271:12:17"},"nodeType":"YulFunctionCall","src":"10271:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10262:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10338:5:17"}],"functionName":{"name":"validator_revert_t_enum$_Status_$2512","nodeType":"YulIdentifier","src":"10300:37:17"},"nodeType":"YulFunctionCall","src":"10300:44:17"},"nodeType":"YulExpressionStatement","src":"10300:44:17"}]},"name":"abi_decode_t_enum$_Status_$2512","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10230:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"10238:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10246:5:17","type":""}],"src":"10189:161:17"},{"body":{"nodeType":"YulBlock","src":"10450:402:17","statements":[{"body":{"nodeType":"YulBlock","src":"10496:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10498:77:17"},"nodeType":"YulFunctionCall","src":"10498:79:17"},"nodeType":"YulExpressionStatement","src":"10498:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10471:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10480:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10467:3:17"},"nodeType":"YulFunctionCall","src":"10467:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"10492:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10463:3:17"},"nodeType":"YulFunctionCall","src":"10463:32:17"},"nodeType":"YulIf","src":"10460:119:17"},{"nodeType":"YulBlock","src":"10589:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10604:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10618:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10608:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10633:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10668:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10679:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10664:3:17"},"nodeType":"YulFunctionCall","src":"10664:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10688:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10643:20:17"},"nodeType":"YulFunctionCall","src":"10643:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10633:6:17"}]}]},{"nodeType":"YulBlock","src":"10716:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10731:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10745:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10735:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10761:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10807:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10818:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10803:3:17"},"nodeType":"YulFunctionCall","src":"10803:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10827:7:17"}],"functionName":{"name":"abi_decode_t_enum$_Status_$2512","nodeType":"YulIdentifier","src":"10771:31:17"},"nodeType":"YulFunctionCall","src":"10771:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10761:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_enum$_Status_$2512","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10412:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10423:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10435:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10443:6:17","type":""}],"src":"10356:496:17"},{"body":{"nodeType":"YulBlock","src":"10886:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10903:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10906:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10896:6:17"},"nodeType":"YulFunctionCall","src":"10896:88:17"},"nodeType":"YulExpressionStatement","src":"10896:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11000:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11003:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10993:6:17"},"nodeType":"YulFunctionCall","src":"10993:15:17"},"nodeType":"YulExpressionStatement","src":"10993:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11024:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11027:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11017:6:17"},"nodeType":"YulFunctionCall","src":"11017:15:17"},"nodeType":"YulExpressionStatement","src":"11017:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10858:180:17"},{"body":{"nodeType":"YulBlock","src":"11095:269:17","statements":[{"nodeType":"YulAssignment","src":"11105:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11119:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"11125:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11115:3:17"},"nodeType":"YulFunctionCall","src":"11115:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11105:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"11136:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11166:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"11172:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11162:3:17"},"nodeType":"YulFunctionCall","src":"11162:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11140:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11213:51:17","statements":[{"nodeType":"YulAssignment","src":"11227:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11241:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11249:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11237:3:17"},"nodeType":"YulFunctionCall","src":"11237:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11227:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11193:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11186:6:17"},"nodeType":"YulFunctionCall","src":"11186:26:17"},"nodeType":"YulIf","src":"11183:81:17"},{"body":{"nodeType":"YulBlock","src":"11316:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11330:16:17"},"nodeType":"YulFunctionCall","src":"11330:18:17"},"nodeType":"YulExpressionStatement","src":"11330:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11280:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11303:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11311:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11300:2:17"},"nodeType":"YulFunctionCall","src":"11300:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11277:2:17"},"nodeType":"YulFunctionCall","src":"11277:38:17"},"nodeType":"YulIf","src":"11274:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11079:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11088:6:17","type":""}],"src":"11044:320:17"},{"body":{"nodeType":"YulBlock","src":"11424:87:17","statements":[{"nodeType":"YulAssignment","src":"11434:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11442:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11434:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11462:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"11465:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11455:6:17"},"nodeType":"YulFunctionCall","src":"11455:14:17"},"nodeType":"YulExpressionStatement","src":"11455:14:17"},{"nodeType":"YulAssignment","src":"11478:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11496:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11499:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11486:9:17"},"nodeType":"YulFunctionCall","src":"11486:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11478:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11411:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11419:4:17","type":""}],"src":"11370:141:17"},{"body":{"nodeType":"YulBlock","src":"11561:49:17","statements":[{"nodeType":"YulAssignment","src":"11571:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11589:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11596:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11585:3:17"},"nodeType":"YulFunctionCall","src":"11585:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"11601:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11581:3:17"},"nodeType":"YulFunctionCall","src":"11581:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11571:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11544:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11554:6:17","type":""}],"src":"11517:93:17"},{"body":{"nodeType":"YulBlock","src":"11669:54:17","statements":[{"nodeType":"YulAssignment","src":"11679:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"11704:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"11710:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11700:3:17"},"nodeType":"YulFunctionCall","src":"11700:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"11679:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"11644:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"11650:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"11660:8:17","type":""}],"src":"11616:107:17"},{"body":{"nodeType":"YulBlock","src":"11805:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11815:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"11836:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"11848:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11832:3:17"},"nodeType":"YulFunctionCall","src":"11832:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"11819:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11859:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"11890:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11901:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"11871:18:17"},"nodeType":"YulFunctionCall","src":"11871:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"11863:4:17","type":""}]},{"nodeType":"YulAssignment","src":"11977:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"12008:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"12019:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"11989:18:17"},"nodeType":"YulFunctionCall","src":"11989:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"11977:8:17"}]},{"nodeType":"YulAssignment","src":"12037:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12050:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"12061:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12057:3:17"},"nodeType":"YulFunctionCall","src":"12057:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12046:3:17"},"nodeType":"YulFunctionCall","src":"12046:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12037:5:17"}]},{"nodeType":"YulAssignment","src":"12076:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12089:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"12100:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"12110:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12096:3:17"},"nodeType":"YulFunctionCall","src":"12096:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12086:2:17"},"nodeType":"YulFunctionCall","src":"12086:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12076:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11766:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"11773:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"11785:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11798:6:17","type":""}],"src":"11729:393:17"},{"body":{"nodeType":"YulBlock","src":"12160:28:17","statements":[{"nodeType":"YulAssignment","src":"12170:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"12177:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12170:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12146:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12156:3:17","type":""}],"src":"12128:60:17"},{"body":{"nodeType":"YulBlock","src":"12254:82:17","statements":[{"nodeType":"YulAssignment","src":"12264:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12322:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12304:17:17"},"nodeType":"YulFunctionCall","src":"12304:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12295:8:17"},"nodeType":"YulFunctionCall","src":"12295:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12277:17:17"},"nodeType":"YulFunctionCall","src":"12277:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12264:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12234:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12244:9:17","type":""}],"src":"12194:142:17"},{"body":{"nodeType":"YulBlock","src":"12389:28:17","statements":[{"nodeType":"YulAssignment","src":"12399:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"12406:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12399:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12375:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12385:3:17","type":""}],"src":"12342:75:17"},{"body":{"nodeType":"YulBlock","src":"12499:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12509:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"12564:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12533:30:17"},"nodeType":"YulFunctionCall","src":"12533:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"12513:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12588:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12628:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12622:5:17"},"nodeType":"YulFunctionCall","src":"12622:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12635:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"12667:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"12643:23:17"},"nodeType":"YulFunctionCall","src":"12643:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"12594:27:17"},"nodeType":"YulFunctionCall","src":"12594:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12581:6:17"},"nodeType":"YulFunctionCall","src":"12581:105:17"},"nodeType":"YulExpressionStatement","src":"12581:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12476:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"12482:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"12490:7:17","type":""}],"src":"12423:269:17"},{"body":{"nodeType":"YulBlock","src":"12747:24:17","statements":[{"nodeType":"YulAssignment","src":"12757:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12764:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12757:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12743:3:17","type":""}],"src":"12698:73:17"},{"body":{"nodeType":"YulBlock","src":"12830:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12840:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"12854:30:17"},"nodeType":"YulFunctionCall","src":"12854:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"12844:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12939:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12945:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"12953:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12895:43:17"},"nodeType":"YulFunctionCall","src":"12895:65:17"},"nodeType":"YulExpressionStatement","src":"12895:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12816:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"12822:6:17","type":""}],"src":"12777:189:17"},{"body":{"nodeType":"YulBlock","src":"13022:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"13089:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13133:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13140:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"13103:29:17"},"nodeType":"YulFunctionCall","src":"13103:39:17"},"nodeType":"YulExpressionStatement","src":"13103:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13042:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"13049:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13039:2:17"},"nodeType":"YulFunctionCall","src":"13039:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13054:26:17","statements":[{"nodeType":"YulAssignment","src":"13056:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13069:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13076:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13065:3:17"},"nodeType":"YulFunctionCall","src":"13065:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"13056:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"13036:2:17","statements":[]},"src":"13032:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"13010:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"13017:3:17","type":""}],"src":"12972:186:17"},{"body":{"nodeType":"YulBlock","src":"13243:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"13269:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13283:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13331:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"13299:31:17"},"nodeType":"YulFunctionCall","src":"13299:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"13287:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13350:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13373:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13401:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"13383:17:17"},"nodeType":"YulFunctionCall","src":"13383:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13369:3:17"},"nodeType":"YulFunctionCall","src":"13369:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"13354:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13570:27:17","statements":[{"nodeType":"YulAssignment","src":"13572:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"13587:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13572:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13554:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"13566:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13551:2:17"},"nodeType":"YulFunctionCall","src":"13551:18:17"},"nodeType":"YulIf","src":"13548:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13639:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13656:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13684:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"13666:17:17"},"nodeType":"YulFunctionCall","src":"13666:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13652:3:17"},"nodeType":"YulFunctionCall","src":"13652:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"13610:28:17"},"nodeType":"YulFunctionCall","src":"13610:80:17"},"nodeType":"YulExpressionStatement","src":"13610:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13260:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13265:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13257:2:17"},"nodeType":"YulFunctionCall","src":"13257:11:17"},"nodeType":"YulIf","src":"13254:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"13219:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"13226:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"13231:10:17","type":""}],"src":"13164:543:17"},{"body":{"nodeType":"YulBlock","src":"13776:54:17","statements":[{"nodeType":"YulAssignment","src":"13786:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"13811:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"13817:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13807:3:17"},"nodeType":"YulFunctionCall","src":"13807:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13786:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"13751:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"13757:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13767:8:17","type":""}],"src":"13713:117:17"},{"body":{"nodeType":"YulBlock","src":"13887:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13897:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13946:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"13949:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13942:3:17"},"nodeType":"YulFunctionCall","src":"13942:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13961:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13957:3:17"},"nodeType":"YulFunctionCall","src":"13957:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"13913:28:17"},"nodeType":"YulFunctionCall","src":"13913:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13909:3:17"},"nodeType":"YulFunctionCall","src":"13909:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"13901:4:17","type":""}]},{"nodeType":"YulAssignment","src":"13974:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13988:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"13994:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13984:3:17"},"nodeType":"YulFunctionCall","src":"13984:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13974:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13864:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"13870:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13880:6:17","type":""}],"src":"13836:169:17"},{"body":{"nodeType":"YulBlock","src":"14091:214:17","statements":[{"nodeType":"YulAssignment","src":"14224:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14251:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"14257:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"14232:18:17"},"nodeType":"YulFunctionCall","src":"14232:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14224:4:17"}]},{"nodeType":"YulAssignment","src":"14270:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14281:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14291:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"14294:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14287:3:17"},"nodeType":"YulFunctionCall","src":"14287:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14278:2:17"},"nodeType":"YulFunctionCall","src":"14278:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"14270:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14072:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"14078:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"14086:4:17","type":""}],"src":"14010:295:17"},{"body":{"nodeType":"YulBlock","src":"14402:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14413:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14460:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14427:32:17"},"nodeType":"YulFunctionCall","src":"14427:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"14417:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"14549:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14551:16:17"},"nodeType":"YulFunctionCall","src":"14551:18:17"},"nodeType":"YulExpressionStatement","src":"14551:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14521:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14529:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14518:2:17"},"nodeType":"YulFunctionCall","src":"14518:30:17"},"nodeType":"YulIf","src":"14515:56:17"},{"nodeType":"YulVariableDeclaration","src":"14581:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14627:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14621:5:17"},"nodeType":"YulFunctionCall","src":"14621:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14595:25:17"},"nodeType":"YulFunctionCall","src":"14595:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"14585:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14726:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"14732:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"14740:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"14680:45:17"},"nodeType":"YulFunctionCall","src":"14680:67:17"},"nodeType":"YulExpressionStatement","src":"14680:67:17"},{"nodeType":"YulVariableDeclaration","src":"14757:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14774:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"14761:9:17","type":""}]},{"nodeType":"YulAssignment","src":"14785:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14798:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14785:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14849:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14863:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14882:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14894:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14890:3:17"},"nodeType":"YulFunctionCall","src":"14890:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14878:3:17"},"nodeType":"YulFunctionCall","src":"14878:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"14867:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14914:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14960:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"14928:31:17"},"nodeType":"YulFunctionCall","src":"14928:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"14918:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14978:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14987:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14982:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"15046:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15071:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15089:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15094:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15085:3:17"},"nodeType":"YulFunctionCall","src":"15085:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15079:5:17"},"nodeType":"YulFunctionCall","src":"15079:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15064:6:17"},"nodeType":"YulFunctionCall","src":"15064:42:17"},"nodeType":"YulExpressionStatement","src":"15064:42:17"},{"nodeType":"YulAssignment","src":"15123:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15137:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15145:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15133:3:17"},"nodeType":"YulFunctionCall","src":"15133:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15123:6:17"}]},{"nodeType":"YulAssignment","src":"15164:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15181:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15192:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15177:3:17"},"nodeType":"YulFunctionCall","src":"15177:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15164:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15012:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"15015:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15009:2:17"},"nodeType":"YulFunctionCall","src":"15009:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15024:21:17","statements":[{"nodeType":"YulAssignment","src":"15026:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15035:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"15038:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15031:3:17"},"nodeType":"YulFunctionCall","src":"15031:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15026:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"15005:3:17","statements":[]},"src":"15001:208:17"},{"body":{"nodeType":"YulBlock","src":"15245:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15263:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15290:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15295:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15286:3:17"},"nodeType":"YulFunctionCall","src":"15286:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15280:5:17"},"nodeType":"YulFunctionCall","src":"15280:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"15267:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15330:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"15357:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15372:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15380:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15368:3:17"},"nodeType":"YulFunctionCall","src":"15368:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"15338:18:17"},"nodeType":"YulFunctionCall","src":"15338:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15323:6:17"},"nodeType":"YulFunctionCall","src":"15323:64:17"},"nodeType":"YulExpressionStatement","src":"15323:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"15228:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"15237:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15225:2:17"},"nodeType":"YulFunctionCall","src":"15225:19:17"},"nodeType":"YulIf","src":"15222:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15421:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15435:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15443:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15431:3:17"},"nodeType":"YulFunctionCall","src":"15431:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"15447:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15427:3:17"},"nodeType":"YulFunctionCall","src":"15427:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15414:6:17"},"nodeType":"YulFunctionCall","src":"15414:36:17"},"nodeType":"YulExpressionStatement","src":"15414:36:17"}]},"nodeType":"YulCase","src":"14842:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14847:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"15477:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15491:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15504:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15495:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"15528:67:17","statements":[{"nodeType":"YulAssignment","src":"15546:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15565:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15570:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15561:3:17"},"nodeType":"YulFunctionCall","src":"15561:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15555:5:17"},"nodeType":"YulFunctionCall","src":"15555:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15546:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"15521:6:17"},"nodeType":"YulIf","src":"15518:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15615:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15674:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"15681:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"15621:52:17"},"nodeType":"YulFunctionCall","src":"15621:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15608:6:17"},"nodeType":"YulFunctionCall","src":"15608:81:17"},"nodeType":"YulExpressionStatement","src":"15608:81:17"}]},"nodeType":"YulCase","src":"15469:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14822:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14830:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14819:2:17"},"nodeType":"YulFunctionCall","src":"14819:14:17"},"nodeType":"YulSwitch","src":"14812:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"14391:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"14397:3:17","type":""}],"src":"14310:1395:17"}]},"contents":"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\\n        revert(0, 0)\\n    }\\n\\n    function round_up_to_mul_of_32(value) -> result {\\n        result := and(add(value, 31), not(31))\\n    }\\n\\n    function panic_error_0x41() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x41)\\n        revert(0, 0x24)\\n    }\\n\\n    function finalize_allocation(memPtr, size) {\\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\\n        // protect against overflow\\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\\n        mstore(64, newFreePtr)\\n    }\\n\\n    function allocate_memory(size) -> memPtr {\\n        memPtr := allocate_unbounded()\\n        finalize_allocation(memPtr, size)\\n    }\\n\\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\\n        // Make sure we can allocate memory without overflow\\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        size := round_up_to_mul_of_32(length)\\n\\n        // add length slot\\n        size := add(size, 0x20)\\n\\n    }\\n\\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\\n        calldatacopy(dst, src, length)\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\\n        mstore(array, length)\\n        let dst := add(array, 0x20)\\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\\n    }\\n\\n    // string\\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\\n        let length := calldataload(offset)\\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function validator_revert_t_uint256(value) {\\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint256(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint256(value)\\n    }\\n\\n    function validator_revert_t_enum$_Class_$2519(value) {\\n        if iszero(lt(value, 6)) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_enum$_Class_$2519(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_enum$_Class_$2519(value)\\n    }\\n\\n    function validator_revert_t_enum$_Type_$2523(value) {\\n        if iszero(lt(value, 3)) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_enum$_Type_$2523(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_enum$_Type_$2523(value)\\n    }\\n\\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_enum$_Class_$2519t_enum$_Type_$2523t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := calldataload(add(headStart, 0))\\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\\n\\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 32\\n\\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 64\\n\\n            value2 := abi_decode_t_enum$_Class_$2519(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 96\\n\\n            value3 := abi_decode_t_enum$_Type_$2523(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 128\\n\\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function array_length_t_string_memory_ptr(value) -> length {\\n\\n        length := mload(value)\\n\\n    }\\n\\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\\n        mstore(pos, length)\\n        updated_pos := add(pos, 0x20)\\n    }\\n\\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\\n        let i := 0\\n        for { } lt(i, length) { i := add(i, 32) }\\n        {\\n            mstore(add(dst, i), mload(add(src, i)))\\n        }\\n        mstore(add(dst, length), 0)\\n    }\\n\\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\\n        let length := array_length_t_string_memory_ptr(value)\\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\\n        end := add(pos, round_up_to_mul_of_32(length))\\n    }\\n\\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\\n        mstore(pos, cleanup_t_uint256(value))\\n    }\\n\\n    function panic_error_0x21() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x21)\\n        revert(0, 0x24)\\n    }\\n\\n    function validator_assert_t_enum$_Status_$2512(value) {\\n        if iszero(lt(value, 4)) { panic_error_0x21() }\\n    }\\n\\n    function cleanup_t_enum$_Status_$2512(value) -> cleaned {\\n        cleaned := value validator_assert_t_enum$_Status_$2512(value)\\n    }\\n\\n    function convert_t_enum$_Status_$2512_to_t_uint8(value) -> converted {\\n        converted := cleanup_t_enum$_Status_$2512(value)\\n    }\\n\\n    function abi_encode_t_enum$_Status_$2512_to_t_uint8(value, pos) {\\n        mstore(pos, convert_t_enum$_Status_$2512_to_t_uint8(value))\\n    }\\n\\n    function validator_assert_t_enum$_Class_$2519(value) {\\n        if iszero(lt(value, 6)) { panic_error_0x21() }\\n    }\\n\\n    function cleanup_t_enum$_Class_$2519(value) -> cleaned {\\n        cleaned := value validator_assert_t_enum$_Class_$2519(value)\\n    }\\n\\n    function convert_t_enum$_Class_$2519_to_t_uint8(value) -> converted {\\n        converted := cleanup_t_enum$_Class_$2519(value)\\n    }\\n\\n    function abi_encode_t_enum$_Class_$2519_to_t_uint8(value, pos) {\\n        mstore(pos, convert_t_enum$_Class_$2519_to_t_uint8(value))\\n    }\\n\\n    function validator_assert_t_enum$_Type_$2523(value) {\\n        if iszero(lt(value, 3)) { panic_error_0x21() }\\n    }\\n\\n    function cleanup_t_enum$_Type_$2523(value) -> cleaned {\\n        cleaned := value validator_assert_t_enum$_Type_$2523(value)\\n    }\\n\\n    function convert_t_enum$_Type_$2523_to_t_uint8(value) -> converted {\\n        converted := cleanup_t_enum$_Type_$2523(value)\\n    }\\n\\n    function abi_encode_t_enum$_Type_$2523_to_t_uint8(value, pos) {\\n        mstore(pos, convert_t_enum$_Type_$2523_to_t_uint8(value))\\n    }\\n\\n    function cleanup_t_uint160(value) -> cleaned {\\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\\n    }\\n\\n    function cleanup_t_address(value) -> cleaned {\\n        cleaned := cleanup_t_uint160(value)\\n    }\\n\\n    function abi_encode_t_address_to_t_address(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    // struct VehicleFactory.Vehicle -> struct VehicleFactory.Vehicle\\n    function abi_encode_t_struct$_Vehicle_$2541_memory_ptr_to_t_struct$_Vehicle_$2541_memory_ptr_fromStack(value, pos)  -> end  {\\n        let tail := add(pos, 0xe0)\\n\\n        {\\n            // name\\n\\n            let memberValue0 := mload(add(value, 0x00))\\n\\n            mstore(add(pos, 0x00), sub(tail, pos))\\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\\n\\n        }\\n\\n        {\\n            // chassisNo\\n\\n            let memberValue0 := mload(add(value, 0x20))\\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\\n        }\\n\\n        {\\n            // vehicleStatus\\n\\n            let memberValue0 := mload(add(value, 0x40))\\n            abi_encode_t_enum$_Status_$2512_to_t_uint8(memberValue0, add(pos, 0x40))\\n        }\\n\\n        {\\n            // vehicleClass\\n\\n            let memberValue0 := mload(add(value, 0x60))\\n            abi_encode_t_enum$_Class_$2519_to_t_uint8(memberValue0, add(pos, 0x60))\\n        }\\n\\n        {\\n            // vehicleType\\n\\n            let memberValue0 := mload(add(value, 0x80))\\n            abi_encode_t_enum$_Type_$2523_to_t_uint8(memberValue0, add(pos, 0x80))\\n        }\\n\\n        {\\n            // licenseNo\\n\\n            let memberValue0 := mload(add(value, 0xa0))\\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\\n        }\\n\\n        {\\n            // owner\\n\\n            let memberValue0 := mload(add(value, 0xc0))\\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xc0))\\n        }\\n\\n        end := tail\\n    }\\n\\n    function abi_encode_tuple_t_struct$_Vehicle_$2541_memory_ptr__to_t_struct$_Vehicle_$2541_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        mstore(add(headStart, 0), sub(tail, headStart))\\n        tail := abi_encode_t_struct$_Vehicle_$2541_memory_ptr_to_t_struct$_Vehicle_$2541_memory_ptr_fromStack(value0,  tail)\\n\\n    }\\n\\n    function validator_revert_t_enum$_Status_$2512(value) {\\n        if iszero(lt(value, 4)) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_enum$_Status_$2512(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_enum$_Status_$2512(value)\\n    }\\n\\n    function abi_decode_tuple_t_uint256t_enum$_Status_$2512(headStart, dataEnd) -> value0, value1 {\\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n        {\\n\\n            let offset := 32\\n\\n            value1 := abi_decode_t_enum$_Status_$2512(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function panic_error_0x22() {\\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\\n        mstore(4, 0x22)\\n        revert(0, 0x24)\\n    }\\n\\n    function extract_byte_array_length(data) -> length {\\n        length := div(data, 2)\\n        let outOfPlaceEncoding := and(data, 1)\\n        if iszero(outOfPlaceEncoding) {\\n            length := and(length, 0x7f)\\n        }\\n\\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\\n            panic_error_0x22()\\n        }\\n    }\\n\\n    function array_dataslot_t_string_storage(ptr) -> data {\\n        data := ptr\\n\\n        mstore(0, ptr)\\n        data := keccak256(0, 0x20)\\n\\n    }\\n\\n    function divide_by_32_ceil(value) -> result {\\n        result := div(add(value, 31), 32)\\n    }\\n\\n    function shift_left_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shl(bits, value)\\n\\n    }\\n\\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\\n        let shiftBits := mul(shiftBytes, 8)\\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\\n        value := and(value, not(mask))\\n        result := or(value, and(toInsert, mask))\\n    }\\n\\n    function identity(value) -> ret {\\n        ret := value\\n    }\\n\\n    function convert_t_uint256_to_t_uint256(value) -> converted {\\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\\n    }\\n\\n    function prepare_store_t_uint256(value) -> ret {\\n        ret := value\\n    }\\n\\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\\n    }\\n\\n    function zero_value_for_split_t_uint256() -> ret {\\n        ret := 0\\n    }\\n\\n    function storage_set_to_zero_t_uint256(slot, offset) {\\n        let zero_0 := zero_value_for_split_t_uint256()\\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\\n    }\\n\\n    function clear_storage_range_t_bytes1(start, end) {\\n        for {} lt(start, end) { start := add(start, 1) }\\n        {\\n            storage_set_to_zero_t_uint256(start, 0)\\n        }\\n    }\\n\\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\\n\\n        if gt(len, 31) {\\n            let dataArea := array_dataslot_t_string_storage(array)\\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\\n            if lt(startIndex, 32) { deleteStart := dataArea }\\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\\n        }\\n\\n    }\\n\\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\\n        newValue :=\\n\\n        shr(bits, value)\\n\\n    }\\n\\n    function mask_bytes_dynamic(data, bytes) -> result {\\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\\n        result := and(data, mask)\\n    }\\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\\n        // we want to save only elements that are part of the array after resizing\\n        // others should be set to zero\\n        data := mask_bytes_dynamic(data, len)\\n        used := or(data, mul(2, len))\\n    }\\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\\n\\n        let newLen := array_length_t_string_memory_ptr(src)\\n        // Make sure array length is sane\\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\\n\\n        let oldLen := extract_byte_array_length(sload(slot))\\n\\n        // potentially truncate data\\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\\n\\n        let srcOffset := 0\\n\\n        srcOffset := 0x20\\n\\n        switch gt(newLen, 31)\\n        case 1 {\\n            let loopEnd := and(newLen, not(0x1f))\\n\\n            let dstPtr := array_dataslot_t_string_storage(slot)\\n            let i := 0\\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\\n                sstore(dstPtr, mload(add(src, srcOffset)))\\n                dstPtr := add(dstPtr, 1)\\n                srcOffset := add(srcOffset, 32)\\n            }\\n            if lt(loopEnd, newLen) {\\n                let lastValue := mload(add(src, srcOffset))\\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\\n            }\\n            sstore(slot, add(mul(newLen, 2), 1))\\n        }\\n        default {\\n            let value := 0\\n            if newLen {\\n                value := mload(add(src, srcOffset))\\n            }\\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\\n        }\\n    }\\n\\n}\\n","id":17,"language":"Yul","name":"#utility.yul"}],"sourceMap":"57:1783:16:-:0;;;;;;;;;;;;;;;;;;;","deployedSourceMap":"57:1783:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:800;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1687:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1523:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;717:800;899:15;:27;915:10;899:27;;;;;;;;;;;;;;;932:267;;;;;;;;960:5;932:267;;;;990:10;932:267;;;;1029:27;932:267;;;;;;;;:::i;:::-;;;;;;1084:6;932:267;;;;;;;;:::i;:::-;;;;;;1117:5;932:267;;;;;;;;:::i;:::-;;;;;;1147:10;932:267;;;;1178:10;932:267;;;;;899:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:267;;;;;;;;1270:5;1242:267;;;;1300:10;1242:267;;;;1339:27;1242:267;;;;;;;;:::i;:::-;;;;;;1394:6;1242:267;;;;;;;;:::i;:::-;;;;;;1427:5;1242:267;;;;;;;;:::i;:::-;;;;;;1457:10;1242:267;;;;1488:10;1242:267;;;;;1211:16;:28;1228:10;1211:28;;;;;;;;;;;:298;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:800;;;;;:::o;1687:151::-;1771:14;;:::i;:::-;1804:16;:27;1821:9;1804:27;;;;;;;;;;;1797:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:151;;;:::o;1523:158::-;1668:6;1624:16;:27;1641:9;1624:27;;;;;;;;;;;:41;;;:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1523:158;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:77::-;2590:7;2619:5;2608:16;;2553:77;;;:::o;2636:122::-;2709:24;2727:5;2709:24;:::i;:::-;2702:5;2699:35;2689:63;;2748:1;2745;2738:12;2689:63;2636:122;:::o;2764:139::-;2810:5;2848:6;2835:20;2826:29;;2864:33;2891:5;2864:33;:::i;:::-;2764:139;;;;:::o;2909:109::-;2992:1;2985:5;2982:12;2972:40;;3008:1;3005;2998:12;2972:40;2909:109;:::o;3024:159::-;3080:5;3118:6;3105:20;3096:29;;3134:43;3171:5;3134:43;:::i;:::-;3024:159;;;;:::o;3189:108::-;3271:1;3264:5;3261:12;3251:40;;3287:1;3284;3277:12;3251:40;3189:108;:::o;3303:157::-;3358:5;3396:6;3383:20;3374:29;;3412:42;3448:5;3412:42;:::i;:::-;3303:157;;;;:::o;3466:1129::-;3590:6;3598;3606;3614;3622;3671:3;3659:9;3650:7;3646:23;3642:33;3639:120;;;3678:79;;:::i;:::-;3639:120;3826:1;3815:9;3811:17;3798:31;3856:18;3848:6;3845:30;3842:117;;;3878:79;;:::i;:::-;3842:117;3983:63;4038:7;4029:6;4018:9;4014:22;3983:63;:::i;:::-;3973:73;;3769:287;4095:2;4121:53;4166:7;4157:6;4146:9;4142:22;4121:53;:::i;:::-;4111:63;;4066:118;4223:2;4249:63;4304:7;4295:6;4284:9;4280:22;4249:63;:::i;:::-;4239:73;;4194:128;4361:2;4387:62;4441:7;4432:6;4421:9;4417:22;4387:62;:::i;:::-;4377:72;;4332:127;4498:3;4525:53;4570:7;4561:6;4550:9;4546:22;4525:53;:::i;:::-;4515:63;;4469:119;3466:1129;;;;;;;;:::o;4601:329::-;4660:6;4709:2;4697:9;4688:7;4684:23;4680:32;4677:119;;;4715:79;;:::i;:::-;4677:119;4835:1;4860:53;4905:7;4896:6;4885:9;4881:22;4860:53;:::i;:::-;4850:63;;4806:117;4601:329;;;;:::o;4936:99::-;4988:6;5022:5;5016:12;5006:22;;4936:99;;;:::o;5041:159::-;5115:11;5149:6;5144:3;5137:19;5189:4;5184:3;5180:14;5165:29;;5041:159;;;;:::o;5206:246::-;5287:1;5297:113;5311:6;5308:1;5305:13;5297:113;;;5396:1;5391:3;5387:11;5381:18;5377:1;5372:3;5368:11;5361:39;5333:2;5330:1;5326:10;5321:15;;5297:113;;;5444:1;5435:6;5430:3;5426:16;5419:27;5268:184;5206:246;;;:::o;5458:357::-;5536:3;5564:39;5597:5;5564:39;:::i;:::-;5619:61;5673:6;5668:3;5619:61;:::i;:::-;5612:68;;5689:65;5747:6;5742:3;5735:4;5728:5;5724:16;5689:65;:::i;:::-;5779:29;5801:6;5779:29;:::i;:::-;5774:3;5770:39;5763:46;;5540:275;5458:357;;;;:::o;5821:108::-;5898:24;5916:5;5898:24;:::i;:::-;5893:3;5886:37;5821:108;;:::o;5935:180::-;5983:77;5980:1;5973:88;6080:4;6077:1;6070:15;6104:4;6101:1;6094:15;6121:116;6205:1;6198:5;6195:12;6185:46;;6211:18;;:::i;:::-;6185:46;6121:116;:::o;6243:133::-;6291:7;6320:5;6309:16;;6326:44;6364:5;6326:44;:::i;:::-;6243:133;;;:::o;6382:::-;6441:9;6474:35;6503:5;6474:35;:::i;:::-;6461:48;;6382:133;;;:::o;6521:139::-;6607:46;6647:5;6607:46;:::i;:::-;6602:3;6595:59;6521:139;;:::o;6666:115::-;6749:1;6742:5;6739:12;6729:46;;6755:18;;:::i;:::-;6729:46;6666:115;:::o;6787:131::-;6834:7;6863:5;6852:16;;6869:43;6906:5;6869:43;:::i;:::-;6787:131;;;:::o;6924:::-;6982:9;7015:34;7043:5;7015:34;:::i;:::-;7002:47;;6924:131;;;:::o;7061:137::-;7146:45;7185:5;7146:45;:::i;:::-;7141:3;7134:58;7061:137;;:::o;7204:114::-;7286:1;7279:5;7276:12;7266:46;;7292:18;;:::i;:::-;7266:46;7204:114;:::o;7324:129::-;7370:7;7399:5;7388:16;;7405:42;7441:5;7405:42;:::i;:::-;7324:129;;;:::o;7459:::-;7516:9;7549:33;7576:5;7549:33;:::i;:::-;7536:46;;7459:129;;;:::o;7594:135::-;7678:44;7716:5;7678:44;:::i;:::-;7673:3;7666:57;7594:135;;:::o;7735:126::-;7772:7;7812:42;7805:5;7801:54;7790:65;;7735:126;;;:::o;7867:96::-;7904:7;7933:24;7951:5;7933:24;:::i;:::-;7922:35;;7867:96;;;:::o;7969:108::-;8046:24;8064:5;8046:24;:::i;:::-;8041:3;8034:37;7969:108;;:::o;8153:1535::-;8272:3;8308:4;8303:3;8299:14;8395:4;8388:5;8384:16;8378:23;8448:3;8442:4;8438:14;8431:4;8426:3;8422:14;8415:38;8474:73;8542:4;8528:12;8474:73;:::i;:::-;8466:81;;8323:235;8645:4;8638:5;8634:16;8628:23;8664:63;8721:4;8716:3;8712:14;8698:12;8664:63;:::i;:::-;8568:169;8828:4;8821:5;8817:16;8811:23;8847:72;8913:4;8908:3;8904:14;8890:12;8847:72;:::i;:::-;8747:182;9019:4;9012:5;9008:16;9002:23;9038:71;9103:4;9098:3;9094:14;9080:12;9038:71;:::i;:::-;8939:180;9208:4;9201:5;9197:16;9191:23;9227:70;9291:4;9286:3;9282:14;9268:12;9227:70;:::i;:::-;9129:178;9394:4;9387:5;9383:16;9377:23;9413:63;9470:4;9465:3;9461:14;9447:12;9413:63;:::i;:::-;9317:169;9569:4;9562:5;9558:16;9552:23;9588:63;9645:4;9640:3;9636:14;9622:12;9588:63;:::i;:::-;9496:165;9678:4;9671:11;;8277:1411;8153:1535;;;;:::o;9694:373::-;9837:4;9875:2;9864:9;9860:18;9852:26;;9924:9;9918:4;9914:20;9910:1;9899:9;9895:17;9888:47;9952:108;10055:4;10046:6;9952:108;:::i;:::-;9944:116;;9694:373;;;;:::o;10073:110::-;10157:1;10150:5;10147:12;10137:40;;10173:1;10170;10163:12;10137:40;10073:110;:::o;10189:161::-;10246:5;10284:6;10271:20;10262:29;;10300:44;10338:5;10300:44;:::i;:::-;10189:161;;;;:::o;10356:496::-;10435:6;10443;10492:2;10480:9;10471:7;10467:23;10463:32;10460:119;;;10498:79;;:::i;:::-;10460:119;10618:1;10643:53;10688:7;10679:6;10668:9;10664:22;10643:53;:::i;:::-;10633:63;;10589:117;10745:2;10771:64;10827:7;10818:6;10807:9;10803:22;10771:64;:::i;:::-;10761:74;;10716:129;10356:496;;;;;:::o;10858:180::-;10906:77;10903:1;10896:88;11003:4;11000:1;10993:15;11027:4;11024:1;11017:15;11044:320;11088:6;11125:1;11119:4;11115:12;11105:22;;11172:1;11166:4;11162:12;11193:18;11183:81;;11249:4;11241:6;11237:17;11227:27;;11183:81;11311:2;11303:6;11300:14;11280:18;11277:38;11274:84;;11330:18;;:::i;:::-;11274:84;11095:269;11044:320;;;:::o;11370:141::-;11419:4;11442:3;11434:11;;11465:3;11462:1;11455:14;11499:4;11496:1;11486:18;11478:26;;11370:141;;;:::o;11517:93::-;11554:6;11601:2;11596;11589:5;11585:14;11581:23;11571:33;;11517:93;;;:::o;11616:107::-;11660:8;11710:5;11704:4;11700:16;11679:37;;11616:107;;;;:::o;11729:393::-;11798:6;11848:1;11836:10;11832:18;11871:97;11901:66;11890:9;11871:97;:::i;:::-;11989:39;12019:8;12008:9;11989:39;:::i;:::-;11977:51;;12061:4;12057:9;12050:5;12046:21;12037:30;;12110:4;12100:8;12096:19;12089:5;12086:30;12076:40;;11805:317;;11729:393;;;;;:::o;12128:60::-;12156:3;12177:5;12170:12;;12128:60;;;:::o;12194:142::-;12244:9;12277:53;12295:34;12304:24;12322:5;12304:24;:::i;:::-;12295:34;:::i;:::-;12277:53;:::i;:::-;12264:66;;12194:142;;;:::o;12342:75::-;12385:3;12406:5;12399:12;;12342:75;;;:::o;12423:269::-;12533:39;12564:7;12533:39;:::i;:::-;12594:91;12643:41;12667:16;12643:41;:::i;:::-;12635:6;12628:4;12622:11;12594:91;:::i;:::-;12588:4;12581:105;12499:193;12423:269;;;:::o;12698:73::-;12743:3;12698:73;:::o;12777:189::-;12854:32;;:::i;:::-;12895:65;12953:6;12945;12939:4;12895:65;:::i;:::-;12830:136;12777:189;;:::o;12972:186::-;13032:120;13049:3;13042:5;13039:14;13032:120;;;13103:39;13140:1;13133:5;13103:39;:::i;:::-;13076:1;13069:5;13065:13;13056:22;;13032:120;;;12972:186;;:::o;13164:543::-;13265:2;13260:3;13257:11;13254:446;;;13299:38;13331:5;13299:38;:::i;:::-;13383:29;13401:10;13383:29;:::i;:::-;13373:8;13369:44;13566:2;13554:10;13551:18;13548:49;;;13587:8;13572:23;;13548:49;13610:80;13666:22;13684:3;13666:22;:::i;:::-;13656:8;13652:37;13639:11;13610:80;:::i;:::-;13269:431;;13254:446;13164:543;;;:::o;13713:117::-;13767:8;13817:5;13811:4;13807:16;13786:37;;13713:117;;;;:::o;13836:169::-;13880:6;13913:51;13961:1;13957:6;13949:5;13946:1;13942:13;13913:51;:::i;:::-;13909:56;13994:4;13988;13984:15;13974:25;;13887:118;13836:169;;;;:::o;14010:295::-;14086:4;14232:29;14257:3;14251:4;14232:29;:::i;:::-;14224:37;;14294:3;14291:1;14287:11;14281:4;14278:21;14270:29;;14010:295;;;;:::o;14310:1395::-;14427:37;14460:3;14427:37;:::i;:::-;14529:18;14521:6;14518:30;14515:56;;;14551:18;;:::i;:::-;14515:56;14595:38;14627:4;14621:11;14595:38;:::i;:::-;14680:67;14740:6;14732;14726:4;14680:67;:::i;:::-;14774:1;14798:4;14785:17;;14830:2;14822:6;14819:14;14847:1;14842:618;;;;15504:1;15521:6;15518:77;;;15570:9;15565:3;15561:19;15555:26;15546:35;;15518:77;15621:67;15681:6;15674:5;15621:67;:::i;:::-;15615:4;15608:81;15477:222;14812:887;;14842:618;14894:4;14890:9;14882:6;14878:22;14928:37;14960:4;14928:37;:::i;:::-;14987:1;15001:208;15015:7;15012:1;15009:14;15001:208;;;15094:9;15089:3;15085:19;15079:26;15071:6;15064:42;15145:1;15137:6;15133:14;15123:24;;15192:2;15181:9;15177:18;15164:31;;15038:4;15035:1;15031:12;15026:17;;15001:208;;;15237:6;15228:7;15225:19;15222:179;;;15295:9;15290:3;15286:19;15280:26;15338:48;15380:4;15372:6;15368:17;15357:9;15338:48;:::i;:::-;15330:6;15323:64;15245:156;15222:179;15447:1;15443;15435:6;15431:14;15427:22;15421:4;15414:36;14849:611;;;14812:887;;14402:1303;;;14310:1395;;:::o","source":"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ncontract VehicleFactory {\\n\\n    enum Status {\\n        normal,\\n        impounded,\\n        decommissioned,\\n        registration_pending\\n    }\\n\\n    enum Class {\\n        sedan,\\n        suv,\\n        bus,\\n        truck,\\n        motorbike,\\n        cng\\n    }\\n\\n    enum Type {\\n        government,\\n        civilian,\\n        special\\n    }\\n\\n    struct Vehicle {\\n        string name;\\n        uint256 chassisNo;\\n        Status vehicleStatus;\\n        Class vehicleClass;\\n        Type vehicleType;\\n        uint256 licenseNo;\\n        address owner;\\n    }\\n\\n    mapping(address => Vehicle[]) private ownerToVehicles;\\n    mapping(uint256 => Vehicle) private licenseToVehicle;\\n\\n    function createNewVehicle(\\n        string memory name_,\\n        uint256 chassisNo_,\\n        Class class_,\\n        Type type_,\\n        uint256 licenseNo_\\n    ) external\\n    {\\n        ownerToVehicles[msg.sender].push(Vehicle({\\n            name: name_,\\n            chassisNo: chassisNo_,\\n            vehicleStatus: Status.registration_pending,\\n            vehicleClass: class_,\\n            vehicleType: type_,\\n            licenseNo: licenseNo_,\\n            owner: msg.sender\\n        }));\\n\\n        licenseToVehicle[licenseNo_] = Vehicle({\\n            name: name_,\\n            chassisNo: chassisNo_,\\n            vehicleStatus: Status.registration_pending,\\n            vehicleClass: class_,\\n            vehicleType: type_,\\n            licenseNo: licenseNo_,\\n            owner: msg.sender\\n        });\\n\\n    }\\n\\n    function changeStatus(\\n        uint256 licenseNo,\\n        Status status\\n    ) external\\n    {\\n        licenseToVehicle[licenseNo].vehicleStatus = status;\\n    }\\n\\n    function getVehicleByLicense(\\n        uint256 licenseNo\\n    ) external view returns(Vehicle memory) {\\n        return licenseToVehicle[licenseNo];\\n    }\\n}\\n","sourcePath":"C:\\\\Users\\\\samin\\\\Documents\\\\Projects\\\\AWT\\\\TraffiChain\\\\contracts\\\\VehicleFactory.sol","ast":{"absolutePath":"project:/contracts/VehicleFactory.sol","exportedSymbols":{"VehicleFactory":[2632]},"id":2633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2507,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"VehicleFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2632,"linearizedBaseContracts":[2632],"name":"VehicleFactory","nameLocation":"66:14:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"VehicleFactory.Status","id":2512,"members":[{"id":2508,"name":"normal","nameLocation":"110:6:16","nodeType":"EnumValue","src":"110:6:16"},{"id":2509,"name":"impounded","nameLocation":"126:9:16","nodeType":"EnumValue","src":"126:9:16"},{"id":2510,"name":"decommissioned","nameLocation":"145:14:16","nodeType":"EnumValue","src":"145:14:16"},{"id":2511,"name":"registration_pending","nameLocation":"169:20:16","nodeType":"EnumValue","src":"169:20:16"}],"name":"Status","nameLocation":"93:6:16","nodeType":"EnumDefinition","src":"88:107:16"},{"canonicalName":"VehicleFactory.Class","id":2519,"members":[{"id":2513,"name":"sedan","nameLocation":"222:5:16","nodeType":"EnumValue","src":"222:5:16"},{"id":2514,"name":"suv","nameLocation":"237:3:16","nodeType":"EnumValue","src":"237:3:16"},{"id":2515,"name":"bus","nameLocation":"250:3:16","nodeType":"EnumValue","src":"250:3:16"},{"id":2516,"name":"truck","nameLocation":"263:5:16","nodeType":"EnumValue","src":"263:5:16"},{"id":2517,"name":"motorbike","nameLocation":"278:9:16","nodeType":"EnumValue","src":"278:9:16"},{"id":2518,"name":"cng","nameLocation":"297:3:16","nodeType":"EnumValue","src":"297:3:16"}],"name":"Class","nameLocation":"206:5:16","nodeType":"EnumDefinition","src":"201:105:16"},{"canonicalName":"VehicleFactory.Type","id":2523,"members":[{"id":2520,"name":"government","nameLocation":"332:10:16","nodeType":"EnumValue","src":"332:10:16"},{"id":2521,"name":"civilian","nameLocation":"352:8:16","nodeType":"EnumValue","src":"352:8:16"},{"id":2522,"name":"special","nameLocation":"370:7:16","nodeType":"EnumValue","src":"370:7:16"}],"name":"Type","nameLocation":"317:4:16","nodeType":"EnumDefinition","src":"312:71:16"},{"canonicalName":"VehicleFactory.Vehicle","id":2541,"members":[{"constant":false,"id":2525,"mutability":"mutable","name":"name","nameLocation":"421:4:16","nodeType":"VariableDeclaration","scope":2541,"src":"414:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2524,"name":"string","nodeType":"ElementaryTypeName","src":"414:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"chassisNo","nameLocation":"443:9:16","nodeType":"VariableDeclaration","scope":2541,"src":"435:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"vehicleStatus","nameLocation":"469:13:16","nodeType":"VariableDeclaration","scope":2541,"src":"462:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"},"typeName":{"id":2529,"nodeType":"UserDefinedTypeName","pathNode":{"id":2528,"name":"Status","nameLocations":["462:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":2512,"src":"462:6:16"},"referencedDeclaration":2512,"src":"462:6:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"}},"visibility":"internal"},{"constant":false,"id":2533,"mutability":"mutable","name":"vehicleClass","nameLocation":"498:12:16","nodeType":"VariableDeclaration","scope":2541,"src":"492:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Class_$2519","typeString":"enum VehicleFactory.Class"},"typeName":{"id":2532,"nodeType":"UserDefinedTypeName","pathNode":{"id":2531,"name":"Class","nameLocations":["492:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"492:5:16"},"referencedDeclaration":2519,"src":"492:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_Class_$2519","typeString":"enum VehicleFactory.Class"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"vehicleType","nameLocation":"525:11:16","nodeType":"VariableDeclaration","scope":2541,"src":"520:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Type_$2523","typeString":"enum VehicleFactory.Type"},"typeName":{"id":2535,"nodeType":"UserDefinedTypeName","pathNode":{"id":2534,"name":"Type","nameLocations":["520:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":2523,"src":"520:4:16"},"referencedDeclaration":2523,"src":"520:4:16","typeDescriptions":{"typeIdentifier":"t_enum$_Type_$2523","typeString":"enum VehicleFactory.Type"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"licenseNo","nameLocation":"554:9:16","nodeType":"VariableDeclaration","scope":2541,"src":"546:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2540,"mutability":"mutable","name":"owner","nameLocation":"581:5:16","nodeType":"VariableDeclaration","scope":2541,"src":"573:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"573:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Vehicle","nameLocation":"396:7:16","nodeType":"StructDefinition","scope":2632,"src":"389:204:16","visibility":"public"},{"constant":false,"id":2547,"mutability":"mutable","name":"ownerToVehicles","nameLocation":"637:15:16","nodeType":"VariableDeclaration","scope":2632,"src":"599:53:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Vehicle_$2541_storage_$dyn_storage_$","typeString":"mapping(address => struct VehicleFactory.Vehicle[])"},"typeName":{"id":2546,"keyType":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"607:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"599:29:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Vehicle_$2541_storage_$dyn_storage_$","typeString":"mapping(address => struct VehicleFactory.Vehicle[])"},"valueType":{"baseType":{"id":2544,"nodeType":"UserDefinedTypeName","pathNode":{"id":2543,"name":"Vehicle","nameLocations":["618:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"618:7:16"},"referencedDeclaration":2541,"src":"618:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$2541_storage_ptr","typeString":"struct VehicleFactory.Vehicle"}},"id":2545,"nodeType":"ArrayTypeName","src":"618:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vehicle_$2541_storage_$dyn_storage_ptr","typeString":"struct VehicleFactory.Vehicle[]"}}},"visibility":"private"},{"constant":false,"id":2552,"mutability":"mutable","name":"licenseToVehicle","nameLocation":"694:16:16","nodeType":"VariableDeclaration","scope":2632,"src":"658:52:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vehicle_$2541_storage_$","typeString":"mapping(uint256 => struct VehicleFactory.Vehicle)"},"typeName":{"id":2551,"keyType":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"658:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vehicle_$2541_storage_$","typeString":"mapping(uint256 => struct VehicleFactory.Vehicle)"},"valueType":{"id":2550,"nodeType":"UserDefinedTypeName","pathNode":{"id":2549,"name":"Vehicle","nameLocations":["677:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"677:7:16"},"referencedDeclaration":2541,"src":"677:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$2541_storage_ptr","typeString":"struct VehicleFactory.Vehicle"}}},"visibility":"private"},{"body":{"id":2601,"nodeType":"Block","src":"889:628:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2573,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"960:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2574,"name":"chassisNo_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"990:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2575,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1029:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$2512_$","typeString":"type(enum VehicleFactory.Status)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1036:20:16","memberName":"registration_pending","nodeType":"MemberAccess","referencedDeclaration":2511,"src":"1029:27:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"}},{"id":2577,"name":"class_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"1084:6:16","typeDescriptions":{"typeIdentifier":"t_enum$_Class_$2519","typeString":"enum VehicleFactory.Class"}},{"id":2578,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"1117:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_Type_$2523","typeString":"enum VehicleFactory.Type"}},{"id":2579,"name":"licenseNo_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"1147:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2580,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1178:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1182:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1178:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"},{"typeIdentifier":"t_enum$_Class_$2519","typeString":"enum VehicleFactory.Class"},{"typeIdentifier":"t_enum$_Type_$2523","typeString":"enum VehicleFactory.Type"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2572,"name":"Vehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"932:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Vehicle_$2541_storage_ptr_$","typeString":"type(struct VehicleFactory.Vehicle storage pointer)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["954:4:16","979:9:16","1014:13:16","1070:12:16","1104:11:16","1136:9:16","1171:5:16"],"names":["name","chassisNo","vehicleStatus","vehicleClass","vehicleType","licenseNo","owner"],"nodeType":"FunctionCall","src":"932:267:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$2541_memory_ptr","typeString":"struct VehicleFactory.Vehicle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Vehicle_$2541_memory_ptr","typeString":"struct VehicleFactory.Vehicle memory"}],"expression":{"baseExpression":{"id":2567,"name":"ownerToVehicles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"899:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Vehicle_$2541_storage_$dyn_storage_$","typeString":"mapping(address => struct VehicleFactory.Vehicle storage ref[] storage ref)"}},"id":2570,"indexExpression":{"expression":{"id":2568,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"915:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"919:6:16","memberName":"sender","nodeType":"MemberAccess","src":"915:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"899:27:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vehicle_$2541_storage_$dyn_storage","typeString":"struct VehicleFactory.Vehicle storage ref[] storage ref"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"927:4:16","memberName":"push","nodeType":"MemberAccess","src":"899:32:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Vehicle_$2541_storage_$dyn_storage_ptr_$_t_struct$_Vehicle_$2541_storage_$returns$__$bound_to$_t_array$_t_struct$_Vehicle_$2541_storage_$dyn_storage_ptr_$","typeString":"function (struct VehicleFactory.Vehicle storage ref[] storage pointer,struct VehicleFactory.Vehicle storage ref)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"899:301:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2584,"nodeType":"ExpressionStatement","src":"899:301:16"},{"expression":{"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2585,"name":"licenseToVehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"1211:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vehicle_$2541_storage_$","typeString":"mapping(uint256 => struct VehicleFactory.Vehicle storage ref)"}},"id":2587,"indexExpression":{"id":2586,"name":"licenseNo_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"1228:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1211:28:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$2541_storage","typeString":"struct VehicleFactory.Vehicle storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2589,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"1270:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2590,"name":"chassisNo_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"1300:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2591,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1339:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$2512_$","typeString":"type(enum VehicleFactory.Status)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1346:20:16","memberName":"registration_pending","nodeType":"MemberAccess","referencedDeclaration":2511,"src":"1339:27:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"}},{"id":2593,"name":"class_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"1394:6:16","typeDescriptions":{"typeIdentifier":"t_enum$_Class_$2519","typeString":"enum VehicleFactory.Class"}},{"id":2594,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"1427:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_Type_$2523","typeString":"enum VehicleFactory.Type"}},{"id":2595,"name":"licenseNo_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"1457:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2596,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1488:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1492:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1488:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"},{"typeIdentifier":"t_enum$_Class_$2519","typeString":"enum VehicleFactory.Class"},{"typeIdentifier":"t_enum$_Type_$2523","typeString":"enum VehicleFactory.Type"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2588,"name":"Vehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"1242:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Vehicle_$2541_storage_ptr_$","typeString":"type(struct VehicleFactory.Vehicle storage pointer)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1264:4:16","1289:9:16","1324:13:16","1380:12:16","1414:11:16","1446:9:16","1481:5:16"],"names":["name","chassisNo","vehicleStatus","vehicleClass","vehicleType","licenseNo","owner"],"nodeType":"FunctionCall","src":"1242:267:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$2541_memory_ptr","typeString":"struct VehicleFactory.Vehicle memory"}},"src":"1211:298:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$2541_storage","typeString":"struct VehicleFactory.Vehicle storage ref"}},"id":2600,"nodeType":"ExpressionStatement","src":"1211:298:16"}]},"functionSelector":"4538f4c8","id":2602,"implemented":true,"kind":"function","modifiers":[],"name":"createNewVehicle","nameLocation":"726:16:16","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"name_","nameLocation":"766:5:16","nodeType":"VariableDeclaration","scope":2602,"src":"752:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2553,"name":"string","nodeType":"ElementaryTypeName","src":"752:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"chassisNo_","nameLocation":"789:10:16","nodeType":"VariableDeclaration","scope":2602,"src":"781:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2559,"mutability":"mutable","name":"class_","nameLocation":"815:6:16","nodeType":"VariableDeclaration","scope":2602,"src":"809:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Class_$2519","typeString":"enum VehicleFactory.Class"},"typeName":{"id":2558,"nodeType":"UserDefinedTypeName","pathNode":{"id":2557,"name":"Class","nameLocations":["809:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"809:5:16"},"referencedDeclaration":2519,"src":"809:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_Class_$2519","typeString":"enum VehicleFactory.Class"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"type_","nameLocation":"836:5:16","nodeType":"VariableDeclaration","scope":2602,"src":"831:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Type_$2523","typeString":"enum VehicleFactory.Type"},"typeName":{"id":2561,"nodeType":"UserDefinedTypeName","pathNode":{"id":2560,"name":"Type","nameLocations":["831:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":2523,"src":"831:4:16"},"referencedDeclaration":2523,"src":"831:4:16","typeDescriptions":{"typeIdentifier":"t_enum$_Type_$2523","typeString":"enum VehicleFactory.Type"}},"visibility":"internal"},{"constant":false,"id":2564,"mutability":"mutable","name":"licenseNo_","nameLocation":"859:10:16","nodeType":"VariableDeclaration","scope":2602,"src":"851:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"742:133:16"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[],"src":"889:0:16"},"scope":2632,"src":"717:800:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2617,"nodeType":"Block","src":"1614:67:16","statements":[{"expression":{"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2610,"name":"licenseToVehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"1624:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vehicle_$2541_storage_$","typeString":"mapping(uint256 => struct VehicleFactory.Vehicle storage ref)"}},"id":2612,"indexExpression":{"id":2611,"name":"licenseNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"1641:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1624:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$2541_storage","typeString":"struct VehicleFactory.Vehicle storage ref"}},"id":2613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1652:13:16","memberName":"vehicleStatus","nodeType":"MemberAccess","referencedDeclaration":2530,"src":"1624:41:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2614,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"1668:6:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"}},"src":"1624:50:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"}},"id":2616,"nodeType":"ExpressionStatement","src":"1624:50:16"}]},"functionSelector":"c5a8a2ab","id":2618,"implemented":true,"kind":"function","modifiers":[],"name":"changeStatus","nameLocation":"1532:12:16","nodeType":"FunctionDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"licenseNo","nameLocation":"1562:9:16","nodeType":"VariableDeclaration","scope":2618,"src":"1554:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1554:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"status","nameLocation":"1588:6:16","nodeType":"VariableDeclaration","scope":2618,"src":"1581:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"},"typeName":{"id":2606,"nodeType":"UserDefinedTypeName","pathNode":{"id":2605,"name":"Status","nameLocations":["1581:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":2512,"src":"1581:6:16"},"referencedDeclaration":2512,"src":"1581:6:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$2512","typeString":"enum VehicleFactory.Status"}},"visibility":"internal"}],"src":"1544:56:16"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[],"src":"1614:0:16"},"scope":2632,"src":"1523:158:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2630,"nodeType":"Block","src":"1787:51:16","statements":[{"expression":{"baseExpression":{"id":2626,"name":"licenseToVehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"1804:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vehicle_$2541_storage_$","typeString":"mapping(uint256 => struct VehicleFactory.Vehicle storage ref)"}},"id":2628,"indexExpression":{"id":2627,"name":"licenseNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"1821:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1804:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$2541_storage","typeString":"struct VehicleFactory.Vehicle storage ref"}},"functionReturnParameters":2625,"id":2629,"nodeType":"Return","src":"1797:34:16"}]},"functionSelector":"ad5a12ea","id":2631,"implemented":true,"kind":"function","modifiers":[],"name":"getVehicleByLicense","nameLocation":"1696:19:16","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"licenseNo","nameLocation":"1733:9:16","nodeType":"VariableDeclaration","scope":2631,"src":"1725:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1715:33:16"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2631,"src":"1771:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$2541_memory_ptr","typeString":"struct VehicleFactory.Vehicle"},"typeName":{"id":2623,"nodeType":"UserDefinedTypeName","pathNode":{"id":2622,"name":"Vehicle","nameLocations":["1771:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2541,"src":"1771:7:16"},"referencedDeclaration":2541,"src":"1771:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$2541_storage_ptr","typeString":"struct VehicleFactory.Vehicle"}},"visibility":"internal"}],"src":"1770:16:16"},"scope":2632,"src":"1687:151:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2633,"src":"57:1783:16","usedErrors":[]}],"src":"32:1809:16"},"compiler":{"name":"solc","version":"0.8.17+commit.8df45f5f.Emscripten.clang"},"networks":{"5777":{"events":{},"links":{},"address":"0xdb559af72221d88a9b6B11C818f3066D28D6F6a8","transactionHash":"0x741cfabbdae1d2094735465edbd6efbf0ff51be06becc608e737e4017894ac8b"}},"schemaVersion":"3.4.10","updatedAt":"2022-11-28T05:49:51.413Z","networkType":"ethereum","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/css/app.css")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;